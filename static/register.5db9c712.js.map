{"mappings":"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","sources":["src/base/page/auth/register.tsx","src/utils/ui/form.style.ts","src/utils/ui/form/input.tsx"],"sourcesContent":["import { page } from \"web-utils\";\nimport { useLocal } from \"web-utils\";\nimport { Loading } from \"../../../utils/ui/loading\";\nimport { formStyle } from \"../../../utils/ui/form.style\";\nimport { Input } from \"../../../utils/ui/form/input\";\n\nexport default page({\n  url: \"/register\",\n  component: ({}) => {\n    const form = useLocal(\n      {\n        username: \"\",\n        password: \"\",\n        email: \"\",\n        submitting: false,\n        init: false,\n      },\n      async () => {\n        const s = await _api.session();\n\n        if (s && s.id) {\n          navigate(\"/ed\");\n        } else {\n          form.init = true;\n          form.render();\n        }\n      }\n    );\n\n    if (!form.init) return <Loading />;\n\n    return (\n      <div className=\"flex flex-1 flex-col items-center justify-center\">\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            form.submitting = true;\n            form.render();\n            const s = await _api.register({\n              username: form.username,\n              password: form.password,\n              email: form.email,\n            });\n\n            if (s.status === \"failed\") {\n              form.submitting = false;\n              form.render();\n              alert(s.reason);\n            } else {\n              await _api.login(form.username, form.password);\n              alert(\"Registration success!\");\n              navigate(\"/ed\");\n            }\n          }}\n          className={cx(\"border-[3px] border-black\", formStyle)}\n        >\n          <div className=\"title\">Register</div>\n          <label className=\"mt-3\">\n            <span>Username</span>\n            <Input form={form} name=\"username\" />\n          </label>\n          <label>\n            <span>Password</span>\n            <Input form={form} name=\"password\" type=\"password\" />\n          </label>\n          <label>\n            <span>Email</span>\n            <Input form={form} name=\"email\" />\n          </label>\n          <button type=\"submit\" disabled={form.submitting}>\n            {form.submitting ? \"Loading...\" : \"Submit\"}\n          </button>\n\n          <div className=\"pt-2\">\n            <a href=\"/login\" className=\"cursor-pointer underline\">\n              Login\n            </a>\n          </div>\n        </form>\n      </div>\n    );\n  },\n});\n","export const formStyle = css`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n\n  .title {\n    font-size: 18px;\n    display: flex;\n    flex-direction: column;\n  }\n\n  label {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin-bottom: 10px;\n\n    > span {\n      font-size: 14px;\n      margin-bottom: 2px;\n    }\n  }\n  \n  input,\n  select {\n    border: 3px solid black;\n    padding: 3px;\n    width: 300px;\n    font-size: 15px;\n\n    &:disabled {\n      color: #999;\n    }\n  }\n\n  button {\n    color: white;\n    padding: 5px;\n  }\n  button[type=\"submit\"] {\n    background: black;\n\n    &:disabled {\n      background: #999;\n    }\n  }\n`;\n","import { FC } from \"react\";\n\nexport const Input: FC<\n  Omit<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    \"form\" | \"name\" | \"onChange\"\n  > & {\n    form: Record<string, any> & { render: () => void };\n    name: string;\n    onChange?: (text: string) => string | void;\n  }\n> = (arg) => {\n  const prop: any = { ...arg };\n  const { form, name } = arg;\n  delete prop.form;\n  delete prop.name;\n\n  let onChange: ((text: string) => string) | null = null;\n  if (prop.onChange) {\n    onChange = prop.onChange;\n    delete prop.onChange;\n  }\n\n  let value = form[name];\n  if (value instanceof URL) {\n    value = value.toString();\n  }\n\n  return (\n    <input\n      value={value || \"\"}\n      spellCheck={false}\n      onInput={(e) => {\n        form[name] = e.currentTarget.value;\n\n        if (onChange) {\n          const result = onChange(e.currentTarget.value);\n          if (typeof result !== \"undefined\") {\n            form[name] = result;\n          }\n        }\n\n        form.render();\n      }}\n      {...prop}\n    />\n  );\n};\n"],"names":[],"version":3,"file":"register.5db9c712.js.map","sourceRoot":"../app/web/"}