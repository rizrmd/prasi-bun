{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,E,A,E,kD,iB,C,G,I,E,E,qBCAA,EAAA,EAAA,SACA,EAAA,EAAA,aACA,EAAA,EAAA,iCACA,EAAA,EAAA,+BACA,EAAA,EAAA,yBAEe,CAAA,EAAA,OAAA,CAAA,AAAA,CAAA,EAAA,EAAA,IAAI,AAAJ,EAAK,CAClB,IAAK,KACL,UAAW,CAAC,EAAE,IACF,AAAA,CAAA,EAAA,EAAA,SAAQ,AAAR,EAAU,EAAA,QAAQ,CAAE,UAC9B,AAAA,CAAA,EAAA,EAAA,SAAS,AAAT,EAAU,KACR,GAAI,aAAa,OAAO,CAAC,kBACvB,GACE,AAAsB,QAAtB,SAAS,QAAQ,EACjB,SAAS,QAAQ,CAAC,UAAU,CAAC,QAEzB,OAAO,OAAO,CAChB,SAAS,CAAC,IAAI,EAAE,OAAO,OAAO,CAAC,EAAE,CAAC,EAElC,SAAS,gBAEN,GAAI,SAAS,QAAQ,CAAC,UAAU,CAAC,WAAY,CAClD,IAAM,EAAM,SAA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","sources":["<anon>","src/base/page/all.tsx","src/nova/ed/logic/ed-global.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"jJ1Bl\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _react = require(\"react\");\nvar _webUtils = require(\"web-utils\");\nvar _edGlobal = require(\"../../nova/ed/logic/ed-global\");\nvar _isLocalhost = require(\"../../utils/ui/is-localhost\");\nvar _loading = require(\"../../utils/ui/loading\");\nexports.default = (0, _webUtils.page)({\n    url: \"**\",\n    component: ({})=>{\n        const p = (0, _webUtils.useGlobal)((0, _edGlobal.EDGlobal), \"EDITOR\");\n        (0, _react.useEffect)(()=>{\n            if (localStorage.getItem(\"prasi-session\")) {\n                if (location.pathname === \"/ed\" || location.pathname.startsWith(\"/ed/\")) {\n                    if (params.site_id) navigate(`/ed/${params.site_id}/_`);\n                    else navigate(\"/ed/_/_\");\n                } else if (location.pathname.startsWith(\"/editor\")) {\n                    const arr = location.pathname.split(\"/\");\n                    if (arr.length <= 2) navigate(\"/ed/_/_\");\n                    else if (arr.length === 3) navigate(location.pathname + \"/\");\n                } else if ((0, _isLocalhost.isLocalhost)()) navigate(\"/ed\");\n                else navigate(\"/ed/_/_\");\n            } else navigate(\"/login\");\n        });\n        return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _loading.Loading), {});\n    }\n});\n\n},{\"react/jsx-runtime\":\"f4Tol\",\"react\":\"aq5hc\",\"web-utils\":\"ccU4J\",\"../../nova/ed/logic/ed-global\":\"6QDfO\",\"../../utils/ui/is-localhost\":\"3GM8T\",\"../../utils/ui/loading\":\"loFlS\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"2GYoY\"}],\"6QDfO\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"EmptySite\", ()=>EmptySite);\nparcelHelpers.export(exports, \"EmptyPage\", ()=>EmptyPage);\nparcelHelpers.export(exports, \"active\", ()=>active);\nparcelHelpers.export(exports, \"EDGlobal\", ()=>EDGlobal);\nvar _webUtils = require(\"web-utils\");\nvar _radix3 = require(\"radix3\");\nconst EmptySite = {\n    id: \"\",\n    name: \"\",\n    domain: \"\",\n    config: {\n        api_url: \"\"\n    },\n    deploy_name: \"\",\n    js: \"\",\n    js_compiled: \"\",\n    responsive: \"\",\n    layout: {\n        id: \"--\",\n        meta: undefined,\n        entry: []\n    }\n};\nconst EmptyPage = {\n    id: \"\",\n    name: \"\",\n    url: \"\",\n    snapshot: null,\n    comps: {}\n};\nconst EmptyComp = {\n    id: \"\",\n    snapshot: null\n};\nconst target = {\n    active_id: false,\n    comp_id: false,\n    instance_comp_id: false,\n    instance_item_id: false\n};\nconst active = {\n    should_render_main: true,\n    hover: {\n        id: \"\",\n        tree: false\n    },\n    scope: {},\n    script_nav: {\n        list: [],\n        idx: -1\n    },\n    text: {\n        id: \"\",\n        content: \"\",\n        timeout: null,\n        el: null\n    },\n    get item_id () {\n        if (target.active_id === false) target.active_id = localStorage.getItem(\"prasi-active-id\") || \"\";\n        return target.active_id || \"\";\n    },\n    set item_id (val){\n        localStorage.setItem(\"prasi-active-id\", val || \"\");\n        target.active_id = val || \"\";\n    },\n    get comp_id () {\n        if (target.comp_id === false) target.comp_id = localStorage.getItem(\"prasi-comp-id\") || \"\";\n        return target.comp_id || \"\";\n    },\n    set comp_id (val){\n        localStorage.setItem(\"prasi-comp-id\", val || \"\");\n        target.comp_id = val || \"\";\n    },\n    instance: {\n        get comp_id () {\n            if (target.instance_comp_id === false) target.instance_comp_id = localStorage.getItem(\"prasi-instance-comp-id\") || \"\";\n            return target.instance_comp_id || \"\";\n        },\n        set comp_id (val){\n            localStorage.setItem(\"prasi-instance-comp-id\", val || \"\");\n            target.instance_comp_id = val || \"\";\n        },\n        get item_id () {\n            if (target.instance_item_id === false) target.instance_item_id = localStorage.getItem(\"prasi-instance-item-id\") || \"\";\n            return target.instance_item_id || \"\";\n        },\n        set item_id (val){\n            localStorage.setItem(\"prasi-instance-item-id\", val || \"\");\n            target.instance_item_id = val || \"\";\n        }\n    }\n};\nconst EDGlobal = {\n    mode: \"\",\n    user: {\n        id: \"\",\n        username: \"\",\n        client_id: \"\"\n    },\n    clients: {},\n    status: \"init\",\n    preview: {\n        url_cache: new Set(),\n        route_cache: (0, _radix3.createRouter)(),\n        page_cache: {},\n        meta_cache: {}\n    },\n    sync: undefined,\n    site: (0, _webUtils.deepClone)(EmptySite),\n    site_tstamp: Date.now(),\n    site_exports: {},\n    site_dts: \"\",\n    site_dts_entry: {},\n    prisma_ext: \"\",\n    script: {\n        site_types: {},\n        loaded: false,\n        do_edit: async (newval, all)=>{},\n        db: null,\n        api: null,\n        init_local_effect: {}\n    },\n    page: {\n        history: {\n            id: \"\",\n            show: false\n        },\n        root_id: \"root\",\n        cur: EmptyPage,\n        doc: null,\n        list: {},\n        building: false,\n        meta: {},\n        entry: [],\n        tree: [],\n        render: ()=>{}\n    },\n    comp: {\n        doc: null,\n        item: null,\n        loaded: {},\n        list: {},\n        group: {}\n    },\n    code: {},\n    global_prop: [],\n    ui: {\n        build: {\n            status: \"ready\"\n        },\n        monaco: null,\n        comp_editable: localStorage.getItem(\"prasi-comp-editable\") === \"yes\",\n        zoom: localStorage.zoom || \"100%\",\n        side: {\n            prop: true\n        },\n        layout: {\n            left: parseInt(localStorage.getItem(\"prasi-layout-left\") || \"250\"),\n            right: parseInt(localStorage.getItem(\"prasi-layout-right\") || \"250\")\n        },\n        prevent_indent_hook: false,\n        syncing: false,\n        tree: {\n            item_loading: [],\n            search: \"\",\n            search_ref: null,\n            search_mode: {\n                Name: true,\n                JS: false,\n                HTML: false,\n                CSS: false\n            },\n            rename_id: \"\",\n            open_all: false,\n            open: {}\n        },\n        popup: {\n            file: {\n                enabled: false,\n                open: false,\n                picker: {\n                    value: \"\",\n                    on_pick: false,\n                    multi: false\n                },\n                path: \"/\",\n                expanded: JSON.parse(localStorage.getItem(\"panel-file-expanded\") || \"{}\"),\n                entry: {},\n                selected: new Set(),\n                action: null,\n                file_renaming: \"\",\n                file_ctx_menu_event: null,\n                tree: [],\n                tree_renaming: \"\",\n                tree_ctx_path: \"\",\n                tree_ctx_menu_event: null,\n                preview: true,\n                upload: {\n                    started: false,\n                    progress: {}\n                }\n            },\n            code: {\n                init: false,\n                open: false,\n                name: \"site\",\n                log: \"\",\n                loading: false,\n                rebuilding: false,\n                startup_status: \"init\",\n                error: false,\n                show_log: false,\n                list: {}\n            },\n            page: {\n                open: null,\n                form: null\n            },\n            script: {\n                open: false,\n                mode: \"js\",\n                lastMode: \"js\",\n                type: \"item\",\n                prop_kind: \"\",\n                prop_name: \"\",\n                on_close: ()=>{},\n                typings: {\n                    status: \"ok\",\n                    err_msg: \"\"\n                },\n                wb_render: ()=>{}\n            },\n            site: null,\n            site_form: null,\n            comp: {\n                preview_id: \"\",\n                open: null,\n                import: false\n            },\n            comp_group: null,\n            api: {\n                open: false\n            }\n        }\n    }\n};\n\n},{\"web-utils\":\"ccU4J\",\"radix3\":\"gMGcL\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"2GYoY\"}]},[], null, \"parcelRequire2d1f\")\n\n//# sourceMappingURL=all.affcc552.js.map\n","import { useEffect } from \"react\";\nimport { page, useGlobal } from \"web-utils\";\nimport { EDGlobal } from \"../../nova/ed/logic/ed-global\";\nimport { isLocalhost } from \"../../utils/ui/is-localhost\";\nimport { Loading } from \"../../utils/ui/loading\";\n\nexport default page({\n  url: \"**\",\n  component: ({}) => {\n    const p = useGlobal(EDGlobal, \"EDITOR\");\n    useEffect(() => {\n      if (localStorage.getItem(\"prasi-session\")) {\n        if (\n          location.pathname === \"/ed\" ||\n          location.pathname.startsWith(\"/ed/\")\n        ) {\n          if (params.site_id) {\n            navigate(`/ed/${params.site_id}/_`);\n          } else {\n            navigate(\"/ed/_/_\");\n          }\n        } else if (location.pathname.startsWith(\"/editor\")) {\n          const arr = location.pathname.split(\"/\");\n          if (arr.length <= 2) {\n            navigate(\"/ed/_/_\");\n          } else if (arr.length === 3) {\n            navigate(location.pathname + \"/\");\n          }\n        } else {\n          if (isLocalhost()) {\n            navigate(\"/ed\");\n          } else {\n            navigate(\"/ed/_/_\");\n          }\n        }\n      } else {\n        navigate(\"/login\");\n      }\n    });\n\n    return <Loading />;\n  },\n});\n","import { NodeModel } from \"@minoru/react-dnd-treeview\";\nimport { page } from \"dbgen\";\nimport { deepClone } from \"web-utils\";\nimport type { SAction } from \"../../../../../srv/ws/sync/actions\";\nimport type { parseJs } from \"../../../../../srv/ws/sync/editor/parser/parse-js\";\nimport { clientStartSync } from \"../../../utils/sync/ws-client\";\nimport { IItem } from \"../../../utils/types/item\";\nimport { DCode, DComp, DPage, IRoot } from \"../../../utils/types/root\";\nimport { GenMetaP, IMeta as LogicMeta } from \"../../vi/utils/types\";\nimport { createRouter } from \"radix3\";\nimport { FEntry } from \"../panel/file/type\";\nexport type IMeta = LogicMeta;\n\nexport const EmptySite = {\n  id: \"\",\n  name: \"\",\n  domain: \"\",\n  config: { api_url: \"\" },\n  deploy_name:\"\",\n  js: \"\",\n  js_compiled: \"\",\n  responsive: \"\" as \"desktop-only\" | \"mobile-only\" | \"responsive\",\n  layout: {\n    id: \"--\",\n    meta: undefined as void | Record<string, IMeta>,\n    entry: [] as string[],\n  },\n};\n\nexport type ESite = typeof EmptySite;\nexport type EPage = typeof EmptyPage;\nexport type EComp = typeof EmptyComp;\nexport type PropFieldKind =\n  | \"onChange\"\n  | \"visible\"\n  | \"gen\"\n  | \"value\"\n  | \"option\"\n  | \"typings\";\nexport type ISingleScope = {\n  p: string[];\n  n: string;\n  s: null | Exclude<ReturnType<typeof parseJs>, undefined>;\n};\nexport type IScope = Record<string, ISingleScope>;\n\nexport type IScopeComp = Record<\n  string,\n  {\n    id: string;\n    name: string;\n    snapshot: Uint8Array;\n    scope: IScope;\n  }\n>;\nexport const EmptyPage = {\n  id: \"\",\n  name: \"\",\n  url: \"\",\n  snapshot: null as null | Uint8Array,\n  comps: {} as Record<string, EComp>,\n};\n\nconst EmptyComp = {\n  id: \"\",\n  snapshot: null as null | Uint8Array,\n};\n\nconst target = {\n  active_id: false as any,\n  comp_id: false as any,\n  instance_comp_id: false as any,\n  instance_item_id: false as any,\n};\n\nexport const active = {\n  should_render_main: true,\n  hover: { id: \"\", tree: false },\n  scope: {} as any,\n  script_nav: {\n    list: [] as {\n      item_id: string;\n      comp_id?: string;\n      instance?: { item_id: string; comp_id?: string };\n    }[],\n    idx: -1,\n  },\n  text: { id: \"\", content: \"\", timeout: null as any, el: null as any },\n  get item_id() {\n    if (target.active_id === false) {\n      target.active_id = localStorage.getItem(\"prasi-active-id\") || \"\";\n    }\n    return target.active_id || \"\";\n  },\n  set item_id(val: string) {\n    localStorage.setItem(\"prasi-active-id\", val || \"\");\n    target.active_id = val || \"\";\n  },\n  get comp_id() {\n    if (target.comp_id === false) {\n      target.comp_id = localStorage.getItem(\"prasi-comp-id\") || \"\";\n    }\n    return target.comp_id || \"\";\n  },\n  set comp_id(val: string) {\n    localStorage.setItem(\"prasi-comp-id\", val || \"\");\n    target.comp_id = val || \"\";\n  },\n  instance: {\n    get comp_id() {\n      if (target.instance_comp_id === false) {\n        target.instance_comp_id =\n          localStorage.getItem(\"prasi-instance-comp-id\") || \"\";\n      }\n      return target.instance_comp_id || \"\";\n    },\n    set comp_id(val: string) {\n      localStorage.setItem(\"prasi-instance-comp-id\", val || \"\");\n      target.instance_comp_id = val || \"\";\n    },\n    get item_id() {\n      if (target.instance_item_id === false) {\n        target.instance_item_id =\n          localStorage.getItem(\"prasi-instance-item-id\") || \"\";\n      }\n      return target.instance_item_id || \"\";\n    },\n    set item_id(val: string) {\n      localStorage.setItem(\"prasi-instance-item-id\", val || \"\");\n      target.instance_item_id = val || \"\";\n    },\n  },\n};\n\nexport type CompListItem = {\n  comp: EComp;\n  doc: DComp;\n  tree: NodeModel<IMeta>[];\n  meta: Record<string, IMeta>;\n  on_update: (bin: Uint8Array, origin: any) => Promise<void>;\n};\n\nexport const EDGlobal = {\n  mode: \"\" as \"desktop\" | \"mobile\",\n  user: { id: \"\", username: \"\", client_id: \"\" },\n  clients: {} as Record<string, { id: string; username: string }>,\n  status: \"init\" as\n    | \"init\"\n    | \"load-site\"\n    | \"reload\"\n    | \"site-not-found\"\n    | \"page-not-found\"\n    | \"ready\"\n    | \"no-site\",\n  preview: {\n    url_cache: new Set<string>(),\n    route_cache: createRouter<{ url: string; id: string }>(),\n    page_cache: {} as Record<string, { root: IRoot; url: string }>,\n    meta_cache: {} as Record<\n      string,\n      { entry: string[]; meta: Record<string, IMeta>; url: string }\n    >,\n  },\n  sync: undefined as undefined | Awaited<ReturnType<typeof clientStartSync>>,\n  site: deepClone(EmptySite),\n  site_tstamp: Date.now(),\n  site_exports: {} as Record<string, any>,\n  site_dts: \"\",\n  site_dts_entry: {} as any,\n  prisma_ext: \"\",\n  script: {\n    site_types: {} as Record<string, string>,\n    loaded: false,\n    do_edit: async (newval: string, all?: boolean) => {},\n    db: null as any,\n    api: null as any,\n    init_local_effect: {} as Record<string, boolean>,\n  },\n  page: {\n    history: {\n      id: \"\",\n      show: false,\n    },\n    root_id: \"root\",\n    cur: EmptyPage,\n    doc: null as null | DPage,\n    list: {} as Record<\n      string,\n      {\n        page: EPage;\n        doc: DPage;\n        on_update?: (bin: Uint8Array, origin: any) => Promise<void>;\n        update_timeout: any;\n      }\n    >,\n    building: false,\n    meta: {} as Record<string, IMeta>,\n    entry: [] as string[],\n    tree: [] as NodeModel<IMeta>[],\n    render: () => {},\n  },\n  comp: {\n    doc: null as null | DComp,\n    item: null as null | IItem,\n    loaded: {} as GenMetaP[\"comps\"],\n    list: {} as Record<string, CompListItem>,\n    group: {} as Record<string, Awaited<ReturnType<SAction[\"comp\"][\"group\"]>>>,\n  },\n  code: {} as Record<string, { doc: null | DCode }>,\n  global_prop: [] as string[],\n  ui: {\n    build: { status: \"ready\" as \"ready\" | \"loading\" | \"error\" },\n    monaco: null as any,\n    comp_editable: localStorage.getItem(\"prasi-comp-editable\") === \"yes\",\n    zoom: localStorage.zoom || \"100%\",\n    side: { prop: true },\n    layout: {\n      left: parseInt(localStorage.getItem(\"prasi-layout-left\") || \"250\"),\n      right: parseInt(localStorage.getItem(\"prasi-layout-right\") || \"250\"),\n    },\n    prevent_indent_hook: false,\n    syncing: false,\n    tree: {\n      item_loading: [] as string[],\n      search: \"\",\n      search_ref: null as null | HTMLInputElement,\n      search_mode: {\n        Name: true,\n        JS: false,\n        HTML: false,\n        CSS: false,\n      },\n      rename_id: \"\",\n      open_all: false,\n      open: {} as Record<string, string[]>,\n    },\n    popup: {\n      file: {\n        enabled: false,\n        open: false,\n        picker: {\n          value: \"\",\n          on_pick: false as boolean | ((file: string) => void | Promise<void>),\n          multi: false,\n        },\n        path: \"/\",\n        expanded: JSON.parse(\n          localStorage.getItem(\"panel-file-expanded\") || \"{}\"\n        ) as Record<string, string[]>,\n        entry: {} as Record<string, FEntry[]>,\n        selected: new Set<string>(),\n\n        action: null as null | {\n          label: string;\n          submit: () => void | Promise<void>;\n        },\n\n        file_renaming: \"\",\n        file_ctx_menu_event: null as null | React.MouseEvent<\n          HTMLElement,\n          MouseEvent\n        >,\n\n        tree: [] as NodeModel<FEntry>[],\n        tree_renaming: \"\",\n        tree_ctx_path: \"\",\n        tree_ctx_menu_event: null as null | React.MouseEvent<\n          HTMLElement,\n          MouseEvent\n        >,\n\n        preview: true,\n        upload: {\n          started: false,\n          progress: {} as Record<string, number>,\n        },\n      },\n      code: {\n        init: false,\n        open: false,\n        name: \"site\",\n        log: \"\",\n        loading: false,\n        rebuilding: false,\n        startup_status: \"init\" as\n          | \"init\"\n          | \"loading\"\n          | \"disabled\"\n          | \"stopped\"\n          | \"running\",\n        error: false,\n        show_log: false,\n        list: {} as Record<string, string>,\n      },\n      page: {\n        open: null as null | ((page_id: string) => void),\n        form: null as null | Partial<page>,\n      },\n      script: {\n        open: false,\n        mode: \"js\" as \"js\" | \"css\" | \"html\",\n        lastMode: \"js\" as \"js\" | \"css\" | \"html\",\n        type: \"item\" as \"item\" | \"prop-master\" | \"prop-instance\" | \"comp-types\",\n        prop_kind: \"\" as PropFieldKind,\n        prop_name: \"\",\n        on_close: () => {},\n        typings: { status: \"ok\" as \"ok\" | \"loading\" | \"error\", err_msg: \"\" },\n        wb_render: () => {},\n      },\n      site: null as null | ((site_id: string) => void | Promise<void>),\n      site_form: null as null | {\n        group_id: string;\n        id: string;\n        name?: string;\n        domain?: string;\n        responsive?: string;\n      },\n      comp: {\n        preview_id: \"\",\n        open: null as null | ((comp_id: string) => void | Promise<void>),\n        import: false,\n      },\n      comp_group: null as null | {\n        mouse_event: React.MouseEvent<HTMLElement, MouseEvent>;\n        on_pick?: (group_id: string) => void | Promise<void>;\n        on_close?: () => void | Promise<void>;\n      },\n      api: { open: false },\n    },\n  },\n};\n\nexport type PG = typeof EDGlobal & { render: () => void };\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","_jsxRuntime","_react","_webUtils","_edGlobal","_isLocalhost","_loading","default","page","url","component","useGlobal","EDGlobal","useEffect","localStorage","getItem","location","pathname","startsWith","params","site_id","navigate","arr","split","isLocalhost","jsx","Loading","export","EmptySite","EmptyPage","active","_radix3","domain","config","api_url","deploy_name","js","js_compiled","responsive","layout","meta","undefined","snapshot","comps","target","active_id","comp_id","instance_comp_id","instance_item_id","should_render_main","hover","tree","scope","script_nav","list","idx","text","content","timeout","el","item_id","val","setItem","instance","mode","user","username","client_id","clients","status","preview","url_cache","Set","route_cache","createRouter","page_cache","meta_cache","sync","site","deepClone","site_tstamp","Date","now","site_exports","site_dts","site_dts_entry","prisma_ext","script","site_types","loaded","do_edit","newval","all","db","api","init_local_effect","history","show","root_id","cur","doc","building","render","comp","item","group","global_prop","ui","build","monaco","comp_editable","zoom","side","prop","left","parseInt","right","prevent_indent_hook","syncing","item_loading","search","search_ref","search_mode","Name","JS","HTML","CSS","rename_id","open_all","open","popup","file","enabled","picker","value","on_pick","multi","path","expanded","JSON","parse","selected","action","file_renaming","file_ctx_menu_event","tree_renaming","tree_ctx_path","tree_ctx_menu_event","upload","started","progress","init","log","loading","rebuilding","startup_status","error","show_log","form","lastMode","type","prop_kind","prop_name","on_close","typings","err_msg","wb_render","site_form","preview_id","import","comp_group"],"version":3,"file":"all.affcc552.js.map"}