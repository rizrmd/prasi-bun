{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,Q,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCAA,EAAA,MAAA,CAAA,EAAA,KAAA,IAAA,EAAA,OAAA,EACA,EAAA,MAAA,CAAA,EAAA,KAAA,IAAA,EAAA,OAAA,EACA,EAAA,MAAA,CAAA,EAAA,KAAA,IAAA,EAAA,OAAA,EACA,EAAA,MAAA,CAAA,EAAA,KAAA,IAAA,EAAA,OAAA,EACA,EAAA,MAAA,CAAA,EAAA,MAAA,IAAA,EAAA,OAAA,EACA,EAAA,MAAA,CAAA,EAAA,UAAA,IAAA,EAAA,OAAA,EACA,EAAA,MAAA,CAAA,EAAA,WAAA,IAAA,EAAA,OAAA,EACA,EAAA,MAAA,CAAA,EAAA,YAAA,IAAA,EAAA,OAAA,EACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,EAAA,OAAA,EARA,IAAA,EAAA,EAAA,W,E,E,c,C,GACA,EAAA,EAAA,W,E,E,c,C,GACA,EAAA,EAAA,W,E,E,c,C,GACA,EAAA,EAA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AAK,IAAI,CAAC,IAAI,CACpB,KAAM,CACR,EAGN,CACI,EAAK,MAAM,CAAC,EAAE,GAAK,EAAK,MAAM,CAAC,WAAW,EAC5C,EAAK,IAAI,CAAC,CACR,GAAI,EAAK,IAAI,CAAC,EAAE,CAChB,OAAQ,EAAK,MAAM,EAAE,IAAM,OAC3B,KAAM,EAAK,IAAI,CAAC,IAAI,CACpB,KAAM,CACR,EAEJ,EACF,MA1CA,EAAK,IAAI,CAAC,CACR,GAAI,EAAK,IAAI,CAAC,EAAE,CAChB,OAAQ,EAAK,MAAM,EAAE,IAAM,OAC3B,KAAM,EAAK,IAAI,CAAC,IAAI,CACpB,KAAM,CACR,EAwCN,C,E,C,iD,O,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,G,E,M,C,E,mB,I,I,E,M,C,E,oB,I,G,E,M,C,E,iB,I,I,E,M,C,E,e,I,I,E,M,C,E,Q,I,I,E,M,C,E,a,I,I,E,M,C,E,gB,I,I,E,M,C,E,iB,I,I,E,M,C,E,a,I,I,E,M,C,E,e,I,I,E,M,C,E,gB,I,I,E,M,C,E,c,I,I,E,M,C,E,gB,I,I,E,M,C,E,c,I,I,E,M,C,E,M,I,G,E,M,C,E,K,I,I,E,M,C,E,K,I,I,E,M,C,E,O,I,I,E,M,C,E,M,I,I,E,M,C,E,oB,I,I,E,M,C,E,mB,I,I,E,M,C,E,O,I,I,E,M,C,E,W,I,I,E,M,C,E,O,I,I,E,M,C,E,c,I,I,E,M,C,E,c,I,I,E,M,C,E,kB,I,G,E,M,C,E,kB,I,G,E,M,C,E,kB,I,G,E,M,C,E,kB,I,G,E,M,C,E,a,I,I,E,M,C,E,c,I,I,E,M,C,E,U,I,I,E,M,C,E,U,I,I,E,M,C,E,c,I,I,E,M,C,E,S,I,I,E,M,C,E,Y,I,I,E,M,C,E,a,I,I,E,M,C,E,Y,I,I,E,M,C,E,c,I,I,E,M,C,E,gB,I,I,E,M,C,E,yB,I,I,E,M,C,E,a,I,I,E,M,C,E,2B,I,I,E,M,C,E,4B,I,I,E,M,C,E,4B,I,I,E,M,C,E,6C,I,I,E,M,C,E,kB,I,G,E,M,C,E,iC,I,G,E,M,C,E,wB,I,I,E,M,C,E,W,I,I,E,M,C,E,iC,I,I,E,M,C,E,sC,I,I,E,M,C,E,iB,I,I,E,M,C,E,yB,I,I,E,M,C,E,iB,I,I,E,M,C,E,mB,I,I,E,M,C,E,oB,I,I,E,M,C,E,e,I,I,E,M,C,E,iB,I,I,E,M,C,E,a,I,I,E,M,C,E,e,I,I,E,M,C,E,gB,I,I,E,M,C,E,yB,I,I,E,M,C,E,iB,I,I,E,M,C,E,mB,I,I,E,M,C,E,sB,I,I,E,M,C,E,wB,I,I,E,M,C,E,oB,I,I,E,M,C,E,8B,I,I,E,M,C,E,gC,I,I,E,M,C,E,kB,I,G,E,M,C,E,iB,I,I,E,M,C,E,c,I,I,E,M,C,E,kB,I,I,E,M,C,E,U,I,I,E,M,C,E,W,I,I,E,M,C,E,kB,I,I,E,M,C,E,Y,I,G,E,M,C,E,a,I,I,E,M,C,E,wB,I,G,E,M,C,E,U,I,I,E,M,C,E,Y,I,I,E,M,C,E,c,I,I,E,M,C,E,e,I,I,E,M,C,E,iB,I,I,E,M,C,E,kB,I,I,E,M,C,E,oB,I,I,E,M,C,E,kB,I,I,E,M,C,E,oB,I,I,E,M,C,E,a,I,I,E,M,C,E,e,I,I,E,M,C,E,yB,I,I,E,M,C,E,W,I,I,E,M,C,E,yB,I,I,E,M,C,E,W,I,I,E,M,C,E,Q,I,I,E,M,C,E,0B,I,I,E,M,C,E,wB,I,I,E,M,C,E,qB,I,I,I,E,E,mB,E,E,c,E,E,a,E,E,Y,E,E,iB,E,E,iB,E,E,e,E,E,gB,E,E,e,E,E,c,E,E,e,E,E,iB,E,E,Y,E,E,gB,E,E,a,E,E,e,E,E,iB,E,E,e,E,S,C,E,AEtEO,OAAM,UAA0B,EAAA,UAAU,CAK/C,YAAa,CAAI,CAAE,CAAS,CAAE,CAC5B,KAAK,GACL,IAAI,CAAC,GAAG,CAAG,EACX,IAAI,CAAC,SAAS,CAAG,CACrB,CACA,CCTO,MAAM,EAKX,YAAa,CAAK,CAAE,CAAG,CAAE,CAIvB,IAAI,CAAC,KAAK,CAAG,EAIb,IAAI,CAAC,GAAG,CAAG,CACf,CACA,CASO,MAAM,EACX,aAAe,CAIb,IAAI,CAAC,OAAO,CAAG,IAAI,GACvB,CACA,CAWY,IAAC,EAAwB,CAAC,EAAa,EAAI,IACrD,EAAG,OAAO,CAAC,OAAO,CAAC,CAAC,EAAS,KAC3B,IAAM,EAAyC,EAAY,GAAG,CAAC,KAAK,CAAC,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,c,Q,iD,O,E,C,M,C,S,C,C,C,C,C,ECxBC,IAAA,EAAA,EAAA,kD,E,iB,C,GACY,EAAA,MAAA,CAAA,EAAA,OAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,OAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,OAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,OAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,OAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,OAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,OAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,OAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,OAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GACA,EAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GAOA,EAAA,MAAA,CAAA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","sources":["<anon>","../../node_modules/uuid/dist/esm-browser/index.js","../../node_modules/uuid/dist/esm-browser/validate.js","../../node_modules/uuid/dist/esm-browser/regex.js","../../node_modules/wasm-gzip/wasm_gzip.js","../../node_modules/@parcel/runtime-js/lib/runtime-38ac00dd4f35457d.js","../../node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","../../node_modules/process/browser.js","../../node_modules/lodash.get/index.js","../../node_modules/@paralleldrive/cuid2/index.js","../../node_modules/@paralleldrive/cuid2/src/index.js","../../node_modules/@noble/hashes/sha3.js","../../node_modules/@noble/hashes/src/sha3.ts","../../node_modules/@noble/hashes/_assert.js","../../node_modules/@noble/hashes/src/_assert.ts","../../node_modules/@noble/hashes/_u64.js","../../node_modules/@noble/hashes/src/_u64.ts","../../node_modules/@noble/hashes/utils.js","../../node_modules/@noble/hashes/src/utils.ts","../../node_modules/@noble/hashes/crypto.js","../../node_modules/@noble/hashes/src/crypto.ts","src/nova/ed/logic/tree/build.tsx","../../node_modules/idb-keyval/dist/compat.js","src/nova/vi/meta/comp/init-comp-load.tsx","src/nova/vi/meta/meta.ts","src/nova/vi/meta/comp.tsx","src/nova/vi/meta/comp/instantiate.tsx","src/nova/vi/meta/comp/walk-prop.tsx","src/nova/vi/meta/simplify.tsx","src/nova/vi/render/script/extract-nav.tsx","src/nova/ed/logic/comp/load.tsx","src/nova/ed/logic/active/is-editing.ts","src/nova/ed/logic/tree/assign-mitem.ts","src/nova/ed/logic/tree/build/push-tree.tsx","../../node_modules/yjs/dist/yjs.mjs","../../node_modules/yjs/src/utils/AbstractConnector.js","../../node_modules/yjs/src/utils/DeleteSet.js","../../node_modules/yjs/src/utils/Doc.js","../../node_modules/yjs/src/utils/UpdateDecoder.js","../../node_modules/yjs/src/utils/UpdateEncoder.js","../../node_modules/yjs/src/utils/encoding.js","../../node_modules/yjs/src/utils/EventHandler.js","../../node_modules/yjs/src/utils/ID.js","../../node_modules/yjs/src/utils/isParentOf.js","../../node_modules/yjs/src/utils/logging.js","../../node_modules/yjs/src/utils/PermanentUserData.js","../../node_modules/yjs/src/utils/RelativePosition.js","../../node_modules/yjs/src/utils/Snapshot.js","../../node_modules/yjs/src/utils/StructStore.js","../../node_modules/yjs/src/utils/Transaction.js","../../node_modules/yjs/src/utils/UndoManager.js","../../node_modules/yjs/src/utils/updates.js","../../node_modules/yjs/src/utils/YEvent.js","../../node_modules/yjs/src/types/AbstractType.js","../../node_modules/yjs/src/types/YArray.js","../../node_modules/yjs/src/types/YMap.js","../../node_modules/yjs/src/types/YText.js","../../node_modules/yjs/src/types/YXmlFragment.js","../../node_modules/yjs/src/types/YXmlElement.js","../../node_modules/yjs/src/types/YXmlEvent.js","../../node_modules/yjs/src/types/YXmlHook.js","../../node_modules/yjs/src/types/YXmlText.js","../../node_modules/yjs/src/structs/AbstractStruct.js","../../node_modules/yjs/src/structs/GC.js","../../node_modules/yjs/src/structs/ContentBinary.js","../../node_modules/yjs/src/structs/ContentDeleted.js","../../node_modules/yjs/src/structs/ContentDoc.js","../../node_modules/yjs/src/structs/ContentEmbed.js","../../node_modules/yjs/src/structs/ContentFormat.js","../../node_modules/yjs/src/structs/ContentJSON.js","../../node_modules/yjs/src/structs/ContentAny.js","../../node_modules/yjs/src/structs/ContentString.js","../../node_modules/yjs/src/structs/ContentType.js","../../node_modules/yjs/src/structs/Item.js","../../node_modules/yjs/src/structs/Skip.js","../../node_modules/yjs/src/index.js","../../node_modules/lib0/observable.js","../../node_modules/lib0/map.js","../../node_modules/lib0/set.js","../../node_modules/lib0/array.js","../../node_modules/lib0/math.js","../../node_modules/lib0/encoding.js","../../node_modules/lib0/number.js","../../node_modules/lib0/binary.js","../../node_modules/lib0/string.js","../../node_modules/lib0/decoding.js","../../node_modules/lib0/error.js","../../node_modules/lib0/random.js","../../node_modules/lib0/webcrypto.js","../../node_modules/lib0/promise.js","../../node_modules/lib0/time.js","../../node_modules/lib0/metric.js","../../node_modules/lib0/buffer.js","../../node_modules/lib0/environment.js","../../node_modules/lib0/conditions.js","../../node_modules/lib0/storage.js","../../node_modules/lib0/function.js","../../node_modules/lib0/object.js","../../node_modules/lib0/logging.js","../../node_modules/lib0/pair.js","../../node_modules/lib0/dom.js","../../node_modules/lib0/json.js","../../node_modules/lib0/eventloop.js","../../node_modules/lib0/logging.common.js","../../node_modules/lib0/symbol.js","../../node_modules/lib0/iterator.js","src/nova/vi/load/load-snapshot.tsx","src/nova/ed/logic/code-loader.ts","src/nova/ed/panel/side/style/tools/responsive-val.ts","src/nova/ed/logic/ed-route.ts","src/nova/ed/logic/ed-site.ts","src/nova/vi/load/load-legacy.tsx","src/nova/ed/panel/side/style/tools/dynamic-import.ts","src/nova/vi/render/script/arg.tsx","src/nova/vi/vi.tsx","src/nova/vi/load/load.tsx","src/nova/vi/render/global.tsx","src/nova/vi/render/render.tsx","src/nova/vi/utils/error-box.tsx","../../node_modules/react-use-error-boundary/index.js","src/nova/vi/render/parts.tsx","src/utils/css/gen.ts","src/utils/css/advanced.ts","src/utils/css/background.ts","src/utils/css/border.ts","src/utils/css/dimension.ts","src/utils/css/editor.ts","src/utils/css/font.ts","src/utils/css/layout.ts","src/utils/css/padding.ts","src/nova/vi/render/script.tsx","src/nova/vi/render/script/eval-prop.tsx","src/nova/vi/render/script/eval-script.tsx","src/nova/vi/render/script/local.tsx","src/nova/vi/render/script/passprop.tsx","src/nova/vi/root.tsx","../../node_modules/ua-parser-js/src/ua-parser.js","src/utils/script/typings.ts","src/utils/script/prisma-extend.ts","src/utils/script/types/base.ts","src/utils/script/types/prop.tsx","src/nova/ed/logic/ed-sync.tsx","src/utils/sync/ws-client.ts","../../node_modules/@qiwi/deep-proxy/target/bundle/deep-proxy.mjs","../../node_modules/@qiwi/deep-proxy/src/main/ts/cache.ts","../../node_modules/@qiwi/deep-proxy/src/main/ts/proxy.ts","../../node_modules/hash-wasm/dist/index.esm.js","node_modules/msgpackr/index.js","node_modules/msgpackr/pack.js","node_modules/msgpackr/unpack.js","node_modules/msgpackr/iterators.js","../../node_modules/safe-stable-stringify/index.js","../srv/ws/sync/actions-def.ts","../srv/ws/sync/type.ts","src/utils/sync/idb.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"6FIHJ\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"v1\", ()=>(0, _v1JsDefault.default));\nparcelHelpers.export(exports, \"v3\", ()=>(0, _v3JsDefault.default));\nparcelHelpers.export(exports, \"v4\", ()=>(0, _v4JsDefault.default));\nparcelHelpers.export(exports, \"v5\", ()=>(0, _v5JsDefault.default));\nparcelHelpers.export(exports, \"NIL\", ()=>(0, _nilJsDefault.default));\nparcelHelpers.export(exports, \"version\", ()=>(0, _versionJsDefault.default));\nparcelHelpers.export(exports, \"validate\", ()=>(0, _validateJsDefault.default));\nparcelHelpers.export(exports, \"stringify\", ()=>(0, _stringifyJsDefault.default));\nparcelHelpers.export(exports, \"parse\", ()=>(0, _parseJsDefault.default));\nvar _v1Js = require(\"./v1.js\");\nvar _v1JsDefault = parcelHelpers.interopDefault(_v1Js);\nvar _v3Js = require(\"./v3.js\");\nvar _v3JsDefault = parcelHelpers.interopDefault(_v3Js);\nvar _v4Js = require(\"./v4.js\");\nvar _v4JsDefault = parcelHelpers.interopDefault(_v4Js);\nvar _v5Js = require(\"./v5.js\");\nvar _v5JsDefault = parcelHelpers.interopDefault(_v5Js);\nvar _nilJs = require(\"./nil.js\");\nvar _nilJsDefault = parcelHelpers.interopDefault(_nilJs);\nvar _versionJs = require(\"./version.js\");\nvar _versionJsDefault = parcelHelpers.interopDefault(_versionJs);\nvar _validateJs = require(\"./validate.js\");\nvar _validateJsDefault = parcelHelpers.interopDefault(_validateJs);\nvar _stringifyJs = require(\"./stringify.js\");\nvar _stringifyJsDefault = parcelHelpers.interopDefault(_stringifyJs);\nvar _parseJs = require(\"./parse.js\");\nvar _parseJsDefault = parcelHelpers.interopDefault(_parseJs);\n\n},{\"./v1.js\":false,\"./v3.js\":false,\"./v4.js\":false,\"./v5.js\":false,\"./nil.js\":false,\"./version.js\":false,\"./validate.js\":\"iwzzl\",\"./stringify.js\":false,\"./parse.js\":false,\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"iwzzl\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nvar _regexJs = require(\"./regex.js\");\nvar _regexJsDefault = parcelHelpers.interopDefault(_regexJs);\nfunction validate(uuid) {\n    return typeof uuid === \"string\" && (0, _regexJsDefault.default).test(uuid);\n}\nexports.default = validate;\n\n},{\"./regex.js\":\"g802e\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"g802e\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nexports.default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"lSV23\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"DecompressionError\", ()=>c) //# sourceMappingURL=wasm_gzip.js.map\n;\nparcelHelpers.export(exports, \"compress\", ()=>y);\nparcelHelpers.export(exports, \"decompress\", ()=>w);\nparcelHelpers.export(exports, \"default\", ()=>i);\nparcelHelpers.export(exports, \"freeBuffer\", ()=>b);\nparcelHelpers.export(exports, \"initSync\", ()=>a);\nlet e;\nfunction n() {\n    const e = {\n        wbg: {}\n    };\n    return e;\n}\nfunction t(n, t) {\n    return e = n.exports, r.__wbindgen_wasm_module = t, e;\n}\nasync function r(e) {\n    void 0 === e && (e = new URL(require(\"b92ad0a4bafe26c9\")));\n    const r = n();\n    (\"string\" == typeof e || \"function\" == typeof Request && e instanceof Request || \"function\" == typeof URL && e instanceof URL) && (e = fetch(e));\n    const { instance: o, module: s } = await async function(e, n) {\n        if (\"function\" == typeof Response && e instanceof Response) {\n            if (\"function\" == typeof WebAssembly.instantiateStreaming) try {\n                return await WebAssembly.instantiateStreaming(e, n);\n            } catch (n) {\n                if (\"application/wasm\" == e.headers.get(\"Content-Type\")) throw n;\n                console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", n);\n            }\n            const t = await e.arrayBuffer();\n            return await WebAssembly.instantiate(t, n);\n        }\n        {\n            const t = await WebAssembly.instantiate(e, n);\n            return t instanceof WebAssembly.Instance ? {\n                instance: t,\n                module: e\n            } : t;\n        }\n    }(await e, r);\n    return t(o, s);\n}\nlet o = null, s = !1;\nasync function i(e) {\n    if (s || o) return;\n    s = !0;\n    const n = await r(e);\n    o || (o = n);\n}\nfunction a(e) {\n    o || (o = function(e) {\n        const r = n();\n        return e instanceof WebAssembly.Module || (e = new WebAssembly.Module(e)), t(new WebAssembly.Instance(e, r), e);\n    }(e));\n}\nclass c extends Error {\n    constructor(e){\n        super(e), this.name = \"DecompressionError\";\n    }\n}\nlet f = 0, u = null, l = null;\nfunction m(e, n, t) {\n    let r;\n    if (t) {\n        const o = n;\n        r = e.malloc_u8(o);\n        const s = new Uint8Array(e.memory.buffer, r, o);\n        try {\n            t(s);\n        } catch (n) {\n            throw e.free_u8(r, o), n;\n        }\n        return f = o, r;\n    }\n    if (\"string\" == typeof n) {\n        const t = f = function(e) {\n            let n = 0, t = 0, r = 0;\n            const o = e.length;\n            for(; n < o;)t = e.codePointAt(n), t <= 127 ? (r += 1, n++) : t <= 2047 ? (r += 2, n++) : t <= 65535 ? (r += 3, n++) : (r += 4, n += 2);\n            return r;\n        }(n);\n        r = e.malloc_u8(t);\n        const o = new Uint8Array(e.memory.buffer, r, t);\n        return u || (u = new TextEncoder), u.encodeInto(n, o), r;\n    }\n    const o = n;\n    return r = e.malloc_u8(f = o.length), l && l.length || (l = new Uint8Array(e.memory.buffer)), l.set(o, r), r;\n}\nfunction y(e, n) {\n    p(o);\n    const t = m(o, e, n), r = o.gzip_compress(t, f) >>> 0;\n    o.free_u8(t, f);\n    const s = o.buffer() >>> 0;\n    return new Uint8Array(o.memory.buffer, s, r);\n}\nfunction w(e, n) {\n    p(o);\n    const t = m(o, e, n), r = o.gzip_decompress(t, f) >>> 0;\n    if (o.free_u8(t, f), 4294967295 === r) {\n        const e = o.error_message(), n = o.error_message_len(), t = new Uint8Array(o.memory.buffer, e, n), r = (new TextDecoder).decode(t);\n        throw new c(r);\n    }\n    const s = o.buffer() >>> 0;\n    return new Uint8Array(o.memory.buffer, s, r);\n}\nfunction b() {\n    p(o), o.deallocate_buffer();\n}\nfunction p(e) {\n    if (!e) throw new Error(\"WASM not initialized\");\n}\n\n},{\"b92ad0a4bafe26c9\":\"7WaSc\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"7WaSc\":[function(require,module,exports) {\nmodule.exports = require(\"76debb3a3eccd87d\").getBundleURL(\"bRqx6\") + \"wasm_gzip_bg.cbb08a7b.wasm\";\n\n},{\"76debb3a3eccd87d\":\"03Wui\"}],\"03Wui\":[function(require,module,exports) {\n\"use strict\";\nvar bundleURL = {};\nfunction getBundleURLCached(id) {\n    var value = bundleURL[id];\n    if (!value) {\n        value = getBundleURL();\n        bundleURL[id] = value;\n    }\n    return value;\n}\nfunction getBundleURL() {\n    try {\n        throw new Error();\n    } catch (err) {\n        var matches = (\"\" + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n        if (matches) // The first two stack frames will be this function and getBundleURLCached.\n        // Use the 3rd one, which will be a runtime in the original bundle.\n        return getBaseURL(matches[2]);\n    }\n    return \"/\";\n}\nfunction getBaseURL(url) {\n    return (\"\" + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, \"$1\") + \"/\";\n}\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction getOrigin(url) {\n    var matches = (\"\" + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n    if (!matches) throw new Error(\"Origin not found\");\n    return matches[0];\n}\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;\n\n},{}],\"kluga\":[function(require,module,exports) {\n// shim for using process in browser\nvar process = module.exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar cachedSetTimeout;\nvar cachedClearTimeout;\nfunction defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n}\nfunction defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n}\n(function() {\n    try {\n        if (typeof setTimeout === \"function\") cachedSetTimeout = setTimeout;\n        else cachedSetTimeout = defaultSetTimout;\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === \"function\") cachedClearTimeout = clearTimeout;\n        else cachedClearTimeout = defaultClearTimeout;\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n})();\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) return;\n    draining = false;\n    if (currentQueue.length) queue = currentQueue.concat(queue);\n    else queueIndex = -1;\n    if (queue.length) drainQueue();\n}\nfunction drainQueue() {\n    if (draining) return;\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n    var len = queue.length;\n    while(len){\n        currentQueue = queue;\n        queue = [];\n        while(++queueIndex < len)if (currentQueue) currentQueue[queueIndex].run();\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nprocess.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) runTimeout(drainQueue);\n};\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\nprocess.title = \"browser\";\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = \"\"; // empty string to avoid regexp issues\nprocess.versions = {};\nfunction noop() {}\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\nprocess.listeners = function(name) {\n    return [];\n};\nprocess.binding = function(name) {\n    throw new Error(\"process.binding is not supported\");\n};\nprocess.cwd = function() {\n    return \"/\";\n};\nprocess.chdir = function(dir) {\n    throw new Error(\"process.chdir is not supported\");\n};\nprocess.umask = function() {\n    return 0;\n};\n\n},{}],\"hHAu7\":[function(require,module,exports) {\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */ /** Used as the `TypeError` message for \"Functions\" methods. */ var global = arguments[3];\nvar FUNC_ERROR_TEXT = \"Expected a function\";\n/** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED = \"__lodash_hash_undefined__\";\n/** Used as references for various `Number` constants. */ var INFINITY = 1 / 0;\n/** `Object#toString` result references. */ var funcTag = \"[object Function]\", genTag = \"[object GeneratorFunction]\", symbolTag = \"[object Symbol]\";\n/** Used to match property names within property paths. */ var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/, reIsPlainProp = /^\\w*$/, reLeadingDot = /^\\./, rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */ var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to match backslashes in property paths. */ var reEscapeChar = /\\\\(\\\\)?/g;\n/** Used to detect host constructors (Safari). */ var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Detect free variable `global` from Node.js. */ var freeGlobal = typeof global == \"object\" && global && global.Object === Object && global;\n/** Detect free variable `self`. */ var freeSelf = typeof self == \"object\" && self && self.Object === Object && self;\n/** Used as a reference to the global object. */ var root = freeGlobal || freeSelf || Function(\"return this\")();\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */ function getValue(object, key) {\n    return object == null ? undefined : object[key];\n}\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */ function isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n    if (value != null && typeof value.toString != \"function\") try {\n        result = !!(value + \"\");\n    } catch (e) {}\n    return result;\n}\n/** Used for built-in method references. */ var arrayProto = Array.prototype, funcProto = Function.prototype, objectProto = Object.prototype;\n/** Used to detect overreaching core-js shims. */ var coreJsData = root[\"__core-js_shared__\"];\n/** Used to detect methods masquerading as native. */ var maskSrcKey = function() {\n    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || \"\");\n    return uid ? \"Symbol(src)_1.\" + uid : \"\";\n}();\n/** Used to resolve the decompiled source of functions. */ var funcToString = funcProto.toString;\n/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */ var objectToString = objectProto.toString;\n/** Used to detect if a method is native. */ var reIsNative = RegExp(\"^\" + funcToString.call(hasOwnProperty).replace(reRegExpChar, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\");\n/** Built-in value references. */ var Symbol = root.Symbol, splice = arrayProto.splice;\n/* Built-in method references that are verified to be native. */ var Map = getNative(root, \"Map\"), nativeCreate = getNative(Object, \"create\");\n/** Used to convert symbols to primitives and strings. */ var symbolProto = Symbol ? Symbol.prototype : undefined, symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */ function Hash(entries) {\n    var index = -1, length = entries ? entries.length : 0;\n    this.clear();\n    while(++index < length){\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n    }\n}\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */ function hashClear() {\n    this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */ function hashDelete(key) {\n    return this.has(key) && delete this.__data__[key];\n}\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */ function hashGet(key) {\n    var data = this.__data__;\n    if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n    }\n    return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */ function hashHas(key) {\n    var data = this.__data__;\n    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */ function hashSet(key, value) {\n    var data = this.__data__;\n    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n    return this;\n}\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype[\"delete\"] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */ function ListCache(entries) {\n    var index = -1, length = entries ? entries.length : 0;\n    this.clear();\n    while(++index < length){\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n    }\n}\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */ function listCacheClear() {\n    this.__data__ = [];\n}\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */ function listCacheDelete(key) {\n    var data = this.__data__, index = assocIndexOf(data, key);\n    if (index < 0) return false;\n    var lastIndex = data.length - 1;\n    if (index == lastIndex) data.pop();\n    else splice.call(data, index, 1);\n    return true;\n}\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */ function listCacheGet(key) {\n    var data = this.__data__, index = assocIndexOf(data, key);\n    return index < 0 ? undefined : data[index][1];\n}\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */ function listCacheHas(key) {\n    return assocIndexOf(this.__data__, key) > -1;\n}\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */ function listCacheSet(key, value) {\n    var data = this.__data__, index = assocIndexOf(data, key);\n    if (index < 0) data.push([\n        key,\n        value\n    ]);\n    else data[index][1] = value;\n    return this;\n}\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype[\"delete\"] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */ function MapCache(entries) {\n    var index = -1, length = entries ? entries.length : 0;\n    this.clear();\n    while(++index < length){\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n    }\n}\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */ function mapCacheClear() {\n    this.__data__ = {\n        \"hash\": new Hash,\n        \"map\": new (Map || ListCache),\n        \"string\": new Hash\n    };\n}\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */ function mapCacheDelete(key) {\n    return getMapData(this, key)[\"delete\"](key);\n}\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */ function mapCacheGet(key) {\n    return getMapData(this, key).get(key);\n}\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */ function mapCacheHas(key) {\n    return getMapData(this, key).has(key);\n}\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */ function mapCacheSet(key, value) {\n    getMapData(this, key).set(key, value);\n    return this;\n}\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype[\"delete\"] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */ function assocIndexOf(array, key) {\n    var length = array.length;\n    while(length--){\n        if (eq(array[length][0], key)) return length;\n    }\n    return -1;\n}\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */ function baseGet(object, path) {\n    path = isKey(path, object) ? [\n        path\n    ] : castPath(path);\n    var index = 0, length = path.length;\n    while(object != null && index < length)object = object[toKey(path[index++])];\n    return index && index == length ? object : undefined;\n}\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */ function baseIsNative(value) {\n    if (!isObject(value) || isMasked(value)) return false;\n    var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;\n    return pattern.test(toSource(value));\n}\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */ function baseToString(value) {\n    // Exit early for strings to avoid a performance hit in some environments.\n    if (typeof value == \"string\") return value;\n    if (isSymbol(value)) return symbolToString ? symbolToString.call(value) : \"\";\n    var result = value + \"\";\n    return result == \"0\" && 1 / value == -INFINITY ? \"-0\" : result;\n}\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */ function castPath(value) {\n    return isArray(value) ? value : stringToPath(value);\n}\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */ function getMapData(map, key) {\n    var data = map.__data__;\n    return isKeyable(key) ? data[typeof key == \"string\" ? \"string\" : \"hash\"] : data.map;\n}\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */ function getNative(object, key) {\n    var value = getValue(object, key);\n    return baseIsNative(value) ? value : undefined;\n}\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */ function isKey(value, object) {\n    if (isArray(value)) return false;\n    var type = typeof value;\n    if (type == \"number\" || type == \"symbol\" || type == \"boolean\" || value == null || isSymbol(value)) return true;\n    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */ function isKeyable(value) {\n    var type = typeof value;\n    return type == \"string\" || type == \"number\" || type == \"symbol\" || type == \"boolean\" ? value !== \"__proto__\" : value === null;\n}\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */ function isMasked(func) {\n    return !!maskSrcKey && maskSrcKey in func;\n}\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */ var stringToPath = memoize(function(string) {\n    string = toString(string);\n    var result = [];\n    if (reLeadingDot.test(string)) result.push(\"\");\n    string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, \"$1\") : number || match);\n    });\n    return result;\n});\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */ function toKey(value) {\n    if (typeof value == \"string\" || isSymbol(value)) return value;\n    var result = value + \"\";\n    return result == \"0\" && 1 / value == -INFINITY ? \"-0\" : result;\n}\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */ function toSource(func) {\n    if (func != null) {\n        try {\n            return funcToString.call(func);\n        } catch (e) {}\n        try {\n            return func + \"\";\n        } catch (e) {}\n    }\n    return \"\";\n}\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */ function memoize(func, resolver) {\n    if (typeof func != \"function\" || resolver && typeof resolver != \"function\") throw new TypeError(FUNC_ERROR_TEXT);\n    var memoized = function() {\n        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;\n        if (cache.has(key)) return cache.get(key);\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n    };\n    memoized.cache = new (memoize.Cache || MapCache);\n    return memoized;\n}\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */ function eq(value, other) {\n    return value === other || value !== value && other !== other;\n}\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */ var isArray = Array.isArray;\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */ function isFunction(value) {\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 8-9 which returns 'object' for typed array and other constructors.\n    var tag = isObject(value) ? objectToString.call(value) : \"\";\n    return tag == funcTag || tag == genTag;\n}\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */ function isObject(value) {\n    var type = typeof value;\n    return !!value && (type == \"object\" || type == \"function\");\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */ function isObjectLike(value) {\n    return !!value && typeof value == \"object\";\n}\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */ function isSymbol(value) {\n    return typeof value == \"symbol\" || isObjectLike(value) && objectToString.call(value) == symbolTag;\n}\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */ function toString(value) {\n    return value == null ? \"\" : baseToString(value);\n}\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */ function get(object, path, defaultValue) {\n    var result = object == null ? undefined : baseGet(object, path);\n    return result === undefined ? defaultValue : result;\n}\nmodule.exports = get;\n\n},{}],\"20RGP\":[function(require,module,exports) {\nconst { createId, init, getConstants, isCuid } = require(\"f4754cad0617f281\");\nmodule.exports.createId = createId;\nmodule.exports.init = init;\nmodule.exports.getConstants = getConstants;\nmodule.exports.isCuid = isCuid;\n\n},{\"f4754cad0617f281\":\"itkKG\"}],\"itkKG\":[function(require,module,exports) {\n/* global global, window, module */ var global = arguments[3];\nconst { sha3_512: sha3 } = require(\"d0dc733fdfe478ab\");\nconst defaultLength = 24;\nconst bigLength = 32;\nconst createEntropy = (length = 4, random = Math.random)=>{\n    let entropy = \"\";\n    while(entropy.length < length)entropy = entropy + Math.floor(random() * 36).toString(36);\n    return entropy;\n};\n/*\n * Adapted from https://github.com/juanelas/bigint-conversion\n * MIT License Copyright (c) 2018 Juan Hernández Serrano\n */ function bufToBigInt(buf) {\n    let bits = 8n;\n    let value = 0n;\n    for (const i of buf.values()){\n        const bi = BigInt(i);\n        value = (value << bits) + bi;\n    }\n    return value;\n}\nconst hash = (input = \"\")=>{\n    // Drop the first character because it will bias the histogram\n    // to the left.\n    return bufToBigInt(sha3(input)).toString(36).slice(1);\n};\nconst alphabet = Array.from({\n    length: 26\n}, (x, i)=>String.fromCharCode(i + 97));\nconst randomLetter = (random)=>alphabet[Math.floor(random() * alphabet.length)];\n/*\nThis is a fingerprint of the host environment. It is used to help\nprevent collisions when generating ids in a distributed system.\nIf no global object is available, you can pass in your own, or fall back\non a random string.\n*/ const createFingerprint = ({ globalObj = typeof global !== \"undefined\" ? global : typeof window !== \"undefined\" ? window : {}, random = Math.random } = {})=>{\n    const globals = Object.keys(globalObj).toString();\n    const sourceString = globals.length ? globals + createEntropy(bigLength, random) : createEntropy(bigLength, random);\n    return hash(sourceString).substring(0, bigLength);\n};\nconst createCounter = (count)=>()=>{\n        return count++;\n    };\n// ~22k hosts before 50% chance of initial counter collision\n// with a remaining counter range of 9.0e+15 in JavaScript.\nconst initialCountMax = 476782367;\nconst init = ({ // Fallback if the user does not pass in a CSPRNG. This should be OK\n// because we don't rely solely on the random number generator for entropy.\n// We also use the host fingerprint, current time, and a session counter.\nrandom = Math.random, counter = createCounter(Math.floor(random() * initialCountMax)), length = defaultLength, fingerprint = createFingerprint({\n    random\n}) } = {})=>{\n    return function cuid2() {\n        const firstLetter = randomLetter(random);\n        // If we're lucky, the `.toString(36)` calls may reduce hashing rounds\n        // by shortening the input to the hash function a little.\n        const time = Date.now().toString(36);\n        const count = counter().toString(36);\n        // The salt should be long enough to be globally unique across the full\n        // length of the hash. For simplicity, we use the same length as the\n        // intended id output.\n        const salt = createEntropy(length, random);\n        const hashInput = `${time + salt + count + fingerprint}`;\n        return `${firstLetter + hash(hashInput).substring(1, length)}`;\n    };\n};\nconst createId = init();\nconst isCuid = (id, { minLength = 2, maxLength = bigLength } = {})=>{\n    const length = id.length;\n    const regex = /^[0-9a-z]+$/;\n    if (typeof id === \"string\" && length >= minLength && length <= maxLength && regex.test(id)) return true;\n    return false;\n};\nmodule.exports.getConstants = ()=>({\n        defaultLength,\n        bigLength\n    });\nmodule.exports.init = init;\nmodule.exports.createId = createId;\nmodule.exports.bufToBigInt = bufToBigInt;\nmodule.exports.createCounter = createCounter;\nmodule.exports.createFingerprint = createFingerprint;\nmodule.exports.isCuid = isCuid;\n\n},{\"d0dc733fdfe478ab\":\"iI5lw\"}],\"iI5lw\":[function(require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst _assert_js_1 = require(\"b5d8367685d2f01a\");\nconst _u64_js_1 = require(\"a1dd24a362368716\");\nconst utils_js_1 = require(\"4f25a63eeb3984c4\");\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [\n    [],\n    [],\n    []\n];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor(let round = 0, R = _1n, x = 1, y = 0; round < 24; round++){\n    // Pi\n    [x, y] = [\n        y,\n        (2 * x + 3 * y) % 5\n    ];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((round + 1) * (round + 2) / 2 % 64);\n    // Iota\n    let t = _0n;\n    for(let j = 0; j < 7; j++){\n        R = (R << _1n ^ (R >> _7n) * _0x71n) % _256n;\n        if (R & _2n) t ^= _1n << (_1n << /* @__PURE__ */ BigInt(j)) - _1n;\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0, _u64_js_1.split)(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s)=>s > 32 ? (0, _u64_js_1.rotlBH)(h, l, s) : (0, _u64_js_1.rotlSH)(h, l, s);\nconst rotlL = (h, l, s)=>s > 32 ? (0, _u64_js_1.rotlBL)(h, l, s) : (0, _u64_js_1.rotlSL)(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(10);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for(let round = 24 - rounds; round < 24; round++){\n        // Theta θ\n        for(let x = 0; x < 10; x++)B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for(let x = 0; x < 10; x += 2){\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for(let y = 0; y < 50; y += 10){\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for(let t = 0; t < 24; t++){\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for(let y = 0; y < 50; y += 10){\n            for(let x = 0; x < 10; x++)B[x] = s[y + x];\n            for(let x = 0; x < 10; x++)s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24){\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        (0, _assert_js_1.number)(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200) throw new Error(\"Sha3 supports only keccak-f1600 function\");\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        (0, _assert_js_1.exists)(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for(let pos = 0; pos < len;){\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for(let i = 0; i < take; i++)state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen) this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished) return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        (0, _assert_js_1.exists)(this, false);\n        (0, _assert_js_1.bytes)(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for(let pos = 0, len = out.length; pos < len;){\n            if (this.posOut >= blockLen) this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF) throw new Error(\"XOF is not possible for this instance\");\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        (0, _assert_js_1.number)(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        (0, _assert_js_1.output)(out, this);\n        if (this.finished) throw new Error(\"digest() was already called\");\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen)=>(0, utils_js_1.wrapConstructor)(()=>new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 28);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */ exports.sha3_256 = gen(0x06, 136, 32);\nexports.sha3_384 = gen(0x06, 104, 48);\nexports.sha3_512 = gen(0x06, 72, 64);\nexports.keccak_224 = gen(0x01, 144, 28);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */ exports.keccak_256 = gen(0x01, 136, 32);\nexports.keccak_384 = gen(0x01, 104, 48);\nexports.keccak_512 = gen(0x01, 72, 64);\nconst genShake = (suffix, blockLen, outputLen)=>(0, utils_js_1.wrapXOFConstructorWithOpts)((opts = {})=>new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 16);\nexports.shake256 = genShake(0x1f, 136, 32);\n\n},{\"b5d8367685d2f01a\":\"clWfu\",\"a1dd24a362368716\":\"kV8sB\",\"4f25a63eeb3984c4\":\"bDoG9\"}],\"clWfu\":[function(require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== \"boolean\") throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\n// copied from utils\nfunction isBytes(a) {\n    return a instanceof Uint8Array || a != null && typeof a === \"object\" && a.constructor.name === \"Uint8Array\";\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b)) throw new Error(\"Expected Uint8Array\");\n    if (lengths.length > 0 && !lengths.includes(b.length)) throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== \"function\" || typeof hash.create !== \"function\") throw new Error(\"Hash should be wrapped by utils.wrapConstructor\");\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed) throw new Error(\"Hash instance has been destroyed\");\n    if (checkFinished && instance.finished) throw new Error(\"Hash#digest() has already been called\");\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output\n};\nexports.default = assert;\n\n},{}],\"kV8sB\":[function(require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.add5L = exports.add5H = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.add = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le) return {\n        h: Number(n & U32_MASK64),\n        l: Number(n >> _32n & U32_MASK64)\n    };\n    return {\n        h: Number(n >> _32n & U32_MASK64) | 0,\n        l: Number(n & U32_MASK64) | 0\n    };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for(let i = 0; i < lst.length; i++){\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [\n            h,\n            l\n        ];\n    }\n    return [\n        Ah,\n        Al\n    ];\n}\nexports.split = split;\nconst toBig = (h, l)=>BigInt(h >>> 0) << _32n | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s)=>h >>> s;\nexports.shrSH = shrSH;\nconst shrSL = (h, l, s)=>h << 32 - s | l >>> s;\nexports.shrSL = shrSL;\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s)=>h >>> s | l << 32 - s;\nexports.rotrSH = rotrSH;\nconst rotrSL = (h, l, s)=>h << 32 - s | l >>> s;\nexports.rotrSL = rotrSL;\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s)=>h << 64 - s | l >>> s - 32;\nexports.rotrBH = rotrBH;\nconst rotrBL = (h, l, s)=>h >>> s - 32 | l << 64 - s;\nexports.rotrBL = rotrBL;\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l)=>l;\nexports.rotr32H = rotr32H;\nconst rotr32L = (h, _l)=>h;\nexports.rotr32L = rotr32L;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s)=>h << s | l >>> 32 - s;\nexports.rotlSH = rotlSH;\nconst rotlSL = (h, l, s)=>l << s | h >>> 32 - s;\nexports.rotlSL = rotlSL;\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s)=>l << s - 32 | h >>> 64 - s;\nexports.rotlBH = rotlBH;\nconst rotlBL = (h, l, s)=>h << s - 32 | l >>> 64 - s;\nexports.rotlBL = rotlBL;\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return {\n        h: Ah + Bh + (l / 2 ** 32 | 0) | 0,\n        l: l | 0\n    };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl)=>(Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexports.add3L = add3L;\nconst add3H = (low, Ah, Bh, Ch)=>Ah + Bh + Ch + (low / 2 ** 32 | 0) | 0;\nexports.add3H = add3H;\nconst add4L = (Al, Bl, Cl, Dl)=>(Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexports.add4L = add4L;\nconst add4H = (low, Ah, Bh, Ch, Dh)=>Ah + Bh + Ch + Dh + (low / 2 ** 32 | 0) | 0;\nexports.add4H = add4H;\nconst add5L = (Al, Bl, Cl, Dl, El)=>(Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexports.add5L = add5L;\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh)=>Ah + Bh + Ch + Dh + Eh + (low / 2 ** 32 | 0) | 0;\nexports.add5H = add5H;\n// prettier-ignore\nconst u64 = {\n    fromBig,\n    split,\n    toBig,\n    shrSH,\n    shrSL,\n    rotrSH,\n    rotrSL,\n    rotrBH,\n    rotrBL,\n    rotr32H,\n    rotr32L,\n    rotlSH,\n    rotlSL,\n    rotlBH,\n    rotlBL,\n    add,\n    add3L,\n    add3H,\n    add4L,\n    add4H,\n    add5H,\n    add5L\n};\nexports.default = u64;\n\n},{}],\"bDoG9\":[function(require,module,exports) {\n\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */ Object.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.randomBytes = exports.wrapXOFConstructorWithOpts = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nconst crypto_1 = require(\"59719913569e95e6\");\n// Cast array to different type\nconst u8 = (arr)=>new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr)=>new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\nfunction isBytes(a) {\n    return a instanceof Uint8Array || a != null && typeof a === \"object\" && a.constructor.name === \"Uint8Array\";\n}\n// Cast array to view\nconst createView = (arr)=>new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift)=>word << 32 - shift | word >>> shift;\nexports.rotr = rotr;\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\n// Other libraries would silently corrupt the data instead of throwing an error,\n// when they don't support it.\nexports.isLE = new Uint8Array(new Uint32Array([\n    0x11223344\n]).buffer)[0] === 0x44;\nif (!exports.isLE) throw new Error(\"Non little-endian hardware is not supported\");\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({\n    length: 256\n}, (_, i)=>i.toString(16).padStart(2, \"0\"));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */ function bytesToHex(bytes) {\n    if (!isBytes(bytes)) throw new Error(\"Uint8Array expected\");\n    // pre-caching improves the speed 6x\n    let hex = \"\";\n    for(let i = 0; i < bytes.length; i++)hex += hexes[bytes[i]];\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n// We use optimized technique to convert hex string to byte array\nconst asciis = {\n    _0: 48,\n    _9: 57,\n    _A: 65,\n    _F: 70,\n    _a: 97,\n    _f: 102\n};\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */ function hexToBytes(hex) {\n    if (typeof hex !== \"string\") throw new Error(\"hex string expected, got \" + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2) throw new Error(\"padded hex string expected, got unpadded hex of length \" + hl);\n    const array = new Uint8Array(al);\n    for(let ai = 0, hi = 0; ai < al; ai++, hi += 2){\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async ()=>{};\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for(let i = 0; i < iters; i++){\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick) continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */ function utf8ToBytes(str) {\n    if (typeof str !== \"string\") throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexports.utf8ToBytes = utf8ToBytes;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */ function toBytes(data) {\n    if (typeof data === \"string\") data = utf8ToBytes(data);\n    if (!isBytes(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Copies several Uint8Arrays into one.\n */ function concatBytes(...arrays) {\n    let sum = 0;\n    for(let i = 0; i < arrays.length; i++){\n        const a = arrays[i];\n        if (!isBytes(a)) throw new Error(\"Uint8Array expected\");\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for(let i = 0, pad = 0; i < arrays.length; i++){\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\nconst toStr = {}.toString;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== \"[object Object]\") throw new Error(\"Options should be object or undefined\");\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg)=>hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = ()=>hashCons();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts)=>hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts)=>hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts)=>hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts)=>hashCons(opts);\n    return hashC;\n}\nexports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */ function randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === \"function\") return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    throw new Error(\"crypto.getRandomValues must be defined\");\n}\nexports.randomBytes = randomBytes;\n\n},{\"59719913569e95e6\":\"3zZaM\"}],\"3zZaM\":[function(require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n\n},{}],\"dNllk\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"treeCacheBuild\", ()=>treeCacheBuild);\nparcelHelpers.export(exports, \"treeRebuild\", ()=>treeRebuild);\nvar _idbKeyval = require(\"idb-keyval\");\nvar _initCompLoad = require(\"../../../vi/meta/comp/init-comp-load\");\nvar _meta = require(\"../../../vi/meta/meta\");\nvar _extractNav = require(\"../../../vi/render/script/extract-nav\");\nvar _load = require(\"../comp/load\");\nvar _edGlobal = require(\"../ed-global\");\nvar _assignMitem = require(\"./assign-mitem\");\nvar _pushTree = require(\"./build/push-tree\");\nconst treeCacheBuild = async (p, page_id)=>{\n    const page_cache = p.preview.page_cache[page_id];\n    if (page_cache) {\n        const meta_cache = {\n            meta: {},\n            entry: [],\n            url: page_cache.url\n        };\n        await (0, _initCompLoad.initLoadComp)({\n            comps: p.comp.loaded,\n            meta: meta_cache.meta,\n            mode: \"page\"\n        }, page_cache.root, {\n            async load (comp_ids) {\n                if (!p.sync) return;\n                const ids = comp_ids.filter((id)=>!p.comp.loaded[id]);\n                const comps = await p.sync.comp.load(ids, true);\n                let result = Object.entries(comps);\n                for (const [id_comp, comp] of result){\n                    const cached = await (0, _idbKeyval.get)(`comp-${id_comp}`, (0, _extractNav.nav).store);\n                    if (cached) p.comp.loaded[id_comp] = cached;\n                    if (comp && comp.snapshot && !p.comp.list[id_comp]) {\n                        if (p.comp.loaded[id_comp]) (0, _load.loadCompSnapshot)(p, id_comp, comp.snapshot).then(()=>{\n                            if (p.comp.loaded[id_comp]) (0, _idbKeyval.set)(`comp-${id_comp}`, p.comp.loaded[id_comp], (0, _extractNav.nav).store);\n                        });\n                        else {\n                            await (0, _load.loadCompSnapshot)(p, id_comp, comp.snapshot);\n                            if (p.comp.loaded[id_comp]) (0, _idbKeyval.set)(`comp-${id_comp}`, p.comp.loaded[id_comp], (0, _extractNav.nav).store);\n                        }\n                    }\n                }\n            }\n        });\n        for (const item of page_cache.root.childs){\n            meta_cache.entry.push(item.id);\n            (0, _meta.genMeta)({\n                note: \"cache-rebuild\",\n                comps: p.comp.loaded,\n                meta: meta_cache.meta,\n                mode: \"page\"\n            }, {\n                item: item\n            });\n        }\n        p.preview.meta_cache[page_id] = meta_cache;\n        (0, _idbKeyval.set)(`page-${page_id}`, meta_cache, (0, _extractNav.nav).store);\n    }\n};\nconst treeRebuild = async (p, arg)=>{\n    if (document.activeElement) {\n        const a = document.activeElement;\n        if (a.tagName === \"DIV\" && a.getAttribute(\"contenteditable\") === \"true\") return;\n    }\n    (0, _edGlobal.active).should_render_main = true;\n    const is_layout = p.site.layout && p.site.layout.id === p.page.cur.id && arg?.note === \"load-layout page-init\";\n    for (const [k, v] of Object.entries(p.comp.list))if (!p.comp.loaded[k]) {\n        const mcomp = v.doc.getMap(\"map\").get(\"root\");\n        const icomp = mcomp?.toJSON();\n        if (icomp) p.comp.loaded[k] = icomp;\n    }\n    const mroot = p.page.doc?.getMap(\"map\").get(\"root\");\n    const mitems = [];\n    mroot?.get(\"childs\")?.forEach((m)=>mitems.push(m));\n    const meta = {};\n    p.page.tree = [];\n    for (const mitem of mitems){\n        const item = mitem.toJSON();\n        if (item) {\n            await (0, _initCompLoad.initLoadComp)({\n                comps: p.comp.loaded,\n                meta,\n                mode: \"page\"\n            }, item, {\n                async load (comp_ids) {\n                    for (const id of comp_ids)await (0, _load.loadComponent)(p, id);\n                }\n            });\n            (0, _meta.genMeta)({\n                note: \"tree-rebuild\",\n                comps: p.comp.loaded,\n                meta,\n                mode: \"page\",\n                on: {\n                    async visit (m) {\n                        if (!is_layout) {\n                            if (m.parent?.instance_id !== m.parent?.id || m.jsx_prop) (0, _pushTree.pushTreeNode)(p, m, meta, p.page.tree);\n                            (0, _assignMitem.assignMitem)({\n                                m,\n                                root: item,\n                                mitem,\n                                meta,\n                                new_prop_jsx (meta, mprops, prop_name, prop_val) {\n                                    if (!mprops.get(prop_name)) {\n                                        const map = new Y.Map();\n                                        syncronize(map, prop_val);\n                                        mprops.set(prop_name, map);\n                                    }\n                                }\n                            });\n                        }\n                    }\n                }\n            }, {\n                item\n            });\n        }\n    }\n    if (is_layout) p.site.layout.meta = meta;\n    else {\n        let root_id = \"root\";\n        if (p.site.layout && p.site.layout.meta) {\n            for (const [_, v] of Object.entries(p.site.layout.meta))if (v.item.name === \"content\") {\n                root_id = v.item.id;\n                break;\n            }\n            p.page.root_id = root_id;\n        }\n        if (p.site.layout && p.site.layout.id === p.page.cur.id) p.page.meta = meta;\n        else if (root_id !== \"root\") {\n            for (const m of Object.values(meta))if (m.parent?.id === \"root\") m.parent.id = root_id;\n            p.page.meta = {\n                ...p.site.layout.meta,\n                ...meta\n            };\n        } else p.page.meta = meta;\n    }\n};\n\n},{\"idb-keyval\":\"8Atof\",\"../../../vi/meta/comp/init-comp-load\":\"61w0n\",\"../../../vi/meta/meta\":\"g3IOK\",\"../../../vi/render/script/extract-nav\":\"hXbWs\",\"../comp/load\":\"aigu6\",\"../ed-global\":\"6QDfO\",\"./assign-mitem\":\"3QMWf\",\"./build/push-tree\":\"GvsT4\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"8Atof\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"clear\", ()=>clear);\nparcelHelpers.export(exports, \"createStore\", ()=>createStore);\nparcelHelpers.export(exports, \"del\", ()=>del);\nparcelHelpers.export(exports, \"delMany\", ()=>delMany);\nparcelHelpers.export(exports, \"entries\", ()=>entries);\nparcelHelpers.export(exports, \"get\", ()=>get);\nparcelHelpers.export(exports, \"getMany\", ()=>getMany);\nparcelHelpers.export(exports, \"keys\", ()=>keys);\nparcelHelpers.export(exports, \"promisifyRequest\", ()=>promisifyRequest);\nparcelHelpers.export(exports, \"set\", ()=>set);\nparcelHelpers.export(exports, \"setMany\", ()=>setMany);\nparcelHelpers.export(exports, \"update\", ()=>update);\nparcelHelpers.export(exports, \"values\", ()=>values);\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = function() {\n            return resolve(request.result);\n        }; // @ts-ignore - file size hacks\n        request.onabort = request.onerror = function() {\n            return reject(request.error);\n        };\n    });\n}\nfunction createStore(dbName, storeName) {\n    var request = indexedDB.open(dbName);\n    request.onupgradeneeded = function() {\n        return request.result.createObjectStore(storeName);\n    };\n    var dbp = promisifyRequest(request);\n    return function(txMode, callback) {\n        return dbp.then(function(db) {\n            return callback(db.transaction(storeName, txMode).objectStore(storeName));\n        });\n    };\n}\nvar defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) defaultGetStoreFunc = createStore(\"keyval-store\", \"keyval\");\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function get(key) {\n    var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n    return customStore(\"readonly\", function(store) {\n        return promisifyRequest(store.get(key));\n    });\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function set(key, value) {\n    var customStore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetStore();\n    return customStore(\"readwrite\", function(store) {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function setMany(entries) {\n    var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n    return customStore(\"readwrite\", function(store) {\n        entries.forEach(function(entry) {\n            return store.put(entry[1], entry[0]);\n        });\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function getMany(keys) {\n    var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n    return customStore(\"readonly\", function(store) {\n        return Promise.all(keys.map(function(key) {\n            return promisifyRequest(store.get(key));\n        }));\n    });\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function update(key, updater) {\n    var customStore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetStore();\n    return customStore(\"readwrite\", function(store) {\n        return(// If I try to chain promises, the transaction closes in browsers\n        // that use a promise polyfill (IE10/11).\n        new Promise(function(resolve, reject) {\n            store.get(key).onsuccess = function() {\n                try {\n                    store.put(updater(this.result), key);\n                    resolve(promisifyRequest(store.transaction));\n                } catch (err) {\n                    reject(err);\n                }\n            };\n        }));\n    });\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function del(key) {\n    var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n    return customStore(\"readwrite\", function(store) {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function delMany(keys) {\n    var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n    return customStore(\"readwrite\", function(store) {\n        keys.forEach(function(key) {\n            return store.delete(key);\n        });\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function clear() {\n    var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n    return customStore(\"readwrite\", function(store) {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(store, callback) {\n    store.openCursor().onsuccess = function() {\n        if (!this.result) return;\n        callback(this.result);\n        this.result.continue();\n    };\n    return promisifyRequest(store.transaction);\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function keys() {\n    var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n    return customStore(\"readonly\", function(store) {\n        // Fast path for modern browsers\n        if (store.getAllKeys) return promisifyRequest(store.getAllKeys());\n        var items = [];\n        return eachCursor(store, function(cursor) {\n            return items.push(cursor.key);\n        }).then(function() {\n            return items;\n        });\n    });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function values() {\n    var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n    return customStore(\"readonly\", function(store) {\n        // Fast path for modern browsers\n        if (store.getAll) return promisifyRequest(store.getAll());\n        var items = [];\n        return eachCursor(store, function(cursor) {\n            return items.push(cursor.value);\n        }).then(function() {\n            return items;\n        });\n    });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */ function entries() {\n    var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n    return customStore(\"readonly\", function(store) {\n        // Fast path for modern browsers\n        // (although, hopefully we'll get a simpler path some day)\n        if (store.getAll && store.getAllKeys) return Promise.all([\n            promisifyRequest(store.getAllKeys()),\n            promisifyRequest(store.getAll())\n        ]).then(function(_ref) {\n            var _ref2 = _slicedToArray(_ref, 2), keys = _ref2[0], values = _ref2[1];\n            return keys.map(function(key, i) {\n                return [\n                    key,\n                    values[i]\n                ];\n            });\n        });\n        var items = [];\n        return customStore(\"readonly\", function(store) {\n            return eachCursor(store, function(cursor) {\n                return items.push([\n                    cursor.key,\n                    cursor.value\n                ]);\n            }).then(function() {\n                return items;\n            });\n        });\n    });\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"61w0n\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initLoadComp\", ()=>initLoadComp);\nvar _meta = require(\"../meta\");\nconst initLoadComp = async (p, item, opt, _loaded)=>{\n    const comp_ids = new Set();\n    const shared = {\n        root: item\n    };\n    const comps = [];\n    (0, _meta.genMeta)({\n        ...p,\n        on: {\n            visit_component: ({ component })=>{\n                if (component) {\n                    const { id } = component;\n                    if (!p.comps[id]) {\n                        if (!_loaded || _loaded && !_loaded.has(id)) comp_ids.add(id);\n                    }\n                    comps.push(component);\n                }\n            },\n            visit (meta, vitem) {\n                if (opt.visit) opt.visit(meta, vitem, shared);\n            }\n        },\n        set_meta: false,\n        note: \"init-load-comp\"\n    }, {\n        item,\n        ignore_first_component: true\n    });\n    if (opt.done) opt.done(shared);\n    let loaded = _loaded;\n    if (!loaded) loaded = new Set();\n    if (comp_ids.size > 0) {\n        await opt.load([\n            ...comp_ids\n        ]);\n        comp_ids.forEach((id)=>{\n            if (loaded) loaded.add(id);\n        });\n        for (const id of [\n            ...loaded\n        ]){\n            const comp = p.comps[id];\n            if (comp) await initLoadComp(p, comp, opt, loaded);\n        }\n    }\n    for (const component of comps){\n        for (const prop of Object.values(component.props))if (prop.meta?.type === \"content-element\" && prop.content) await initLoadComp(p, prop.content, opt, loaded);\n    }\n};\n\n},{\"../meta\":\"g3IOK\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"g3IOK\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"genMeta\", ()=>genMeta);\nvar _comp = require(\"./comp\");\nvar _simplify = require(\"./simplify\");\nconst genMeta = (p, arg)=>{\n    const item = arg.item;\n    if (item.type === \"item\" && item.component?.id) {\n        if (arg.ignore_first_component !== true) {\n            (0, _comp.genComp)(p, arg);\n            return;\n        }\n    }\n    const meta = {\n        item: (0, _simplify.simplifyItemChild)(item),\n        parent: {\n            id: arg.parent?.item.id || \"root\",\n            instance_id: arg.parent?.instance_id,\n            comp_id: arg.parent?.comp?.component?.id\n        }\n    };\n    if (arg.jsx_prop) meta.jsx_prop = arg.jsx_prop;\n    if (p.on?.visit) p.on.visit(meta, item, arg.root || arg.item);\n    if (item.id) {\n        if (p.set_meta !== false) p.meta[meta.item.id] = meta;\n    }\n    if (item.childs) {\n        for (const [_, v] of Object.entries(item.childs))if (v.id) {\n            const carg = {\n                item: v,\n                is_root: false,\n                root: arg.root || arg.item,\n                parent: {\n                    item: meta.item,\n                    instance_id: arg.parent?.instance_id,\n                    comp: arg.parent?.comp,\n                    root_instances: arg.parent?.root_instances\n                }\n            };\n            if (arg.jsx_prop) carg.jsx_prop = {\n                ...arg.jsx_prop,\n                is_root: false\n            };\n            genMeta(p, carg);\n        }\n    }\n};\n\n},{\"./comp\":\"7i2vZ\",\"./simplify\":\"d8LMr\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"7i2vZ\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"genComp\", ()=>genComp);\nvar _instantiate = require(\"./comp/instantiate\");\nvar _walkProp = require(\"./comp/walk-prop\");\nvar _meta = require(\"./meta\");\nvar _simplify = require(\"./simplify\");\nconst genComp = (p, arg)=>{\n    const { item } = arg;\n    if (item.type === \"item\" && item.component?.id && arg.parent?.item.id) {\n        let item_comp = p.comps[item.component.id];\n        if (p.on?.visit_component) p.on.visit_component(item, arg.root || arg.item);\n        if (!item_comp) return;\n        if (item_comp) {\n            let instances = undefined;\n            if (p.mode === \"page\") {\n                if (!item.component.instances) item.component.instances = {};\n                instances = item.component.instances;\n            } else instances = arg.parent?.root_instances;\n            if (instances) {\n                let instance = instances[item.id];\n                if (!instances[item.id]) {\n                    instances[item.id] = {};\n                    instance = instances[item.id];\n                }\n                (0, _instantiate.instantiate)({\n                    item,\n                    item_comp: item_comp,\n                    ids: instance\n                });\n            }\n            const meta = {\n                item: (0, _simplify.simplifyItemChild)(item),\n                jsx_prop: arg.jsx_prop,\n                parent: {\n                    id: arg.parent.item.id,\n                    comp_id: arg.parent?.comp?.component?.id,\n                    instance_id: arg.parent?.instance_id\n                },\n                instances\n            };\n            if (p.on?.visit) p.on.visit(meta, item, arg.root || arg.item);\n            if (item.id) {\n                if (p.set_meta !== false) p.meta[item.id] = meta;\n            }\n            (0, _walkProp.walkProp)({\n                item,\n                item_comp: item_comp,\n                instance: instances ? instances[item.id] : {},\n                each (name, prop) {\n                    const comp_id = item.component?.id;\n                    if (prop.meta?.type === \"content-element\" && comp_id) {\n                        if (prop.content) {\n                            prop.content.name = name;\n                            (0, _meta.genMeta)({\n                                ...p\n                            }, {\n                                item: prop.content,\n                                root: arg.root || prop.content,\n                                is_root: false,\n                                jsx_prop: {\n                                    is_root: true,\n                                    comp_id,\n                                    name\n                                },\n                                parent: {\n                                    item: meta.item,\n                                    instance_id: item.id,\n                                    comp: item_comp,\n                                    root_instances: instances\n                                }\n                            });\n                        }\n                    }\n                }\n            });\n            for (const child of Object.values(item.childs)){\n                if (child?.name?.startsWith(\"jsx:\")) continue;\n                if (child && Object.keys(child).length > 3) (0, _meta.genMeta)({\n                    ...p,\n                    mode: \"comp\"\n                }, {\n                    item: child,\n                    is_root: false,\n                    root: arg.root || arg.item,\n                    parent: {\n                        item,\n                        instance_id: item.id,\n                        root_instances: instances,\n                        comp: item_comp\n                    }\n                });\n            }\n        }\n    }\n};\n\n},{\"./comp/instantiate\":\"8QXzu\",\"./comp/walk-prop\":\"hTtrx\",\"./meta\":\"g3IOK\",\"./simplify\":\"d8LMr\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"8QXzu\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"instantiate\", ()=>instantiate);\nparcelHelpers.export(exports, \"walkChild\", ()=>walkChild);\nvar _cuid2 = require(\"@paralleldrive/cuid2\");\nvar _webUtils = require(\"web-utils\");\nconst instantiate = (arg)=>{\n    const { item, item_comp, ids } = arg;\n    const newitem = (0, _webUtils.deepClone)(item_comp);\n    walkChild(newitem, ids);\n    if (item.id) newitem.id = item.id;\n    newitem.hidden = item.hidden;\n    if (newitem.component) {\n        if (newitem.component.props && item.component) for (const k of Object.keys(newitem.component.props)){\n            const cprop = item.component.props[k];\n            const nprop = newitem.component.props[k];\n            if (cprop) {\n                nprop.value = cprop.value;\n                nprop.valueBuilt = cprop.valueBuilt;\n                nprop.jsxCalledBy = cprop.jsxCalledBy;\n                nprop.content = cprop.content;\n            }\n        }\n        newitem.component.instances = item.component?.instances;\n        newitem.component.style = item.component?.style;\n    }\n    for (const key of Object.keys(item))delete item[key];\n    for (const [k, v] of Object.entries(newitem))item[k] = v;\n};\nconst walkChild = (item, ids)=>{\n    item.originalId = item.id;\n    if (!ids[item.id]) ids[item.id] = (0, _cuid2.createId)();\n    item.id = ids[item.id];\n    if (item.childs) for (const child of item.childs)walkChild(child, ids);\n};\n\n},{\"@paralleldrive/cuid2\":\"20RGP\",\"web-utils\":\"8vvzC\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"hTtrx\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"walkProp\", ()=>walkProp);\nvar _webUtils = require(\"web-utils\");\nconst walkProp = (arg)=>{\n    const props = Object.entries(arg.item_comp.component?.props || {}).sort((a, b)=>{\n        return a[1].idx - b[1].idx;\n    });\n    for (const [k, v] of props){\n        let prop = (0, _webUtils.deepClone)(v);\n        const props = arg.item.component?.props;\n        if (props && props[k]) {\n            prop.value = props[k].value;\n            prop.valueBuilt = props[k].valueBuilt;\n            if (props[k].content) prop.content = props[k].content;\n        }\n        if (prop) arg.each(k, prop);\n    }\n};\n\n},{\"web-utils\":\"8vvzC\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"d8LMr\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"simplifyItemChild\", ()=>simplifyItemChild);\nparcelHelpers.export(exports, \"simplifyMeta\", ()=>simplifyMeta);\nconst simplifyItemChild = (item)=>{\n    const newitem = {};\n    for (const [k, v] of Object.entries(item))if (k === \"childs\") {\n        newitem.childs = [];\n        if (v && Array.isArray(v)) {\n            for (const child of v)if (child.type === \"item\" && child.component) newitem.childs.push(child);\n            else newitem.childs.push({\n                name: child.name,\n                id: child.id,\n                originalId: child.originalId\n            });\n        }\n    } else newitem[k] = v;\n    return newitem;\n};\nconst simplifyMeta = (allmeta)=>{\n    const smeta = {};\n    for (const [k, meta] of Object.entries(allmeta))smeta[k] = {\n        id: meta.item.id,\n        parent: meta.parent ? {\n            id: meta.parent.id,\n            comp_id: meta.parent.comp_id,\n            instance_id: meta.parent.instance_id\n        } : undefined,\n        comp: meta.item.component && meta.instances ? {\n            id: meta.item.component.id,\n            instances: meta.instances\n        } : undefined\n    };\n    return smeta;\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"hXbWs\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"nav\", ()=>nav);\nparcelHelpers.export(exports, \"extractNavigate\", ()=>extractNavigate);\nvar _idbKeyval = require(\"idb-keyval\");\nconst store = (0, _idbKeyval.createStore)(`prasi-cache`, `prasi-cache-store`);\nconst nav = {\n    timeout: null,\n    store\n};\nconst extractNavigate = (vi, str)=>{\n    const found_nav = [\n        ...findBetween(str, `navigate(`, `)`),\n        ...findBetween(str, `href = `, `;`)\n    ];\n    const page_id = vi.page.cur.id;\n    if (!vi.page.navs[page_id]) vi.page.navs[page_id] = new Set();\n    for (const url of found_nav)vi.page.navs[page_id].add(url);\n    clearTimeout(nav.timeout);\n    nav.timeout = setTimeout(()=>{\n        if (vi.on_nav_loaded) vi.on_nav_loaded({\n            urls: Array.from(vi.page.navs[page_id])\n        });\n    }, 100);\n};\nconst findBetween = (text, opener, closer)=>{\n    let i = 0;\n    let last = 0;\n    const founds = [];\n    while(true){\n        const startIndex = text.indexOf(opener, i);\n        last = i;\n        if (startIndex >= 0) {\n            const char = text[startIndex + opener.length];\n            if (char === '\"' || char === \"'\" || char === \"`\") {\n                const end = text.indexOf(`${char}${closer}`, startIndex + opener.length + 1);\n                const found = text.substring(startIndex + opener.length + 1, end);\n                i = end + 2 + closer.length;\n                founds.push(found);\n            }\n        }\n        if (last === i) break;\n    }\n    return founds;\n};\n\n},{\"idb-keyval\":\"8Atof\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"aigu6\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"loadcomp\", ()=>loadcomp);\nparcelHelpers.export(exports, \"loadComponent\", ()=>loadComponent);\nparcelHelpers.export(exports, \"loadCompSnapshot\", ()=>loadCompSnapshot);\nparcelHelpers.export(exports, \"updateComponentMeta\", ()=>updateComponentMeta);\nvar _cuid2 = require(\"@paralleldrive/cuid2\");\nvar _wasmGzip = require(\"wasm-gzip\");\nvar _initCompLoad = require(\"../../../vi/meta/comp/init-comp-load\");\nvar _meta = require(\"../../../vi/meta/meta\");\nvar _isEditing = require(\"../active/is-editing\");\nvar _assignMitem = require(\"../tree/assign-mitem\");\nvar _build = require(\"../tree/build\");\nvar _pushTree = require(\"../tree/build/push-tree\");\nvar Buffer = require(\"2c077da2988489ba\").Buffer;\nconst loadcomp = {\n    timeout: 0,\n    pending: new Set()\n};\nconst loadComponent = async (p, id_comp, sync)=>{\n    return new Promise((resolve)=>{\n        if (p.comp.list[id_comp]) {\n            resolve(true);\n            return;\n        }\n        loadcomp.pending.add(id_comp);\n        clearTimeout(loadcomp.timeout);\n        loadcomp.timeout = setTimeout(async ()=>{\n            const comps = await p.sync?.comp.load([\n                ...loadcomp.pending\n            ], sync);\n            if (comps) {\n                let result = Object.entries(comps);\n                for (const [id_comp, comp] of result)if (comp && comp.snapshot) await loadCompSnapshot(p, id_comp, comp.snapshot);\n                loadcomp.pending.clear();\n                resolve(result.length > 0);\n            } else resolve(false);\n        }, 150);\n    });\n};\nconst loadCompSnapshot = async (p, comp_id, snapshot)=>{\n    if (p.comp.list[comp_id]) return;\n    const doc = new Y.Doc();\n    Y.applyUpdate(doc, (0, _wasmGzip.decompress)(snapshot));\n    const mitem = doc.getMap(\"map\").get(\"root\");\n    if (mitem) {\n        p.comp.loaded[comp_id] = mitem.toJSON();\n        if (typeof p.comp.list[comp_id]?.on_update === \"function\") doc.off(\"update\", p.comp.list[comp_id].on_update);\n        const updated = await updateComponentMeta(p, doc, comp_id);\n        if (updated) {\n            const { meta, tree } = updated;\n            if (p.comp.list[comp_id]) {\n                p.comp.list[comp_id].meta = meta;\n                p.comp.list[comp_id].tree = tree;\n            } else {\n                p.comp.list[comp_id] = {\n                    comp: {\n                        id: comp_id,\n                        snapshot\n                    },\n                    doc,\n                    meta,\n                    tree,\n                    async on_update (bin, origin) {\n                        if (origin === \"sv_remote\" || origin === \"local\") return;\n                        const res = await p.sync?.yjs.sv_local(\"comp\", comp_id, Buffer.from((0, _wasmGzip.compress)(bin)));\n                        if (res) {\n                            const diff_local = Y.encodeStateAsUpdate(doc, (0, _wasmGzip.decompress)(res.sv));\n                            Y.applyUpdate(doc, (0, _wasmGzip.decompress)(res.diff), \"local\");\n                            await p.sync?.yjs.diff_local(\"comp\", comp_id, Buffer.from((0, _wasmGzip.compress)(diff_local)));\n                            const updated = await updateComponentMeta(p, p.comp.list[comp_id].doc, comp_id);\n                            if (updated) {\n                                p.comp.list[comp_id].meta = updated.meta;\n                                p.comp.list[comp_id].tree = updated.tree;\n                            }\n                            p.comp.loaded[comp_id] = doc.getMap(\"map\").get(\"root\")?.toJSON();\n                            if ((0, _isEditing.isTextEditing)()) return;\n                            (0, _build.treeRebuild)(p);\n                            p.render();\n                        }\n                    }\n                };\n                doc.on(\"update\", p.comp.list[comp_id].on_update);\n            }\n        }\n    }\n};\nconst updateComponentMeta = async (p, doc, comp_id)=>{\n    const mitem = doc.getMap(\"map\").get(\"root\");\n    if (!mitem) return;\n    const meta = {};\n    const tree = [];\n    const item = mitem.toJSON();\n    p.comp.loaded[comp_id] = item;\n    await (0, _initCompLoad.initLoadComp)({\n        comps: p.comp.loaded,\n        meta,\n        set_meta: false,\n        mode: \"comp\"\n    }, item, {\n        load: async (comp_ids)=>{\n            const ids = comp_ids.filter((id)=>!p.comp.loaded[id]);\n            const comps = await p.sync?.comp.load(ids, true);\n            if (comps) {\n                let result = Object.entries(comps);\n                for (const [id_comp, comp] of result)if (comp && comp.snapshot && !p.comp.list[id_comp]) await loadCompSnapshot(p, id_comp, comp.snapshot);\n            }\n        }\n    });\n    (0, _meta.genMeta)({\n        comps: p.comp.loaded,\n        meta,\n        mode: \"comp\",\n        on: {\n            async visit (m) {\n                (0, _pushTree.pushTreeNode)(p, m, meta, tree);\n                (0, _assignMitem.assignMitem)({\n                    m,\n                    root: item,\n                    mitem,\n                    meta,\n                    new_prop_jsx (meta, mprops, prop_name, prop_val) {\n                        transact.list.push(()=>{\n                            const map = new Y.Map();\n                            if (prop_val.content) prop_val.content.id = (0, _cuid2.createId)();\n                            syncronize(map, prop_val);\n                            mprops.set(prop_name, map);\n                        });\n                    }\n                });\n            }\n        },\n        note: \"load-comp-scan-meta\"\n    }, {\n        item,\n        ignore_first_component: true\n    });\n    if (transact.list.length > 0) p.page.doc?.transact(()=>{\n        for (const fn of transact.list)fn();\n    });\n    p.comp.loaded[comp_id] = item;\n    return {\n        meta,\n        tree,\n        item\n    };\n};\nconst transact = {\n    list: []\n};\n\n},{\"2c077da2988489ba\":\"1XYH5\",\"@paralleldrive/cuid2\":\"20RGP\",\"wasm-gzip\":\"lSV23\",\"../../../vi/meta/comp/init-comp-load\":\"61w0n\",\"../../../vi/meta/meta\":\"g3IOK\",\"../active/is-editing\":\"dhggL\",\"../tree/assign-mitem\":\"3QMWf\",\"../tree/build\":\"dNllk\",\"../tree/build/push-tree\":\"GvsT4\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"dhggL\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"isTextEditing\", ()=>isTextEditing);\nconst isTextEditing = ()=>{\n    const el = document.activeElement;\n    if (el && el.attributes.getNamedItem(\"contenteditable\")) return true;\n    return false;\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"3QMWf\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"assignMitem\", ()=>assignMitem);\nvar _cuid2 = require(\"@paralleldrive/cuid2\");\nconst assignMitem = (arg)=>{\n    const { m, root, mitem, meta } = arg;\n    if (m.jsx_prop && m.parent?.instance_id) {\n        const instance_meta = meta[m.parent?.instance_id];\n        if (instance_meta) {\n            if (m.jsx_prop.is_root) {\n                const prop = instance_meta.item.component?.props[m.jsx_prop.name];\n                if (prop) prop.content = m.item;\n            }\n        }\n    }\n    if (m.parent) {\n        if (m.parent.id === \"root\") {\n            if (m.item.id === root.id) m.mitem = mitem;\n        } else {\n            let parent = meta[m.parent.id];\n            if (!parent.mitem && m.parent.instance_id && meta[m.parent.instance_id]) parent = meta[m.parent.instance_id];\n            if (parent.mitem) {\n                if (m.jsx_prop?.is_root === true) {\n                    const mprops = parent.mitem.get(\"component\")?.get(\"props\");\n                    if (mprops) {\n                        const mprop = mprops.get(m.jsx_prop.name);\n                        if (mprop) {\n                            const mcontent = mprop.get(\"content\");\n                            if (!mcontent) {\n                                const map = new Y.Map();\n                                syncronize(map, {\n                                    id: (0, _cuid2.createId)(),\n                                    name: m.jsx_prop.name,\n                                    type: \"item\",\n                                    dim: {\n                                        w: \"full\",\n                                        h: \"full\"\n                                    },\n                                    childs: [],\n                                    adv: {\n                                        css: \"\"\n                                    }\n                                });\n                                mprop.set(\"content\", map);\n                            }\n                            if (mcontent) m.mitem = mcontent;\n                        }\n                    }\n                } else parent.mitem.get(\"childs\")?.forEach((child)=>{\n                    const id = child && child.get && child.get(\"id\");\n                    if (typeof id === \"string\" && id === m.item.id) m.mitem = child;\n                });\n            }\n            if (m.item.component?.props) for (const [prop_name, v] of Object.entries(m.item.component.props)){\n                let mprop = m.mitem?.get(\"component\")?.get(\"props\")?.get(prop_name);\n                if (!mprop) {\n                    const mprops = m.mitem?.get(\"component\")?.get(\"props\");\n                    if (mprops) arg.new_prop_jsx(m, mprops, prop_name, v);\n                }\n                if (v.content) {\n                    if (mprop) {\n                        const pmeta = meta[v.content.id];\n                        if (pmeta) pmeta.mitem = mprop.get(\"content\");\n                    } else {\n                        const mprops = m.mitem?.get(\"component\")?.get(\"props\");\n                        if (mprops) arg.new_prop_jsx(m, mprops, prop_name, v);\n                    }\n                }\n            }\n        }\n    }\n};\n\n},{\"@paralleldrive/cuid2\":\"20RGP\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"GvsT4\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"pushTreeNode\", ()=>pushTreeNode);\nconst pushTreeNode = (p, meta, metas, tree)=>{\n    if (meta.parent?.id === \"root\") p.page.doc?.getMap(\"map\").get(\"root\")?.get(\"childs\")?.forEach((mitem)=>{\n        if (mitem.get(\"id\") === meta.item.id) meta.mitem = mitem;\n    });\n    else {\n        const parent = metas[meta.parent?.id || \"\"];\n        if (parent && parent.mitem) parent.mitem.get(\"childs\")?.forEach((mitem)=>{\n            if (mitem && mitem.get && mitem.get(\"id\") === meta.item.id) meta.mitem = mitem;\n        });\n    }\n    if (!meta.item || !meta.item.id) {\n        console.warn(\"Emptry Tree Item \", meta);\n        return null;\n    }\n    if (tree.find((t)=>t.id === meta.item.id)) console.warn(\"Double Tree Item: \", meta.item.id, meta.item.name);\n    else {\n        if (!meta.parent?.comp_id) tree.push({\n            id: meta.item.id,\n            parent: meta.parent?.id || \"root\",\n            text: meta.item.name,\n            data: meta\n        });\n        else if (meta.jsx_prop) {\n            if (meta.jsx_prop.is_root) {\n                if (meta.jsx_prop.name !== \"child\") tree.push({\n                    id: meta.item.id,\n                    parent: meta.parent?.instance_id || \"root\",\n                    text: meta.jsx_prop.name,\n                    data: meta\n                });\n            } else {\n                if (meta.jsx_prop.name === \"child\" && meta.parent.instance_id) {\n                    const comp_meta = metas[meta.parent.instance_id];\n                    const child_id = comp_meta.item.component?.props?.child?.content?.id;\n                    if (child_id && comp_meta.mitem) {\n                        const child_meta = metas[child_id];\n                        if (child_meta.item.childs.find((e)=>meta.item.id === e.id)) tree.push({\n                            id: meta.item.id,\n                            parent: meta.parent?.instance_id || \"root\",\n                            text: meta.item.name,\n                            data: meta\n                        });\n                    }\n                }\n                if (meta.parent.id !== meta.parent.instance_id) tree.push({\n                    id: meta.item.id,\n                    parent: meta.parent?.id || \"root\",\n                    text: meta.item.name,\n                    data: meta\n                });\n            }\n        }\n    }\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"hZY7I\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"AbsolutePosition\", ()=>AbsolutePosition);\nparcelHelpers.export(exports, \"AbstractConnector\", ()=>AbstractConnector);\nparcelHelpers.export(exports, \"AbstractStruct\", ()=>AbstractStruct);\nparcelHelpers.export(exports, \"AbstractType\", ()=>AbstractType);\nparcelHelpers.export(exports, \"Array\", ()=>YArray);\nparcelHelpers.export(exports, \"ContentAny\", ()=>ContentAny);\nparcelHelpers.export(exports, \"ContentBinary\", ()=>ContentBinary);\nparcelHelpers.export(exports, \"ContentDeleted\", ()=>ContentDeleted);\nparcelHelpers.export(exports, \"ContentDoc\", ()=>ContentDoc);\nparcelHelpers.export(exports, \"ContentEmbed\", ()=>ContentEmbed);\nparcelHelpers.export(exports, \"ContentFormat\", ()=>ContentFormat);\nparcelHelpers.export(exports, \"ContentJSON\", ()=>ContentJSON);\nparcelHelpers.export(exports, \"ContentString\", ()=>ContentString);\nparcelHelpers.export(exports, \"ContentType\", ()=>ContentType);\nparcelHelpers.export(exports, \"Doc\", ()=>Doc);\nparcelHelpers.export(exports, \"GC\", ()=>GC);\nparcelHelpers.export(exports, \"ID\", ()=>ID);\nparcelHelpers.export(exports, \"Item\", ()=>Item);\nparcelHelpers.export(exports, \"Map\", ()=>YMap);\nparcelHelpers.export(exports, \"PermanentUserData\", ()=>PermanentUserData);\nparcelHelpers.export(exports, \"RelativePosition\", ()=>RelativePosition);\nparcelHelpers.export(exports, \"Skip\", ()=>Skip);\nparcelHelpers.export(exports, \"Snapshot\", ()=>Snapshot);\nparcelHelpers.export(exports, \"Text\", ()=>YText);\nparcelHelpers.export(exports, \"Transaction\", ()=>Transaction);\nparcelHelpers.export(exports, \"UndoManager\", ()=>UndoManager);\nparcelHelpers.export(exports, \"UpdateDecoderV1\", ()=>UpdateDecoderV1);\nparcelHelpers.export(exports, \"UpdateDecoderV2\", ()=>UpdateDecoderV2);\nparcelHelpers.export(exports, \"UpdateEncoderV1\", ()=>UpdateEncoderV1);\nparcelHelpers.export(exports, \"UpdateEncoderV2\", ()=>UpdateEncoderV2);\nparcelHelpers.export(exports, \"XmlElement\", ()=>YXmlElement);\nparcelHelpers.export(exports, \"XmlFragment\", ()=>YXmlFragment);\nparcelHelpers.export(exports, \"XmlHook\", ()=>YXmlHook);\nparcelHelpers.export(exports, \"XmlText\", ()=>YXmlText);\nparcelHelpers.export(exports, \"YArrayEvent\", ()=>YArrayEvent);\nparcelHelpers.export(exports, \"YEvent\", ()=>YEvent);\nparcelHelpers.export(exports, \"YMapEvent\", ()=>YMapEvent);\nparcelHelpers.export(exports, \"YTextEvent\", ()=>YTextEvent);\nparcelHelpers.export(exports, \"YXmlEvent\", ()=>YXmlEvent);\nparcelHelpers.export(exports, \"applyUpdate\", ()=>applyUpdate);\nparcelHelpers.export(exports, \"applyUpdateV2\", ()=>applyUpdateV2);\nparcelHelpers.export(exports, \"cleanupYTextFormatting\", ()=>cleanupYTextFormatting);\nparcelHelpers.export(exports, \"compareIDs\", ()=>compareIDs);\nparcelHelpers.export(exports, \"compareRelativePositions\", ()=>compareRelativePositions);\nparcelHelpers.export(exports, \"convertUpdateFormatV1ToV2\", ()=>convertUpdateFormatV1ToV2);\nparcelHelpers.export(exports, \"convertUpdateFormatV2ToV1\", ()=>convertUpdateFormatV2ToV1);\nparcelHelpers.export(exports, \"createAbsolutePositionFromRelativePosition\", ()=>createAbsolutePositionFromRelativePosition);\nparcelHelpers.export(exports, \"createDeleteSet\", ()=>createDeleteSet);\nparcelHelpers.export(exports, \"createDeleteSetFromStructStore\", ()=>createDeleteSetFromStructStore);\nparcelHelpers.export(exports, \"createDocFromSnapshot\", ()=>createDocFromSnapshot);\nparcelHelpers.export(exports, \"createID\", ()=>createID);\nparcelHelpers.export(exports, \"createRelativePositionFromJSON\", ()=>createRelativePositionFromJSON);\nparcelHelpers.export(exports, \"createRelativePositionFromTypeIndex\", ()=>createRelativePositionFromTypeIndex);\nparcelHelpers.export(exports, \"createSnapshot\", ()=>createSnapshot);\nparcelHelpers.export(exports, \"decodeRelativePosition\", ()=>decodeRelativePosition);\nparcelHelpers.export(exports, \"decodeSnapshot\", ()=>decodeSnapshot);\nparcelHelpers.export(exports, \"decodeSnapshotV2\", ()=>decodeSnapshotV2);\nparcelHelpers.export(exports, \"decodeStateVector\", ()=>decodeStateVector);\nparcelHelpers.export(exports, \"decodeUpdate\", ()=>decodeUpdate);\nparcelHelpers.export(exports, \"decodeUpdateV2\", ()=>decodeUpdateV2);\nparcelHelpers.export(exports, \"diffUpdate\", ()=>diffUpdate);\nparcelHelpers.export(exports, \"diffUpdateV2\", ()=>diffUpdateV2);\nparcelHelpers.export(exports, \"emptySnapshot\", ()=>emptySnapshot);\nparcelHelpers.export(exports, \"encodeRelativePosition\", ()=>encodeRelativePosition);\nparcelHelpers.export(exports, \"encodeSnapshot\", ()=>encodeSnapshot);\nparcelHelpers.export(exports, \"encodeSnapshotV2\", ()=>encodeSnapshotV2);\nparcelHelpers.export(exports, \"encodeStateAsUpdate\", ()=>encodeStateAsUpdate);\nparcelHelpers.export(exports, \"encodeStateAsUpdateV2\", ()=>encodeStateAsUpdateV2);\nparcelHelpers.export(exports, \"encodeStateVector\", ()=>encodeStateVector);\nparcelHelpers.export(exports, \"encodeStateVectorFromUpdate\", ()=>encodeStateVectorFromUpdate);\nparcelHelpers.export(exports, \"encodeStateVectorFromUpdateV2\", ()=>encodeStateVectorFromUpdateV2);\nparcelHelpers.export(exports, \"equalDeleteSets\", ()=>equalDeleteSets);\nparcelHelpers.export(exports, \"equalSnapshots\", ()=>equalSnapshots);\nparcelHelpers.export(exports, \"findIndexSS\", ()=>findIndexSS);\nparcelHelpers.export(exports, \"findRootTypeKey\", ()=>findRootTypeKey);\nparcelHelpers.export(exports, \"getItem\", ()=>getItem);\nparcelHelpers.export(exports, \"getState\", ()=>getState);\nparcelHelpers.export(exports, \"getTypeChildren\", ()=>getTypeChildren);\nparcelHelpers.export(exports, \"isDeleted\", ()=>isDeleted);\nparcelHelpers.export(exports, \"isParentOf\", ()=>isParentOf);\nparcelHelpers.export(exports, \"iterateDeletedStructs\", ()=>iterateDeletedStructs);\nparcelHelpers.export(exports, \"logType\", ()=>logType);\nparcelHelpers.export(exports, \"logUpdate\", ()=>logUpdate);\nparcelHelpers.export(exports, \"logUpdateV2\", ()=>logUpdateV2);\nparcelHelpers.export(exports, \"mergeUpdates\", ()=>mergeUpdates);\nparcelHelpers.export(exports, \"mergeUpdatesV2\", ()=>mergeUpdatesV2);\nparcelHelpers.export(exports, \"obfuscateUpdate\", ()=>obfuscateUpdate);\nparcelHelpers.export(exports, \"obfuscateUpdateV2\", ()=>obfuscateUpdateV2);\nparcelHelpers.export(exports, \"parseUpdateMeta\", ()=>parseUpdateMeta);\nparcelHelpers.export(exports, \"parseUpdateMetaV2\", ()=>parseUpdateMetaV2);\nparcelHelpers.export(exports, \"readUpdate\", ()=>readUpdate);\nparcelHelpers.export(exports, \"readUpdateV2\", ()=>readUpdateV2);\nparcelHelpers.export(exports, \"relativePositionToJSON\", ()=>relativePositionToJSON);\nparcelHelpers.export(exports, \"snapshot\", ()=>snapshot);\nparcelHelpers.export(exports, \"snapshotContainsUpdate\", ()=>snapshotContainsUpdate);\nparcelHelpers.export(exports, \"transact\", ()=>transact);\nparcelHelpers.export(exports, \"tryGc\", ()=>tryGc);\nparcelHelpers.export(exports, \"typeListToArraySnapshot\", ()=>typeListToArraySnapshot);\nparcelHelpers.export(exports, \"typeMapGetAllSnapshot\", ()=>typeMapGetAllSnapshot);\nparcelHelpers.export(exports, \"typeMapGetSnapshot\", ()=>typeMapGetSnapshot);\nvar _observable = require(\"lib0/observable\");\nvar _array = require(\"lib0/array\");\nvar _math = require(\"lib0/math\");\nvar _map = require(\"lib0/map\");\nvar _encoding = require(\"lib0/encoding\");\nvar _decoding = require(\"lib0/decoding\");\nvar _random = require(\"lib0/random\");\nvar _promise = require(\"lib0/promise\");\nvar _buffer = require(\"lib0/buffer\");\nvar _error = require(\"lib0/error\");\nvar _binary = require(\"lib0/binary\");\nvar _function = require(\"lib0/function\");\nvar _set = require(\"lib0/set\");\nvar _logging = require(\"lib0/logging\");\nvar _time = require(\"lib0/time\");\nvar _string = require(\"lib0/string\");\nvar _iterator = require(\"lib0/iterator\");\nvar _object = require(\"lib0/object\");\nvar global = arguments[3];\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {Observable<any>}\n */ class AbstractConnector extends (0, _observable.Observable) {\n    /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */ constructor(ydoc, awareness){\n        super();\n        this.doc = ydoc;\n        this.awareness = awareness;\n    }\n}\nclass DeleteItem {\n    /**\n   * @param {number} clock\n   * @param {number} len\n   */ constructor(clock, len){\n        /**\n     * @type {number}\n     */ this.clock = clock;\n        /**\n     * @type {number}\n     */ this.len = len;\n    }\n}\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */ class DeleteSet {\n    constructor(){\n        /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */ this.clients = new Map();\n    }\n}\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */ const iterateDeletedStructs = (transaction, ds, f)=>ds.clients.forEach((deletes, clientid)=>{\n        const structs = /** @type {Array<GC|Item>} */ transaction.doc.store.clients.get(clientid);\n        for(let i = 0; i < deletes.length; i++){\n            const del = deletes[i];\n            iterateStructs(transaction, structs, del.clock, del.len, f);\n        }\n    });\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */ const findIndexDS = (dis, clock)=>{\n    let left = 0;\n    let right = dis.length - 1;\n    while(left <= right){\n        const midindex = _math.floor((left + right) / 2);\n        const mid = dis[midindex];\n        const midclock = mid.clock;\n        if (midclock <= clock) {\n            if (clock < midclock + mid.len) return midindex;\n            left = midindex + 1;\n        } else right = midindex - 1;\n    }\n    return null;\n};\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */ const isDeleted = (ds, id)=>{\n    const dis = ds.clients.get(id.client);\n    return dis !== undefined && findIndexDS(dis, id.clock) !== null;\n};\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */ const sortAndMergeDeleteSet = (ds)=>{\n    ds.clients.forEach((dels)=>{\n        dels.sort((a, b)=>a.clock - b.clock);\n        // merge items without filtering or splicing the array\n        // i is the current pointer\n        // j refers to the current insert position for the pointed item\n        // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n        let i, j;\n        for(i = 1, j = 1; i < dels.length; i++){\n            const left = dels[j - 1];\n            const right = dels[i];\n            if (left.clock + left.len >= right.clock) left.len = _math.max(left.len, right.clock + right.len - left.clock);\n            else {\n                if (j < i) dels[j] = right;\n                j++;\n            }\n        }\n        dels.length = j;\n    });\n};\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */ const mergeDeleteSets = (dss)=>{\n    const merged = new DeleteSet();\n    for(let dssI = 0; dssI < dss.length; dssI++)dss[dssI].clients.forEach((delsLeft, client)=>{\n        if (!merged.clients.has(client)) {\n            // Write all missing keys from current ds and all following.\n            // If merged already contains `client` current ds has already been added.\n            /**\n         * @type {Array<DeleteItem>}\n         */ const dels = delsLeft.slice();\n            for(let i = dssI + 1; i < dss.length; i++)_array.appendTo(dels, dss[i].clients.get(client) || []);\n            merged.clients.set(client, dels);\n        }\n    });\n    sortAndMergeDeleteSet(merged);\n    return merged;\n};\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */ const addToDeleteSet = (ds, client, clock, length)=>{\n    _map.setIfUndefined(ds.clients, client, ()=>/** @type {Array<DeleteItem>} */ []).push(new DeleteItem(clock, length));\n};\nconst createDeleteSet = ()=>new DeleteSet();\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */ const createDeleteSetFromStructStore = (ss)=>{\n    const ds = createDeleteSet();\n    ss.clients.forEach((structs, client)=>{\n        /**\n     * @type {Array<DeleteItem>}\n     */ const dsitems = [];\n        for(let i = 0; i < structs.length; i++){\n            const struct = structs[i];\n            if (struct.deleted) {\n                const clock = struct.id.clock;\n                let len = struct.length;\n                if (i + 1 < structs.length) for(let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1])len += next.length;\n                dsitems.push(new DeleteItem(clock, len));\n            }\n        }\n        if (dsitems.length > 0) ds.clients.set(client, dsitems);\n    });\n    return ds;\n};\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */ const writeDeleteSet = (encoder, ds)=>{\n    _encoding.writeVarUint(encoder.restEncoder, ds.clients.size);\n    // Ensure that the delete set is written in a deterministic order\n    _array.from(ds.clients.entries()).sort((a, b)=>b[0] - a[0]).forEach(([client, dsitems])=>{\n        encoder.resetDsCurVal();\n        _encoding.writeVarUint(encoder.restEncoder, client);\n        const len = dsitems.length;\n        _encoding.writeVarUint(encoder.restEncoder, len);\n        for(let i = 0; i < len; i++){\n            const item = dsitems[i];\n            encoder.writeDsClock(item.clock);\n            encoder.writeDsLen(item.len);\n        }\n    });\n};\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */ const readDeleteSet = (decoder)=>{\n    const ds = new DeleteSet();\n    const numClients = _decoding.readVarUint(decoder.restDecoder);\n    for(let i = 0; i < numClients; i++){\n        decoder.resetDsCurVal();\n        const client = _decoding.readVarUint(decoder.restDecoder);\n        const numberOfDeletes = _decoding.readVarUint(decoder.restDecoder);\n        if (numberOfDeletes > 0) {\n            const dsField = _map.setIfUndefined(ds.clients, client, ()=>/** @type {Array<DeleteItem>} */ []);\n            for(let i = 0; i < numberOfDeletes; i++)dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()));\n        }\n    }\n    return ds;\n};\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */ /**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */ const readAndApplyDeleteSet = (decoder, transaction, store)=>{\n    const unappliedDS = new DeleteSet();\n    const numClients = _decoding.readVarUint(decoder.restDecoder);\n    for(let i = 0; i < numClients; i++){\n        decoder.resetDsCurVal();\n        const client = _decoding.readVarUint(decoder.restDecoder);\n        const numberOfDeletes = _decoding.readVarUint(decoder.restDecoder);\n        const structs = store.clients.get(client) || [];\n        const state = getState(store, client);\n        for(let i = 0; i < numberOfDeletes; i++){\n            const clock = decoder.readDsClock();\n            const clockEnd = clock + decoder.readDsLen();\n            if (clock < state) {\n                if (state < clockEnd) addToDeleteSet(unappliedDS, client, state, clockEnd - state);\n                let index = findIndexSS(structs, clock);\n                /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */ // @ts-ignore\n                let struct = structs[index];\n                // split the first item if necessary\n                if (!struct.deleted && struct.id.clock < clock) {\n                    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n                    index++; // increase we now want to use the next struct\n                }\n                while(index < structs.length){\n                    // @ts-ignore\n                    struct = structs[index++];\n                    if (struct.id.clock < clockEnd) {\n                        if (!struct.deleted) {\n                            if (clockEnd < struct.id.clock + struct.length) structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock));\n                            struct.delete(transaction);\n                        }\n                    } else break;\n                }\n            } else addToDeleteSet(unappliedDS, client, clock, clockEnd - clock);\n        }\n    }\n    if (unappliedDS.clients.size > 0) {\n        const ds = new UpdateEncoderV2();\n        _encoding.writeVarUint(ds.restEncoder, 0); // encode 0 structs\n        writeDeleteSet(ds, unappliedDS);\n        return ds.toUint8Array();\n    }\n    return null;\n};\n/**\n * @param {DeleteSet} ds1\n * @param {DeleteSet} ds2\n */ const equalDeleteSets = (ds1, ds2)=>{\n    if (ds1.clients.size !== ds2.clients.size) return false;\n    for (const [client, deleteItems1] of ds1.clients.entries()){\n        const deleteItems2 = /** @type {Array<import('../internals.js').DeleteItem>} */ ds2.clients.get(client);\n        if (deleteItems2 === undefined || deleteItems1.length !== deleteItems2.length) return false;\n        for(let i = 0; i < deleteItems1.length; i++){\n            const di1 = deleteItems1[i];\n            const di2 = deleteItems2[i];\n            if (di1.clock !== di2.clock || di1.len !== di2.len) return false;\n        }\n    }\n    return true;\n};\n/**\n * @module Y\n */ const generateNewClientId = _random.uint32;\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {string | null} [DocOpts.collectionid] Associate this document with a collection. This only plays a role if your provider has a concept of collection.\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n * @property {boolean} [DocOpts.shouldLoad] Whether the document should be synced by the provider now. This is toggled to true when you call ydoc.load()\n */ /**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */ class Doc extends (0, _observable.Observable) {\n    /**\n   * @param {DocOpts} opts configuration\n   */ constructor({ guid = _random.uuidv4(), collectionid = null, gc = true, gcFilter = ()=>true, meta = null, autoLoad = false, shouldLoad = true } = {}){\n        super();\n        this.gc = gc;\n        this.gcFilter = gcFilter;\n        this.clientID = generateNewClientId();\n        this.guid = guid;\n        this.collectionid = collectionid;\n        /**\n     * @type {Map<string, AbstractType<YEvent<any>>>}\n     */ this.share = new Map();\n        this.store = new StructStore();\n        /**\n     * @type {Transaction | null}\n     */ this._transaction = null;\n        /**\n     * @type {Array<Transaction>}\n     */ this._transactionCleanups = [];\n        /**\n     * @type {Set<Doc>}\n     */ this.subdocs = new Set();\n        /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */ this._item = null;\n        this.shouldLoad = shouldLoad;\n        this.autoLoad = autoLoad;\n        this.meta = meta;\n        /**\n     * This is set to true when the persistence provider loaded the document from the database or when the `sync` event fires.\n     * Note that not all providers implement this feature. Provider authors are encouraged to fire the `load` event when the doc content is loaded from the database.\n     *\n     * @type {boolean}\n     */ this.isLoaded = false;\n        /**\n     * This is set to true when the connection provider has successfully synced with a backend.\n     * Note that when using peer-to-peer providers this event may not provide very useful.\n     * Also note that not all providers implement this feature. Provider authors are encouraged to fire\n     * the `sync` event when the doc has been synced (with `true` as a parameter) or if connection is\n     * lost (with false as a parameter).\n     */ this.isSynced = false;\n        /**\n     * Promise that resolves once the document has been loaded from a presistence provider.\n     */ this.whenLoaded = _promise.create((resolve)=>{\n            this.on(\"load\", ()=>{\n                this.isLoaded = true;\n                resolve(this);\n            });\n        });\n        const provideSyncedPromise = ()=>_promise.create((resolve)=>{\n                /**\n       * @param {boolean} isSynced\n       */ const eventHandler = (isSynced)=>{\n                    if (isSynced === undefined || isSynced === true) {\n                        this.off(\"sync\", eventHandler);\n                        resolve();\n                    }\n                };\n                this.on(\"sync\", eventHandler);\n            });\n        this.on(\"sync\", (isSynced)=>{\n            if (isSynced === false && this.isSynced) this.whenSynced = provideSyncedPromise();\n            this.isSynced = isSynced === undefined || isSynced === true;\n            if (this.isSynced && !this.isLoaded) this.emit(\"load\", []);\n        });\n        /**\n     * Promise that resolves once the document has been synced with a backend.\n     * This promise is recreated when the connection is lost.\n     * Note the documentation about the `isSynced` property.\n     */ this.whenSynced = provideSyncedPromise();\n    }\n    /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */ load() {\n        const item = this._item;\n        if (item !== null && !this.shouldLoad) transact(/** @type {any} */ item.parent.doc, (transaction)=>{\n            transaction.subdocsLoaded.add(this);\n        }, null, true);\n        this.shouldLoad = true;\n    }\n    getSubdocs() {\n        return this.subdocs;\n    }\n    getSubdocGuids() {\n        return new Set(_array.from(this.subdocs).map((doc)=>doc.guid));\n    }\n    /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @template T\n   * @param {function(Transaction):T} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   * @return T\n   *\n   * @public\n   */ transact(f, origin = null) {\n        return transact(this, f, origin);\n    }\n    /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */ get(name, TypeConstructor = AbstractType) {\n        const type = _map.setIfUndefined(this.share, name, ()=>{\n            // @ts-ignore\n            const t = new TypeConstructor();\n            t._integrate(this, null);\n            return t;\n        });\n        const Constr = type.constructor;\n        if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n            if (Constr === AbstractType) {\n                // @ts-ignore\n                const t = new TypeConstructor();\n                t._map = type._map;\n                type._map.forEach(/** @param {Item?} n */ (n)=>{\n                    for(; n !== null; n = n.left)// @ts-ignore\n                    n.parent = t;\n                });\n                t._start = type._start;\n                for(let n = t._start; n !== null; n = n.right)n.parent = t;\n                t._length = type._length;\n                this.share.set(name, t);\n                t._integrate(this, null);\n                return t;\n            } else throw new Error(`Type with the name ${name} has already been defined with a different constructor`);\n        }\n        return type;\n    }\n    /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */ getArray(name = \"\") {\n        // @ts-ignore\n        return this.get(name, YArray);\n    }\n    /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */ getText(name = \"\") {\n        // @ts-ignore\n        return this.get(name, YText);\n    }\n    /**\n   * @template T\n   * @param {string} [name]\n   * @return {YMap<T>}\n   *\n   * @public\n   */ getMap(name = \"\") {\n        // @ts-ignore\n        return this.get(name, YMap);\n    }\n    /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */ getXmlFragment(name = \"\") {\n        // @ts-ignore\n        return this.get(name, YXmlFragment);\n    }\n    /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */ toJSON() {\n        /**\n     * @type {Object<string, any>}\n     */ const doc = {};\n        this.share.forEach((value, key)=>{\n            doc[key] = value.toJSON();\n        });\n        return doc;\n    }\n    /**\n   * Emit `destroy` event and unregister all event handlers.\n   */ destroy() {\n        _array.from(this.subdocs).forEach((subdoc)=>subdoc.destroy());\n        const item = this._item;\n        if (item !== null) {\n            this._item = null;\n            const content = /** @type {ContentDoc} */ item.content;\n            content.doc = new Doc({\n                guid: this.guid,\n                ...content.opts,\n                shouldLoad: false\n            });\n            content.doc._item = item;\n            transact(/** @type {any} */ item.parent.doc, (transaction)=>{\n                const doc = content.doc;\n                if (!item.deleted) transaction.subdocsAdded.add(doc);\n                transaction.subdocsRemoved.add(this);\n            }, null, true);\n        }\n        this.emit(\"destroyed\", [\n            true\n        ]);\n        this.emit(\"destroy\", [\n            this\n        ]);\n        super.destroy();\n    }\n    /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */ on(eventName, f) {\n        super.on(eventName, f);\n    }\n    /**\n   * @param {string} eventName\n   * @param {function} f\n   */ off(eventName, f) {\n        super.off(eventName, f);\n    }\n}\nclass DSDecoderV1 {\n    /**\n   * @param {decoding.Decoder} decoder\n   */ constructor(decoder){\n        this.restDecoder = decoder;\n    }\n    resetDsCurVal() {\n    // nop\n    }\n    /**\n   * @return {number}\n   */ readDsClock() {\n        return _decoding.readVarUint(this.restDecoder);\n    }\n    /**\n   * @return {number}\n   */ readDsLen() {\n        return _decoding.readVarUint(this.restDecoder);\n    }\n}\nclass UpdateDecoderV1 extends DSDecoderV1 {\n    /**\n   * @return {ID}\n   */ readLeftID() {\n        return createID(_decoding.readVarUint(this.restDecoder), _decoding.readVarUint(this.restDecoder));\n    }\n    /**\n   * @return {ID}\n   */ readRightID() {\n        return createID(_decoding.readVarUint(this.restDecoder), _decoding.readVarUint(this.restDecoder));\n    }\n    /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */ readClient() {\n        return _decoding.readVarUint(this.restDecoder);\n    }\n    /**\n   * @return {number} info An unsigned 8-bit integer\n   */ readInfo() {\n        return _decoding.readUint8(this.restDecoder);\n    }\n    /**\n   * @return {string}\n   */ readString() {\n        return _decoding.readVarString(this.restDecoder);\n    }\n    /**\n   * @return {boolean} isKey\n   */ readParentInfo() {\n        return _decoding.readVarUint(this.restDecoder) === 1;\n    }\n    /**\n   * @return {number} info An unsigned 8-bit integer\n   */ readTypeRef() {\n        return _decoding.readVarUint(this.restDecoder);\n    }\n    /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */ readLen() {\n        return _decoding.readVarUint(this.restDecoder);\n    }\n    /**\n   * @return {any}\n   */ readAny() {\n        return _decoding.readAny(this.restDecoder);\n    }\n    /**\n   * @return {Uint8Array}\n   */ readBuf() {\n        return _buffer.copyUint8Array(_decoding.readVarUint8Array(this.restDecoder));\n    }\n    /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */ readJSON() {\n        return JSON.parse(_decoding.readVarString(this.restDecoder));\n    }\n    /**\n   * @return {string}\n   */ readKey() {\n        return _decoding.readVarString(this.restDecoder);\n    }\n}\nclass DSDecoderV2 {\n    /**\n   * @param {decoding.Decoder} decoder\n   */ constructor(decoder){\n        /**\n     * @private\n     */ this.dsCurrVal = 0;\n        this.restDecoder = decoder;\n    }\n    resetDsCurVal() {\n        this.dsCurrVal = 0;\n    }\n    /**\n   * @return {number}\n   */ readDsClock() {\n        this.dsCurrVal += _decoding.readVarUint(this.restDecoder);\n        return this.dsCurrVal;\n    }\n    /**\n   * @return {number}\n   */ readDsLen() {\n        const diff = _decoding.readVarUint(this.restDecoder) + 1;\n        this.dsCurrVal += diff;\n        return diff;\n    }\n}\nclass UpdateDecoderV2 extends DSDecoderV2 {\n    /**\n   * @param {decoding.Decoder} decoder\n   */ constructor(decoder){\n        super(decoder);\n        /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */ this.keys = [];\n        _decoding.readVarUint(decoder); // read feature flag - currently unused\n        this.keyClockDecoder = new _decoding.IntDiffOptRleDecoder(_decoding.readVarUint8Array(decoder));\n        this.clientDecoder = new _decoding.UintOptRleDecoder(_decoding.readVarUint8Array(decoder));\n        this.leftClockDecoder = new _decoding.IntDiffOptRleDecoder(_decoding.readVarUint8Array(decoder));\n        this.rightClockDecoder = new _decoding.IntDiffOptRleDecoder(_decoding.readVarUint8Array(decoder));\n        this.infoDecoder = new _decoding.RleDecoder(_decoding.readVarUint8Array(decoder), _decoding.readUint8);\n        this.stringDecoder = new _decoding.StringDecoder(_decoding.readVarUint8Array(decoder));\n        this.parentInfoDecoder = new _decoding.RleDecoder(_decoding.readVarUint8Array(decoder), _decoding.readUint8);\n        this.typeRefDecoder = new _decoding.UintOptRleDecoder(_decoding.readVarUint8Array(decoder));\n        this.lenDecoder = new _decoding.UintOptRleDecoder(_decoding.readVarUint8Array(decoder));\n    }\n    /**\n   * @return {ID}\n   */ readLeftID() {\n        return new ID(this.clientDecoder.read(), this.leftClockDecoder.read());\n    }\n    /**\n   * @return {ID}\n   */ readRightID() {\n        return new ID(this.clientDecoder.read(), this.rightClockDecoder.read());\n    }\n    /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */ readClient() {\n        return this.clientDecoder.read();\n    }\n    /**\n   * @return {number} info An unsigned 8-bit integer\n   */ readInfo() {\n        return /** @type {number} */ this.infoDecoder.read();\n    }\n    /**\n   * @return {string}\n   */ readString() {\n        return this.stringDecoder.read();\n    }\n    /**\n   * @return {boolean}\n   */ readParentInfo() {\n        return this.parentInfoDecoder.read() === 1;\n    }\n    /**\n   * @return {number} An unsigned 8-bit integer\n   */ readTypeRef() {\n        return this.typeRefDecoder.read();\n    }\n    /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */ readLen() {\n        return this.lenDecoder.read();\n    }\n    /**\n   * @return {any}\n   */ readAny() {\n        return _decoding.readAny(this.restDecoder);\n    }\n    /**\n   * @return {Uint8Array}\n   */ readBuf() {\n        return _decoding.readVarUint8Array(this.restDecoder);\n    }\n    /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */ readJSON() {\n        return _decoding.readAny(this.restDecoder);\n    }\n    /**\n   * @return {string}\n   */ readKey() {\n        const keyClock = this.keyClockDecoder.read();\n        if (keyClock < this.keys.length) return this.keys[keyClock];\n        else {\n            const key = this.stringDecoder.read();\n            this.keys.push(key);\n            return key;\n        }\n    }\n}\nclass DSEncoderV1 {\n    constructor(){\n        this.restEncoder = _encoding.createEncoder();\n    }\n    toUint8Array() {\n        return _encoding.toUint8Array(this.restEncoder);\n    }\n    resetDsCurVal() {\n    // nop\n    }\n    /**\n   * @param {number} clock\n   */ writeDsClock(clock) {\n        _encoding.writeVarUint(this.restEncoder, clock);\n    }\n    /**\n   * @param {number} len\n   */ writeDsLen(len) {\n        _encoding.writeVarUint(this.restEncoder, len);\n    }\n}\nclass UpdateEncoderV1 extends DSEncoderV1 {\n    /**\n   * @param {ID} id\n   */ writeLeftID(id) {\n        _encoding.writeVarUint(this.restEncoder, id.client);\n        _encoding.writeVarUint(this.restEncoder, id.clock);\n    }\n    /**\n   * @param {ID} id\n   */ writeRightID(id) {\n        _encoding.writeVarUint(this.restEncoder, id.client);\n        _encoding.writeVarUint(this.restEncoder, id.clock);\n    }\n    /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */ writeClient(client) {\n        _encoding.writeVarUint(this.restEncoder, client);\n    }\n    /**\n   * @param {number} info An unsigned 8-bit integer\n   */ writeInfo(info) {\n        _encoding.writeUint8(this.restEncoder, info);\n    }\n    /**\n   * @param {string} s\n   */ writeString(s) {\n        _encoding.writeVarString(this.restEncoder, s);\n    }\n    /**\n   * @param {boolean} isYKey\n   */ writeParentInfo(isYKey) {\n        _encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0);\n    }\n    /**\n   * @param {number} info An unsigned 8-bit integer\n   */ writeTypeRef(info) {\n        _encoding.writeVarUint(this.restEncoder, info);\n    }\n    /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */ writeLen(len) {\n        _encoding.writeVarUint(this.restEncoder, len);\n    }\n    /**\n   * @param {any} any\n   */ writeAny(any) {\n        _encoding.writeAny(this.restEncoder, any);\n    }\n    /**\n   * @param {Uint8Array} buf\n   */ writeBuf(buf) {\n        _encoding.writeVarUint8Array(this.restEncoder, buf);\n    }\n    /**\n   * @param {any} embed\n   */ writeJSON(embed) {\n        _encoding.writeVarString(this.restEncoder, JSON.stringify(embed));\n    }\n    /**\n   * @param {string} key\n   */ writeKey(key) {\n        _encoding.writeVarString(this.restEncoder, key);\n    }\n}\nclass DSEncoderV2 {\n    constructor(){\n        this.restEncoder = _encoding.createEncoder(); // encodes all the rest / non-optimized\n        this.dsCurrVal = 0;\n    }\n    toUint8Array() {\n        return _encoding.toUint8Array(this.restEncoder);\n    }\n    resetDsCurVal() {\n        this.dsCurrVal = 0;\n    }\n    /**\n   * @param {number} clock\n   */ writeDsClock(clock) {\n        const diff = clock - this.dsCurrVal;\n        this.dsCurrVal = clock;\n        _encoding.writeVarUint(this.restEncoder, diff);\n    }\n    /**\n   * @param {number} len\n   */ writeDsLen(len) {\n        if (len === 0) _error.unexpectedCase();\n        _encoding.writeVarUint(this.restEncoder, len - 1);\n        this.dsCurrVal += len;\n    }\n}\nclass UpdateEncoderV2 extends DSEncoderV2 {\n    constructor(){\n        super();\n        /**\n     * @type {Map<string,number>}\n     */ this.keyMap = new Map();\n        /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */ this.keyClock = 0;\n        this.keyClockEncoder = new _encoding.IntDiffOptRleEncoder();\n        this.clientEncoder = new _encoding.UintOptRleEncoder();\n        this.leftClockEncoder = new _encoding.IntDiffOptRleEncoder();\n        this.rightClockEncoder = new _encoding.IntDiffOptRleEncoder();\n        this.infoEncoder = new _encoding.RleEncoder(_encoding.writeUint8);\n        this.stringEncoder = new _encoding.StringEncoder();\n        this.parentInfoEncoder = new _encoding.RleEncoder(_encoding.writeUint8);\n        this.typeRefEncoder = new _encoding.UintOptRleEncoder();\n        this.lenEncoder = new _encoding.UintOptRleEncoder();\n    }\n    toUint8Array() {\n        const encoder = _encoding.createEncoder();\n        _encoding.writeVarUint(encoder, 0); // this is a feature flag that we might use in the future\n        _encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array());\n        _encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array());\n        _encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array());\n        _encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array());\n        _encoding.writeVarUint8Array(encoder, _encoding.toUint8Array(this.infoEncoder));\n        _encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array());\n        _encoding.writeVarUint8Array(encoder, _encoding.toUint8Array(this.parentInfoEncoder));\n        _encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array());\n        _encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array());\n        // @note The rest encoder is appended! (note the missing var)\n        _encoding.writeUint8Array(encoder, _encoding.toUint8Array(this.restEncoder));\n        return _encoding.toUint8Array(encoder);\n    }\n    /**\n   * @param {ID} id\n   */ writeLeftID(id) {\n        this.clientEncoder.write(id.client);\n        this.leftClockEncoder.write(id.clock);\n    }\n    /**\n   * @param {ID} id\n   */ writeRightID(id) {\n        this.clientEncoder.write(id.client);\n        this.rightClockEncoder.write(id.clock);\n    }\n    /**\n   * @param {number} client\n   */ writeClient(client) {\n        this.clientEncoder.write(client);\n    }\n    /**\n   * @param {number} info An unsigned 8-bit integer\n   */ writeInfo(info) {\n        this.infoEncoder.write(info);\n    }\n    /**\n   * @param {string} s\n   */ writeString(s) {\n        this.stringEncoder.write(s);\n    }\n    /**\n   * @param {boolean} isYKey\n   */ writeParentInfo(isYKey) {\n        this.parentInfoEncoder.write(isYKey ? 1 : 0);\n    }\n    /**\n   * @param {number} info An unsigned 8-bit integer\n   */ writeTypeRef(info) {\n        this.typeRefEncoder.write(info);\n    }\n    /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */ writeLen(len) {\n        this.lenEncoder.write(len);\n    }\n    /**\n   * @param {any} any\n   */ writeAny(any) {\n        _encoding.writeAny(this.restEncoder, any);\n    }\n    /**\n   * @param {Uint8Array} buf\n   */ writeBuf(buf) {\n        _encoding.writeVarUint8Array(this.restEncoder, buf);\n    }\n    /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */ writeJSON(embed) {\n        _encoding.writeAny(this.restEncoder, embed);\n    }\n    /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */ writeKey(key) {\n        const clock = this.keyMap.get(key);\n        if (clock === undefined) {\n            /**\n       * @todo uncomment to introduce this feature finally\n       *\n       * Background. The ContentFormat object was always encoded using writeKey, but the decoder used to use readString.\n       * Furthermore, I forgot to set the keyclock. So everything was working fine.\n       *\n       * However, this feature here is basically useless as it is not being used (it actually only consumes extra memory).\n       *\n       * I don't know yet how to reintroduce this feature..\n       *\n       * Older clients won't be able to read updates when we reintroduce this feature. So this should probably be done using a flag.\n       *\n       */ // this.keyMap.set(key, this.keyClock)\n            this.keyClockEncoder.write(this.keyClock++);\n            this.stringEncoder.write(key);\n        } else this.keyClockEncoder.write(clock);\n    }\n}\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */ const writeStructs = (encoder, structs, client, clock)=>{\n    // write first id\n    clock = _math.max(clock, structs[0].id.clock); // make sure the first id exists\n    const startNewStructs = findIndexSS(structs, clock);\n    // write # encoded structs\n    _encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs);\n    encoder.writeClient(client);\n    _encoding.writeVarUint(encoder.restEncoder, clock);\n    const firstStruct = structs[startNewStructs];\n    // write first struct with an offset\n    firstStruct.write(encoder, clock - firstStruct.id.clock);\n    for(let i = startNewStructs + 1; i < structs.length; i++)structs[i].write(encoder, 0);\n};\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */ const writeClientsStructs = (encoder, store, _sm)=>{\n    // we filter all valid _sm entries into sm\n    const sm = new Map();\n    _sm.forEach((clock, client)=>{\n        // only write if new structs are available\n        if (getState(store, client) > clock) sm.set(client, clock);\n    });\n    getStateVector(store).forEach((_clock, client)=>{\n        if (!_sm.has(client)) sm.set(client, 0);\n    });\n    // write # states that were updated\n    _encoding.writeVarUint(encoder.restEncoder, sm.size);\n    // Write items with higher client ids first\n    // This heavily improves the conflict algorithm.\n    _array.from(sm.entries()).sort((a, b)=>b[0] - a[0]).forEach(([client, clock])=>{\n        writeStructs(encoder, /** @type {Array<GC|Item>} */ store.clients.get(client), client, clock);\n    });\n};\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */ const readClientsStructRefs = (decoder, doc)=>{\n    /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */ const clientRefs = _map.create();\n    const numOfStateUpdates = _decoding.readVarUint(decoder.restDecoder);\n    for(let i = 0; i < numOfStateUpdates; i++){\n        const numberOfStructs = _decoding.readVarUint(decoder.restDecoder);\n        /**\n     * @type {Array<GC|Item>}\n     */ const refs = new Array(numberOfStructs);\n        const client = decoder.readClient();\n        let clock = _decoding.readVarUint(decoder.restDecoder);\n        // const start = performance.now()\n        clientRefs.set(client, {\n            i: 0,\n            refs\n        });\n        for(let i = 0; i < numberOfStructs; i++){\n            const info = decoder.readInfo();\n            switch(_binary.BITS5 & info){\n                case 0:\n                    {\n                        const len = decoder.readLen();\n                        refs[i] = new GC(createID(client, clock), len);\n                        clock += len;\n                        break;\n                    }\n                case 10:\n                    {\n                        // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n                        const len = _decoding.readVarUint(decoder.restDecoder);\n                        refs[i] = new Skip(createID(client, clock), len);\n                        clock += len;\n                        break;\n                    }\n                default:\n                    {\n                        /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */ const cantCopyParentInfo = (info & (_binary.BIT7 | _binary.BIT8)) === 0;\n                        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n                        // and we read the next string as parentYKey.\n                        // It indicates how we store/retrieve parent from `y.share`\n                        // @type {string|null}\n                        const struct = new Item(createID(client, clock), null, (info & _binary.BIT8) === _binary.BIT8 ? decoder.readLeftID() : null, null, (info & _binary.BIT7) === _binary.BIT7 ? decoder.readRightID() : null, cantCopyParentInfo ? decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID() : null, cantCopyParentInfo && (info & _binary.BIT6) === _binary.BIT6 ? decoder.readString() : null, readItemContent(decoder, info) // item content\n                        );\n                        /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */ refs[i] = struct;\n                        clock += struct.length;\n                    }\n            }\n        }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n    }\n    return clientRefs;\n};\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */ const integrateStructs = (transaction, store, clientsStructRefs)=>{\n    /**\n   * @type {Array<Item | GC>}\n   */ const stack = [];\n    // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n    let clientsStructRefsIds = _array.from(clientsStructRefs.keys()).sort((a, b)=>a - b);\n    if (clientsStructRefsIds.length === 0) return null;\n    const getNextStructTarget = ()=>{\n        if (clientsStructRefsIds.length === 0) return null;\n        let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]);\n        while(nextStructsTarget.refs.length === nextStructsTarget.i){\n            clientsStructRefsIds.pop();\n            if (clientsStructRefsIds.length > 0) nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]);\n            else return null;\n        }\n        return nextStructsTarget;\n    };\n    let curStructsTarget = getNextStructTarget();\n    if (curStructsTarget === null) return null;\n    /**\n   * @type {StructStore}\n   */ const restStructs = new StructStore();\n    const missingSV = new Map();\n    /**\n   * @param {number} client\n   * @param {number} clock\n   */ const updateMissingSv = (client, clock)=>{\n        const mclock = missingSV.get(client);\n        if (mclock == null || mclock > clock) missingSV.set(client, clock);\n    };\n    /**\n   * @type {GC|Item}\n   */ let stackHead = /** @type {any} */ curStructsTarget.refs[/** @type {any} */ curStructsTarget.i++];\n    // caching the state because it is used very often\n    const state = new Map();\n    const addStackToRestSS = ()=>{\n        for (const item of stack){\n            const client = item.id.client;\n            const unapplicableItems = clientsStructRefs.get(client);\n            if (unapplicableItems) {\n                // decrement because we weren't able to apply previous operation\n                unapplicableItems.i--;\n                restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i));\n                clientsStructRefs.delete(client);\n                unapplicableItems.i = 0;\n                unapplicableItems.refs = [];\n            } else // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n            restStructs.clients.set(client, [\n                item\n            ]);\n            // remove client from clientsStructRefsIds to prevent users from applying the same update again\n            clientsStructRefsIds = clientsStructRefsIds.filter((c)=>c !== client);\n        }\n        stack.length = 0;\n    };\n    // iterate over all struct readers until we are done\n    while(true){\n        if (stackHead.constructor !== Skip) {\n            const localClock = _map.setIfUndefined(state, stackHead.id.client, ()=>getState(store, stackHead.id.client));\n            const offset = localClock - stackHead.id.clock;\n            if (offset < 0) {\n                // update from the same client is missing\n                stack.push(stackHead);\n                updateMissingSv(stackHead.id.client, stackHead.id.clock - 1);\n                // hid a dead wall, add all items from stack to restSS\n                addStackToRestSS();\n            } else {\n                const missing = stackHead.getMissing(transaction, store);\n                if (missing !== null) {\n                    stack.push(stackHead);\n                    // get the struct reader that has the missing struct\n                    /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */ const structRefs = clientsStructRefs.get(/** @type {number} */ missing) || {\n                        refs: [],\n                        i: 0\n                    };\n                    if (structRefs.refs.length === structRefs.i) {\n                        // This update message causally depends on another update message that doesn't exist yet\n                        updateMissingSv(/** @type {number} */ missing, getState(store, missing));\n                        addStackToRestSS();\n                    } else {\n                        stackHead = structRefs.refs[structRefs.i++];\n                        continue;\n                    }\n                } else if (offset === 0 || offset < stackHead.length) {\n                    // all fine, apply the stackhead\n                    stackHead.integrate(transaction, offset);\n                    state.set(stackHead.id.client, stackHead.id.clock + stackHead.length);\n                }\n            }\n        }\n        // iterate to next stackHead\n        if (stack.length > 0) stackHead = /** @type {GC|Item} */ stack.pop();\n        else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) stackHead = /** @type {GC|Item} */ curStructsTarget.refs[curStructsTarget.i++];\n        else {\n            curStructsTarget = getNextStructTarget();\n            if (curStructsTarget === null) break;\n            else stackHead = /** @type {GC|Item} */ curStructsTarget.refs[curStructsTarget.i++];\n        }\n    }\n    if (restStructs.clients.size > 0) {\n        const encoder = new UpdateEncoderV2();\n        writeClientsStructs(encoder, restStructs, new Map());\n        // write empty deleteset\n        // writeDeleteSet(encoder, new DeleteSet())\n        _encoding.writeVarUint(encoder.restEncoder, 0); // => no need for an extra function call, just write 0 deletes\n        return {\n            missing: missingSV,\n            update: encoder.toUint8Array()\n        };\n    }\n    return null;\n};\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */ const writeStructsFromTransaction = (encoder, transaction)=>writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState);\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */ const readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder))=>transact(ydoc, (transaction)=>{\n        // force that transaction.local is set to non-local\n        transaction.local = false;\n        let retry = false;\n        const doc = transaction.doc;\n        const store = doc.store;\n        // let start = performance.now()\n        const ss = readClientsStructRefs(structDecoder, doc);\n        // console.log('time to read structs: ', performance.now() - start) // @todo remove\n        // start = performance.now()\n        // console.log('time to merge: ', performance.now() - start) // @todo remove\n        // start = performance.now()\n        const restStructs = integrateStructs(transaction, store, ss);\n        const pending = store.pendingStructs;\n        if (pending) {\n            // check if we can apply something\n            for (const [client, clock] of pending.missing)if (clock < getState(store, client)) {\n                retry = true;\n                break;\n            }\n            if (restStructs) {\n                // merge restStructs into store.pending\n                for (const [client, clock] of restStructs.missing){\n                    const mclock = pending.missing.get(client);\n                    if (mclock == null || mclock > clock) pending.missing.set(client, clock);\n                }\n                pending.update = mergeUpdatesV2([\n                    pending.update,\n                    restStructs.update\n                ]);\n            }\n        } else store.pendingStructs = restStructs;\n        // console.log('time to integrate: ', performance.now() - start) // @todo remove\n        // start = performance.now()\n        const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store);\n        if (store.pendingDs) {\n            // @todo we could make a lower-bound state-vector check as we do above\n            const pendingDSUpdate = new UpdateDecoderV2(_decoding.createDecoder(store.pendingDs));\n            _decoding.readVarUint(pendingDSUpdate.restDecoder); // read 0 structs, because we only encode deletes in pendingdsupdate\n            const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store);\n            if (dsRest && dsRest2) // case 1: ds1 != null && ds2 != null\n            store.pendingDs = mergeUpdatesV2([\n                dsRest,\n                dsRest2\n            ]);\n            else // case 2: ds1 != null\n            // case 3: ds2 != null\n            // case 4: ds1 == null && ds2 == null\n            store.pendingDs = dsRest || dsRest2;\n        } else // Either dsRest == null && pendingDs == null OR dsRest != null\n        store.pendingDs = dsRest;\n        // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n        // start = performance.now()\n        // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n        // start = performance.now()\n        if (retry) {\n            const update = /** @type {{update: Uint8Array}} */ store.pendingStructs.update;\n            store.pendingStructs = null;\n            applyUpdateV2(transaction.doc, update);\n        }\n    }, transactionOrigin, false);\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */ const readUpdate = (decoder, ydoc, transactionOrigin)=>readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder));\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */ const applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2)=>{\n    const decoder = _decoding.createDecoder(update);\n    readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder));\n};\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */ const applyUpdate = (ydoc, update, transactionOrigin)=>applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1);\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */ const writeStateAsUpdate = (encoder, doc, targetStateVector = new Map())=>{\n    writeClientsStructs(encoder, doc.store, targetStateVector);\n    writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store));\n};\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */ const encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([\n    0\n]), encoder = new UpdateEncoderV2())=>{\n    const targetStateVector = decodeStateVector(encodedTargetStateVector);\n    writeStateAsUpdate(encoder, doc, targetStateVector);\n    const updates = [\n        encoder.toUint8Array()\n    ];\n    // also add the pending updates (if there are any)\n    if (doc.store.pendingDs) updates.push(doc.store.pendingDs);\n    if (doc.store.pendingStructs) updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector));\n    if (updates.length > 1) {\n        if (encoder.constructor === UpdateEncoderV1) return mergeUpdates(updates.map((update, i)=>i === 0 ? update : convertUpdateFormatV2ToV1(update)));\n        else if (encoder.constructor === UpdateEncoderV2) return mergeUpdatesV2(updates);\n    }\n    return updates[0];\n};\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */ const encodeStateAsUpdate = (doc, encodedTargetStateVector)=>encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1());\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */ const readStateVector = (decoder)=>{\n    const ss = new Map();\n    const ssLength = _decoding.readVarUint(decoder.restDecoder);\n    for(let i = 0; i < ssLength; i++){\n        const client = _decoding.readVarUint(decoder.restDecoder);\n        const clock = _decoding.readVarUint(decoder.restDecoder);\n        ss.set(client, clock);\n    }\n    return ss;\n};\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */ // export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */ const decodeStateVector = (decodedState)=>readStateVector(new DSDecoderV1(_decoding.createDecoder(decodedState)));\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */ const writeStateVector = (encoder, sv)=>{\n    _encoding.writeVarUint(encoder.restEncoder, sv.size);\n    _array.from(sv.entries()).sort((a, b)=>b[0] - a[0]).forEach(([client, clock])=>{\n        _encoding.writeVarUint(encoder.restEncoder, client); // @todo use a special client decoder that is based on mapping\n        _encoding.writeVarUint(encoder.restEncoder, clock);\n    });\n    return encoder;\n};\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */ const writeDocumentStateVector = (encoder, doc)=>writeStateVector(encoder, getStateVector(doc.store));\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */ const encodeStateVectorV2 = (doc, encoder = new DSEncoderV2())=>{\n    if (doc instanceof Map) writeStateVector(encoder, doc);\n    else writeDocumentStateVector(encoder, doc);\n    return encoder.toUint8Array();\n};\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */ const encodeStateVector = (doc)=>encodeStateVectorV2(doc, new DSEncoderV1());\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */ class EventHandler {\n    constructor(){\n        /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */ this.l = [];\n    }\n}\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */ const createEventHandler = ()=>new EventHandler();\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */ const addEventHandlerListener = (eventHandler, f)=>eventHandler.l.push(f);\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */ const removeEventHandlerListener = (eventHandler, f)=>{\n    const l = eventHandler.l;\n    const len = l.length;\n    eventHandler.l = l.filter((g)=>f !== g);\n    if (len === eventHandler.l.length) console.error(\"[yjs] Tried to remove event handler that doesn't exist.\");\n};\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */ const callEventHandlerListeners = (eventHandler, arg0, arg1)=>_function.callAll(eventHandler.l, [\n        arg0,\n        arg1\n    ]);\nclass ID {\n    /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */ constructor(client, clock){\n        /**\n     * Client id\n     * @type {number}\n     */ this.client = client;\n        /**\n     * unique per client id, continuous number\n     * @type {number}\n     */ this.clock = clock;\n    }\n}\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */ const compareIDs = (a, b)=>a === b || a !== null && b !== null && a.client === b.client && a.clock === b.clock;\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */ const createID = (client, clock)=>new ID(client, clock);\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */ const writeID = (encoder, id)=>{\n    _encoding.writeVarUint(encoder, id.client);\n    _encoding.writeVarUint(encoder, id.clock);\n};\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */ const readID = (decoder)=>createID(_decoding.readVarUint(decoder), _decoding.readVarUint(decoder));\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */ const findRootTypeKey = (type)=>{\n    // @ts-ignore _y must be defined, otherwise unexpected case\n    for (const [key, value] of type.doc.share.entries()){\n        if (value === type) return key;\n    }\n    throw _error.unexpectedCase();\n};\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */ const isParentOf = (parent, child)=>{\n    while(child !== null){\n        if (child.parent === parent) return true;\n        child = /** @type {AbstractType<any>} */ child.parent._item;\n    }\n    return false;\n};\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */ const logType = (type)=>{\n    const res = [];\n    let n = type._start;\n    while(n){\n        res.push(n);\n        n = n.right;\n    }\n    console.log(\"Children: \", res);\n    console.log(\"Children content: \", res.filter((m)=>!m.deleted).map((m)=>m.content));\n};\nclass PermanentUserData {\n    /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */ constructor(doc, storeType = doc.getMap(\"users\")){\n        /**\n     * @type {Map<string,DeleteSet>}\n     */ const dss = new Map();\n        this.yusers = storeType;\n        this.doc = doc;\n        /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */ this.clients = new Map();\n        this.dss = dss;\n        /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */ const initUser = (user, userDescription)=>{\n            /**\n       * @type {YArray<Uint8Array>}\n       */ const ds = user.get(\"ds\");\n            const ids = user.get(\"ids\");\n            const addClientId = /** @param {number} clientid */ (clientid)=>this.clients.set(clientid, userDescription);\n            ds.observe(/** @param {YArrayEvent<any>} event */ (event)=>{\n                event.changes.added.forEach((item)=>{\n                    item.content.getContent().forEach((encodedDs)=>{\n                        if (encodedDs instanceof Uint8Array) this.dss.set(userDescription, mergeDeleteSets([\n                            this.dss.get(userDescription) || createDeleteSet(),\n                            readDeleteSet(new DSDecoderV1(_decoding.createDecoder(encodedDs)))\n                        ]));\n                    });\n                });\n            });\n            this.dss.set(userDescription, mergeDeleteSets(ds.map((encodedDs)=>readDeleteSet(new DSDecoderV1(_decoding.createDecoder(encodedDs))))));\n            ids.observe(/** @param {YArrayEvent<any>} event */ (event)=>event.changes.added.forEach((item)=>item.content.getContent().forEach(addClientId)));\n            ids.forEach(addClientId);\n        };\n        // observe users\n        storeType.observe((event)=>{\n            event.keysChanged.forEach((userDescription)=>initUser(storeType.get(userDescription), userDescription));\n        });\n        // add intial data\n        storeType.forEach(initUser);\n    }\n    /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} conf\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */ setUserMapping(doc, clientid, userDescription, { filter = ()=>true } = {}) {\n        const users = this.yusers;\n        let user = users.get(userDescription);\n        if (!user) {\n            user = new YMap();\n            user.set(\"ids\", new YArray());\n            user.set(\"ds\", new YArray());\n            users.set(userDescription, user);\n        }\n        user.get(\"ids\").push([\n            clientid\n        ]);\n        users.observe((_event)=>{\n            setTimeout(()=>{\n                const userOverwrite = users.get(userDescription);\n                if (userOverwrite !== user) {\n                    // user was overwritten, port all data over to the next user object\n                    // @todo Experiment with Y.Sets here\n                    user = userOverwrite;\n                    // @todo iterate over old type\n                    this.clients.forEach((_userDescription, clientid)=>{\n                        if (userDescription === _userDescription) user.get(\"ids\").push([\n                            clientid\n                        ]);\n                    });\n                    const encoder = new DSEncoderV1();\n                    const ds = this.dss.get(userDescription);\n                    if (ds) {\n                        writeDeleteSet(encoder, ds);\n                        user.get(\"ds\").push([\n                            encoder.toUint8Array()\n                        ]);\n                    }\n                }\n            }, 0);\n        });\n        doc.on(\"afterTransaction\", /** @param {Transaction} transaction */ (transaction)=>{\n            setTimeout(()=>{\n                const yds = user.get(\"ds\");\n                const ds = transaction.deleteSet;\n                if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n                    const encoder = new DSEncoderV1();\n                    writeDeleteSet(encoder, ds);\n                    yds.push([\n                        encoder.toUint8Array()\n                    ]);\n                }\n            });\n        });\n    }\n    /**\n   * @param {number} clientid\n   * @return {any}\n   */ getUserByClientId(clientid) {\n        return this.clients.get(clientid) || null;\n    }\n    /**\n   * @param {ID} id\n   * @return {string | null}\n   */ getUserByDeletedId(id) {\n        for (const [userDescription, ds] of this.dss.entries()){\n            if (isDeleted(ds, id)) return userDescription;\n        }\n        return null;\n    }\n}\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */ class RelativePosition {\n    /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */ constructor(type, tname, item, assoc = 0){\n        /**\n     * @type {ID|null}\n     */ this.type = type;\n        /**\n     * @type {string|null}\n     */ this.tname = tname;\n        /**\n     * @type {ID | null}\n     */ this.item = item;\n        /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */ this.assoc = assoc;\n    }\n}\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */ const relativePositionToJSON = (rpos)=>{\n    const json = {};\n    if (rpos.type) json.type = rpos.type;\n    if (rpos.tname) json.tname = rpos.tname;\n    if (rpos.item) json.item = rpos.item;\n    if (rpos.assoc != null) json.assoc = rpos.assoc;\n    return json;\n};\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */ const createRelativePositionFromJSON = (json)=>new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc);\nclass AbsolutePosition {\n    /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */ constructor(type, index, assoc = 0){\n        /**\n     * @type {AbstractType<any>}\n     */ this.type = type;\n        /**\n     * @type {number}\n     */ this.index = index;\n        this.assoc = assoc;\n    }\n}\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */ const createAbsolutePosition = (type, index, assoc = 0)=>new AbsolutePosition(type, index, assoc);\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */ const createRelativePosition = (type, item, assoc)=>{\n    let typeid = null;\n    let tname = null;\n    if (type._item === null) tname = findRootTypeKey(type);\n    else typeid = createID(type._item.id.client, type._item.id.clock);\n    return new RelativePosition(typeid, tname, item, assoc);\n};\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */ const createRelativePositionFromTypeIndex = (type, index, assoc = 0)=>{\n    let t = type._start;\n    if (assoc < 0) {\n        // associated to the left character or the beginning of a type, increment index if possible.\n        if (index === 0) return createRelativePosition(type, null, assoc);\n        index--;\n    }\n    while(t !== null){\n        if (!t.deleted && t.countable) {\n            if (t.length > index) // case 1: found position somewhere in the linked list\n            return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc);\n            index -= t.length;\n        }\n        if (t.right === null && assoc < 0) // left-associated position, return last available id\n        return createRelativePosition(type, t.lastId, assoc);\n        t = t.right;\n    }\n    return createRelativePosition(type, null, assoc);\n};\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */ const writeRelativePosition = (encoder, rpos)=>{\n    const { type, tname, item, assoc } = rpos;\n    if (item !== null) {\n        _encoding.writeVarUint(encoder, 0);\n        writeID(encoder, item);\n    } else if (tname !== null) {\n        // case 2: found position at the end of the list and type is stored in y.share\n        _encoding.writeUint8(encoder, 1);\n        _encoding.writeVarString(encoder, tname);\n    } else if (type !== null) {\n        // case 3: found position at the end of the list and type is attached to an item\n        _encoding.writeUint8(encoder, 2);\n        writeID(encoder, type);\n    } else throw _error.unexpectedCase();\n    _encoding.writeVarInt(encoder, assoc);\n    return encoder;\n};\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */ const encodeRelativePosition = (rpos)=>{\n    const encoder = _encoding.createEncoder();\n    writeRelativePosition(encoder, rpos);\n    return _encoding.toUint8Array(encoder);\n};\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */ const readRelativePosition = (decoder)=>{\n    let type = null;\n    let tname = null;\n    let itemID = null;\n    switch(_decoding.readVarUint(decoder)){\n        case 0:\n            // case 1: found position somewhere in the linked list\n            itemID = readID(decoder);\n            break;\n        case 1:\n            // case 2: found position at the end of the list and type is stored in y.share\n            tname = _decoding.readVarString(decoder);\n            break;\n        case 2:\n            // case 3: found position at the end of the list and type is attached to an item\n            type = readID(decoder);\n    }\n    const assoc = _decoding.hasContent(decoder) ? _decoding.readVarInt(decoder) : 0;\n    return new RelativePosition(type, tname, itemID, assoc);\n};\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */ const decodeRelativePosition = (uint8Array)=>readRelativePosition(_decoding.createDecoder(uint8Array));\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */ const createAbsolutePositionFromRelativePosition = (rpos, doc)=>{\n    const store = doc.store;\n    const rightID = rpos.item;\n    const typeID = rpos.type;\n    const tname = rpos.tname;\n    const assoc = rpos.assoc;\n    let type = null;\n    let index = 0;\n    if (rightID !== null) {\n        if (getState(store, rightID.client) <= rightID.clock) return null;\n        const res = followRedone(store, rightID);\n        const right = res.item;\n        if (!(right instanceof Item)) return null;\n        type = /** @type {AbstractType<any>} */ right.parent;\n        if (type._item === null || !type._item.deleted) {\n            index = right.deleted || !right.countable ? 0 : res.diff + (assoc >= 0 ? 0 : 1); // adjust position based on left association if necessary\n            let n = right.left;\n            while(n !== null){\n                if (!n.deleted && n.countable) index += n.length;\n                n = n.left;\n            }\n        }\n    } else {\n        if (tname !== null) type = doc.get(tname);\n        else if (typeID !== null) {\n            if (getState(store, typeID.client) <= typeID.clock) // type does not exist yet\n            return null;\n            const { item } = followRedone(store, typeID);\n            if (item instanceof Item && item.content instanceof ContentType) type = item.content.type;\n            else // struct is garbage collected\n            return null;\n        } else throw _error.unexpectedCase();\n        if (assoc >= 0) index = type._length;\n        else index = 0;\n    }\n    return createAbsolutePosition(type, index, rpos.assoc);\n};\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */ const compareRelativePositions = (a, b)=>a === b || a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc;\nclass Snapshot {\n    /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */ constructor(ds, sv){\n        /**\n     * @type {DeleteSet}\n     */ this.ds = ds;\n        /**\n     * State Map\n     * @type {Map<number,number>}\n     */ this.sv = sv;\n    }\n}\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */ const equalSnapshots = (snap1, snap2)=>{\n    const ds1 = snap1.ds.clients;\n    const ds2 = snap2.ds.clients;\n    const sv1 = snap1.sv;\n    const sv2 = snap2.sv;\n    if (sv1.size !== sv2.size || ds1.size !== ds2.size) return false;\n    for (const [key, value] of sv1.entries()){\n        if (sv2.get(key) !== value) return false;\n    }\n    for (const [client, dsitems1] of ds1.entries()){\n        const dsitems2 = ds2.get(client) || [];\n        if (dsitems1.length !== dsitems2.length) return false;\n        for(let i = 0; i < dsitems1.length; i++){\n            const dsitem1 = dsitems1[i];\n            const dsitem2 = dsitems2[i];\n            if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) return false;\n        }\n    }\n    return true;\n};\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */ const encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2())=>{\n    writeDeleteSet(encoder, snapshot.ds);\n    writeStateVector(encoder, snapshot.sv);\n    return encoder.toUint8Array();\n};\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */ const encodeSnapshot = (snapshot)=>encodeSnapshotV2(snapshot, new DSEncoderV1());\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */ const decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(_decoding.createDecoder(buf)))=>{\n    return new Snapshot(readDeleteSet(decoder), readStateVector(decoder));\n};\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */ const decodeSnapshot = (buf)=>decodeSnapshotV2(buf, new DSDecoderV1(_decoding.createDecoder(buf)));\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */ const createSnapshot = (ds, sm)=>new Snapshot(ds, sm);\nconst emptySnapshot = createSnapshot(createDeleteSet(), new Map());\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */ const snapshot = (doc)=>createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store));\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */ const isVisible = (item, snapshot)=>snapshot === undefined ? !item.deleted : snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id);\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */ const splitSnapshotAffectedStructs = (transaction, snapshot)=>{\n    const meta = _map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, _set.create);\n    const store = transaction.doc.store;\n    // check if we already split for this snapshot\n    if (!meta.has(snapshot)) {\n        snapshot.sv.forEach((clock, client)=>{\n            if (clock < getState(store, client)) getItemCleanStart(transaction, createID(client, clock));\n        });\n        iterateDeletedStructs(transaction, snapshot.ds, (_item)=>{});\n        meta.add(snapshot);\n    }\n};\n/**\n * @example\n *  const ydoc = new Y.Doc({ gc: false })\n *  ydoc.getText().insert(0, 'world!')\n *  const snapshot = Y.snapshot(ydoc)\n *  ydoc.getText().insert(0, 'hello ')\n *  const restored = Y.createDocFromSnapshot(ydoc, snapshot)\n *  assert(restored.getText().toString() === 'world!')\n *\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */ const createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc())=>{\n    if (originDoc.gc) // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error(\"Garbage-collection must be disabled in `originDoc`!\");\n    const { sv, ds } = snapshot;\n    const encoder = new UpdateEncoderV2();\n    originDoc.transact((transaction)=>{\n        let size = 0;\n        sv.forEach((clock)=>{\n            if (clock > 0) size++;\n        });\n        _encoding.writeVarUint(encoder.restEncoder, size);\n        // splitting the structs before writing them to the encoder\n        for (const [client, clock] of sv){\n            if (clock === 0) continue;\n            if (clock < getState(originDoc.store, client)) getItemCleanStart(transaction, createID(client, clock));\n            const structs = originDoc.store.clients.get(client) || [];\n            const lastStructIndex = findIndexSS(structs, clock - 1);\n            // write # encoded structs\n            _encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1);\n            encoder.writeClient(client);\n            // first clock written is 0\n            _encoding.writeVarUint(encoder.restEncoder, 0);\n            for(let i = 0; i <= lastStructIndex; i++)structs[i].write(encoder, 0);\n        }\n        writeDeleteSet(encoder, ds);\n    });\n    applyUpdateV2(newDoc, encoder.toUint8Array(), \"snapshot\");\n    return newDoc;\n};\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n */ const snapshotContainsUpdateV2 = (snapshot, update, YDecoder = UpdateDecoderV2)=>{\n    const updateDecoder = new YDecoder(_decoding.createDecoder(update));\n    const lazyDecoder = new LazyStructReader(updateDecoder, false);\n    for(let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()){\n        if ((snapshot.sv.get(curr.id.client) || 0) < curr.id.clock + curr.length) return false;\n    }\n    const mergedDS = mergeDeleteSets([\n        snapshot.ds,\n        readDeleteSet(updateDecoder)\n    ]);\n    return equalDeleteSets(snapshot.ds, mergedDS);\n};\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n */ const snapshotContainsUpdate = (snapshot, update)=>snapshotContainsUpdateV2(snapshot, update, UpdateDecoderV1);\nclass StructStore {\n    constructor(){\n        /**\n     * @type {Map<number,Array<GC|Item>>}\n     */ this.clients = new Map();\n        /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */ this.pendingStructs = null;\n        /**\n     * @type {null | Uint8Array}\n     */ this.pendingDs = null;\n    }\n}\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */ const getStateVector = (store)=>{\n    const sm = new Map();\n    store.clients.forEach((structs, client)=>{\n        const struct = structs[structs.length - 1];\n        sm.set(client, struct.id.clock + struct.length);\n    });\n    return sm;\n};\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */ const getState = (store, client)=>{\n    const structs = store.clients.get(client);\n    if (structs === undefined) return 0;\n    const lastStruct = structs[structs.length - 1];\n    return lastStruct.id.clock + lastStruct.length;\n};\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */ const addStruct = (store, struct)=>{\n    let structs = store.clients.get(struct.id.client);\n    if (structs === undefined) {\n        structs = [];\n        store.clients.set(struct.id.client, structs);\n    } else {\n        const lastStruct = structs[structs.length - 1];\n        if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) throw _error.unexpectedCase();\n    }\n    structs.push(struct);\n};\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */ const findIndexSS = (structs, clock)=>{\n    let left = 0;\n    let right = structs.length - 1;\n    let mid = structs[right];\n    let midclock = mid.id.clock;\n    if (midclock === clock) return right;\n    // @todo does it even make sense to pivot the search?\n    // If a good split misses, it might actually increase the time to find the correct item.\n    // Currently, the only advantage is that search with pivoting might find the item on the first try.\n    let midindex = _math.floor(clock / (midclock + mid.length - 1) * right); // pivoting the search\n    while(left <= right){\n        mid = structs[midindex];\n        midclock = mid.id.clock;\n        if (midclock <= clock) {\n            if (clock < midclock + mid.length) return midindex;\n            left = midindex + 1;\n        } else right = midindex - 1;\n        midindex = _math.floor((left + right) / 2);\n    }\n    // Always check state before looking for a struct in StructStore\n    // Therefore the case of not finding a struct is unexpected\n    throw _error.unexpectedCase();\n};\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */ const find = (store, id)=>{\n    /**\n   * @type {Array<GC|Item>}\n   */ // @ts-ignore\n    const structs = store.clients.get(id.client);\n    return structs[findIndexSS(structs, id.clock)];\n};\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */ const getItem = /** @type {function(StructStore,ID):Item} */ find;\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */ const findIndexCleanStart = (transaction, structs, clock)=>{\n    const index = findIndexSS(structs, clock);\n    const struct = structs[index];\n    if (struct.id.clock < clock && struct instanceof Item) {\n        structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n        return index + 1;\n    }\n    return index;\n};\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */ const getItemCleanStart = (transaction, id)=>{\n    const structs = /** @type {Array<Item>} */ transaction.doc.store.clients.get(id.client);\n    return structs[findIndexCleanStart(transaction, structs, id.clock)];\n};\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */ const getItemCleanEnd = (transaction, store, id)=>{\n    /**\n   * @type {Array<Item>}\n   */ // @ts-ignore\n    const structs = store.clients.get(id.client);\n    const index = findIndexSS(structs, id.clock);\n    const struct = structs[index];\n    if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1));\n    return struct;\n};\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */ const replaceStruct = (store, struct, newStruct)=>{\n    const structs = /** @type {Array<GC|Item>} */ store.clients.get(struct.id.client);\n    structs[findIndexSS(structs, struct.id.clock)] = newStruct;\n};\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */ const iterateStructs = (transaction, structs, clockStart, len, f)=>{\n    if (len === 0) return;\n    const clockEnd = clockStart + len;\n    let index = findIndexCleanStart(transaction, structs, clockStart);\n    let struct;\n    do {\n        struct = structs[index++];\n        if (clockEnd < struct.id.clock + struct.length) findIndexCleanStart(transaction, structs, clockEnd);\n        f(struct);\n    }while (index < structs.length && structs[index].id.clock < clockEnd);\n};\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */ class Transaction {\n    /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */ constructor(doc, origin, local){\n        /**\n     * The Yjs instance.\n     * @type {Doc}\n     */ this.doc = doc;\n        /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */ this.deleteSet = new DeleteSet();\n        /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */ this.beforeState = getStateVector(doc.store);\n        /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */ this.afterState = new Map();\n        /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent<any>>,Set<String|null>>}\n     */ this.changed = new Map();\n        /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent<any>>,Array<YEvent<any>>>}\n     */ this.changedParentTypes = new Map();\n        /**\n     * @type {Array<AbstractStruct>}\n     */ this._mergeStructs = [];\n        /**\n     * @type {any}\n     */ this.origin = origin;\n        /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */ this.meta = new Map();\n        /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */ this.local = local;\n        /**\n     * @type {Set<Doc>}\n     */ this.subdocsAdded = new Set();\n        /**\n     * @type {Set<Doc>}\n     */ this.subdocsRemoved = new Set();\n        /**\n     * @type {Set<Doc>}\n     */ this.subdocsLoaded = new Set();\n        /**\n     * @type {boolean}\n     */ this._needFormattingCleanup = false;\n    }\n}\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */ const writeUpdateMessageFromTransaction = (encoder, transaction)=>{\n    if (transaction.deleteSet.clients.size === 0 && !_map.any(transaction.afterState, (clock, client)=>transaction.beforeState.get(client) !== clock)) return false;\n    sortAndMergeDeleteSet(transaction.deleteSet);\n    writeStructsFromTransaction(encoder, transaction);\n    writeDeleteSet(encoder, transaction.deleteSet);\n    return true;\n};\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent<any>>} type\n * @param {string|null} parentSub\n */ const addChangedTypeToTransaction = (transaction, type, parentSub)=>{\n    const item = type._item;\n    if (item === null || item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted) _map.setIfUndefined(transaction.changed, type, _set.create).add(parentSub);\n};\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n * @return {number} # of merged structs\n */ const tryToMergeWithLefts = (structs, pos)=>{\n    let right = structs[pos];\n    let left = structs[pos - 1];\n    let i = pos;\n    for(; i > 0; right = left, left = structs[--i - 1]){\n        if (left.deleted === right.deleted && left.constructor === right.constructor) {\n            if (left.mergeWith(right)) {\n                if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ right.parent._map.get(right.parentSub) === right) /** @type {AbstractType<any>} */ right.parent._map.set(right.parentSub, /** @type {Item} */ left);\n                continue;\n            }\n        }\n        break;\n    }\n    const merged = pos - i;\n    if (merged) // remove all merged structs from the array\n    structs.splice(pos + 1 - merged, merged);\n    return merged;\n};\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */ const tryGcDeleteSet = (ds, store, gcFilter)=>{\n    for (const [client, deleteItems] of ds.clients.entries()){\n        const structs = /** @type {Array<GC|Item>} */ store.clients.get(client);\n        for(let di = deleteItems.length - 1; di >= 0; di--){\n            const deleteItem = deleteItems[di];\n            const endDeleteItemClock = deleteItem.clock + deleteItem.len;\n            for(let si = findIndexSS(structs, deleteItem.clock), struct = structs[si]; si < structs.length && struct.id.clock < endDeleteItemClock; struct = structs[++si]){\n                const struct = structs[si];\n                if (deleteItem.clock + deleteItem.len <= struct.id.clock) break;\n                if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) struct.gc(store, false);\n            }\n        }\n    }\n};\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */ const tryMergeDeleteSet = (ds, store)=>{\n    // try to merge deleted / gc'd items\n    // merge from right to left for better efficiecy and so we don't miss any merge targets\n    ds.clients.forEach((deleteItems, client)=>{\n        const structs = /** @type {Array<GC|Item>} */ store.clients.get(client);\n        for(let di = deleteItems.length - 1; di >= 0; di--){\n            const deleteItem = deleteItems[di];\n            // start with merging the item next to the last deleted item\n            const mostRightIndexToCheck = _math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1));\n            for(let si = mostRightIndexToCheck, struct = structs[si]; si > 0 && struct.id.clock >= deleteItem.clock; struct = structs[si])si -= 1 + tryToMergeWithLefts(structs, si);\n        }\n    });\n};\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */ const tryGc = (ds, store, gcFilter)=>{\n    tryGcDeleteSet(ds, store, gcFilter);\n    tryMergeDeleteSet(ds, store);\n};\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */ const cleanupTransactions = (transactionCleanups, i)=>{\n    if (i < transactionCleanups.length) {\n        const transaction = transactionCleanups[i];\n        const doc = transaction.doc;\n        const store = doc.store;\n        const ds = transaction.deleteSet;\n        const mergeStructs = transaction._mergeStructs;\n        try {\n            sortAndMergeDeleteSet(ds);\n            transaction.afterState = getStateVector(transaction.doc.store);\n            doc.emit(\"beforeObserverCalls\", [\n                transaction,\n                doc\n            ]);\n            /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */ const fs = [];\n            // observe events on changed types\n            transaction.changed.forEach((subs, itemtype)=>fs.push(()=>{\n                    if (itemtype._item === null || !itemtype._item.deleted) itemtype._callObserver(transaction, subs);\n                }));\n            fs.push(()=>{\n                // deep observe events\n                transaction.changedParentTypes.forEach((events, type)=>{\n                    // We need to think about the possibility that the user transforms the\n                    // Y.Doc in the event.\n                    if (type._dEH.l.length > 0 && (type._item === null || !type._item.deleted)) {\n                        events = events.filter((event)=>event.target._item === null || !event.target._item.deleted);\n                        events.forEach((event)=>{\n                            event.currentTarget = type;\n                            // path is relative to the current target\n                            event._path = null;\n                        });\n                        // sort events by path length so that top-level events are fired first.\n                        events.sort((event1, event2)=>event1.path.length - event2.path.length);\n                        // We don't need to check for events.length\n                        // because we know it has at least one element\n                        callEventHandlerListeners(type._dEH, events, transaction);\n                    }\n                });\n            });\n            fs.push(()=>doc.emit(\"afterTransaction\", [\n                    transaction,\n                    doc\n                ]));\n            (0, _function.callAll)(fs, []);\n            if (transaction._needFormattingCleanup) cleanupYTextAfterTransaction(transaction);\n        } finally{\n            // Replace deleted items with ItemDeleted / GC.\n            // This is where content is actually remove from the Yjs Doc.\n            if (doc.gc) tryGcDeleteSet(ds, store, doc.gcFilter);\n            tryMergeDeleteSet(ds, store);\n            // on all affected store.clients props, try to merge\n            transaction.afterState.forEach((clock, client)=>{\n                const beforeClock = transaction.beforeState.get(client) || 0;\n                if (beforeClock !== clock) {\n                    const structs = /** @type {Array<GC|Item>} */ store.clients.get(client);\n                    // we iterate from right to left so we can safely remove entries\n                    const firstChangePos = _math.max(findIndexSS(structs, beforeClock), 1);\n                    for(let i = structs.length - 1; i >= firstChangePos;)i -= 1 + tryToMergeWithLefts(structs, i);\n                }\n            });\n            // try to merge mergeStructs\n            // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n            //        but at the moment DS does not handle duplicates\n            for(let i = mergeStructs.length - 1; i >= 0; i--){\n                const { client, clock } = mergeStructs[i].id;\n                const structs = /** @type {Array<GC|Item>} */ store.clients.get(client);\n                const replacedStructPos = findIndexSS(structs, clock);\n                if (replacedStructPos + 1 < structs.length) {\n                    if (tryToMergeWithLefts(structs, replacedStructPos + 1) > 1) continue; // no need to perform next check, both are already merged\n                }\n                if (replacedStructPos > 0) tryToMergeWithLefts(structs, replacedStructPos);\n            }\n            if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n                _logging.print(_logging.ORANGE, _logging.BOLD, \"[yjs] \", _logging.UNBOLD, _logging.RED, \"Changed the client-id because another client seems to be using it.\");\n                doc.clientID = generateNewClientId();\n            }\n            // @todo Merge all the transactions into one and provide send the data as a single update message\n            doc.emit(\"afterTransactionCleanup\", [\n                transaction,\n                doc\n            ]);\n            if (doc._observers.has(\"update\")) {\n                const encoder = new UpdateEncoderV1();\n                const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n                if (hasContent) doc.emit(\"update\", [\n                    encoder.toUint8Array(),\n                    transaction.origin,\n                    doc,\n                    transaction\n                ]);\n            }\n            if (doc._observers.has(\"updateV2\")) {\n                const encoder = new UpdateEncoderV2();\n                const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n                if (hasContent) doc.emit(\"updateV2\", [\n                    encoder.toUint8Array(),\n                    transaction.origin,\n                    doc,\n                    transaction\n                ]);\n            }\n            const { subdocsAdded, subdocsLoaded, subdocsRemoved } = transaction;\n            if (subdocsAdded.size > 0 || subdocsRemoved.size > 0 || subdocsLoaded.size > 0) {\n                subdocsAdded.forEach((subdoc)=>{\n                    subdoc.clientID = doc.clientID;\n                    if (subdoc.collectionid == null) subdoc.collectionid = doc.collectionid;\n                    doc.subdocs.add(subdoc);\n                });\n                subdocsRemoved.forEach((subdoc)=>doc.subdocs.delete(subdoc));\n                doc.emit(\"subdocs\", [\n                    {\n                        loaded: subdocsLoaded,\n                        added: subdocsAdded,\n                        removed: subdocsRemoved\n                    },\n                    doc,\n                    transaction\n                ]);\n                subdocsRemoved.forEach((subdoc)=>subdoc.destroy());\n            }\n            if (transactionCleanups.length <= i + 1) {\n                doc._transactionCleanups = [];\n                doc.emit(\"afterAllTransactions\", [\n                    doc,\n                    transactionCleanups\n                ]);\n            } else cleanupTransactions(transactionCleanups, i + 1);\n        }\n    }\n};\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @template T\n * @param {Doc} doc\n * @param {function(Transaction):T} f\n * @param {any} [origin=true]\n * @return {T}\n *\n * @function\n */ const transact = (doc, f, origin = null, local = true)=>{\n    const transactionCleanups = doc._transactionCleanups;\n    let initialCall = false;\n    /**\n   * @type {any}\n   */ let result = null;\n    if (doc._transaction === null) {\n        initialCall = true;\n        doc._transaction = new Transaction(doc, origin, local);\n        transactionCleanups.push(doc._transaction);\n        if (transactionCleanups.length === 1) doc.emit(\"beforeAllTransactions\", [\n            doc\n        ]);\n        doc.emit(\"beforeTransaction\", [\n            doc._transaction,\n            doc\n        ]);\n    }\n    try {\n        result = f(doc._transaction);\n    } finally{\n        if (initialCall) {\n            const finishCleanup = doc._transaction === transactionCleanups[0];\n            doc._transaction = null;\n            if (finishCleanup) // The first transaction ended, now process observer calls.\n            // Observer call may create new transactions for which we need to call the observers and do cleanup.\n            // We don't want to nest these calls, so we execute these calls one after\n            // another.\n            // Also we need to ensure that all cleanups are called, even if the\n            // observes throw errors.\n            // This file is full of hacky try {} finally {} blocks to ensure that an\n            // event can throw errors and also that the cleanup is called.\n            cleanupTransactions(transactionCleanups, 0);\n        }\n    }\n    return result;\n};\nclass StackItem {\n    /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */ constructor(deletions, insertions){\n        this.insertions = insertions;\n        this.deletions = deletions;\n        /**\n     * Use this to save and restore metadata like selection range\n     */ this.meta = new Map();\n    }\n}\n/**\n * @param {Transaction} tr\n * @param {UndoManager} um\n * @param {StackItem} stackItem\n */ const clearUndoManagerStackItem = (tr, um, stackItem)=>{\n    iterateDeletedStructs(tr, stackItem.deletions, (item)=>{\n        if (item instanceof Item && um.scope.some((type)=>isParentOf(type, item))) keepItem(item, false);\n    });\n};\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */ const popStackItem = (undoManager, stack, eventType)=>{\n    /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */ let result = null;\n    /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */ let _tr = null;\n    const doc = undoManager.doc;\n    const scope = undoManager.scope;\n    transact(doc, (transaction)=>{\n        while(stack.length > 0 && result === null){\n            const store = doc.store;\n            const stackItem = /** @type {StackItem} */ stack.pop();\n            /**\n       * @type {Set<Item>}\n       */ const itemsToRedo = new Set();\n            /**\n       * @type {Array<Item>}\n       */ const itemsToDelete = [];\n            let performedChange = false;\n            iterateDeletedStructs(transaction, stackItem.insertions, (struct)=>{\n                if (struct instanceof Item) {\n                    if (struct.redone !== null) {\n                        let { item, diff } = followRedone(store, struct.id);\n                        if (diff > 0) item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff));\n                        struct = item;\n                    }\n                    if (!struct.deleted && scope.some((type)=>isParentOf(type, /** @type {Item} */ struct))) itemsToDelete.push(struct);\n                }\n            });\n            iterateDeletedStructs(transaction, stackItem.deletions, (struct)=>{\n                if (struct instanceof Item && scope.some((type)=>isParentOf(type, struct)) && // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n                !isDeleted(stackItem.insertions, struct.id)) itemsToRedo.add(struct);\n            });\n            itemsToRedo.forEach((struct)=>{\n                performedChange = redoItem(transaction, struct, itemsToRedo, stackItem.insertions, undoManager.ignoreRemoteMapChanges, undoManager) !== null || performedChange;\n            });\n            // We want to delete in reverse order so that children are deleted before\n            // parents, so we have more information available when items are filtered.\n            for(let i = itemsToDelete.length - 1; i >= 0; i--){\n                const item = itemsToDelete[i];\n                if (undoManager.deleteFilter(item)) {\n                    item.delete(transaction);\n                    performedChange = true;\n                }\n            }\n            result = performedChange ? stackItem : null;\n        }\n        transaction.changed.forEach((subProps, type)=>{\n            // destroy search marker if necessary\n            if (subProps.has(null) && type._searchMarker) type._searchMarker.length = 0;\n        });\n        _tr = transaction;\n    }, undoManager);\n    if (result != null) {\n        const changedParentTypes = _tr.changedParentTypes;\n        undoManager.emit(\"stack-item-popped\", [\n            {\n                stackItem: result,\n                type: eventType,\n                changedParentTypes\n            },\n            undoManager\n        ]);\n    }\n    return result;\n};\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Transaction):boolean} [UndoManagerOptions.captureTransaction] Do not capture changes of a Transaction if result false.\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter what an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n * @property {boolean} [ignoreRemoteMapChanges] Experimental. By default, the UndoManager will never overwrite remote changes. Enable this property to enable overwriting remote changes on key-value changes (Y.Map, properties on Y.Xml, etc..).\n * @property {Doc} [doc] The document that this UndoManager operates on. Only needed if typeScope is empty.\n */ /**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'|'stack-cleared'|'stack-item-updated'>}\n */ class UndoManager extends (0, _observable.Observable) {\n    /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */ constructor(typeScope, { captureTimeout = 500, captureTransaction = (_tr)=>true, deleteFilter = ()=>true, trackedOrigins = new Set([\n        null\n    ]), ignoreRemoteMapChanges = false, doc = /** @type {Doc} */ _array.isArray(typeScope) ? typeScope[0].doc : typeScope.doc } = {}){\n        super();\n        /**\n     * @type {Array<AbstractType<any>>}\n     */ this.scope = [];\n        this.doc = doc;\n        this.addToScope(typeScope);\n        this.deleteFilter = deleteFilter;\n        trackedOrigins.add(this);\n        this.trackedOrigins = trackedOrigins;\n        this.captureTransaction = captureTransaction;\n        /**\n     * @type {Array<StackItem>}\n     */ this.undoStack = [];\n        /**\n     * @type {Array<StackItem>}\n     */ this.redoStack = [];\n        /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */ this.undoing = false;\n        this.redoing = false;\n        this.lastChange = 0;\n        this.ignoreRemoteMapChanges = ignoreRemoteMapChanges;\n        this.captureTimeout = captureTimeout;\n        /**\n     * @param {Transaction} transaction\n     */ this.afterTransactionHandler = (transaction)=>{\n            // Only track certain transactions\n            if (!this.captureTransaction(transaction) || !this.scope.some((type)=>transaction.changedParentTypes.has(type)) || !this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor))) return;\n            const undoing = this.undoing;\n            const redoing = this.redoing;\n            const stack = undoing ? this.redoStack : this.undoStack;\n            if (undoing) this.stopCapturing(); // next undo should not be appended to last stack item\n            else if (!redoing) // neither undoing nor redoing: delete redoStack\n            this.clear(false, true);\n            const insertions = new DeleteSet();\n            transaction.afterState.forEach((endClock, client)=>{\n                const startClock = transaction.beforeState.get(client) || 0;\n                const len = endClock - startClock;\n                if (len > 0) addToDeleteSet(insertions, client, startClock, len);\n            });\n            const now = _time.getUnixTime();\n            let didAdd = false;\n            if (this.lastChange > 0 && now - this.lastChange < this.captureTimeout && stack.length > 0 && !undoing && !redoing) {\n                // append change to last stack op\n                const lastOp = stack[stack.length - 1];\n                lastOp.deletions = mergeDeleteSets([\n                    lastOp.deletions,\n                    transaction.deleteSet\n                ]);\n                lastOp.insertions = mergeDeleteSets([\n                    lastOp.insertions,\n                    insertions\n                ]);\n            } else {\n                // create a new stack op\n                stack.push(new StackItem(transaction.deleteSet, insertions));\n                didAdd = true;\n            }\n            if (!undoing && !redoing) this.lastChange = now;\n            // make sure that deleted structs are not gc'd\n            iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ (item)=>{\n                if (item instanceof Item && this.scope.some((type)=>isParentOf(type, item))) keepItem(item, true);\n            });\n            const changeEvent = [\n                {\n                    stackItem: stack[stack.length - 1],\n                    origin: transaction.origin,\n                    type: undoing ? \"redo\" : \"undo\",\n                    changedParentTypes: transaction.changedParentTypes\n                },\n                this\n            ];\n            if (didAdd) this.emit(\"stack-item-added\", changeEvent);\n            else this.emit(\"stack-item-updated\", changeEvent);\n        };\n        this.doc.on(\"afterTransaction\", this.afterTransactionHandler);\n        this.doc.on(\"destroy\", ()=>{\n            this.destroy();\n        });\n    }\n    /**\n   * @param {Array<AbstractType<any>> | AbstractType<any>} ytypes\n   */ addToScope(ytypes) {\n        ytypes = _array.isArray(ytypes) ? ytypes : [\n            ytypes\n        ];\n        ytypes.forEach((ytype)=>{\n            if (this.scope.every((yt)=>yt !== ytype)) {\n                if (ytype.doc !== this.doc) _logging.warn(\"[yjs#509] Not same Y.Doc\"); // use MultiDocUndoManager instead. also see https://github.com/yjs/yjs/issues/509\n                this.scope.push(ytype);\n            }\n        });\n    }\n    /**\n   * @param {any} origin\n   */ addTrackedOrigin(origin) {\n        this.trackedOrigins.add(origin);\n    }\n    /**\n   * @param {any} origin\n   */ removeTrackedOrigin(origin) {\n        this.trackedOrigins.delete(origin);\n    }\n    clear(clearUndoStack = true, clearRedoStack = true) {\n        if (clearUndoStack && this.canUndo() || clearRedoStack && this.canRedo()) this.doc.transact((tr)=>{\n            if (clearUndoStack) {\n                this.undoStack.forEach((item)=>clearUndoManagerStackItem(tr, this, item));\n                this.undoStack = [];\n            }\n            if (clearRedoStack) {\n                this.redoStack.forEach((item)=>clearUndoManagerStackItem(tr, this, item));\n                this.redoStack = [];\n            }\n            this.emit(\"stack-cleared\", [\n                {\n                    undoStackCleared: clearUndoStack,\n                    redoStackCleared: clearRedoStack\n                }\n            ]);\n        });\n    }\n    /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */ stopCapturing() {\n        this.lastChange = 0;\n    }\n    /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */ undo() {\n        this.undoing = true;\n        let res;\n        try {\n            res = popStackItem(this, this.undoStack, \"undo\");\n        } finally{\n            this.undoing = false;\n        }\n        return res;\n    }\n    /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */ redo() {\n        this.redoing = true;\n        let res;\n        try {\n            res = popStackItem(this, this.redoStack, \"redo\");\n        } finally{\n            this.redoing = false;\n        }\n        return res;\n    }\n    /**\n   * Are undo steps available?\n   *\n   * @return {boolean} `true` if undo is possible\n   */ canUndo() {\n        return this.undoStack.length > 0;\n    }\n    /**\n   * Are redo steps available?\n   *\n   * @return {boolean} `true` if redo is possible\n   */ canRedo() {\n        return this.redoStack.length > 0;\n    }\n    destroy() {\n        this.trackedOrigins.delete(this);\n        this.doc.off(\"afterTransaction\", this.afterTransactionHandler);\n        super.destroy();\n    }\n}\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */ function* lazyStructReaderGenerator(decoder) {\n    const numOfStateUpdates = _decoding.readVarUint(decoder.restDecoder);\n    for(let i = 0; i < numOfStateUpdates; i++){\n        const numberOfStructs = _decoding.readVarUint(decoder.restDecoder);\n        const client = decoder.readClient();\n        let clock = _decoding.readVarUint(decoder.restDecoder);\n        for(let i = 0; i < numberOfStructs; i++){\n            const info = decoder.readInfo();\n            // @todo use switch instead of ifs\n            if (info === 10) {\n                const len = _decoding.readVarUint(decoder.restDecoder);\n                yield new Skip(createID(client, clock), len);\n                clock += len;\n            } else if ((_binary.BITS5 & info) !== 0) {\n                const cantCopyParentInfo = (info & (_binary.BIT7 | _binary.BIT8)) === 0;\n                // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n                // and we read the next string as parentYKey.\n                // It indicates how we store/retrieve parent from `y.share`\n                // @type {string|null}\n                const struct = new Item(createID(client, clock), null, (info & _binary.BIT8) === _binary.BIT8 ? decoder.readLeftID() : null, null, (info & _binary.BIT7) === _binary.BIT7 ? decoder.readRightID() : null, // @ts-ignore Force writing a string here.\n                cantCopyParentInfo ? decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID() : null, cantCopyParentInfo && (info & _binary.BIT6) === _binary.BIT6 ? decoder.readString() : null, readItemContent(decoder, info) // item content\n                );\n                yield struct;\n                clock += struct.length;\n            } else {\n                const len = decoder.readLen();\n                yield new GC(createID(client, clock), len);\n                clock += len;\n            }\n        }\n    }\n}\nclass LazyStructReader {\n    /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */ constructor(decoder, filterSkips){\n        this.gen = lazyStructReaderGenerator(decoder);\n        /**\n     * @type {null | Item | Skip | GC}\n     */ this.curr = null;\n        this.done = false;\n        this.filterSkips = filterSkips;\n        this.next();\n    }\n    /**\n   * @return {Item | GC | Skip |null}\n   */ next() {\n        // ignore \"Skip\" structs\n        do this.curr = this.gen.next().value || null;\n        while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip);\n        return this.curr;\n    }\n}\n/**\n * @param {Uint8Array} update\n *\n */ const logUpdate = (update)=>logUpdateV2(update, UpdateDecoderV1);\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */ const logUpdateV2 = (update, YDecoder = UpdateDecoderV2)=>{\n    const structs = [];\n    const updateDecoder = new YDecoder(_decoding.createDecoder(update));\n    const lazyDecoder = new LazyStructReader(updateDecoder, false);\n    for(let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next())structs.push(curr);\n    _logging.print(\"Structs: \", structs);\n    const ds = readDeleteSet(updateDecoder);\n    _logging.print(\"DeleteSet: \", ds);\n};\n/**\n * @param {Uint8Array} update\n *\n */ const decodeUpdate = (update)=>decodeUpdateV2(update, UpdateDecoderV1);\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */ const decodeUpdateV2 = (update, YDecoder = UpdateDecoderV2)=>{\n    const structs = [];\n    const updateDecoder = new YDecoder(_decoding.createDecoder(update));\n    const lazyDecoder = new LazyStructReader(updateDecoder, false);\n    for(let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next())structs.push(curr);\n    return {\n        structs,\n        ds: readDeleteSet(updateDecoder)\n    };\n};\nclass LazyStructWriter {\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */ constructor(encoder){\n        this.currClient = 0;\n        this.startClock = 0;\n        this.written = 0;\n        this.encoder = encoder;\n        /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */ this.clientStructs = [];\n    }\n}\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */ const mergeUpdates = (updates)=>mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1);\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */ const encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2)=>{\n    const encoder = new YEncoder();\n    const updateDecoder = new LazyStructReader(new YDecoder(_decoding.createDecoder(update)), false);\n    let curr = updateDecoder.curr;\n    if (curr !== null) {\n        let size = 0;\n        let currClient = curr.id.client;\n        let stopCounting = curr.id.clock !== 0; // must start at 0\n        let currClock = stopCounting ? 0 : curr.id.clock + curr.length;\n        for(; curr !== null; curr = updateDecoder.next()){\n            if (currClient !== curr.id.client) {\n                if (currClock !== 0) {\n                    size++;\n                    // We found a new client\n                    // write what we have to the encoder\n                    _encoding.writeVarUint(encoder.restEncoder, currClient);\n                    _encoding.writeVarUint(encoder.restEncoder, currClock);\n                }\n                currClient = curr.id.client;\n                currClock = 0;\n                stopCounting = curr.id.clock !== 0;\n            }\n            // we ignore skips\n            if (curr.constructor === Skip) stopCounting = true;\n            if (!stopCounting) currClock = curr.id.clock + curr.length;\n        }\n        // write what we have\n        if (currClock !== 0) {\n            size++;\n            _encoding.writeVarUint(encoder.restEncoder, currClient);\n            _encoding.writeVarUint(encoder.restEncoder, currClock);\n        }\n        // prepend the size of the state vector\n        const enc = _encoding.createEncoder();\n        _encoding.writeVarUint(enc, size);\n        _encoding.writeBinaryEncoder(enc, encoder.restEncoder);\n        encoder.restEncoder = enc;\n        return encoder.toUint8Array();\n    } else {\n        _encoding.writeVarUint(encoder.restEncoder, 0);\n        return encoder.toUint8Array();\n    }\n};\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */ const encodeStateVectorFromUpdate = (update)=>encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1);\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */ const parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2)=>{\n    /**\n   * @type {Map<number, number>}\n   */ const from = new Map();\n    /**\n   * @type {Map<number, number>}\n   */ const to = new Map();\n    const updateDecoder = new LazyStructReader(new YDecoder(_decoding.createDecoder(update)), false);\n    let curr = updateDecoder.curr;\n    if (curr !== null) {\n        let currClient = curr.id.client;\n        let currClock = curr.id.clock;\n        // write the beginning to `from`\n        from.set(currClient, currClock);\n        for(; curr !== null; curr = updateDecoder.next()){\n            if (currClient !== curr.id.client) {\n                // We found a new client\n                // write the end to `to`\n                to.set(currClient, currClock);\n                // write the beginning to `from`\n                from.set(curr.id.client, curr.id.clock);\n                // update currClient\n                currClient = curr.id.client;\n            }\n            currClock = curr.id.clock + curr.length;\n        }\n        // write the end to `to`\n        to.set(currClient, currClock);\n    }\n    return {\n        from,\n        to\n    };\n};\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */ const parseUpdateMeta = (update)=>parseUpdateMetaV2(update, UpdateDecoderV1);\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */ const sliceStruct = (left, diff)=>{\n    if (left.constructor === GC) {\n        const { client, clock } = left.id;\n        return new GC(createID(client, clock + diff), left.length - diff);\n    } else if (left.constructor === Skip) {\n        const { client, clock } = left.id;\n        return new Skip(createID(client, clock + diff), left.length - diff);\n    } else {\n        const leftItem = /** @type {Item} */ left;\n        const { client, clock } = leftItem.id;\n        return new Item(createID(client, clock + diff), null, createID(client, clock + diff - 1), null, leftItem.rightOrigin, leftItem.parent, leftItem.parentSub, leftItem.content.splice(diff));\n    }\n};\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */ const mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2)=>{\n    if (updates.length === 1) return updates[0];\n    const updateDecoders = updates.map((update)=>new YDecoder(_decoding.createDecoder(update)));\n    let lazyStructDecoders = updateDecoders.map((decoder)=>new LazyStructReader(decoder, true));\n    /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */ let currWrite = null;\n    const updateEncoder = new YEncoder();\n    // write structs lazily\n    const lazyStructEncoder = new LazyStructWriter(updateEncoder);\n    // Note: We need to ensure that all lazyStructDecoders are fully consumed\n    // Note: Should merge document updates whenever possible - even from different updates\n    // Note: Should handle that some operations cannot be applied yet ()\n    while(true){\n        // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n        lazyStructDecoders = lazyStructDecoders.filter((dec)=>dec.curr !== null);\n        lazyStructDecoders.sort(/** @type {function(any,any):number} */ (dec1, dec2)=>{\n            if (dec1.curr.id.client === dec2.curr.id.client) {\n                const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock;\n                if (clockDiff === 0) // @todo remove references to skip since the structDecoders must filter Skips.\n                return dec1.curr.constructor === dec2.curr.constructor ? 0 : dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\n                ;\n                else return clockDiff;\n            } else return dec2.curr.id.client - dec1.curr.id.client;\n        });\n        if (lazyStructDecoders.length === 0) break;\n        const currDecoder = lazyStructDecoders[0];\n        // write from currDecoder until the next operation is from another client or if filler-struct\n        // then we need to reorder the decoders and find the next operation to write\n        const firstClient = /** @type {Item | GC} */ currDecoder.curr.id.client;\n        if (currWrite !== null) {\n            let curr = /** @type {Item | GC | null} */ currDecoder.curr;\n            let iterated = false;\n            // iterate until we find something that we haven't written already\n            // remember: first the high client-ids are written\n            while(curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client){\n                curr = currDecoder.next();\n                iterated = true;\n            }\n            if (curr === null || // current decoder is empty\n            curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n            iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length // the above while loop was used and we are potentially missing updates\n            ) continue;\n            if (firstClient !== currWrite.struct.id.client) {\n                writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n                currWrite = {\n                    struct: curr,\n                    offset: 0\n                };\n                currDecoder.next();\n            } else if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n                // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n                if (currWrite.struct.constructor === Skip) // extend existing skip\n                currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock;\n                else {\n                    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n                    const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length;\n                    /**\n             * @type {Skip}\n             */ const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff);\n                    currWrite = {\n                        struct,\n                        offset: 0\n                    };\n                }\n            } else {\n                const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock;\n                if (diff > 0) {\n                    if (currWrite.struct.constructor === Skip) // prefer to slice Skip because the other struct might contain more information\n                    currWrite.struct.length -= diff;\n                    else curr = sliceStruct(curr, diff);\n                }\n                if (!currWrite.struct.mergeWith(/** @type {any} */ curr)) {\n                    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n                    currWrite = {\n                        struct: curr,\n                        offset: 0\n                    };\n                    currDecoder.next();\n                }\n            }\n        } else {\n            currWrite = {\n                struct: /** @type {Item | GC} */ currDecoder.curr,\n                offset: 0\n            };\n            currDecoder.next();\n        }\n        for(let next = currDecoder.curr; next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip; next = currDecoder.next()){\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            currWrite = {\n                struct: next,\n                offset: 0\n            };\n        }\n    }\n    if (currWrite !== null) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n        currWrite = null;\n    }\n    finishLazyStructWriting(lazyStructEncoder);\n    const dss = updateDecoders.map((decoder)=>readDeleteSet(decoder));\n    const ds = mergeDeleteSets(dss);\n    writeDeleteSet(updateEncoder, ds);\n    return updateEncoder.toUint8Array();\n};\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */ const diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2)=>{\n    const state = decodeStateVector(sv);\n    const encoder = new YEncoder();\n    const lazyStructWriter = new LazyStructWriter(encoder);\n    const decoder = new YDecoder(_decoding.createDecoder(update));\n    const reader = new LazyStructReader(decoder, false);\n    while(reader.curr){\n        const curr = reader.curr;\n        const currClient = curr.id.client;\n        const svClock = state.get(currClient) || 0;\n        if (reader.curr.constructor === Skip) {\n            // the first written struct shouldn't be a skip\n            reader.next();\n            continue;\n        }\n        if (curr.id.clock + curr.length > svClock) {\n            writeStructToLazyStructWriter(lazyStructWriter, curr, _math.max(svClock - curr.id.clock, 0));\n            reader.next();\n            while(reader.curr && reader.curr.id.client === currClient){\n                writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0);\n                reader.next();\n            }\n        } else // read until something new comes up\n        while(reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock)reader.next();\n    }\n    finishLazyStructWriting(lazyStructWriter);\n    // write ds\n    const ds = readDeleteSet(decoder);\n    writeDeleteSet(encoder, ds);\n    return encoder.toUint8Array();\n};\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */ const diffUpdate = (update, sv)=>diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1);\n/**\n * @param {LazyStructWriter} lazyWriter\n */ const flushLazyStructWriter = (lazyWriter)=>{\n    if (lazyWriter.written > 0) {\n        lazyWriter.clientStructs.push({\n            written: lazyWriter.written,\n            restEncoder: _encoding.toUint8Array(lazyWriter.encoder.restEncoder)\n        });\n        lazyWriter.encoder.restEncoder = _encoding.createEncoder();\n        lazyWriter.written = 0;\n    }\n};\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */ const writeStructToLazyStructWriter = (lazyWriter, struct, offset)=>{\n    // flush curr if we start another client\n    if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) flushLazyStructWriter(lazyWriter);\n    if (lazyWriter.written === 0) {\n        lazyWriter.currClient = struct.id.client;\n        // write next client\n        lazyWriter.encoder.writeClient(struct.id.client);\n        // write startClock\n        _encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset);\n    }\n    struct.write(lazyWriter.encoder, offset);\n    lazyWriter.written++;\n};\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */ const finishLazyStructWriting = (lazyWriter)=>{\n    flushLazyStructWriter(lazyWriter);\n    // this is a fresh encoder because we called flushCurr\n    const restEncoder = lazyWriter.encoder.restEncoder;\n    /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */ // write # states that were updated - i.e. the clients\n    _encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length);\n    for(let i = 0; i < lazyWriter.clientStructs.length; i++){\n        const partStructs = lazyWriter.clientStructs[i];\n        /**\n     * Works similarly to `writeStructs`\n     */ // write # encoded structs\n        _encoding.writeVarUint(restEncoder, partStructs.written);\n        // write the rest of the fragment\n        _encoding.writeUint8Array(restEncoder, partStructs.restEncoder);\n    }\n};\n/**\n * @param {Uint8Array} update\n * @param {function(Item|GC|Skip):Item|GC|Skip} blockTransformer\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */ const convertUpdateFormat = (update, blockTransformer, YDecoder, YEncoder)=>{\n    const updateDecoder = new YDecoder(_decoding.createDecoder(update));\n    const lazyDecoder = new LazyStructReader(updateDecoder, false);\n    const updateEncoder = new YEncoder();\n    const lazyWriter = new LazyStructWriter(updateEncoder);\n    for(let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next())writeStructToLazyStructWriter(lazyWriter, blockTransformer(curr), 0);\n    finishLazyStructWriting(lazyWriter);\n    const ds = readDeleteSet(updateDecoder);\n    writeDeleteSet(updateEncoder, ds);\n    return updateEncoder.toUint8Array();\n};\n/**\n * @typedef {Object} ObfuscatorOptions\n * @property {boolean} [ObfuscatorOptions.formatting=true]\n * @property {boolean} [ObfuscatorOptions.subdocs=true]\n * @property {boolean} [ObfuscatorOptions.yxml=true] Whether to obfuscate nodeName / hookName\n */ /**\n * @param {ObfuscatorOptions} obfuscator\n */ const createObfuscator = ({ formatting = true, subdocs = true, yxml = true } = {})=>{\n    let i = 0;\n    const mapKeyCache = _map.create();\n    const nodeNameCache = _map.create();\n    const formattingKeyCache = _map.create();\n    const formattingValueCache = _map.create();\n    formattingValueCache.set(null, null); // end of a formatting range should always be the end of a formatting range\n    /**\n   * @param {Item|GC|Skip} block\n   * @return {Item|GC|Skip}\n   */ return (block)=>{\n        switch(block.constructor){\n            case GC:\n            case Skip:\n                return block;\n            case Item:\n                {\n                    const item = /** @type {Item} */ block;\n                    const content = item.content;\n                    switch(content.constructor){\n                        case ContentDeleted:\n                            break;\n                        case ContentType:\n                            if (yxml) {\n                                const type = /** @type {ContentType} */ content.type;\n                                if (type instanceof YXmlElement) type.nodeName = _map.setIfUndefined(nodeNameCache, type.nodeName, ()=>\"node-\" + i);\n                                if (type instanceof YXmlHook) type.hookName = _map.setIfUndefined(nodeNameCache, type.hookName, ()=>\"hook-\" + i);\n                            }\n                            break;\n                        case ContentAny:\n                            {\n                                const c = /** @type {ContentAny} */ content;\n                                c.arr = c.arr.map(()=>i);\n                                break;\n                            }\n                        case ContentBinary:\n                            {\n                                const c = /** @type {ContentBinary} */ content;\n                                c.content = new Uint8Array([\n                                    i\n                                ]);\n                                break;\n                            }\n                        case ContentDoc:\n                            {\n                                const c = /** @type {ContentDoc} */ content;\n                                if (subdocs) {\n                                    c.opts = {};\n                                    c.doc.guid = i + \"\";\n                                }\n                                break;\n                            }\n                        case ContentEmbed:\n                            {\n                                const c = /** @type {ContentEmbed} */ content;\n                                c.embed = {};\n                                break;\n                            }\n                        case ContentFormat:\n                            {\n                                const c = /** @type {ContentFormat} */ content;\n                                if (formatting) {\n                                    c.key = _map.setIfUndefined(formattingKeyCache, c.key, ()=>i + \"\");\n                                    c.value = _map.setIfUndefined(formattingValueCache, c.value, ()=>({\n                                            i\n                                        }));\n                                }\n                                break;\n                            }\n                        case ContentJSON:\n                            {\n                                const c = /** @type {ContentJSON} */ content;\n                                c.arr = c.arr.map(()=>i);\n                                break;\n                            }\n                        case ContentString:\n                            {\n                                const c = /** @type {ContentString} */ content;\n                                c.str = _string.repeat(i % 10 + \"\", c.str.length);\n                                break;\n                            }\n                        default:\n                            // unknown content type\n                            _error.unexpectedCase();\n                    }\n                    if (item.parentSub) item.parentSub = _map.setIfUndefined(mapKeyCache, item.parentSub, ()=>i + \"\");\n                    i++;\n                    return block;\n                }\n            default:\n                // unknown block-type\n                _error.unexpectedCase();\n        }\n    };\n};\n/**\n * This function obfuscates the content of a Yjs update. This is useful to share\n * buggy Yjs documents while significantly limiting the possibility that a\n * developer can on the user. Note that it might still be possible to deduce\n * some information by analyzing the \"structure\" of the document or by analyzing\n * the typing behavior using the CRDT-related metadata that is still kept fully\n * intact.\n *\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */ const obfuscateUpdate = (update, opts)=>convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV1, UpdateEncoderV1);\n/**\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */ const obfuscateUpdateV2 = (update, opts)=>convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV2, UpdateEncoderV2);\n/**\n * @param {Uint8Array} update\n */ const convertUpdateFormatV1ToV2 = (update)=>convertUpdateFormat(update, _function.id, UpdateDecoderV1, UpdateEncoderV2);\n/**\n * @param {Uint8Array} update\n */ const convertUpdateFormatV2ToV1 = (update)=>convertUpdateFormat(update, _function.id, UpdateDecoderV2, UpdateEncoderV1);\nconst errorComputeChanges = \"You must not compute changes after the event-handler fired.\";\n/**\n * @template {AbstractType<any>} T\n * YEvent describes the changes on a YType.\n */ class YEvent {\n    /**\n   * @param {T} target The changed type.\n   * @param {Transaction} transaction\n   */ constructor(target, transaction){\n        /**\n     * The type on which this event was created on.\n     * @type {T}\n     */ this.target = target;\n        /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */ this.currentTarget = target;\n        /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */ this.transaction = transaction;\n        /**\n     * @type {Object|null}\n     */ this._changes = null;\n        /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */ this._keys = null;\n        /**\n     * @type {null | Array<{ insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */ this._delta = null;\n        /**\n     * @type {Array<string|number>|null}\n     */ this._path = null;\n    }\n    /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */ get path() {\n        return this._path || (this._path = getPathTo(this.currentTarget, this.target));\n    }\n    /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */ deletes(struct) {\n        return isDeleted(this.transaction.deleteSet, struct.id);\n    }\n    /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */ get keys() {\n        if (this._keys === null) {\n            if (this.transaction.doc._transactionCleanups.length === 0) throw _error.create(errorComputeChanges);\n            const keys = new Map();\n            const target = this.target;\n            const changed = /** @type Set<string|null> */ this.transaction.changed.get(target);\n            changed.forEach((key)=>{\n                if (key !== null) {\n                    const item = /** @type {Item} */ target._map.get(key);\n                    /**\n           * @type {'delete' | 'add' | 'update'}\n           */ let action;\n                    let oldValue;\n                    if (this.adds(item)) {\n                        let prev = item.left;\n                        while(prev !== null && this.adds(prev))prev = prev.left;\n                        if (this.deletes(item)) {\n                            if (prev !== null && this.deletes(prev)) {\n                                action = \"delete\";\n                                oldValue = _array.last(prev.content.getContent());\n                            } else return;\n                        } else if (prev !== null && this.deletes(prev)) {\n                            action = \"update\";\n                            oldValue = _array.last(prev.content.getContent());\n                        } else {\n                            action = \"add\";\n                            oldValue = undefined;\n                        }\n                    } else {\n                        if (this.deletes(item)) {\n                            action = \"delete\";\n                            oldValue = _array.last(/** @type {Item} */ item.content.getContent());\n                        } else return; // nop\n                    }\n                    keys.set(key, {\n                        action,\n                        oldValue\n                    });\n                }\n            });\n            this._keys = keys;\n        }\n        return this._keys;\n    }\n    /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */ get delta() {\n        return this.changes.delta;\n    }\n    /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */ adds(struct) {\n        return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0);\n    }\n    /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */ get changes() {\n        let changes = this._changes;\n        if (changes === null) {\n            if (this.transaction.doc._transactionCleanups.length === 0) throw _error.create(errorComputeChanges);\n            const target = this.target;\n            const added = _set.create();\n            const deleted = _set.create();\n            /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */ const delta = [];\n            changes = {\n                added,\n                deleted,\n                delta,\n                keys: this.keys\n            };\n            const changed = /** @type Set<string|null> */ this.transaction.changed.get(target);\n            if (changed.has(null)) {\n                /**\n         * @type {any}\n         */ let lastOp = null;\n                const packOp = ()=>{\n                    if (lastOp) delta.push(lastOp);\n                };\n                for(let item = target._start; item !== null; item = item.right){\n                    if (item.deleted) {\n                        if (this.deletes(item) && !this.adds(item)) {\n                            if (lastOp === null || lastOp.delete === undefined) {\n                                packOp();\n                                lastOp = {\n                                    delete: 0\n                                };\n                            }\n                            lastOp.delete += item.length;\n                            deleted.add(item);\n                        } // else nop\n                    } else if (this.adds(item)) {\n                        if (lastOp === null || lastOp.insert === undefined) {\n                            packOp();\n                            lastOp = {\n                                insert: []\n                            };\n                        }\n                        lastOp.insert = lastOp.insert.concat(item.content.getContent());\n                        added.add(item);\n                    } else {\n                        if (lastOp === null || lastOp.retain === undefined) {\n                            packOp();\n                            lastOp = {\n                                retain: 0\n                            };\n                        }\n                        lastOp.retain += item.length;\n                    }\n                }\n                if (lastOp !== null && lastOp.retain === undefined) packOp();\n            }\n            this._changes = changes;\n        }\n        return /** @type {any} */ changes;\n    }\n}\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */ const getPathTo = (parent, child)=>{\n    const path = [];\n    while(child._item !== null && child !== parent){\n        if (child._item.parentSub !== null) // parent is map-ish\n        path.unshift(child._item.parentSub);\n        else {\n            // parent is array-ish\n            let i = 0;\n            let c = /** @type {AbstractType<any>} */ child._item.parent._start;\n            while(c !== child._item && c !== null){\n                if (!c.deleted) i++;\n                c = c.right;\n            }\n            path.unshift(i);\n        }\n        child = /** @type {AbstractType<any>} */ child._item.parent;\n    }\n    return path;\n};\nconst maxSearchMarker = 80;\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */ let globalSearchMarkerTimestamp = 0;\nclass ArraySearchMarker {\n    /**\n   * @param {Item} p\n   * @param {number} index\n   */ constructor(p, index){\n        p.marker = true;\n        this.p = p;\n        this.index = index;\n        this.timestamp = globalSearchMarkerTimestamp++;\n    }\n}\n/**\n * @param {ArraySearchMarker} marker\n */ const refreshMarkerTimestamp = (marker)=>{\n    marker.timestamp = globalSearchMarkerTimestamp++;\n};\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */ const overwriteMarker = (marker, p, index)=>{\n    marker.p.marker = false;\n    marker.p = p;\n    p.marker = true;\n    marker.index = index;\n    marker.timestamp = globalSearchMarkerTimestamp++;\n};\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */ const markPosition = (searchMarker, p, index)=>{\n    if (searchMarker.length >= maxSearchMarker) {\n        // override oldest marker (we don't want to create more objects)\n        const marker = searchMarker.reduce((a, b)=>a.timestamp < b.timestamp ? a : b);\n        overwriteMarker(marker, p, index);\n        return marker;\n    } else {\n        // create new marker\n        const pm = new ArraySearchMarker(p, index);\n        searchMarker.push(pm);\n        return pm;\n    }\n};\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */ const findMarker = (yarray, index)=>{\n    if (yarray._start === null || index === 0 || yarray._searchMarker === null) return null;\n    const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b)=>_math.abs(index - a.index) < _math.abs(index - b.index) ? a : b);\n    let p = yarray._start;\n    let pindex = 0;\n    if (marker !== null) {\n        p = marker.p;\n        pindex = marker.index;\n        refreshMarkerTimestamp(marker); // we used it, we might need to use it again\n    }\n    // iterate to right if possible\n    while(p.right !== null && pindex < index){\n        if (!p.deleted && p.countable) {\n            if (index < pindex + p.length) break;\n            pindex += p.length;\n        }\n        p = p.right;\n    }\n    // iterate to left if necessary (might be that pindex > index)\n    while(p.left !== null && pindex > index){\n        p = p.left;\n        if (!p.deleted && p.countable) pindex -= p.length;\n    }\n    // we want to make sure that p can't be merged with left, because that would screw up everything\n    // in that cas just return what we have (it is most likely the best marker anyway)\n    // iterate to left until p can't be merged with left\n    while(p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock){\n        p = p.left;\n        if (!p.deleted && p.countable) pindex -= p.length;\n    }\n    // @todo remove!\n    // assure position\n    // {\n    //   let start = yarray._start\n    //   let pos = 0\n    //   while (start !== p) {\n    //     if (!start.deleted && start.countable) {\n    //       pos += start.length\n    //     }\n    //     start = /** @type {Item} */ (start.right)\n    //   }\n    //   if (pos !== pindex) {\n    //     debugger\n    //     throw new Error('Gotcha position fail!')\n    //   }\n    // }\n    // if (marker) {\n    //   if (window.lengthes == null) {\n    //     window.lengthes = []\n    //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n    //   }\n    //   window.lengthes.push(marker.index - pindex)\n    //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n    // }\n    if (marker !== null && _math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ p.parent.length / maxSearchMarker) {\n        // adjust existing marker\n        overwriteMarker(marker, p, pindex);\n        return marker;\n    } else // create new marker\n    return markPosition(yarray._searchMarker, p, pindex);\n};\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */ const updateMarkerChanges = (searchMarker, index, len)=>{\n    for(let i = searchMarker.length - 1; i >= 0; i--){\n        const m = searchMarker[i];\n        if (len > 0) {\n            /**\n       * @type {Item|null}\n       */ let p = m.p;\n            p.marker = false;\n            // Ideally we just want to do a simple position comparison, but this will only work if\n            // search markers don't point to deleted items for formats.\n            // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n            while(p && (p.deleted || !p.countable)){\n                p = p.left;\n                if (p && !p.deleted && p.countable) // adjust position. the loop should break now\n                m.index -= p.length;\n            }\n            if (p === null || p.marker === true) {\n                // remove search marker if updated position is null or if position is already marked\n                searchMarker.splice(i, 1);\n                continue;\n            }\n            m.p = p;\n            p.marker = true;\n        }\n        if (index < m.index || len > 0 && index === m.index) m.index = _math.max(index, m.index + len);\n    }\n};\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */ const getTypeChildren = (t)=>{\n    let s = t._start;\n    const arr = [];\n    while(s){\n        arr.push(s);\n        s = s.right;\n    }\n    return arr;\n};\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */ const callTypeObservers = (type, transaction, event)=>{\n    const changedType = type;\n    const changedParentTypes = transaction.changedParentTypes;\n    while(true){\n        // @ts-ignore\n        _map.setIfUndefined(changedParentTypes, type, ()=>[]).push(event);\n        if (type._item === null) break;\n        type = /** @type {AbstractType<any>} */ type._item.parent;\n    }\n    callEventHandlerListeners(changedType._eH, event, transaction);\n};\n/**\n * @template EventType\n * Abstract Yjs Type class\n */ class AbstractType {\n    constructor(){\n        /**\n     * @type {Item|null}\n     */ this._item = null;\n        /**\n     * @type {Map<string,Item>}\n     */ this._map = new Map();\n        /**\n     * @type {Item|null}\n     */ this._start = null;\n        /**\n     * @type {Doc|null}\n     */ this.doc = null;\n        this._length = 0;\n        /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */ this._eH = createEventHandler();\n        /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent<any>>,Transaction>}\n     */ this._dEH = createEventHandler();\n        /**\n     * @type {null | Array<ArraySearchMarker>}\n     */ this._searchMarker = null;\n    }\n    /**\n   * @return {AbstractType<any>|null}\n   */ get parent() {\n        return this._item ? /** @type {AbstractType<any>} */ this._item.parent : null;\n    }\n    /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */ _integrate(y, item) {\n        this.doc = y;\n        this._item = item;\n    }\n    /**\n   * @return {AbstractType<EventType>}\n   */ _copy() {\n        throw _error.methodUnimplemented();\n    }\n    /**\n   * @return {AbstractType<EventType>}\n   */ clone() {\n        throw _error.methodUnimplemented();\n    }\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder\n   */ _write(_encoder) {}\n    /**\n   * The first non-deleted item\n   */ get _first() {\n        let n = this._start;\n        while(n !== null && n.deleted)n = n.right;\n        return n;\n    }\n    /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} _parentSubs Keys changed on this type. `null` if list was modified.\n   */ _callObserver(transaction, _parentSubs) {\n        if (!transaction.local && this._searchMarker) this._searchMarker.length = 0;\n    }\n    /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */ observe(f) {\n        addEventHandlerListener(this._eH, f);\n    }\n    /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */ observeDeep(f) {\n        addEventHandlerListener(this._dEH, f);\n    }\n    /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */ unobserve(f) {\n        removeEventHandlerListener(this._eH, f);\n    }\n    /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */ unobserveDeep(f) {\n        removeEventHandlerListener(this._dEH, f);\n    }\n    /**\n   * @abstract\n   * @return {any}\n   */ toJSON() {}\n}\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */ const typeListSlice = (type, start, end)=>{\n    if (start < 0) start = type._length + start;\n    if (end < 0) end = type._length + end;\n    let len = end - start;\n    const cs = [];\n    let n = type._start;\n    while(n !== null && len > 0){\n        if (n.countable && !n.deleted) {\n            const c = n.content.getContent();\n            if (c.length <= start) start -= c.length;\n            else {\n                for(let i = start; i < c.length && len > 0; i++){\n                    cs.push(c[i]);\n                    len--;\n                }\n                start = 0;\n            }\n        }\n        n = n.right;\n    }\n    return cs;\n};\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */ const typeListToArray = (type)=>{\n    const cs = [];\n    let n = type._start;\n    while(n !== null){\n        if (n.countable && !n.deleted) {\n            const c = n.content.getContent();\n            for(let i = 0; i < c.length; i++)cs.push(c[i]);\n        }\n        n = n.right;\n    }\n    return cs;\n};\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */ const typeListToArraySnapshot = (type, snapshot)=>{\n    const cs = [];\n    let n = type._start;\n    while(n !== null){\n        if (n.countable && isVisible(n, snapshot)) {\n            const c = n.content.getContent();\n            for(let i = 0; i < c.length; i++)cs.push(c[i]);\n        }\n        n = n.right;\n    }\n    return cs;\n};\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */ const typeListForEach = (type, f)=>{\n    let index = 0;\n    let n = type._start;\n    while(n !== null){\n        if (n.countable && !n.deleted) {\n            const c = n.content.getContent();\n            for(let i = 0; i < c.length; i++)f(c[i], index++, type);\n        }\n        n = n.right;\n    }\n};\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */ const typeListMap = (type, f)=>{\n    /**\n   * @type {Array<any>}\n   */ const result = [];\n    typeListForEach(type, (c, i)=>{\n        result.push(f(c, i, type));\n    });\n    return result;\n};\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */ const typeListCreateIterator = (type)=>{\n    let n = type._start;\n    /**\n   * @type {Array<any>|null}\n   */ let currentContent = null;\n    let currentContentIndex = 0;\n    return {\n        [Symbol.iterator] () {\n            return this;\n        },\n        next: ()=>{\n            // find some content\n            if (currentContent === null) {\n                while(n !== null && n.deleted)n = n.right;\n                // check if we reached the end, no need to check currentContent, because it does not exist\n                if (n === null) return {\n                    done: true,\n                    value: undefined\n                };\n                // we found n, so we can set currentContent\n                currentContent = n.content.getContent();\n                currentContentIndex = 0;\n                n = n.right; // we used the content of n, now iterate to next\n            }\n            const value = currentContent[currentContentIndex++];\n            // check if we need to empty currentContent\n            if (currentContent.length <= currentContentIndex) currentContent = null;\n            return {\n                done: false,\n                value\n            };\n        }\n    };\n};\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */ const typeListGet = (type, index)=>{\n    const marker = findMarker(type, index);\n    let n = type._start;\n    if (marker !== null) {\n        n = marker.p;\n        index -= marker.index;\n    }\n    for(; n !== null; n = n.right)if (!n.deleted && n.countable) {\n        if (index < n.length) return n.content.getContent()[index];\n        index -= n.length;\n    }\n};\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */ const typeListInsertGenericsAfter = (transaction, parent, referenceItem, content)=>{\n    let left = referenceItem;\n    const doc = transaction.doc;\n    const ownClientId = doc.clientID;\n    const store = doc.store;\n    const right = referenceItem === null ? parent._start : referenceItem.right;\n    /**\n   * @type {Array<Object|Array<any>|number|null>}\n   */ let jsonContent = [];\n    const packJsonContent = ()=>{\n        if (jsonContent.length > 0) {\n            left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent));\n            left.integrate(transaction, 0);\n            jsonContent = [];\n        }\n    };\n    content.forEach((c)=>{\n        if (c === null) jsonContent.push(c);\n        else switch(c.constructor){\n            case Number:\n            case Object:\n            case Boolean:\n            case Array:\n            case String:\n                jsonContent.push(c);\n                break;\n            default:\n                packJsonContent();\n                switch(c.constructor){\n                    case Uint8Array:\n                    case ArrayBuffer:\n                        left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ c)));\n                        left.integrate(transaction, 0);\n                        break;\n                    case Doc:\n                        left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ c));\n                        left.integrate(transaction, 0);\n                        break;\n                    default:\n                        if (c instanceof AbstractType) {\n                            left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c));\n                            left.integrate(transaction, 0);\n                        } else throw new Error(\"Unexpected content type in insert operation\");\n                }\n        }\n    });\n    packJsonContent();\n};\nconst lengthExceeded = ()=>_error.create(\"Length exceeded!\");\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */ const typeListInsertGenerics = (transaction, parent, index, content)=>{\n    if (index > parent._length) throw lengthExceeded();\n    if (index === 0) {\n        if (parent._searchMarker) updateMarkerChanges(parent._searchMarker, index, content.length);\n        return typeListInsertGenericsAfter(transaction, parent, null, content);\n    }\n    const startIndex = index;\n    const marker = findMarker(parent, index);\n    let n = parent._start;\n    if (marker !== null) {\n        n = marker.p;\n        index -= marker.index;\n        // we need to iterate one to the left so that the algorithm works\n        if (index === 0) {\n            // @todo refactor this as it actually doesn't consider formats\n            n = n.prev; // important! get the left undeleted item so that we can actually decrease index\n            index += n && n.countable && !n.deleted ? n.length : 0;\n        }\n    }\n    for(; n !== null; n = n.right)if (!n.deleted && n.countable) {\n        if (index <= n.length) {\n            if (index < n.length) // insert in-between\n            getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n            break;\n        }\n        index -= n.length;\n    }\n    if (parent._searchMarker) updateMarkerChanges(parent._searchMarker, startIndex, content.length);\n    return typeListInsertGenericsAfter(transaction, parent, n, content);\n};\n/**\n * Pushing content is special as we generally want to push after the last item. So we don't have to update\n * the serach marker.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */ const typeListPushGenerics = (transaction, parent, content)=>{\n    // Use the marker with the highest index and iterate to the right.\n    const marker = (parent._searchMarker || []).reduce((maxMarker, currMarker)=>currMarker.index > maxMarker.index ? currMarker : maxMarker, {\n        index: 0,\n        p: parent._start\n    });\n    let n = marker.p;\n    if (n) while(n.right)n = n.right;\n    return typeListInsertGenericsAfter(transaction, parent, n, content);\n};\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */ const typeListDelete = (transaction, parent, index, length)=>{\n    if (length === 0) return;\n    const startIndex = index;\n    const startLength = length;\n    const marker = findMarker(parent, index);\n    let n = parent._start;\n    if (marker !== null) {\n        n = marker.p;\n        index -= marker.index;\n    }\n    // compute the first item to be deleted\n    for(; n !== null && index > 0; n = n.right)if (!n.deleted && n.countable) {\n        if (index < n.length) getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n        index -= n.length;\n    }\n    // delete all items until done\n    while(length > 0 && n !== null){\n        if (!n.deleted) {\n            if (length < n.length) getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length));\n            n.delete(transaction);\n            length -= n.length;\n        }\n        n = n.right;\n    }\n    if (length > 0) throw lengthExceeded();\n    if (parent._searchMarker) updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */ );\n};\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */ const typeMapDelete = (transaction, parent, key)=>{\n    const c = parent._map.get(key);\n    if (c !== undefined) c.delete(transaction);\n};\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */ const typeMapSet = (transaction, parent, key, value)=>{\n    const left = parent._map.get(key) || null;\n    const doc = transaction.doc;\n    const ownClientId = doc.clientID;\n    let content;\n    if (value == null) content = new ContentAny([\n        value\n    ]);\n    else switch(value.constructor){\n        case Number:\n        case Object:\n        case Boolean:\n        case Array:\n        case String:\n            content = new ContentAny([\n                value\n            ]);\n            break;\n        case Uint8Array:\n            content = new ContentBinary(/** @type {Uint8Array} */ value);\n            break;\n        case Doc:\n            content = new ContentDoc(/** @type {Doc} */ value);\n            break;\n        default:\n            if (value instanceof AbstractType) content = new ContentType(value);\n            else throw new Error(\"Unexpected content type\");\n    }\n    new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0);\n};\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */ const typeMapGet = (parent, key)=>{\n    const val = parent._map.get(key);\n    return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined;\n};\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */ const typeMapGetAll = (parent)=>{\n    /**\n   * @type {Object<string,any>}\n   */ const res = {};\n    parent._map.forEach((value, key)=>{\n        if (!value.deleted) res[key] = value.content.getContent()[value.length - 1];\n    });\n    return res;\n};\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */ const typeMapHas = (parent, key)=>{\n    const val = parent._map.get(key);\n    return val !== undefined && !val.deleted;\n};\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */ const typeMapGetSnapshot = (parent, key, snapshot)=>{\n    let v = parent._map.get(key) || null;\n    while(v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0)))v = v.left;\n    return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined;\n};\n/**\n * @param {AbstractType<any>} parent\n * @param {Snapshot} snapshot\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */ const typeMapGetAllSnapshot = (parent, snapshot)=>{\n    /**\n   * @type {Object<string,any>}\n   */ const res = {};\n    parent._map.forEach((value, key)=>{\n        /**\n     * @type {Item|null}\n     */ let v = value;\n        while(v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0)))v = v.left;\n        if (v !== null && isVisible(v, snapshot)) res[key] = v.content.getContent()[v.length - 1];\n    });\n    return res;\n};\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */ const createMapIterator = (map)=>_iterator.iteratorFilter(map.entries(), /** @param {any} entry */ (entry)=>!entry[1].deleted);\n/**\n * @module YArray\n */ /**\n * Event that describes the changes on a YArray\n * @template T\n * @extends YEvent<YArray<T>>\n */ class YArrayEvent extends YEvent {\n    /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */ constructor(yarray, transaction){\n        super(yarray, transaction);\n        this._transaction = transaction;\n    }\n}\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */ class YArray extends AbstractType {\n    constructor(){\n        super();\n        /**\n     * @type {Array<any>?}\n     * @private\n     */ this._prelimContent = [];\n        /**\n     * @type {Array<ArraySearchMarker>}\n     */ this._searchMarker = [];\n    }\n    /**\n   * Construct a new YArray containing the specified items.\n   * @template {Object<string,any>|Array<any>|number|null|string|Uint8Array} T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */ static from(items) {\n        /**\n     * @type {YArray<T>}\n     */ const a = new YArray();\n        a.push(items);\n        return a;\n    }\n    /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */ _integrate(y, item) {\n        super._integrate(y, item);\n        this.insert(0, /** @type {Array<any>} */ this._prelimContent);\n        this._prelimContent = null;\n    }\n    /**\n   * @return {YArray<T>}\n   */ _copy() {\n        return new YArray();\n    }\n    /**\n   * @return {YArray<T>}\n   */ clone() {\n        /**\n     * @type {YArray<T>}\n     */ const arr = new YArray();\n        arr.insert(0, this.toArray().map((el)=>el instanceof AbstractType ? /** @type {typeof el} */ el.clone() : el));\n        return arr;\n    }\n    get length() {\n        return this._prelimContent === null ? this._length : this._prelimContent.length;\n    }\n    /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */ _callObserver(transaction, parentSubs) {\n        super._callObserver(transaction, parentSubs);\n        callTypeObservers(this, transaction, new YArrayEvent(this, transaction));\n    }\n    /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */ insert(index, content) {\n        if (this.doc !== null) transact(this.doc, (transaction)=>{\n            typeListInsertGenerics(transaction, this, index, /** @type {any} */ content);\n        });\n        else /** @type {Array<any>} */ this._prelimContent.splice(index, 0, ...content);\n    }\n    /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   *\n   * @todo Use the following implementation in all types.\n   */ push(content) {\n        if (this.doc !== null) transact(this.doc, (transaction)=>{\n            typeListPushGenerics(transaction, this, /** @type {any} */ content);\n        });\n        else /** @type {Array<any>} */ this._prelimContent.push(...content);\n    }\n    /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */ unshift(content) {\n        this.insert(0, content);\n    }\n    /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */ delete(index, length = 1) {\n        if (this.doc !== null) transact(this.doc, (transaction)=>{\n            typeListDelete(transaction, this, index, length);\n        });\n        else /** @type {Array<any>} */ this._prelimContent.splice(index, length);\n    }\n    /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */ get(index) {\n        return typeListGet(this, index);\n    }\n    /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */ toArray() {\n        return typeListToArray(this);\n    }\n    /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */ slice(start = 0, end = this.length) {\n        return typeListSlice(this, start, end);\n    }\n    /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */ toJSON() {\n        return this.map((c)=>c instanceof AbstractType ? c.toJSON() : c);\n    }\n    /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */ map(f) {\n        return typeListMap(this, /** @type {any} */ f);\n    }\n    /**\n   * Executes a provided function once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */ forEach(f) {\n        typeListForEach(this, f);\n    }\n    /**\n   * @return {IterableIterator<T>}\n   */ [Symbol.iterator]() {\n        return typeListCreateIterator(this);\n    }\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */ _write(encoder) {\n        encoder.writeTypeRef(YArrayRefID);\n    }\n}\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */ const readYArray = (_decoder)=>new YArray();\n/**\n * @template T\n * @extends YEvent<YMap<T>>\n * Event that describes the changes on a YMap.\n */ class YMapEvent extends YEvent {\n    /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */ constructor(ymap, transaction, subs){\n        super(ymap, transaction);\n        this.keysChanged = subs;\n    }\n}\n/**\n * @template MapType\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<MapType>>\n * @implements {Iterable<[string, MapType]>}\n */ class YMap extends AbstractType {\n    /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */ constructor(entries){\n        super();\n        /**\n     * @type {Map<string,any>?}\n     * @private\n     */ this._prelimContent = null;\n        if (entries === undefined) this._prelimContent = new Map();\n        else this._prelimContent = new Map(entries);\n    }\n    /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */ _integrate(y, item) {\n        super._integrate(y, item); /** @type {Map<string, any>} */ \n        this._prelimContent.forEach((value, key)=>{\n            this.set(key, value);\n        });\n        this._prelimContent = null;\n    }\n    /**\n   * @return {YMap<MapType>}\n   */ _copy() {\n        return new YMap();\n    }\n    /**\n   * @return {YMap<MapType>}\n   */ clone() {\n        /**\n     * @type {YMap<MapType>}\n     */ const map = new YMap();\n        this.forEach((value, key)=>{\n            map.set(key, value instanceof AbstractType ? /** @type {typeof value} */ value.clone() : value);\n        });\n        return map;\n    }\n    /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */ _callObserver(transaction, parentSubs) {\n        callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs));\n    }\n    /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,any>}\n   */ toJSON() {\n        /**\n     * @type {Object<string,MapType>}\n     */ const map = {};\n        this._map.forEach((item, key)=>{\n            if (!item.deleted) {\n                const v = item.content.getContent()[item.length - 1];\n                map[key] = v instanceof AbstractType ? v.toJSON() : v;\n            }\n        });\n        return map;\n    }\n    /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */ get size() {\n        return [\n            ...createMapIterator(this._map)\n        ].length;\n    }\n    /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */ keys() {\n        return _iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ (v)=>v[0]);\n    }\n    /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<MapType>}\n   */ values() {\n        return _iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ (v)=>v[1].content.getContent()[v[1].length - 1]);\n    }\n    /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<[string, MapType]>}\n   */ entries() {\n        return _iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ (v)=>/** @type {any} */ [\n                v[0],\n                v[1].content.getContent()[v[1].length - 1]\n            ]);\n    }\n    /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.\n   */ forEach(f) {\n        this._map.forEach((item, key)=>{\n            if (!item.deleted) f(item.content.getContent()[item.length - 1], key, this);\n        });\n    }\n    /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<[string, MapType]>}\n   */ [Symbol.iterator]() {\n        return this.entries();\n    }\n    /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */ delete(key) {\n        if (this.doc !== null) transact(this.doc, (transaction)=>{\n            typeMapDelete(transaction, this, key);\n        });\n        else /** @type {Map<string, any>} */ this._prelimContent.delete(key);\n    }\n    /**\n   * Adds or updates an element with a specified key and value.\n   * @template {MapType} VAL\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {VAL} value The value of the element to add\n   * @return {VAL}\n   */ set(key, value) {\n        if (this.doc !== null) transact(this.doc, (transaction)=>{\n            typeMapSet(transaction, this, key, /** @type {any} */ value);\n        });\n        else /** @type {Map<string, any>} */ this._prelimContent.set(key, value);\n        return value;\n    }\n    /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {MapType|undefined}\n   */ get(key) {\n        return /** @type {any} */ typeMapGet(this, key);\n    }\n    /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */ has(key) {\n        return typeMapHas(this, key);\n    }\n    /**\n   * Removes all elements from this YMap.\n   */ clear() {\n        if (this.doc !== null) transact(this.doc, (transaction)=>{\n            this.forEach(function(_value, key, map) {\n                typeMapDelete(transaction, map, key);\n            });\n        });\n        else /** @type {Map<string, any>} */ this._prelimContent.clear();\n    }\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */ _write(encoder) {\n        encoder.writeTypeRef(YMapRefID);\n    }\n}\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */ const readYMap = (_decoder)=>new YMap();\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */ const equalAttrs = (a, b)=>a === b || typeof a === \"object\" && typeof b === \"object\" && a && b && _object.equalFlat(a, b);\nclass ItemTextListPosition {\n    /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */ constructor(left, right, index, currentAttributes){\n        this.left = left;\n        this.right = right;\n        this.index = index;\n        this.currentAttributes = currentAttributes;\n    }\n    /**\n   * Only call this if you know that this.right is defined\n   */ forward() {\n        if (this.right === null) _error.unexpectedCase();\n        switch(this.right.content.constructor){\n            case ContentFormat:\n                if (!this.right.deleted) updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ this.right.content);\n                break;\n            default:\n                if (!this.right.deleted) this.index += this.right.length;\n                break;\n        }\n        this.left = this.right;\n        this.right = this.right.right;\n    }\n}\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */ const findNextPosition = (transaction, pos, count)=>{\n    while(pos.right !== null && count > 0){\n        switch(pos.right.content.constructor){\n            case ContentFormat:\n                if (!pos.right.deleted) updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ pos.right.content);\n                break;\n            default:\n                if (!pos.right.deleted) {\n                    if (count < pos.right.length) // split right\n                    getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count));\n                    pos.index += pos.right.length;\n                    count -= pos.right.length;\n                }\n                break;\n        }\n        pos.left = pos.right;\n        pos.right = pos.right.right;\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n    }\n    return pos;\n};\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */ const findPosition = (transaction, parent, index)=>{\n    const currentAttributes = new Map();\n    const marker = findMarker(parent, index);\n    if (marker) {\n        const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes);\n        return findNextPosition(transaction, pos, index - marker.index);\n    } else {\n        const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes);\n        return findNextPosition(transaction, pos, index);\n    }\n};\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */ const insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes)=>{\n    // check if we really need to remove attributes\n    while(currPos.right !== null && (currPos.right.deleted === true || currPos.right.content.constructor === ContentFormat && equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ currPos.right.content.key), /** @type {ContentFormat} */ currPos.right.content.value))){\n        if (!currPos.right.deleted) negatedAttributes.delete(/** @type {ContentFormat} */ currPos.right.content.key);\n        currPos.forward();\n    }\n    const doc = transaction.doc;\n    const ownClientId = doc.clientID;\n    negatedAttributes.forEach((val, key)=>{\n        const left = currPos.left;\n        const right = currPos.right;\n        const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n        nextFormat.integrate(transaction, 0);\n        currPos.right = nextFormat;\n        currPos.forward();\n    });\n};\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */ const updateCurrentAttributes = (currentAttributes, format)=>{\n    const { key, value } = format;\n    if (value === null) currentAttributes.delete(key);\n    else currentAttributes.set(key, value);\n};\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */ const minimizeAttributeChanges = (currPos, attributes)=>{\n    // go right while attributes[right.key] === right.value (or right is deleted)\n    while(true){\n        if (currPos.right === null) break;\n        else if (currPos.right.deleted || currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[/** @type {ContentFormat} */ currPos.right.content.key] || null, /** @type {ContentFormat} */ currPos.right.content.value)) ;\n        else break;\n        currPos.forward();\n    }\n};\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/ const insertAttributes = (transaction, parent, currPos, attributes)=>{\n    const doc = transaction.doc;\n    const ownClientId = doc.clientID;\n    const negatedAttributes = new Map();\n    // insert format-start items\n    for(const key in attributes){\n        const val = attributes[key];\n        const currentVal = currPos.currentAttributes.get(key) || null;\n        if (!equalAttrs(currentVal, val)) {\n            // save negated attribute (set null if currentVal undefined)\n            negatedAttributes.set(key, currentVal);\n            const { left, right } = currPos;\n            currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n            currPos.right.integrate(transaction, 0);\n            currPos.forward();\n        }\n    }\n    return negatedAttributes;\n};\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object|AbstractType<any>} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/ const insertText = (transaction, parent, currPos, text, attributes)=>{\n    currPos.currentAttributes.forEach((_val, key)=>{\n        if (attributes[key] === undefined) attributes[key] = null;\n    });\n    const doc = transaction.doc;\n    const ownClientId = doc.clientID;\n    minimizeAttributeChanges(currPos, attributes);\n    const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n    // insert content\n    const content = text.constructor === String ? new ContentString(/** @type {string} */ text) : text instanceof AbstractType ? new ContentType(text) : new ContentEmbed(text);\n    let { left, right, index } = currPos;\n    if (parent._searchMarker) updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength());\n    right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content);\n    right.integrate(transaction, 0);\n    currPos.right = right;\n    currPos.index = index;\n    currPos.forward();\n    insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */ const formatText = (transaction, parent, currPos, length, attributes)=>{\n    const doc = transaction.doc;\n    const ownClientId = doc.clientID;\n    minimizeAttributeChanges(currPos, attributes);\n    const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n    // iterate until first non-format or null is found\n    // delete all formats with attributes[format.key] != null\n    // also check the attributes after the first non-format as we do not want to insert redundant negated attributes there\n    // eslint-disable-next-line no-labels\n    iterationLoop: while(currPos.right !== null && (length > 0 || negatedAttributes.size > 0 && (currPos.right.deleted || currPos.right.content.constructor === ContentFormat))){\n        if (!currPos.right.deleted) switch(currPos.right.content.constructor){\n            case ContentFormat:\n                {\n                    const { key, value } = /** @type {ContentFormat} */ currPos.right.content;\n                    const attr = attributes[key];\n                    if (attr !== undefined) {\n                        if (equalAttrs(attr, value)) negatedAttributes.delete(key);\n                        else {\n                            if (length === 0) break iterationLoop;\n                            negatedAttributes.set(key, value);\n                        }\n                        currPos.right.delete(transaction);\n                    } else currPos.currentAttributes.set(key, value);\n                    break;\n                }\n            default:\n                if (length < currPos.right.length) getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n                length -= currPos.right.length;\n                break;\n        }\n        currPos.forward();\n    }\n    // Quill just assumes that the editor starts with a newline and that it always\n    // ends with a newline. We only insert that newline when a new newline is\n    // inserted - i.e when length is bigger than type.length\n    if (length > 0) {\n        let newlines = \"\";\n        for(; length > 0; length--)newlines += \"\\n\";\n        currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines));\n        currPos.right.integrate(transaction, 0);\n        currPos.forward();\n    }\n    insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} curr exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} currAttributes\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */ const cleanupFormattingGap = (transaction, start, curr, startAttributes, currAttributes)=>{\n    /**\n   * @type {Item|null}\n   */ let end = start;\n    /**\n   * @type {Map<string,ContentFormat>}\n   */ const endFormats = _map.create();\n    while(end && (!end.countable || end.deleted)){\n        if (!end.deleted && end.content.constructor === ContentFormat) {\n            const cf = /** @type {ContentFormat} */ end.content;\n            endFormats.set(cf.key, cf);\n        }\n        end = end.right;\n    }\n    let cleanups = 0;\n    let reachedCurr = false;\n    while(start !== end){\n        if (curr === start) reachedCurr = true;\n        if (!start.deleted) {\n            const content = start.content;\n            switch(content.constructor){\n                case ContentFormat:\n                    {\n                        const { key, value } = /** @type {ContentFormat} */ content;\n                        const startAttrValue = startAttributes.get(key) || null;\n                        if (endFormats.get(key) !== content || startAttrValue === value) {\n                            // Either this format is overwritten or it is not necessary because the attribute already existed.\n                            start.delete(transaction);\n                            cleanups++;\n                            if (!reachedCurr && (currAttributes.get(key) || null) === value && startAttrValue !== value) {\n                                if (startAttrValue === null) currAttributes.delete(key);\n                                else currAttributes.set(key, startAttrValue);\n                            }\n                        }\n                        if (!reachedCurr && !start.deleted) updateCurrentAttributes(currAttributes, /** @type {ContentFormat} */ content);\n                        break;\n                    }\n            }\n        }\n        start = /** @type {Item} */ start.right;\n    }\n    return cleanups;\n};\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */ const cleanupContextlessFormattingGap = (transaction, item)=>{\n    // iterate until item.right is null or content\n    while(item && item.right && (item.right.deleted || !item.right.countable))item = item.right;\n    const attrs = new Set();\n    // iterate back until a content item is found\n    while(item && (item.deleted || !item.countable)){\n        if (!item.deleted && item.content.constructor === ContentFormat) {\n            const key = /** @type {ContentFormat} */ item.content.key;\n            if (attrs.has(key)) item.delete(transaction);\n            else attrs.add(key);\n        }\n        item = item.left;\n    }\n};\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */ const cleanupYTextFormatting = (type)=>{\n    let res = 0;\n    transact(/** @type {Doc} */ type.doc, (transaction)=>{\n        let start = /** @type {Item} */ type._start;\n        let end = type._start;\n        let startAttributes = _map.create();\n        const currentAttributes = _map.copy(startAttributes);\n        while(end){\n            if (end.deleted === false) switch(end.content.constructor){\n                case ContentFormat:\n                    updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ end.content);\n                    break;\n                default:\n                    res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes);\n                    startAttributes = _map.copy(currentAttributes);\n                    start = end;\n                    break;\n            }\n            end = end.right;\n        }\n    });\n    return res;\n};\n/**\n * This will be called by the transction once the event handlers are called to potentially cleanup\n * formatting attributes.\n *\n * @param {Transaction} transaction\n */ const cleanupYTextAfterTransaction = (transaction)=>{\n    /**\n   * @type {Set<YText>}\n   */ const needFullCleanup = new Set();\n    // check if another formatting item was inserted\n    const doc = transaction.doc;\n    for (const [client, afterClock] of transaction.afterState.entries()){\n        const clock = transaction.beforeState.get(client) || 0;\n        if (afterClock === clock) continue;\n        iterateStructs(transaction, /** @type {Array<Item|GC>} */ doc.store.clients.get(client), clock, afterClock, (item)=>{\n            if (!item.deleted && /** @type {Item} */ item.content.constructor === ContentFormat && item.constructor !== GC) needFullCleanup.add(/** @type {any} */ item.parent);\n        });\n    }\n    // cleanup in a new transaction\n    transact(doc, (t)=>{\n        iterateDeletedStructs(transaction, transaction.deleteSet, (item)=>{\n            if (item instanceof GC || !/** @type {YText} */ item.parent._hasFormatting || needFullCleanup.has(/** @type {YText} */ item.parent)) return;\n            const parent = /** @type {YText} */ item.parent;\n            if (item.content.constructor === ContentFormat) needFullCleanup.add(parent);\n            else // If no formatting attribute was inserted or deleted, we can make due with contextless\n            // formatting cleanups.\n            // Contextless: it is not necessary to compute currentAttributes for the affected position.\n            cleanupContextlessFormattingGap(t, item);\n        });\n        // If a formatting item was inserted, we simply clean the whole type.\n        // We need to compute currentAttributes for the current position anyway.\n        for (const yText of needFullCleanup)cleanupYTextFormatting(yText);\n    });\n};\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */ const deleteText = (transaction, currPos, length)=>{\n    const startLength = length;\n    const startAttrs = _map.copy(currPos.currentAttributes);\n    const start = currPos.right;\n    while(length > 0 && currPos.right !== null){\n        if (currPos.right.deleted === false) switch(currPos.right.content.constructor){\n            case ContentType:\n            case ContentEmbed:\n            case ContentString:\n                if (length < currPos.right.length) getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n                length -= currPos.right.length;\n                currPos.right.delete(transaction);\n                break;\n        }\n        currPos.forward();\n    }\n    if (start) cleanupFormattingGap(transaction, start, currPos.right, startAttrs, currPos.currentAttributes);\n    const parent = /** @type {AbstractType<any>} */ /** @type {Item} */ (currPos.left || currPos.right).parent;\n    if (parent._searchMarker) updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length);\n    return currPos;\n};\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */ /**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */ /**\n * @extends YEvent<YText>\n * Event that describes the changes on a YText type.\n */ class YTextEvent extends YEvent {\n    /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */ constructor(ytext, transaction, subs){\n        super(ytext, transaction);\n        /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */ this.childListChanged = false;\n        /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */ this.keysChanged = new Set();\n        subs.forEach((sub)=>{\n            if (sub === null) this.childListChanged = true;\n            else this.keysChanged.add(sub);\n        });\n    }\n    /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */ get changes() {\n        if (this._changes === null) {\n            /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string|AbstractType<any>|object, delete?:number, retain?:number}>}}\n       */ const changes = {\n                keys: this.keys,\n                delta: this.delta,\n                added: new Set(),\n                deleted: new Set()\n            };\n            this._changes = changes;\n        }\n        return /** @type {any} */ this._changes;\n    }\n    /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */ get delta() {\n        if (this._delta === null) {\n            const y = /** @type {Doc} */ this.target.doc;\n            /**\n       * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */ const delta = [];\n            transact(y, (transaction)=>{\n                const currentAttributes = new Map(); // saves all current attributes for insert\n                const oldAttributes = new Map();\n                let item = this.target._start;\n                /**\n         * @type {string?}\n         */ let action = null;\n                /**\n         * @type {Object<string,any>}\n         */ const attributes = {}; // counts added or removed new attributes for retain\n                /**\n         * @type {string|object}\n         */ let insert = \"\";\n                let retain = 0;\n                let deleteLen = 0;\n                const addOp = ()=>{\n                    if (action !== null) {\n                        /**\n             * @type {any}\n             */ let op = null;\n                        switch(action){\n                            case \"delete\":\n                                if (deleteLen > 0) op = {\n                                    delete: deleteLen\n                                };\n                                deleteLen = 0;\n                                break;\n                            case \"insert\":\n                                if (typeof insert === \"object\" || insert.length > 0) {\n                                    op = {\n                                        insert\n                                    };\n                                    if (currentAttributes.size > 0) {\n                                        op.attributes = {};\n                                        currentAttributes.forEach((value, key)=>{\n                                            if (value !== null) op.attributes[key] = value;\n                                        });\n                                    }\n                                }\n                                insert = \"\";\n                                break;\n                            case \"retain\":\n                                if (retain > 0) {\n                                    op = {\n                                        retain\n                                    };\n                                    if (!_object.isEmpty(attributes)) op.attributes = _object.assign({}, attributes);\n                                }\n                                retain = 0;\n                                break;\n                        }\n                        if (op) delta.push(op);\n                        action = null;\n                    }\n                };\n                while(item !== null){\n                    switch(item.content.constructor){\n                        case ContentType:\n                        case ContentEmbed:\n                            if (this.adds(item)) {\n                                if (!this.deletes(item)) {\n                                    addOp();\n                                    action = \"insert\";\n                                    insert = item.content.getContent()[0];\n                                    addOp();\n                                }\n                            } else if (this.deletes(item)) {\n                                if (action !== \"delete\") {\n                                    addOp();\n                                    action = \"delete\";\n                                }\n                                deleteLen += 1;\n                            } else if (!item.deleted) {\n                                if (action !== \"retain\") {\n                                    addOp();\n                                    action = \"retain\";\n                                }\n                                retain += 1;\n                            }\n                            break;\n                        case ContentString:\n                            if (this.adds(item)) {\n                                if (!this.deletes(item)) {\n                                    if (action !== \"insert\") {\n                                        addOp();\n                                        action = \"insert\";\n                                    }\n                                    insert += /** @type {ContentString} */ item.content.str;\n                                }\n                            } else if (this.deletes(item)) {\n                                if (action !== \"delete\") {\n                                    addOp();\n                                    action = \"delete\";\n                                }\n                                deleteLen += item.length;\n                            } else if (!item.deleted) {\n                                if (action !== \"retain\") {\n                                    addOp();\n                                    action = \"retain\";\n                                }\n                                retain += item.length;\n                            }\n                            break;\n                        case ContentFormat:\n                            {\n                                const { key, value } = /** @type {ContentFormat} */ item.content;\n                                if (this.adds(item)) {\n                                    if (!this.deletes(item)) {\n                                        const curVal = currentAttributes.get(key) || null;\n                                        if (!equalAttrs(curVal, value)) {\n                                            if (action === \"retain\") addOp();\n                                            if (equalAttrs(value, oldAttributes.get(key) || null)) delete attributes[key];\n                                            else attributes[key] = value;\n                                        } else if (value !== null) item.delete(transaction);\n                                    }\n                                } else if (this.deletes(item)) {\n                                    oldAttributes.set(key, value);\n                                    const curVal = currentAttributes.get(key) || null;\n                                    if (!equalAttrs(curVal, value)) {\n                                        if (action === \"retain\") addOp();\n                                        attributes[key] = curVal;\n                                    }\n                                } else if (!item.deleted) {\n                                    oldAttributes.set(key, value);\n                                    const attr = attributes[key];\n                                    if (attr !== undefined) {\n                                        if (!equalAttrs(attr, value)) {\n                                            if (action === \"retain\") addOp();\n                                            if (value === null) delete attributes[key];\n                                            else attributes[key] = value;\n                                        } else if (attr !== null) item.delete(transaction);\n                                    }\n                                }\n                                if (!item.deleted) {\n                                    if (action === \"insert\") addOp();\n                                    updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ item.content);\n                                }\n                                break;\n                            }\n                    }\n                    item = item.right;\n                }\n                addOp();\n                while(delta.length > 0){\n                    const lastOp = delta[delta.length - 1];\n                    if (lastOp.retain !== undefined && lastOp.attributes === undefined) // retain delta's if they don't assign attributes\n                    delta.pop();\n                    else break;\n                }\n            });\n            this._delta = delta;\n        }\n        return /** @type {any} */ this._delta;\n    }\n}\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */ class YText extends AbstractType {\n    /**\n   * @param {String} [string] The initial value of the YText.\n   */ constructor(string){\n        super();\n        /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */ this._pending = string !== undefined ? [\n            ()=>this.insert(0, string)\n        ] : [];\n        /**\n     * @type {Array<ArraySearchMarker>|null}\n     */ this._searchMarker = [];\n        /**\n     * Whether this YText contains formatting attributes.\n     * This flag is updated when a formatting item is integrated (see ContentFormat.integrate)\n     */ this._hasFormatting = false;\n    }\n    /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */ get length() {\n        return this._length;\n    }\n    /**\n   * @param {Doc} y\n   * @param {Item} item\n   */ _integrate(y, item) {\n        super._integrate(y, item);\n        try {\n            /** @type {Array<function>} */ this._pending.forEach((f)=>f());\n        } catch (e) {\n            console.error(e);\n        }\n        this._pending = null;\n    }\n    _copy() {\n        return new YText();\n    }\n    /**\n   * @return {YText}\n   */ clone() {\n        const text = new YText();\n        text.applyDelta(this.toDelta());\n        return text;\n    }\n    /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */ _callObserver(transaction, parentSubs) {\n        super._callObserver(transaction, parentSubs);\n        const event = new YTextEvent(this, transaction, parentSubs);\n        callTypeObservers(this, transaction, event);\n        // If a remote change happened, we try to cleanup potential formatting duplicates.\n        if (!transaction.local && this._hasFormatting) transaction._needFormattingCleanup = true;\n    }\n    /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */ toString() {\n        let str = \"\";\n        /**\n     * @type {Item|null}\n     */ let n = this._start;\n        while(n !== null){\n            if (!n.deleted && n.countable && n.content.constructor === ContentString) str += /** @type {ContentString} */ n.content.str;\n            n = n.right;\n        }\n        return str;\n    }\n    /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */ toJSON() {\n        return this.toString();\n    }\n    /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  opts\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */ applyDelta(delta, { sanitize = true } = {}) {\n        if (this.doc !== null) transact(this.doc, (transaction)=>{\n            const currPos = new ItemTextListPosition(null, this._start, 0, new Map());\n            for(let i = 0; i < delta.length; i++){\n                const op = delta[i];\n                if (op.insert !== undefined) {\n                    // Quill assumes that the content starts with an empty paragraph.\n                    // Yjs/Y.Text assumes that it starts empty. We always hide that\n                    // there is a newline at the end of the content.\n                    // If we omit this step, clients will see a different number of\n                    // paragraphs, but nothing bad will happen.\n                    const ins = !sanitize && typeof op.insert === \"string\" && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === \"\\n\" ? op.insert.slice(0, -1) : op.insert;\n                    if (typeof ins !== \"string\" || ins.length > 0) insertText(transaction, this, currPos, ins, op.attributes || {});\n                } else if (op.retain !== undefined) formatText(transaction, this, currPos, op.retain, op.attributes || {});\n                else if (op.delete !== undefined) deleteText(transaction, currPos, op.delete);\n            }\n        });\n        else /** @type {Array<function>} */ this._pending.push(()=>this.applyDelta(delta));\n    }\n    /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */ toDelta(snapshot, prevSnapshot, computeYChange) {\n        /**\n     * @type{Array<any>}\n     */ const ops = [];\n        const currentAttributes = new Map();\n        const doc = /** @type {Doc} */ this.doc;\n        let str = \"\";\n        let n = this._start;\n        function packStr() {\n            if (str.length > 0) {\n                // pack str with attributes to ops\n                /**\n         * @type {Object<string,any>}\n         */ const attributes = {};\n                let addAttributes = false;\n                currentAttributes.forEach((value, key)=>{\n                    addAttributes = true;\n                    attributes[key] = value;\n                });\n                /**\n         * @type {Object<string,any>}\n         */ const op = {\n                    insert: str\n                };\n                if (addAttributes) op.attributes = attributes;\n                ops.push(op);\n                str = \"\";\n            }\n        }\n        const computeDelta = ()=>{\n            while(n !== null){\n                if (isVisible(n, snapshot) || prevSnapshot !== undefined && isVisible(n, prevSnapshot)) switch(n.content.constructor){\n                    case ContentString:\n                        {\n                            const cur = currentAttributes.get(\"ychange\");\n                            if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                                if (cur === undefined || cur.user !== n.id.client || cur.type !== \"removed\") {\n                                    packStr();\n                                    currentAttributes.set(\"ychange\", computeYChange ? computeYChange(\"removed\", n.id) : {\n                                        type: \"removed\"\n                                    });\n                                }\n                            } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                                if (cur === undefined || cur.user !== n.id.client || cur.type !== \"added\") {\n                                    packStr();\n                                    currentAttributes.set(\"ychange\", computeYChange ? computeYChange(\"added\", n.id) : {\n                                        type: \"added\"\n                                    });\n                                }\n                            } else if (cur !== undefined) {\n                                packStr();\n                                currentAttributes.delete(\"ychange\");\n                            }\n                            str += /** @type {ContentString} */ n.content.str;\n                            break;\n                        }\n                    case ContentType:\n                    case ContentEmbed:\n                        {\n                            packStr();\n                            /**\n               * @type {Object<string,any>}\n               */ const op = {\n                                insert: n.content.getContent()[0]\n                            };\n                            if (currentAttributes.size > 0) {\n                                const attrs = /** @type {Object<string,any>} */ {};\n                                op.attributes = attrs;\n                                currentAttributes.forEach((value, key)=>{\n                                    attrs[key] = value;\n                                });\n                            }\n                            ops.push(op);\n                            break;\n                        }\n                    case ContentFormat:\n                        if (isVisible(n, snapshot)) {\n                            packStr();\n                            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ n.content);\n                        }\n                        break;\n                }\n                n = n.right;\n            }\n            packStr();\n        };\n        if (snapshot || prevSnapshot) // snapshots are merged again after the transaction, so we need to keep the\n        // transaction alive until we are done\n        transact(doc, (transaction)=>{\n            if (snapshot) splitSnapshotAffectedStructs(transaction, snapshot);\n            if (prevSnapshot) splitSnapshotAffectedStructs(transaction, prevSnapshot);\n            computeDelta();\n        }, \"cleanup\");\n        else computeDelta();\n        return ops;\n    }\n    /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */ insert(index, text, attributes) {\n        if (text.length <= 0) return;\n        const y = this.doc;\n        if (y !== null) transact(y, (transaction)=>{\n            const pos = findPosition(transaction, this, index);\n            if (!attributes) {\n                attributes = {};\n                // @ts-ignore\n                pos.currentAttributes.forEach((v, k)=>{\n                    attributes[k] = v;\n                });\n            }\n            insertText(transaction, this, pos, text, attributes);\n        });\n        else /** @type {Array<function>} */ this._pending.push(()=>this.insert(index, text, attributes));\n    }\n    /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object | AbstractType<any>} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */ insertEmbed(index, embed, attributes = {}) {\n        const y = this.doc;\n        if (y !== null) transact(y, (transaction)=>{\n            const pos = findPosition(transaction, this, index);\n            insertText(transaction, this, pos, embed, attributes);\n        });\n        else /** @type {Array<function>} */ this._pending.push(()=>this.insertEmbed(index, embed, attributes));\n    }\n    /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */ delete(index, length) {\n        if (length === 0) return;\n        const y = this.doc;\n        if (y !== null) transact(y, (transaction)=>{\n            deleteText(transaction, findPosition(transaction, this, index), length);\n        });\n        else /** @type {Array<function>} */ this._pending.push(()=>this.delete(index, length));\n    }\n    /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */ format(index, length, attributes) {\n        if (length === 0) return;\n        const y = this.doc;\n        if (y !== null) transact(y, (transaction)=>{\n            const pos = findPosition(transaction, this, index);\n            if (pos.right === null) return;\n            formatText(transaction, this, pos, length, attributes);\n        });\n        else /** @type {Array<function>} */ this._pending.push(()=>this.format(index, length, attributes));\n    }\n    /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */ removeAttribute(attributeName) {\n        if (this.doc !== null) transact(this.doc, (transaction)=>{\n            typeMapDelete(transaction, this, attributeName);\n        });\n        else /** @type {Array<function>} */ this._pending.push(()=>this.removeAttribute(attributeName));\n    }\n    /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */ setAttribute(attributeName, attributeValue) {\n        if (this.doc !== null) transact(this.doc, (transaction)=>{\n            typeMapSet(transaction, this, attributeName, attributeValue);\n        });\n        else /** @type {Array<function>} */ this._pending.push(()=>this.setAttribute(attributeName, attributeValue));\n    }\n    /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */ getAttribute(attributeName) {\n        return /** @type {any} */ typeMapGet(this, attributeName);\n    }\n    /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */ getAttributes() {\n        return typeMapGetAll(this);\n    }\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */ _write(encoder) {\n        encoder.writeTypeRef(YTextRefID);\n    }\n}\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YText}\n *\n * @private\n * @function\n */ const readYText = (_decoder)=>new YText();\n/**\n * @module YXml\n */ /**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */ /**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */ /**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */ class YXmlTreeWalker {\n    /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */ constructor(root, f = ()=>true){\n        this._filter = f;\n        this._root = root;\n        /**\n     * @type {Item}\n     */ this._currentNode = /** @type {Item} */ root._start;\n        this._firstCall = true;\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */ next() {\n        /**\n     * @type {Item|null}\n     */ let n = this._currentNode;\n        let type = n && n.content && /** @type {any} */ n.content.type;\n        if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) do {\n            type = /** @type {any} */ n.content.type;\n            if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) // walk down in the tree\n            n = type._start;\n            else // walk right or up in the tree\n            while(n !== null){\n                if (n.right !== null) {\n                    n = n.right;\n                    break;\n                } else if (n.parent === this._root) n = null;\n                else n = /** @type {AbstractType<any>} */ n.parent._item;\n            }\n        }while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ n.content.type)));\n        this._firstCall = false;\n        if (n === null) // @ts-ignore\n        return {\n            value: undefined,\n            done: true\n        };\n        this._currentNode = n;\n        return {\n            value: /** @type {any} */ n.content.type,\n            done: false\n        };\n    }\n}\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */ class YXmlFragment extends AbstractType {\n    constructor(){\n        super();\n        /**\n     * @type {Array<any>|null}\n     */ this._prelimContent = [];\n    }\n    /**\n   * @type {YXmlElement|YXmlText|null}\n   */ get firstChild() {\n        const first = this._first;\n        return first ? first.content.getContent()[0] : null;\n    }\n    /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */ _integrate(y, item) {\n        super._integrate(y, item);\n        this.insert(0, /** @type {Array<any>} */ this._prelimContent);\n        this._prelimContent = null;\n    }\n    _copy() {\n        return new YXmlFragment();\n    }\n    /**\n   * @return {YXmlFragment}\n   */ clone() {\n        const el = new YXmlFragment();\n        // @ts-ignore\n        el.insert(0, this.toArray().map((item)=>item instanceof AbstractType ? item.clone() : item));\n        return el;\n    }\n    get length() {\n        return this._prelimContent === null ? this._length : this._prelimContent.length;\n    }\n    /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */ createTreeWalker(filter) {\n        return new YXmlTreeWalker(this, filter);\n    }\n    /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */ querySelector(query) {\n        query = query.toUpperCase();\n        // @ts-ignore\n        const iterator = new YXmlTreeWalker(this, (element)=>element.nodeName && element.nodeName.toUpperCase() === query);\n        const next = iterator.next();\n        if (next.done) return null;\n        else return next.value;\n    }\n    /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */ querySelectorAll(query) {\n        query = query.toUpperCase();\n        // @ts-ignore\n        return _array.from(new YXmlTreeWalker(this, (element)=>element.nodeName && element.nodeName.toUpperCase() === query));\n    }\n    /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */ _callObserver(transaction, parentSubs) {\n        callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction));\n    }\n    /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */ toString() {\n        return typeListMap(this, (xml)=>xml.toString()).join(\"\");\n    }\n    /**\n   * @return {string}\n   */ toJSON() {\n        return this.toString();\n    }\n    /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */ toDOM(_document = document, hooks = {}, binding) {\n        const fragment = _document.createDocumentFragment();\n        if (binding !== undefined) binding._createAssociation(fragment, this);\n        typeListForEach(this, (xmlType)=>{\n            fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null);\n        });\n        return fragment;\n    }\n    /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */ insert(index, content) {\n        if (this.doc !== null) transact(this.doc, (transaction)=>{\n            typeListInsertGenerics(transaction, this, index, content);\n        });\n        else // @ts-ignore _prelimContent is defined because this is not yet integrated\n        this._prelimContent.splice(index, 0, ...content);\n    }\n    /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */ insertAfter(ref, content) {\n        if (this.doc !== null) transact(this.doc, (transaction)=>{\n            const refItem = ref && ref instanceof AbstractType ? ref._item : ref;\n            typeListInsertGenericsAfter(transaction, this, refItem, content);\n        });\n        else {\n            const pc = /** @type {Array<any>} */ this._prelimContent;\n            const index = ref === null ? 0 : pc.findIndex((el)=>el === ref) + 1;\n            if (index === 0 && ref !== null) throw _error.create(\"Reference item not found\");\n            pc.splice(index, 0, ...content);\n        }\n    }\n    /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */ delete(index, length = 1) {\n        if (this.doc !== null) transact(this.doc, (transaction)=>{\n            typeListDelete(transaction, this, index, length);\n        });\n        else // @ts-ignore _prelimContent is defined because this is not yet integrated\n        this._prelimContent.splice(index, length);\n    }\n    /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */ toArray() {\n        return typeListToArray(this);\n    }\n    /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */ push(content) {\n        this.insert(this.length, content);\n    }\n    /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */ unshift(content) {\n        this.insert(0, content);\n    }\n    /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */ get(index) {\n        return typeListGet(this, index);\n    }\n    /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */ slice(start = 0, end = this.length) {\n        return typeListSlice(this, start, end);\n    }\n    /**\n   * Executes a provided function on once on overy child element.\n   *\n   * @param {function(YXmlElement|YXmlText,number, typeof self):void} f A function to execute on every element of this YArray.\n   */ forEach(f) {\n        typeListForEach(this, f);\n    }\n    /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */ _write(encoder) {\n        encoder.writeTypeRef(YXmlFragmentRefID);\n    }\n}\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */ const readYXmlFragment = (_decoder)=>new YXmlFragment();\n/**\n * @typedef {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} ValueTypes\n */ /**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n *\n * @template {{ [key: string]: ValueTypes }} [KV={ [key: string]: string }]\n */ class YXmlElement extends YXmlFragment {\n    constructor(nodeName = \"UNDEFINED\"){\n        super();\n        this.nodeName = nodeName;\n        /**\n     * @type {Map<string, any>|null}\n     */ this._prelimAttrs = new Map();\n    }\n    /**\n   * @type {YXmlElement|YXmlText|null}\n   */ get nextSibling() {\n        const n = this._item ? this._item.next : null;\n        return n ? /** @type {YXmlElement|YXmlText} */ /** @type {ContentType} */ n.content.type : null;\n    }\n    /**\n   * @type {YXmlElement|YXmlText|null}\n   */ get prevSibling() {\n        const n = this._item ? this._item.prev : null;\n        return n ? /** @type {YXmlElement|YXmlText} */ /** @type {ContentType} */ n.content.type : null;\n    }\n    /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */ _integrate(y, item) {\n        super._integrate(y, item);\n        /** @type {Map<string, any>} */ this._prelimAttrs.forEach((value, key)=>{\n            this.setAttribute(key, value);\n        });\n        this._prelimAttrs = null;\n    }\n    /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */ _copy() {\n        return new YXmlElement(this.nodeName);\n    }\n    /**\n   * @return {YXmlElement<KV>}\n   */ clone() {\n        /**\n     * @type {YXmlElement<KV>}\n     */ const el = new YXmlElement(this.nodeName);\n        const attrs = this.getAttributes();\n        _object.forEach(attrs, (value, key)=>{\n            if (typeof value === \"string\") el.setAttribute(key, value);\n        });\n        // @ts-ignore\n        el.insert(0, this.toArray().map((item)=>item instanceof AbstractType ? item.clone() : item));\n        return el;\n    }\n    /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */ toString() {\n        const attrs = this.getAttributes();\n        const stringBuilder = [];\n        const keys = [];\n        for(const key in attrs)keys.push(key);\n        keys.sort();\n        const keysLen = keys.length;\n        for(let i = 0; i < keysLen; i++){\n            const key = keys[i];\n            stringBuilder.push(key + '=\"' + attrs[key] + '\"');\n        }\n        const nodeName = this.nodeName.toLocaleLowerCase();\n        const attrsString = stringBuilder.length > 0 ? \" \" + stringBuilder.join(\" \") : \"\";\n        return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`;\n    }\n    /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {string} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */ removeAttribute(attributeName) {\n        if (this.doc !== null) transact(this.doc, (transaction)=>{\n            typeMapDelete(transaction, this, attributeName);\n        });\n        else /** @type {Map<string,any>} */ this._prelimAttrs.delete(attributeName);\n    }\n    /**\n   * Sets or updates an attribute.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that is to be set.\n   * @param {KV[KEY]} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */ setAttribute(attributeName, attributeValue) {\n        if (this.doc !== null) transact(this.doc, (transaction)=>{\n            typeMapSet(transaction, this, attributeName, attributeValue);\n        });\n        else /** @type {Map<string, any>} */ this._prelimAttrs.set(attributeName, attributeValue);\n    }\n    /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {KV[KEY]|undefined} The queried attribute value.\n   *\n   * @public\n   */ getAttribute(attributeName) {\n        return /** @type {any} */ typeMapGet(this, attributeName);\n    }\n    /**\n   * Returns whether an attribute exists\n   *\n   * @param {string} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */ hasAttribute(attributeName) {\n        return /** @type {any} */ typeMapHas(this, attributeName);\n    }\n    /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {{ [Key in Extract<keyof KV,string>]?: KV[Key]}} A JSON Object that describes the attributes.\n   *\n   * @public\n   */ getAttributes(snapshot) {\n        return /** @type {any} */ snapshot ? typeMapGetAllSnapshot(this, snapshot) : typeMapGetAll(this);\n    }\n    /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */ toDOM(_document = document, hooks = {}, binding) {\n        const dom = _document.createElement(this.nodeName);\n        const attrs = this.getAttributes();\n        for(const key in attrs){\n            const value = attrs[key];\n            if (typeof value === \"string\") dom.setAttribute(key, value);\n        }\n        typeListForEach(this, (yxml)=>{\n            dom.appendChild(yxml.toDOM(_document, hooks, binding));\n        });\n        if (binding !== undefined) binding._createAssociation(dom, this);\n        return dom;\n    }\n    /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */ _write(encoder) {\n        encoder.writeTypeRef(YXmlElementRefID);\n        encoder.writeKey(this.nodeName);\n    }\n}\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */ const readYXmlElement = (decoder)=>new YXmlElement(decoder.readKey());\n/**\n * @extends YEvent<YXmlElement|YXmlText|YXmlFragment>\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */ class YXmlEvent extends YEvent {\n    /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */ constructor(target, subs, transaction){\n        super(target, transaction);\n        /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */ this.childListChanged = false;\n        /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */ this.attributesChanged = new Set();\n        subs.forEach((sub)=>{\n            if (sub === null) this.childListChanged = true;\n            else this.attributesChanged.add(sub);\n        });\n    }\n}\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */ class YXmlHook extends YMap {\n    /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */ constructor(hookName){\n        super();\n        /**\n     * @type {string}\n     */ this.hookName = hookName;\n    }\n    /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */ _copy() {\n        return new YXmlHook(this.hookName);\n    }\n    /**\n   * @return {YXmlHook}\n   */ clone() {\n        const el = new YXmlHook(this.hookName);\n        this.forEach((value, key)=>{\n            el.set(key, value);\n        });\n        return el;\n    }\n    /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */ toDOM(_document = document, hooks = {}, binding) {\n        const hook = hooks[this.hookName];\n        let dom;\n        if (hook !== undefined) dom = hook.createDom(this);\n        else dom = document.createElement(this.hookName);\n        dom.setAttribute(\"data-yjs-hook\", this.hookName);\n        if (binding !== undefined) binding._createAssociation(dom, this);\n        return dom;\n    }\n    /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */ _write(encoder) {\n        encoder.writeTypeRef(YXmlHookRefID);\n        encoder.writeKey(this.hookName);\n    }\n}\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */ const readYXmlHook = (decoder)=>new YXmlHook(decoder.readKey());\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */ class YXmlText extends YText {\n    /**\n   * @type {YXmlElement|YXmlText|null}\n   */ get nextSibling() {\n        const n = this._item ? this._item.next : null;\n        return n ? /** @type {YXmlElement|YXmlText} */ /** @type {ContentType} */ n.content.type : null;\n    }\n    /**\n   * @type {YXmlElement|YXmlText|null}\n   */ get prevSibling() {\n        const n = this._item ? this._item.prev : null;\n        return n ? /** @type {YXmlElement|YXmlText} */ /** @type {ContentType} */ n.content.type : null;\n    }\n    _copy() {\n        return new YXmlText();\n    }\n    /**\n   * @return {YXmlText}\n   */ clone() {\n        const text = new YXmlText();\n        text.applyDelta(this.toDelta());\n        return text;\n    }\n    /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */ toDOM(_document = document, hooks, binding) {\n        const dom = _document.createTextNode(this.toString());\n        if (binding !== undefined) binding._createAssociation(dom, this);\n        return dom;\n    }\n    toString() {\n        // @ts-ignore\n        return this.toDelta().map((delta)=>{\n            const nestedNodes = [];\n            for(const nodeName in delta.attributes){\n                const attrs = [];\n                for(const key in delta.attributes[nodeName])attrs.push({\n                    key,\n                    value: delta.attributes[nodeName][key]\n                });\n                // sort attributes to get a unique order\n                attrs.sort((a, b)=>a.key < b.key ? -1 : 1);\n                nestedNodes.push({\n                    nodeName,\n                    attrs\n                });\n            }\n            // sort node order to get a unique order\n            nestedNodes.sort((a, b)=>a.nodeName < b.nodeName ? -1 : 1);\n            // now convert to dom string\n            let str = \"\";\n            for(let i = 0; i < nestedNodes.length; i++){\n                const node = nestedNodes[i];\n                str += `<${node.nodeName}`;\n                for(let j = 0; j < node.attrs.length; j++){\n                    const attr = node.attrs[j];\n                    str += ` ${attr.key}=\"${attr.value}\"`;\n                }\n                str += \">\";\n            }\n            str += delta.insert;\n            for(let i = nestedNodes.length - 1; i >= 0; i--)str += `</${nestedNodes[i].nodeName}>`;\n            return str;\n        }).join(\"\");\n    }\n    /**\n   * @return {string}\n   */ toJSON() {\n        return this.toString();\n    }\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */ _write(encoder) {\n        encoder.writeTypeRef(YXmlTextRefID);\n    }\n}\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */ const readYXmlText = (decoder)=>new YXmlText();\nclass AbstractStruct {\n    /**\n   * @param {ID} id\n   * @param {number} length\n   */ constructor(id, length){\n        this.id = id;\n        this.length = length;\n    }\n    /**\n   * @type {boolean}\n   */ get deleted() {\n        throw _error.methodUnimplemented();\n    }\n    /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */ mergeWith(right) {\n        return false;\n    }\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */ write(encoder, offset, encodingRef) {\n        throw _error.methodUnimplemented();\n    }\n    /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */ integrate(transaction, offset) {\n        throw _error.methodUnimplemented();\n    }\n}\nconst structGCRefNumber = 0;\n/**\n * @private\n */ class GC extends AbstractStruct {\n    get deleted() {\n        return true;\n    }\n    delete() {}\n    /**\n   * @param {GC} right\n   * @return {boolean}\n   */ mergeWith(right) {\n        if (this.constructor !== right.constructor) return false;\n        this.length += right.length;\n        return true;\n    }\n    /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */ integrate(transaction, offset) {\n        if (offset > 0) {\n            this.id.clock += offset;\n            this.length -= offset;\n        }\n        addStruct(transaction.doc.store, this);\n    }\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */ write(encoder, offset) {\n        encoder.writeInfo(structGCRefNumber);\n        encoder.writeLen(this.length - offset);\n    }\n    /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */ getMissing(transaction, store) {\n        return null;\n    }\n}\nclass ContentBinary {\n    /**\n   * @param {Uint8Array} content\n   */ constructor(content){\n        this.content = content;\n    }\n    /**\n   * @return {number}\n   */ getLength() {\n        return 1;\n    }\n    /**\n   * @return {Array<any>}\n   */ getContent() {\n        return [\n            this.content\n        ];\n    }\n    /**\n   * @return {boolean}\n   */ isCountable() {\n        return true;\n    }\n    /**\n   * @return {ContentBinary}\n   */ copy() {\n        return new ContentBinary(this.content);\n    }\n    /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */ splice(offset) {\n        throw _error.methodUnimplemented();\n    }\n    /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */ mergeWith(right) {\n        return false;\n    }\n    /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */ integrate(transaction, item) {}\n    /**\n   * @param {Transaction} transaction\n   */ delete(transaction) {}\n    /**\n   * @param {StructStore} store\n   */ gc(store) {}\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */ write(encoder, offset) {\n        encoder.writeBuf(this.content);\n    }\n    /**\n   * @return {number}\n   */ getRef() {\n        return 3;\n    }\n}\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */ const readContentBinary = (decoder)=>new ContentBinary(decoder.readBuf());\nclass ContentDeleted {\n    /**\n   * @param {number} len\n   */ constructor(len){\n        this.len = len;\n    }\n    /**\n   * @return {number}\n   */ getLength() {\n        return this.len;\n    }\n    /**\n   * @return {Array<any>}\n   */ getContent() {\n        return [];\n    }\n    /**\n   * @return {boolean}\n   */ isCountable() {\n        return false;\n    }\n    /**\n   * @return {ContentDeleted}\n   */ copy() {\n        return new ContentDeleted(this.len);\n    }\n    /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */ splice(offset) {\n        const right = new ContentDeleted(this.len - offset);\n        this.len = offset;\n        return right;\n    }\n    /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */ mergeWith(right) {\n        this.len += right.len;\n        return true;\n    }\n    /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */ integrate(transaction, item) {\n        addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len);\n        item.markDeleted();\n    }\n    /**\n   * @param {Transaction} transaction\n   */ delete(transaction) {}\n    /**\n   * @param {StructStore} store\n   */ gc(store) {}\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */ write(encoder, offset) {\n        encoder.writeLen(this.len - offset);\n    }\n    /**\n   * @return {number}\n   */ getRef() {\n        return 1;\n    }\n}\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */ const readContentDeleted = (decoder)=>new ContentDeleted(decoder.readLen());\n/**\n * @param {string} guid\n * @param {Object<string, any>} opts\n */ const createDocFromOpts = (guid, opts)=>new Doc({\n        guid,\n        ...opts,\n        shouldLoad: opts.shouldLoad || opts.autoLoad || false\n    });\n/**\n * @private\n */ class ContentDoc {\n    /**\n   * @param {Doc} doc\n   */ constructor(doc){\n        if (doc._item) console.error(\"This document was already integrated as a sub-document. You should create a second instance instead with the same guid.\");\n        /**\n     * @type {Doc}\n     */ this.doc = doc;\n        /**\n     * @type {any}\n     */ const opts = {};\n        this.opts = opts;\n        if (!doc.gc) opts.gc = false;\n        if (doc.autoLoad) opts.autoLoad = true;\n        if (doc.meta !== null) opts.meta = doc.meta;\n    }\n    /**\n   * @return {number}\n   */ getLength() {\n        return 1;\n    }\n    /**\n   * @return {Array<any>}\n   */ getContent() {\n        return [\n            this.doc\n        ];\n    }\n    /**\n   * @return {boolean}\n   */ isCountable() {\n        return true;\n    }\n    /**\n   * @return {ContentDoc}\n   */ copy() {\n        return new ContentDoc(createDocFromOpts(this.doc.guid, this.opts));\n    }\n    /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */ splice(offset) {\n        throw _error.methodUnimplemented();\n    }\n    /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */ mergeWith(right) {\n        return false;\n    }\n    /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */ integrate(transaction, item) {\n        // this needs to be reflected in doc.destroy as well\n        this.doc._item = item;\n        transaction.subdocsAdded.add(this.doc);\n        if (this.doc.shouldLoad) transaction.subdocsLoaded.add(this.doc);\n    }\n    /**\n   * @param {Transaction} transaction\n   */ delete(transaction) {\n        if (transaction.subdocsAdded.has(this.doc)) transaction.subdocsAdded.delete(this.doc);\n        else transaction.subdocsRemoved.add(this.doc);\n    }\n    /**\n   * @param {StructStore} store\n   */ gc(store) {}\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */ write(encoder, offset) {\n        encoder.writeString(this.doc.guid);\n        encoder.writeAny(this.opts);\n    }\n    /**\n   * @return {number}\n   */ getRef() {\n        return 9;\n    }\n}\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */ const readContentDoc = (decoder)=>new ContentDoc(createDocFromOpts(decoder.readString(), decoder.readAny()));\n/**\n * @private\n */ class ContentEmbed {\n    /**\n   * @param {Object} embed\n   */ constructor(embed){\n        this.embed = embed;\n    }\n    /**\n   * @return {number}\n   */ getLength() {\n        return 1;\n    }\n    /**\n   * @return {Array<any>}\n   */ getContent() {\n        return [\n            this.embed\n        ];\n    }\n    /**\n   * @return {boolean}\n   */ isCountable() {\n        return true;\n    }\n    /**\n   * @return {ContentEmbed}\n   */ copy() {\n        return new ContentEmbed(this.embed);\n    }\n    /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */ splice(offset) {\n        throw _error.methodUnimplemented();\n    }\n    /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */ mergeWith(right) {\n        return false;\n    }\n    /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */ integrate(transaction, item) {}\n    /**\n   * @param {Transaction} transaction\n   */ delete(transaction) {}\n    /**\n   * @param {StructStore} store\n   */ gc(store) {}\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */ write(encoder, offset) {\n        encoder.writeJSON(this.embed);\n    }\n    /**\n   * @return {number}\n   */ getRef() {\n        return 5;\n    }\n}\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */ const readContentEmbed = (decoder)=>new ContentEmbed(decoder.readJSON());\n/**\n * @private\n */ class ContentFormat {\n    /**\n   * @param {string} key\n   * @param {Object} value\n   */ constructor(key, value){\n        this.key = key;\n        this.value = value;\n    }\n    /**\n   * @return {number}\n   */ getLength() {\n        return 1;\n    }\n    /**\n   * @return {Array<any>}\n   */ getContent() {\n        return [];\n    }\n    /**\n   * @return {boolean}\n   */ isCountable() {\n        return false;\n    }\n    /**\n   * @return {ContentFormat}\n   */ copy() {\n        return new ContentFormat(this.key, this.value);\n    }\n    /**\n   * @param {number} _offset\n   * @return {ContentFormat}\n   */ splice(_offset) {\n        throw _error.methodUnimplemented();\n    }\n    /**\n   * @param {ContentFormat} _right\n   * @return {boolean}\n   */ mergeWith(_right) {\n        return false;\n    }\n    /**\n   * @param {Transaction} _transaction\n   * @param {Item} item\n   */ integrate(_transaction, item) {\n        // @todo searchmarker are currently unsupported for rich text documents\n        const p = /** @type {YText} */ item.parent;\n        p._searchMarker = null;\n        p._hasFormatting = true;\n    }\n    /**\n   * @param {Transaction} transaction\n   */ delete(transaction) {}\n    /**\n   * @param {StructStore} store\n   */ gc(store) {}\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */ write(encoder, offset) {\n        encoder.writeKey(this.key);\n        encoder.writeJSON(this.value);\n    }\n    /**\n   * @return {number}\n   */ getRef() {\n        return 6;\n    }\n}\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */ const readContentFormat = (decoder)=>new ContentFormat(decoder.readKey(), decoder.readJSON());\n/**\n * @private\n */ class ContentJSON {\n    /**\n   * @param {Array<any>} arr\n   */ constructor(arr){\n        /**\n     * @type {Array<any>}\n     */ this.arr = arr;\n    }\n    /**\n   * @return {number}\n   */ getLength() {\n        return this.arr.length;\n    }\n    /**\n   * @return {Array<any>}\n   */ getContent() {\n        return this.arr;\n    }\n    /**\n   * @return {boolean}\n   */ isCountable() {\n        return true;\n    }\n    /**\n   * @return {ContentJSON}\n   */ copy() {\n        return new ContentJSON(this.arr);\n    }\n    /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */ splice(offset) {\n        const right = new ContentJSON(this.arr.slice(offset));\n        this.arr = this.arr.slice(0, offset);\n        return right;\n    }\n    /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */ mergeWith(right) {\n        this.arr = this.arr.concat(right.arr);\n        return true;\n    }\n    /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */ integrate(transaction, item) {}\n    /**\n   * @param {Transaction} transaction\n   */ delete(transaction) {}\n    /**\n   * @param {StructStore} store\n   */ gc(store) {}\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */ write(encoder, offset) {\n        const len = this.arr.length;\n        encoder.writeLen(len - offset);\n        for(let i = offset; i < len; i++){\n            const c = this.arr[i];\n            encoder.writeString(c === undefined ? \"undefined\" : JSON.stringify(c));\n        }\n    }\n    /**\n   * @return {number}\n   */ getRef() {\n        return 2;\n    }\n}\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */ const readContentJSON = (decoder)=>{\n    const len = decoder.readLen();\n    const cs = [];\n    for(let i = 0; i < len; i++){\n        const c = decoder.readString();\n        if (c === \"undefined\") cs.push(undefined);\n        else cs.push(JSON.parse(c));\n    }\n    return new ContentJSON(cs);\n};\nclass ContentAny {\n    /**\n   * @param {Array<any>} arr\n   */ constructor(arr){\n        /**\n     * @type {Array<any>}\n     */ this.arr = arr;\n    }\n    /**\n   * @return {number}\n   */ getLength() {\n        return this.arr.length;\n    }\n    /**\n   * @return {Array<any>}\n   */ getContent() {\n        return this.arr;\n    }\n    /**\n   * @return {boolean}\n   */ isCountable() {\n        return true;\n    }\n    /**\n   * @return {ContentAny}\n   */ copy() {\n        return new ContentAny(this.arr);\n    }\n    /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */ splice(offset) {\n        const right = new ContentAny(this.arr.slice(offset));\n        this.arr = this.arr.slice(0, offset);\n        return right;\n    }\n    /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */ mergeWith(right) {\n        this.arr = this.arr.concat(right.arr);\n        return true;\n    }\n    /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */ integrate(transaction, item) {}\n    /**\n   * @param {Transaction} transaction\n   */ delete(transaction) {}\n    /**\n   * @param {StructStore} store\n   */ gc(store) {}\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */ write(encoder, offset) {\n        const len = this.arr.length;\n        encoder.writeLen(len - offset);\n        for(let i = offset; i < len; i++){\n            const c = this.arr[i];\n            encoder.writeAny(c);\n        }\n    }\n    /**\n   * @return {number}\n   */ getRef() {\n        return 8;\n    }\n}\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */ const readContentAny = (decoder)=>{\n    const len = decoder.readLen();\n    const cs = [];\n    for(let i = 0; i < len; i++)cs.push(decoder.readAny());\n    return new ContentAny(cs);\n};\n/**\n * @private\n */ class ContentString {\n    /**\n   * @param {string} str\n   */ constructor(str){\n        /**\n     * @type {string}\n     */ this.str = str;\n    }\n    /**\n   * @return {number}\n   */ getLength() {\n        return this.str.length;\n    }\n    /**\n   * @return {Array<any>}\n   */ getContent() {\n        return this.str.split(\"\");\n    }\n    /**\n   * @return {boolean}\n   */ isCountable() {\n        return true;\n    }\n    /**\n   * @return {ContentString}\n   */ copy() {\n        return new ContentString(this.str);\n    }\n    /**\n   * @param {number} offset\n   * @return {ContentString}\n   */ splice(offset) {\n        const right = new ContentString(this.str.slice(offset));\n        this.str = this.str.slice(0, offset);\n        // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n        const firstCharCode = this.str.charCodeAt(offset - 1);\n        if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n            // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n            // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n            // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n            this.str = this.str.slice(0, offset - 1) + \"\\uFFFD\";\n            // replace right as well\n            right.str = \"\\uFFFD\" + right.str.slice(1);\n        }\n        return right;\n    }\n    /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */ mergeWith(right) {\n        this.str += right.str;\n        return true;\n    }\n    /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */ integrate(transaction, item) {}\n    /**\n   * @param {Transaction} transaction\n   */ delete(transaction) {}\n    /**\n   * @param {StructStore} store\n   */ gc(store) {}\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */ write(encoder, offset) {\n        encoder.writeString(offset === 0 ? this.str : this.str.slice(offset));\n    }\n    /**\n   * @return {number}\n   */ getRef() {\n        return 4;\n    }\n}\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */ const readContentString = (decoder)=>new ContentString(decoder.readString());\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */ const typeRefs = [\n    readYArray,\n    readYMap,\n    readYText,\n    readYXmlElement,\n    readYXmlFragment,\n    readYXmlHook,\n    readYXmlText\n];\nconst YArrayRefID = 0;\nconst YMapRefID = 1;\nconst YTextRefID = 2;\nconst YXmlElementRefID = 3;\nconst YXmlFragmentRefID = 4;\nconst YXmlHookRefID = 5;\nconst YXmlTextRefID = 6;\n/**\n * @private\n */ class ContentType {\n    /**\n   * @param {AbstractType<any>} type\n   */ constructor(type){\n        /**\n     * @type {AbstractType<any>}\n     */ this.type = type;\n    }\n    /**\n   * @return {number}\n   */ getLength() {\n        return 1;\n    }\n    /**\n   * @return {Array<any>}\n   */ getContent() {\n        return [\n            this.type\n        ];\n    }\n    /**\n   * @return {boolean}\n   */ isCountable() {\n        return true;\n    }\n    /**\n   * @return {ContentType}\n   */ copy() {\n        return new ContentType(this.type._copy());\n    }\n    /**\n   * @param {number} offset\n   * @return {ContentType}\n   */ splice(offset) {\n        throw _error.methodUnimplemented();\n    }\n    /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */ mergeWith(right) {\n        return false;\n    }\n    /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */ integrate(transaction, item) {\n        this.type._integrate(transaction.doc, item);\n    }\n    /**\n   * @param {Transaction} transaction\n   */ delete(transaction) {\n        let item = this.type._start;\n        while(item !== null){\n            if (!item.deleted) item.delete(transaction);\n            else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) // This will be gc'd later and we want to merge it if possible\n            // We try to merge all deleted items after each transaction,\n            // but we have no knowledge about that this needs to be merged\n            // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n            transaction._mergeStructs.push(item);\n            item = item.right;\n        }\n        this.type._map.forEach((item)=>{\n            if (!item.deleted) item.delete(transaction);\n            else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) // same as above\n            transaction._mergeStructs.push(item);\n        });\n        transaction.changed.delete(this.type);\n    }\n    /**\n   * @param {StructStore} store\n   */ gc(store) {\n        let item = this.type._start;\n        while(item !== null){\n            item.gc(store, true);\n            item = item.right;\n        }\n        this.type._start = null;\n        this.type._map.forEach(/** @param {Item | null} item */ (item)=>{\n            while(item !== null){\n                item.gc(store, true);\n                item = item.left;\n            }\n        });\n        this.type._map = new Map();\n    }\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */ write(encoder, offset) {\n        this.type._write(encoder);\n    }\n    /**\n   * @return {number}\n   */ getRef() {\n        return 7;\n    }\n}\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */ const readContentType = (decoder)=>new ContentType(typeRefs[decoder.readTypeRef()](decoder));\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */ const followRedone = (store, id)=>{\n    /**\n   * @type {ID|null}\n   */ let nextID = id;\n    let diff = 0;\n    let item;\n    do {\n        if (diff > 0) nextID = createID(nextID.client, nextID.clock + diff);\n        item = getItem(store, nextID);\n        diff = nextID.clock - item.id.clock;\n        nextID = item.redone;\n    }while (nextID !== null && item instanceof Item);\n    return {\n        item,\n        diff\n    };\n};\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */ const keepItem = (item, keep)=>{\n    while(item !== null && item.keep !== keep){\n        item.keep = keep;\n        item = /** @type {AbstractType<any>} */ item.parent._item;\n    }\n};\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */ const splitItem = (transaction, leftItem, diff)=>{\n    // create rightItem\n    const { client, clock } = leftItem.id;\n    const rightItem = new Item(createID(client, clock + diff), leftItem, createID(client, clock + diff - 1), leftItem.right, leftItem.rightOrigin, leftItem.parent, leftItem.parentSub, leftItem.content.splice(diff));\n    if (leftItem.deleted) rightItem.markDeleted();\n    if (leftItem.keep) rightItem.keep = true;\n    if (leftItem.redone !== null) rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff);\n    // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n    leftItem.right = rightItem;\n    // update right\n    if (rightItem.right !== null) rightItem.right.left = rightItem;\n    // right is more specific.\n    transaction._mergeStructs.push(rightItem);\n    // update parent._map\n    if (rightItem.parentSub !== null && rightItem.right === null) /** @type {AbstractType<any>} */ rightItem.parent._map.set(rightItem.parentSub, rightItem);\n    leftItem.length = diff;\n    return rightItem;\n};\n/**\n * @param {Array<StackItem>} stack\n * @param {ID} id\n */ const isDeletedByUndoStack = (stack, id)=>_array.some(stack, /** @param {StackItem} s */ (s)=>isDeleted(s.deletions, id));\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n * @param {DeleteSet} itemsToDelete\n * @param {boolean} ignoreRemoteMapChanges\n * @param {import('../utils/UndoManager.js').UndoManager} um\n *\n * @return {Item|null}\n *\n * @private\n */ const redoItem = (transaction, item, redoitems, itemsToDelete, ignoreRemoteMapChanges, um)=>{\n    const doc = transaction.doc;\n    const store = doc.store;\n    const ownClientID = doc.clientID;\n    const redone = item.redone;\n    if (redone !== null) return getItemCleanStart(transaction, redone);\n    let parentItem = /** @type {AbstractType<any>} */ item.parent._item;\n    /**\n   * @type {Item|null}\n   */ let left = null;\n    /**\n   * @type {Item|null}\n   */ let right;\n    // make sure that parent is redone\n    if (parentItem !== null && parentItem.deleted === true) {\n        // try to undo parent if it will be undone anyway\n        if (parentItem.redone === null && (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) === null)) return null;\n        while(parentItem.redone !== null)parentItem = getItemCleanStart(transaction, parentItem.redone);\n    }\n    const parentType = parentItem === null ? /** @type {AbstractType<any>} */ item.parent : /** @type {ContentType} */ parentItem.content.type;\n    if (item.parentSub === null) {\n        // Is an array item. Insert at the old position\n        left = item.left;\n        right = item;\n        // find next cloned_redo items\n        while(left !== null){\n            /**\n       * @type {Item|null}\n       */ let leftTrace = left;\n            // trace redone until parent matches\n            while(leftTrace !== null && /** @type {AbstractType<any>} */ leftTrace.parent._item !== parentItem)leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone);\n            if (leftTrace !== null && /** @type {AbstractType<any>} */ leftTrace.parent._item === parentItem) {\n                left = leftTrace;\n                break;\n            }\n            left = left.left;\n        }\n        while(right !== null){\n            /**\n       * @type {Item|null}\n       */ let rightTrace = right;\n            // trace redone until parent matches\n            while(rightTrace !== null && /** @type {AbstractType<any>} */ rightTrace.parent._item !== parentItem)rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone);\n            if (rightTrace !== null && /** @type {AbstractType<any>} */ rightTrace.parent._item === parentItem) {\n                right = rightTrace;\n                break;\n            }\n            right = right.right;\n        }\n    } else {\n        right = null;\n        if (item.right && !ignoreRemoteMapChanges) {\n            left = item;\n            // Iterate right while right is in itemsToDelete\n            // If it is intended to delete right while item is redone, we can expect that item should replace right.\n            while(left !== null && left.right !== null && (left.right.redone || isDeleted(itemsToDelete, left.right.id) || isDeletedByUndoStack(um.undoStack, left.right.id) || isDeletedByUndoStack(um.redoStack, left.right.id))){\n                left = left.right;\n                // follow redone\n                while(left.redone)left = getItemCleanStart(transaction, left.redone);\n            }\n            if (left && left.right !== null) // It is not possible to redo this item because it conflicts with a\n            // change from another client\n            return null;\n        } else left = parentType._map.get(item.parentSub) || null;\n    }\n    const nextClock = getState(store, ownClientID);\n    const nextId = createID(ownClientID, nextClock);\n    const redoneItem = new Item(nextId, left, left && left.lastId, right, right && right.id, parentType, item.parentSub, item.content.copy());\n    item.redone = nextId;\n    keepItem(redoneItem, true);\n    redoneItem.integrate(transaction, 0);\n    return redoneItem;\n};\n/**\n * Abstract class that represents any content.\n */ class Item extends AbstractStruct {\n    /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */ constructor(id, left, origin, right, rightOrigin, parent, parentSub, content){\n        super(id, content.getLength());\n        /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */ this.origin = origin;\n        /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */ this.left = left;\n        /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */ this.right = right;\n        /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */ this.rightOrigin = rightOrigin;\n        /**\n     * @type {AbstractType<any>|ID|null}\n     */ this.parent = parent;\n        /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */ this.parentSub = parentSub;\n        /**\n     * If this type's effect is redone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */ this.redone = null;\n        /**\n     * @type {AbstractContent}\n     */ this.content = content;\n        /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */ this.info = this.content.isCountable() ? _binary.BIT2 : 0;\n    }\n    /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */ set marker(isMarked) {\n        if ((this.info & _binary.BIT4) > 0 !== isMarked) this.info ^= _binary.BIT4;\n    }\n    get marker() {\n        return (this.info & _binary.BIT4) > 0;\n    }\n    /**\n   * If true, do not garbage collect this Item.\n   */ get keep() {\n        return (this.info & _binary.BIT1) > 0;\n    }\n    set keep(doKeep) {\n        if (this.keep !== doKeep) this.info ^= _binary.BIT1;\n    }\n    get countable() {\n        return (this.info & _binary.BIT2) > 0;\n    }\n    /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */ get deleted() {\n        return (this.info & _binary.BIT3) > 0;\n    }\n    set deleted(doDelete) {\n        if (this.deleted !== doDelete) this.info ^= _binary.BIT3;\n    }\n    markDeleted() {\n        this.info |= _binary.BIT3;\n    }\n    /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */ getMissing(transaction, store) {\n        if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) return this.origin.client;\n        if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) return this.rightOrigin.client;\n        if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) return this.parent.client;\n        // We have all missing ids, now find the items\n        if (this.origin) {\n            this.left = getItemCleanEnd(transaction, store, this.origin);\n            this.origin = this.left.lastId;\n        }\n        if (this.rightOrigin) {\n            this.right = getItemCleanStart(transaction, this.rightOrigin);\n            this.rightOrigin = this.right.id;\n        }\n        if (this.left && this.left.constructor === GC || this.right && this.right.constructor === GC) this.parent = null;\n        else if (!this.parent) {\n            // only set parent if this shouldn't be garbage collected\n            if (this.left && this.left.constructor === Item) {\n                this.parent = this.left.parent;\n                this.parentSub = this.left.parentSub;\n            }\n            if (this.right && this.right.constructor === Item) {\n                this.parent = this.right.parent;\n                this.parentSub = this.right.parentSub;\n            }\n        } else if (this.parent.constructor === ID) {\n            const parentItem = getItem(store, this.parent);\n            if (parentItem.constructor === GC) this.parent = null;\n            else this.parent = /** @type {ContentType} */ parentItem.content.type;\n        }\n        return null;\n    }\n    /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */ integrate(transaction, offset) {\n        if (offset > 0) {\n            this.id.clock += offset;\n            this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1));\n            this.origin = this.left.lastId;\n            this.content = this.content.splice(offset);\n            this.length -= offset;\n        }\n        if (this.parent) {\n            if (!this.left && (!this.right || this.right.left !== null) || this.left && this.left.right !== this.right) {\n                /**\n         * @type {Item|null}\n         */ let left = this.left;\n                /**\n         * @type {Item|null}\n         */ let o;\n                // set o to the first conflicting item\n                if (left !== null) o = left.right;\n                else if (this.parentSub !== null) {\n                    o = /** @type {AbstractType<any>} */ this.parent._map.get(this.parentSub) || null;\n                    while(o !== null && o.left !== null)o = o.left;\n                } else o = /** @type {AbstractType<any>} */ this.parent._start;\n                // TODO: use something like DeleteSet here (a tree implementation would be best)\n                // @todo use global set definitions\n                /**\n         * @type {Set<Item>}\n         */ const conflictingItems = new Set();\n                /**\n         * @type {Set<Item>}\n         */ const itemsBeforeOrigin = new Set();\n                // Let c in conflictingItems, b in itemsBeforeOrigin\n                // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n                // Note that conflictingItems is a subset of itemsBeforeOrigin\n                while(o !== null && o !== this.right){\n                    itemsBeforeOrigin.add(o);\n                    conflictingItems.add(o);\n                    if (compareIDs(this.origin, o.origin)) {\n                        // case 1\n                        if (o.id.client < this.id.client) {\n                            left = o;\n                            conflictingItems.clear();\n                        } else if (compareIDs(this.rightOrigin, o.rightOrigin)) break;\n                         // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n                    } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) // case 2\n                    {\n                        if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n                            left = o;\n                            conflictingItems.clear();\n                        }\n                    } else break;\n                    o = o.right;\n                }\n                this.left = left;\n            }\n            // reconnect left/right + update parent map/start if necessary\n            if (this.left !== null) {\n                const right = this.left.right;\n                this.right = right;\n                this.left.right = this;\n            } else {\n                let r;\n                if (this.parentSub !== null) {\n                    r = /** @type {AbstractType<any>} */ this.parent._map.get(this.parentSub) || null;\n                    while(r !== null && r.left !== null)r = r.left;\n                } else {\n                    r = /** @type {AbstractType<any>} */ this.parent._start; /** @type {AbstractType<any>} */ \n                    this.parent._start = this;\n                }\n                this.right = r;\n            }\n            if (this.right !== null) this.right.left = this;\n            else if (this.parentSub !== null) {\n                // set as current parent value if right === null and this is parentSub\n                /** @type {AbstractType<any>} */ this.parent._map.set(this.parentSub, this);\n                if (this.left !== null) // this is the current attribute value of parent. delete right\n                this.left.delete(transaction);\n            }\n            // adjust length of parent\n            if (this.parentSub === null && this.countable && !this.deleted) /** @type {AbstractType<any>} */ this.parent._length += this.length;\n            addStruct(transaction.doc.store, this);\n            this.content.integrate(transaction, this);\n            // add parent to transaction.changed\n            addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ this.parent, this.parentSub);\n            if (/** @type {AbstractType<any>} */ this.parent._item !== null && /** @type {AbstractType<any>} */ this.parent._item.deleted || this.parentSub !== null && this.right !== null) // delete if parent is deleted or if this is not the current attribute value of parent\n            this.delete(transaction);\n        } else // parent is not defined. Integrate GC struct instead\n        new GC(this.id, this.length).integrate(transaction, 0);\n    }\n    /**\n   * Returns the next non-deleted item\n   */ get next() {\n        let n = this.right;\n        while(n !== null && n.deleted)n = n.right;\n        return n;\n    }\n    /**\n   * Returns the previous non-deleted item\n   */ get prev() {\n        let n = this.left;\n        while(n !== null && n.deleted)n = n.left;\n        return n;\n    }\n    /**\n   * Computes the last content address of this Item.\n   */ get lastId() {\n        // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n        return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1);\n    }\n    /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */ mergeWith(right) {\n        if (this.constructor === right.constructor && compareIDs(right.origin, this.lastId) && this.right === right && compareIDs(this.rightOrigin, right.rightOrigin) && this.id.client === right.id.client && this.id.clock + this.length === right.id.clock && this.deleted === right.deleted && this.redone === null && right.redone === null && this.content.constructor === right.content.constructor && this.content.mergeWith(right.content)) {\n            const searchMarker = /** @type {AbstractType<any>} */ this.parent._searchMarker;\n            if (searchMarker) searchMarker.forEach((marker)=>{\n                if (marker.p === right) {\n                    // right is going to be \"forgotten\" so we need to update the marker\n                    marker.p = this;\n                    // adjust marker index\n                    if (!this.deleted && this.countable) marker.index -= this.length;\n                }\n            });\n            if (right.keep) this.keep = true;\n            this.right = right.right;\n            if (this.right !== null) this.right.left = this;\n            this.length += right.length;\n            return true;\n        }\n        return false;\n    }\n    /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */ delete(transaction) {\n        if (!this.deleted) {\n            const parent = /** @type {AbstractType<any>} */ this.parent;\n            // adjust the length of parent\n            if (this.countable && this.parentSub === null) parent._length -= this.length;\n            this.markDeleted();\n            addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length);\n            addChangedTypeToTransaction(transaction, parent, this.parentSub);\n            this.content.delete(transaction);\n        }\n    }\n    /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */ gc(store, parentGCd) {\n        if (!this.deleted) throw _error.unexpectedCase();\n        this.content.gc(store);\n        if (parentGCd) replaceStruct(store, this, new GC(this.id, this.length));\n        else this.content = new ContentDeleted(this.length);\n    }\n    /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */ write(encoder, offset) {\n        const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin;\n        const rightOrigin = this.rightOrigin;\n        const parentSub = this.parentSub;\n        const info = this.content.getRef() & _binary.BITS5 | (origin === null ? 0 : _binary.BIT8) | // origin is defined\n        (rightOrigin === null ? 0 : _binary.BIT7) | // right origin is defined\n        (parentSub === null ? 0 : _binary.BIT6); // parentSub is non-null\n        encoder.writeInfo(info);\n        if (origin !== null) encoder.writeLeftID(origin);\n        if (rightOrigin !== null) encoder.writeRightID(rightOrigin);\n        if (origin === null && rightOrigin === null) {\n            const parent = /** @type {AbstractType<any>} */ this.parent;\n            if (parent._item !== undefined) {\n                const parentItem = parent._item;\n                if (parentItem === null) {\n                    // parent type on y._map\n                    // find the correct key\n                    const ykey = findRootTypeKey(parent);\n                    encoder.writeParentInfo(true); // write parentYKey\n                    encoder.writeString(ykey);\n                } else {\n                    encoder.writeParentInfo(false); // write parent id\n                    encoder.writeLeftID(parentItem.id);\n                }\n            } else if (parent.constructor === String) {\n                encoder.writeParentInfo(true); // write parentYKey\n                encoder.writeString(parent);\n            } else if (parent.constructor === ID) {\n                encoder.writeParentInfo(false); // write parent id\n                encoder.writeLeftID(parent);\n            } else _error.unexpectedCase();\n            if (parentSub !== null) encoder.writeString(parentSub);\n        }\n        this.content.write(encoder, offset);\n    }\n}\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */ const readItemContent = (decoder, info)=>contentRefs[info & _binary.BITS5](decoder);\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */ const contentRefs = [\n    ()=>{\n        _error.unexpectedCase();\n    },\n    readContentDeleted,\n    readContentJSON,\n    readContentBinary,\n    readContentString,\n    readContentEmbed,\n    readContentFormat,\n    readContentType,\n    readContentAny,\n    readContentDoc,\n    ()=>{\n        _error.unexpectedCase();\n    } // 10 - Skip is not ItemContent\n];\nconst structSkipRefNumber = 10;\n/**\n * @private\n */ class Skip extends AbstractStruct {\n    get deleted() {\n        return true;\n    }\n    delete() {}\n    /**\n   * @param {Skip} right\n   * @return {boolean}\n   */ mergeWith(right) {\n        if (this.constructor !== right.constructor) return false;\n        this.length += right.length;\n        return true;\n    }\n    /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */ integrate(transaction, offset) {\n        // skip structs cannot be integrated\n        _error.unexpectedCase();\n    }\n    /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */ write(encoder, offset) {\n        encoder.writeInfo(structSkipRefNumber);\n        // write as VarUint because Skips can't make use of predictable length-encoding\n        _encoding.writeVarUint(encoder.restEncoder, this.length - offset);\n    }\n    /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */ getMissing(transaction, store) {\n        return null;\n    }\n}\n/** eslint-env browser */ const glo = /** @type {any} */ typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {};\nconst importIdentifier = \"__ $YJS$ __\";\nif (glo[importIdentifier] === true) /**\n   * Dear reader of this message. Please take this seriously.\n   *\n   * If you see this message, make sure that you only import one version of Yjs. In many cases,\n   * your package manager installs two versions of Yjs that are used by different packages within your project.\n   * Another reason for this message is that some parts of your project use the commonjs version of Yjs\n   * and others use the EcmaScript version of Yjs.\n   *\n   * This often leads to issues that are hard to debug. We often need to perform constructor checks,\n   * e.g. `struct instanceof GC`. If you imported different versions of Yjs, it is impossible for us to\n   * do the constructor checks anymore - which might break the CRDT algorithm.\n   *\n   * https://github.com/yjs/yjs/issues/438\n   */ console.error(\"Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438\");\nglo[importIdentifier] = true;\n\n},{\"lib0/observable\":\"amBmg\",\"lib0/array\":\"bulEf\",\"lib0/math\":\"795wo\",\"lib0/map\":\"lJGY0\",\"lib0/encoding\":\"g4TSB\",\"lib0/decoding\":\"cr3U7\",\"lib0/random\":\"jR6wq\",\"lib0/promise\":\"gbTJW\",\"lib0/buffer\":\"a8sZz\",\"lib0/error\":\"940l9\",\"lib0/binary\":\"efRDV\",\"lib0/function\":\"eR5QY\",\"lib0/set\":\"7fyzs\",\"lib0/logging\":\"azyau\",\"lib0/time\":\"fLlrR\",\"lib0/string\":\"cVVIB\",\"lib0/iterator\":\"lB9HM\",\"lib0/object\":\"i9Pf5\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"amBmg\":[function(require,module,exports) {\n/**\n * Observable class prototype.\n *\n * @module observable\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/**\n * Handles named events.\n * @experimental\n *\n * This is basically a (better typed) duplicate of Observable, which will replace Observable in the\n * next release.\n *\n * @template {{[key in keyof EVENTS]: function(...any):void}} EVENTS\n */ parcelHelpers.export(exports, \"ObservableV2\", ()=>ObservableV2);\n/* c8 ignore start */ /**\n * Handles named events.\n *\n * @deprecated\n * @template N\n */ parcelHelpers.export(exports, \"Observable\", ()=>Observable) /* c8 ignore end */ ;\nvar _mapJs = require(\"./map.js\");\nvar _setJs = require(\"./set.js\");\nvar _arrayJs = require(\"./array.js\");\nclass ObservableV2 {\n    constructor(){\n        /**\n     * Some desc.\n     * @type {Map<string, Set<any>>}\n     */ this._observers = _mapJs.create();\n    }\n    /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */ on(name, f) {\n        _mapJs.setIfUndefined(this._observers, /** @type {string} */ name, _setJs.create).add(f);\n        return f;\n    }\n    /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */ once(name, f) {\n        /**\n     * @param  {...any} args\n     */ const _f = (...args)=>{\n            this.off(name, /** @type {any} */ _f);\n            f(...args);\n        };\n        this.on(name, /** @type {any} */ _f);\n    }\n    /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */ off(name, f) {\n        const observers = this._observers.get(name);\n        if (observers !== undefined) {\n            observers.delete(f);\n            if (observers.size === 0) this._observers.delete(name);\n        }\n    }\n    /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name The event name.\n   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.\n   */ emit(name, args) {\n        // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n        return _arrayJs.from((this._observers.get(name) || _mapJs.create()).values()).forEach((f)=>f(...args));\n    }\n    destroy() {\n        this._observers = _mapJs.create();\n    }\n}\nclass Observable {\n    constructor(){\n        /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */ this._observers = _mapJs.create();\n    }\n    /**\n   * @param {N} name\n   * @param {function} f\n   */ on(name, f) {\n        _mapJs.setIfUndefined(this._observers, name, _setJs.create).add(f);\n    }\n    /**\n   * @param {N} name\n   * @param {function} f\n   */ once(name, f) {\n        /**\n     * @param  {...any} args\n     */ const _f = (...args)=>{\n            this.off(name, _f);\n            f(...args);\n        };\n        this.on(name, _f);\n    }\n    /**\n   * @param {N} name\n   * @param {function} f\n   */ off(name, f) {\n        const observers = this._observers.get(name);\n        if (observers !== undefined) {\n            observers.delete(f);\n            if (observers.size === 0) this._observers.delete(name);\n        }\n    }\n    /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */ emit(name, args) {\n        // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n        return _arrayJs.from((this._observers.get(name) || _mapJs.create()).values()).forEach((f)=>f(...args));\n    }\n    destroy() {\n        this._observers = _mapJs.create();\n    }\n}\n\n},{\"./map.js\":\"lJGY0\",\"./set.js\":\"7fyzs\",\"./array.js\":\"bulEf\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"lJGY0\":[function(require,module,exports) {\n/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */ /**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"create\", ()=>create);\nparcelHelpers.export(exports, \"copy\", ()=>copy);\nparcelHelpers.export(exports, \"setIfUndefined\", ()=>setIfUndefined);\nparcelHelpers.export(exports, \"map\", ()=>map);\nparcelHelpers.export(exports, \"any\", ()=>any);\nparcelHelpers.export(exports, \"all\", ()=>all);\nconst create = ()=>new Map();\nconst copy = (m)=>{\n    const r = create();\n    m.forEach((v, k)=>{\n        r.set(k, v);\n    });\n    return r;\n};\nconst setIfUndefined = (map, key, createT)=>{\n    let set = map.get(key);\n    if (set === undefined) map.set(key, set = createT());\n    return set;\n};\nconst map = (m, f)=>{\n    const res = [];\n    for (const [key, value] of m)res.push(f(value, key));\n    return res;\n};\nconst any = (m, f)=>{\n    for (const [key, value] of m){\n        if (f(value, key)) return true;\n    }\n    return false;\n};\nconst all = (m, f)=>{\n    for (const [key, value] of m){\n        if (!f(value, key)) return false;\n    }\n    return true;\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"7fyzs\":[function(require,module,exports) {\n/**\n * Utility module to work with sets.\n *\n * @module set\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"create\", ()=>create);\nparcelHelpers.export(exports, \"toArray\", ()=>toArray);\nparcelHelpers.export(exports, \"first\", ()=>first);\nparcelHelpers.export(exports, \"from\", ()=>from);\nconst create = ()=>new Set();\nconst toArray = (set)=>Array.from(set);\nconst first = (set)=>set.values().next().value || undefined;\nconst from = (entries)=>new Set(entries);\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"bulEf\":[function(require,module,exports) {\n/**\n * Utility module to work with Arrays.\n *\n * @module array\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"last\", ()=>last);\nparcelHelpers.export(exports, \"create\", ()=>create);\nparcelHelpers.export(exports, \"copy\", ()=>copy);\nparcelHelpers.export(exports, \"appendTo\", ()=>appendTo);\nparcelHelpers.export(exports, \"from\", ()=>from);\nparcelHelpers.export(exports, \"every\", ()=>every);\nparcelHelpers.export(exports, \"some\", ()=>some);\nparcelHelpers.export(exports, \"equalFlat\", ()=>equalFlat);\nparcelHelpers.export(exports, \"flatten\", ()=>flatten);\nparcelHelpers.export(exports, \"unfold\", ()=>unfold);\nparcelHelpers.export(exports, \"fold\", ()=>fold);\nparcelHelpers.export(exports, \"isArray\", ()=>isArray);\nparcelHelpers.export(exports, \"unique\", ()=>unique);\nparcelHelpers.export(exports, \"uniqueBy\", ()=>uniqueBy);\nparcelHelpers.export(exports, \"map\", ()=>map);\nvar _setJs = require(\"./set.js\");\nconst last = (arr)=>arr[arr.length - 1];\nconst create = ()=>/** @type {Array<C>} */ [];\nconst copy = (a)=>/** @type {Array<D>} */ a.slice();\nconst appendTo = (dest, src)=>{\n    for(let i = 0; i < src.length; i++)dest.push(src[i]);\n};\nconst from = Array.from;\nconst every = (arr, f)=>{\n    for(let i = 0; i < arr.length; i++){\n        if (!f(arr[i], i, arr)) return false;\n    }\n    return true;\n};\nconst some = (arr, f)=>{\n    for(let i = 0; i < arr.length; i++){\n        if (f(arr[i], i, arr)) return true;\n    }\n    return false;\n};\nconst equalFlat = (a, b)=>a.length === b.length && every(a, (item, index)=>item === b[index]);\nconst flatten = (arr)=>fold(arr, /** @type {Array<ELEM>} */ [], (acc, val)=>acc.concat(val));\nconst unfold = (len, f)=>{\n    const array = new Array(len);\n    for(let i = 0; i < len; i++)array[i] = f(i, array);\n    return array;\n};\nconst fold = (arr, seed, folder)=>arr.reduce(folder, seed);\nconst isArray = Array.isArray;\nconst unique = (arr)=>from(_setJs.from(arr));\nconst uniqueBy = (arr, mapper)=>{\n    /**\n   * @type {Set<M>}\n   */ const happened = _setJs.create();\n    /**\n   * @type {Array<T>}\n   */ const result = [];\n    for(let i = 0; i < arr.length; i++){\n        const el = arr[i];\n        const mapped = mapper(el);\n        if (!happened.has(mapped)) {\n            happened.add(mapped);\n            result.push(el);\n        }\n    }\n    return result;\n};\nconst map = (arr, mapper)=>{\n    /**\n   * @type {Array<any>}\n   */ const res = Array(arr.length);\n    for(let i = 0; i < arr.length; i++)res[i] = mapper(/** @type {any} */ arr[i], i, /** @type {any} */ arr);\n    return /** @type {any} */ res;\n};\n\n},{\"./set.js\":\"7fyzs\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"795wo\":[function(require,module,exports) {\n/**\n * Common Math expressions.\n *\n * @module math\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"floor\", ()=>floor);\nparcelHelpers.export(exports, \"ceil\", ()=>ceil);\nparcelHelpers.export(exports, \"abs\", ()=>abs);\nparcelHelpers.export(exports, \"imul\", ()=>imul);\nparcelHelpers.export(exports, \"round\", ()=>round);\nparcelHelpers.export(exports, \"log10\", ()=>log10);\nparcelHelpers.export(exports, \"log2\", ()=>log2);\nparcelHelpers.export(exports, \"log\", ()=>log);\nparcelHelpers.export(exports, \"sqrt\", ()=>sqrt);\nparcelHelpers.export(exports, \"add\", ()=>add);\nparcelHelpers.export(exports, \"min\", ()=>min);\nparcelHelpers.export(exports, \"max\", ()=>max);\nparcelHelpers.export(exports, \"isNaN\", ()=>isNaN);\nparcelHelpers.export(exports, \"pow\", ()=>pow);\nparcelHelpers.export(exports, \"exp10\", ()=>exp10);\nparcelHelpers.export(exports, \"sign\", ()=>sign);\nparcelHelpers.export(exports, \"isNegativeZero\", ()=>isNegativeZero);\nconst floor = Math.floor;\nconst ceil = Math.ceil;\nconst abs = Math.abs;\nconst imul = Math.imul;\nconst round = Math.round;\nconst log10 = Math.log10;\nconst log2 = Math.log2;\nconst log = Math.log;\nconst sqrt = Math.sqrt;\nconst add = (a, b)=>a + b;\nconst min = (a, b)=>a < b ? a : b;\nconst max = (a, b)=>a > b ? a : b;\nconst isNaN = Number.isNaN;\nconst pow = Math.pow;\nconst exp10 = (exp)=>Math.pow(10, exp);\nconst sign = Math.sign;\nconst isNegativeZero = (n)=>n !== 0 ? n < 0 : 1 / n < 0;\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"g4TSB\":[function(require,module,exports) {\n/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */ parcelHelpers.export(exports, \"Encoder\", ()=>Encoder);\nparcelHelpers.export(exports, \"createEncoder\", ()=>createEncoder);\nparcelHelpers.export(exports, \"encode\", ()=>encode);\nparcelHelpers.export(exports, \"length\", ()=>length);\nparcelHelpers.export(exports, \"hasContent\", ()=>hasContent);\nparcelHelpers.export(exports, \"toUint8Array\", ()=>toUint8Array);\nparcelHelpers.export(exports, \"verifyLen\", ()=>verifyLen);\nparcelHelpers.export(exports, \"write\", ()=>write);\nparcelHelpers.export(exports, \"set\", ()=>set);\nparcelHelpers.export(exports, \"writeUint8\", ()=>writeUint8);\nparcelHelpers.export(exports, \"setUint8\", ()=>setUint8);\nparcelHelpers.export(exports, \"writeUint16\", ()=>writeUint16);\nparcelHelpers.export(exports, \"setUint16\", ()=>setUint16);\nparcelHelpers.export(exports, \"writeUint32\", ()=>writeUint32);\nparcelHelpers.export(exports, \"writeUint32BigEndian\", ()=>writeUint32BigEndian);\nparcelHelpers.export(exports, \"setUint32\", ()=>setUint32);\nparcelHelpers.export(exports, \"writeVarUint\", ()=>writeVarUint);\nparcelHelpers.export(exports, \"writeVarInt\", ()=>writeVarInt);\nparcelHelpers.export(exports, \"_writeVarStringNative\", ()=>_writeVarStringNative);\nparcelHelpers.export(exports, \"_writeVarStringPolyfill\", ()=>_writeVarStringPolyfill);\nparcelHelpers.export(exports, \"writeVarString\", ()=>writeVarString);\nparcelHelpers.export(exports, \"writeTerminatedString\", ()=>writeTerminatedString);\nparcelHelpers.export(exports, \"writeTerminatedUint8Array\", ()=>writeTerminatedUint8Array);\nparcelHelpers.export(exports, \"writeBinaryEncoder\", ()=>writeBinaryEncoder);\nparcelHelpers.export(exports, \"writeUint8Array\", ()=>writeUint8Array);\nparcelHelpers.export(exports, \"writeVarUint8Array\", ()=>writeVarUint8Array);\nparcelHelpers.export(exports, \"writeOnDataView\", ()=>writeOnDataView);\nparcelHelpers.export(exports, \"writeFloat32\", ()=>writeFloat32);\nparcelHelpers.export(exports, \"writeFloat64\", ()=>writeFloat64);\nparcelHelpers.export(exports, \"writeBigInt64\", ()=>writeBigInt64);\nparcelHelpers.export(exports, \"writeBigUint64\", ()=>writeBigUint64);\nparcelHelpers.export(exports, \"writeAny\", ()=>writeAny);\n/**\n * Now come a few stateful encoder that have their own classes.\n */ /**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */ parcelHelpers.export(exports, \"RleEncoder\", ()=>RleEncoder);\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */ parcelHelpers.export(exports, \"IntDiffEncoder\", ()=>IntDiffEncoder);\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */ parcelHelpers.export(exports, \"RleIntDiffEncoder\", ()=>RleIntDiffEncoder);\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */ parcelHelpers.export(exports, \"UintOptRleEncoder\", ()=>UintOptRleEncoder);\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */ parcelHelpers.export(exports, \"IncUintOptRleEncoder\", ()=>IncUintOptRleEncoder);\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */ parcelHelpers.export(exports, \"IntDiffOptRleEncoder\", ()=>IntDiffOptRleEncoder);\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */ parcelHelpers.export(exports, \"StringEncoder\", ()=>StringEncoder);\nvar _mathJs = require(\"./math.js\");\nvar _numberJs = require(\"./number.js\");\nvar _binaryJs = require(\"./binary.js\");\nvar _stringJs = require(\"./string.js\");\nvar _arrayJs = require(\"./array.js\");\nclass Encoder {\n    constructor(){\n        this.cpos = 0;\n        this.cbuf = new Uint8Array(100);\n        /**\n     * @type {Array<Uint8Array>}\n     */ this.bufs = [];\n    }\n}\nconst createEncoder = ()=>new Encoder();\nconst encode = (f)=>{\n    const encoder = createEncoder();\n    f(encoder);\n    return toUint8Array(encoder);\n};\nconst length = (encoder)=>{\n    let len = encoder.cpos;\n    for(let i = 0; i < encoder.bufs.length; i++)len += encoder.bufs[i].length;\n    return len;\n};\nconst hasContent = (encoder)=>encoder.cpos > 0 || encoder.bufs.length > 0;\nconst toUint8Array = (encoder)=>{\n    const uint8arr = new Uint8Array(length(encoder));\n    let curPos = 0;\n    for(let i = 0; i < encoder.bufs.length; i++){\n        const d = encoder.bufs[i];\n        uint8arr.set(d, curPos);\n        curPos += d.length;\n    }\n    uint8arr.set(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos), curPos);\n    return uint8arr;\n};\nconst verifyLen = (encoder, len)=>{\n    const bufferLen = encoder.cbuf.length;\n    if (bufferLen - encoder.cpos < len) {\n        encoder.bufs.push(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos));\n        encoder.cbuf = new Uint8Array(_mathJs.max(bufferLen, len) * 2);\n        encoder.cpos = 0;\n    }\n};\nconst write = (encoder, num)=>{\n    const bufferLen = encoder.cbuf.length;\n    if (encoder.cpos === bufferLen) {\n        encoder.bufs.push(encoder.cbuf);\n        encoder.cbuf = new Uint8Array(bufferLen * 2);\n        encoder.cpos = 0;\n    }\n    encoder.cbuf[encoder.cpos++] = num;\n};\nconst set = (encoder, pos, num)=>{\n    let buffer = null;\n    // iterate all buffers and adjust position\n    for(let i = 0; i < encoder.bufs.length && buffer === null; i++){\n        const b = encoder.bufs[i];\n        if (pos < b.length) buffer = b // found buffer\n        ;\n        else pos -= b.length;\n    }\n    if (buffer === null) // use current buffer\n    buffer = encoder.cbuf;\n    buffer[pos] = num;\n};\nconst writeUint8 = write;\nconst setUint8 = set;\nconst writeUint16 = (encoder, num)=>{\n    write(encoder, num & _binaryJs.BITS8);\n    write(encoder, num >>> 8 & _binaryJs.BITS8);\n};\nconst setUint16 = (encoder, pos, num)=>{\n    set(encoder, pos, num & _binaryJs.BITS8);\n    set(encoder, pos + 1, num >>> 8 & _binaryJs.BITS8);\n};\nconst writeUint32 = (encoder, num)=>{\n    for(let i = 0; i < 4; i++){\n        write(encoder, num & _binaryJs.BITS8);\n        num >>>= 8;\n    }\n};\nconst writeUint32BigEndian = (encoder, num)=>{\n    for(let i = 3; i >= 0; i--)write(encoder, num >>> 8 * i & _binaryJs.BITS8);\n};\nconst setUint32 = (encoder, pos, num)=>{\n    for(let i = 0; i < 4; i++){\n        set(encoder, pos + i, num & _binaryJs.BITS8);\n        num >>>= 8;\n    }\n};\nconst writeVarUint = (encoder, num)=>{\n    while(num > _binaryJs.BITS7){\n        write(encoder, _binaryJs.BIT8 | _binaryJs.BITS7 & num);\n        num = _mathJs.floor(num / 128) // shift >>> 7\n        ;\n    }\n    write(encoder, _binaryJs.BITS7 & num);\n};\nconst writeVarInt = (encoder, num)=>{\n    const isNegative = _mathJs.isNegativeZero(num);\n    if (isNegative) num = -num;\n    //             |- whether to continue reading         |- whether is negative     |- number\n    write(encoder, (num > _binaryJs.BITS6 ? _binaryJs.BIT8 : 0) | (isNegative ? _binaryJs.BIT7 : 0) | _binaryJs.BITS6 & num);\n    num = _mathJs.floor(num / 64) // shift >>> 6\n    ;\n    // We don't need to consider the case of num === 0 so we can use a different\n    // pattern here than above.\n    while(num > 0){\n        write(encoder, (num > _binaryJs.BITS7 ? _binaryJs.BIT8 : 0) | _binaryJs.BITS7 & num);\n        num = _mathJs.floor(num / 128) // shift >>> 7\n        ;\n    }\n};\n/**\n * A cache to store strings temporarily\n */ const _strBuffer = new Uint8Array(30000);\nconst _maxStrBSize = _strBuffer.length / 3;\nconst _writeVarStringNative = (encoder, str)=>{\n    if (str.length < _maxStrBSize) {\n        // We can encode the string into the existing buffer\n        /* c8 ignore next */ const written = _stringJs.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0;\n        writeVarUint(encoder, written);\n        for(let i = 0; i < written; i++)write(encoder, _strBuffer[i]);\n    } else writeVarUint8Array(encoder, _stringJs.encodeUtf8(str));\n};\nconst _writeVarStringPolyfill = (encoder, str)=>{\n    const encodedString = unescape(encodeURIComponent(str));\n    const len = encodedString.length;\n    writeVarUint(encoder, len);\n    for(let i = 0; i < len; i++)write(encoder, /** @type {number} */ encodedString.codePointAt(i));\n};\nconst writeVarString = _stringJs.utf8TextEncoder && /** @type {any} */ _stringJs.utf8TextEncoder.encodeInto ? _writeVarStringNative : _writeVarStringPolyfill;\nconst writeTerminatedString = (encoder, str)=>writeTerminatedUint8Array(encoder, _stringJs.encodeUtf8(str));\nconst writeTerminatedUint8Array = (encoder, buf)=>{\n    for(let i = 0; i < buf.length; i++){\n        const b = buf[i];\n        if (b === 0 || b === 1) write(encoder, 1);\n        write(encoder, buf[i]);\n    }\n    write(encoder, 0);\n};\nconst writeBinaryEncoder = (encoder, append)=>writeUint8Array(encoder, toUint8Array(append));\nconst writeUint8Array = (encoder, uint8Array)=>{\n    const bufferLen = encoder.cbuf.length;\n    const cpos = encoder.cpos;\n    const leftCopyLen = _mathJs.min(bufferLen - cpos, uint8Array.length);\n    const rightCopyLen = uint8Array.length - leftCopyLen;\n    encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos);\n    encoder.cpos += leftCopyLen;\n    if (rightCopyLen > 0) {\n        // Still something to write, write right half..\n        // Append new buffer\n        encoder.bufs.push(encoder.cbuf);\n        // must have at least size of remaining buffer\n        encoder.cbuf = new Uint8Array(_mathJs.max(bufferLen * 2, rightCopyLen));\n        // copy array\n        encoder.cbuf.set(uint8Array.subarray(leftCopyLen));\n        encoder.cpos = rightCopyLen;\n    }\n};\nconst writeVarUint8Array = (encoder, uint8Array)=>{\n    writeVarUint(encoder, uint8Array.byteLength);\n    writeUint8Array(encoder, uint8Array);\n};\nconst writeOnDataView = (encoder, len)=>{\n    verifyLen(encoder, len);\n    const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len);\n    encoder.cpos += len;\n    return dview;\n};\nconst writeFloat32 = (encoder, num)=>writeOnDataView(encoder, 4).setFloat32(0, num, false);\nconst writeFloat64 = (encoder, num)=>writeOnDataView(encoder, 8).setFloat64(0, num, false);\nconst writeBigInt64 = (encoder, num)=>/** @type {any} */ writeOnDataView(encoder, 8).setBigInt64(0, num, false);\nconst writeBigUint64 = (encoder, num)=>/** @type {any} */ writeOnDataView(encoder, 8).setBigUint64(0, num, false);\nconst floatTestBed = new DataView(new ArrayBuffer(4));\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */ const isFloat32 = (num)=>{\n    floatTestBed.setFloat32(0, num);\n    return floatTestBed.getFloat32(0) === num;\n};\nconst writeAny = (encoder, data)=>{\n    switch(typeof data){\n        case \"string\":\n            // TYPE 119: STRING\n            write(encoder, 119);\n            writeVarString(encoder, data);\n            break;\n        case \"number\":\n            if (_numberJs.isInteger(data) && _mathJs.abs(data) <= _binaryJs.BITS31) {\n                // TYPE 125: INTEGER\n                write(encoder, 125);\n                writeVarInt(encoder, data);\n            } else if (isFloat32(data)) {\n                // TYPE 124: FLOAT32\n                write(encoder, 124);\n                writeFloat32(encoder, data);\n            } else {\n                // TYPE 123: FLOAT64\n                write(encoder, 123);\n                writeFloat64(encoder, data);\n            }\n            break;\n        case \"bigint\":\n            // TYPE 122: BigInt\n            write(encoder, 122);\n            writeBigInt64(encoder, data);\n            break;\n        case \"object\":\n            if (data === null) // TYPE 126: null\n            write(encoder, 126);\n            else if (_arrayJs.isArray(data)) {\n                // TYPE 117: Array\n                write(encoder, 117);\n                writeVarUint(encoder, data.length);\n                for(let i = 0; i < data.length; i++)writeAny(encoder, data[i]);\n            } else if (data instanceof Uint8Array) {\n                // TYPE 116: ArrayBuffer\n                write(encoder, 116);\n                writeVarUint8Array(encoder, data);\n            } else {\n                // TYPE 118: Object\n                write(encoder, 118);\n                const keys = Object.keys(data);\n                writeVarUint(encoder, keys.length);\n                for(let i = 0; i < keys.length; i++){\n                    const key = keys[i];\n                    writeVarString(encoder, key);\n                    writeAny(encoder, data[key]);\n                }\n            }\n            break;\n        case \"boolean\":\n            // TYPE 120/121: boolean (true/false)\n            write(encoder, data ? 120 : 121);\n            break;\n        default:\n            // TYPE 127: undefined\n            write(encoder, 127);\n    }\n};\nclass RleEncoder extends Encoder {\n    /**\n   * @param {function(Encoder, T):void} writer\n   */ constructor(writer){\n        super();\n        /**\n     * The writer\n     */ this.w = writer;\n        /**\n     * Current state\n     * @type {T|null}\n     */ this.s = null;\n        this.count = 0;\n    }\n    /**\n   * @param {T} v\n   */ write(v) {\n        if (this.s === v) this.count++;\n        else {\n            if (this.count > 0) // flush counter, unless this is the first value (count = 0)\n            writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n            ;\n            this.count = 1;\n            // write first value\n            this.w(this, v);\n            this.s = v;\n        }\n    }\n}\nclass IntDiffEncoder extends Encoder {\n    /**\n   * @param {number} start\n   */ constructor(start){\n        super();\n        /**\n     * Current state\n     * @type {number}\n     */ this.s = start;\n    }\n    /**\n   * @param {number} v\n   */ write(v) {\n        writeVarInt(this, v - this.s);\n        this.s = v;\n    }\n}\nclass RleIntDiffEncoder extends Encoder {\n    /**\n   * @param {number} start\n   */ constructor(start){\n        super();\n        /**\n     * Current state\n     * @type {number}\n     */ this.s = start;\n        this.count = 0;\n    }\n    /**\n   * @param {number} v\n   */ write(v) {\n        if (this.s === v && this.count > 0) this.count++;\n        else {\n            if (this.count > 0) // flush counter, unless this is the first value (count = 0)\n            writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n            ;\n            this.count = 1;\n            // write first value\n            writeVarInt(this, v - this.s);\n            this.s = v;\n        }\n    }\n}\n/**\n * @param {UintOptRleEncoder} encoder\n */ const flushUintOptRleEncoder = (encoder)=>{\n    if (encoder.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        // case 1: just a single value. set sign to positive\n        // case 2: write several values. set sign to negative to indicate that there is a length coming\n        writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s);\n        if (encoder.count > 1) writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n        ;\n    }\n};\nclass UintOptRleEncoder {\n    constructor(){\n        this.encoder = new Encoder();\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n    }\n    /**\n   * @param {number} v\n   */ write(v) {\n        if (this.s === v) this.count++;\n        else {\n            flushUintOptRleEncoder(this);\n            this.count = 1;\n            this.s = v;\n        }\n    }\n    /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */ toUint8Array() {\n        flushUintOptRleEncoder(this);\n        return toUint8Array(this.encoder);\n    }\n}\nclass IncUintOptRleEncoder {\n    constructor(){\n        this.encoder = new Encoder();\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n    }\n    /**\n   * @param {number} v\n   */ write(v) {\n        if (this.s + this.count === v) this.count++;\n        else {\n            flushUintOptRleEncoder(this);\n            this.count = 1;\n            this.s = v;\n        }\n    }\n    /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */ toUint8Array() {\n        flushUintOptRleEncoder(this);\n        return toUint8Array(this.encoder);\n    }\n}\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */ const flushIntDiffOptRleEncoder = (encoder)=>{\n    if (encoder.count > 0) {\n        //          31 bit making up the diff | wether to write the counter\n        // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n        const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1);\n        // flush counter, unless this is the first value (count = 0)\n        // case 1: just a single value. set first bit to positive\n        // case 2: write several values. set first bit to negative to indicate that there is a length coming\n        writeVarInt(encoder.encoder, encodedDiff);\n        if (encoder.count > 1) writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n        ;\n    }\n};\nclass IntDiffOptRleEncoder {\n    constructor(){\n        this.encoder = new Encoder();\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n        this.diff = 0;\n    }\n    /**\n   * @param {number} v\n   */ write(v) {\n        if (this.diff === v - this.s) {\n            this.s = v;\n            this.count++;\n        } else {\n            flushIntDiffOptRleEncoder(this);\n            this.count = 1;\n            this.diff = v - this.s;\n            this.s = v;\n        }\n    }\n    /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */ toUint8Array() {\n        flushIntDiffOptRleEncoder(this);\n        return toUint8Array(this.encoder);\n    }\n}\nclass StringEncoder {\n    constructor(){\n        /**\n     * @type {Array<string>}\n     */ this.sarr = [];\n        this.s = \"\";\n        this.lensE = new UintOptRleEncoder();\n    }\n    /**\n   * @param {string} string\n   */ write(string) {\n        this.s += string;\n        if (this.s.length > 19) {\n            this.sarr.push(this.s);\n            this.s = \"\";\n        }\n        this.lensE.write(string.length);\n    }\n    toUint8Array() {\n        const encoder = new Encoder();\n        this.sarr.push(this.s);\n        this.s = \"\";\n        writeVarString(encoder, this.sarr.join(\"\"));\n        writeUint8Array(encoder, this.lensE.toUint8Array());\n        return toUint8Array(encoder);\n    }\n}\n\n},{\"./math.js\":\"795wo\",\"./number.js\":\"jKiy9\",\"./binary.js\":\"efRDV\",\"./string.js\":\"cVVIB\",\"./array.js\":\"bulEf\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"jKiy9\":[function(require,module,exports) {\n/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"MAX_SAFE_INTEGER\", ()=>MAX_SAFE_INTEGER);\nparcelHelpers.export(exports, \"MIN_SAFE_INTEGER\", ()=>MIN_SAFE_INTEGER);\nparcelHelpers.export(exports, \"LOWEST_INT32\", ()=>LOWEST_INT32);\nparcelHelpers.export(exports, \"HIGHEST_INT32\", ()=>HIGHEST_INT32);\nparcelHelpers.export(exports, \"HIGHEST_UINT32\", ()=>HIGHEST_UINT32);\nparcelHelpers.export(exports, \"isInteger\", ()=>isInteger);\nparcelHelpers.export(exports, \"isNaN\", ()=>isNaN);\nparcelHelpers.export(exports, \"parseInt\", ()=>parseInt);\nparcelHelpers.export(exports, \"countBits\", ()=>countBits);\nvar _mathJs = require(\"./math.js\");\nvar _binaryJs = require(\"./binary.js\");\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER;\nconst MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER;\nconst LOWEST_INT32 = -2147483648;\nconst HIGHEST_INT32 = _binaryJs.BITS31;\nconst HIGHEST_UINT32 = _binaryJs.BITS32;\nconst isInteger = Number.isInteger || ((num)=>typeof num === \"number\" && isFinite(num) && _mathJs.floor(num) === num);\nconst isNaN = Number.isNaN;\nconst parseInt = Number.parseInt;\nconst countBits = (n)=>{\n    n &= _binaryJs.BITS32;\n    let count = 0;\n    while(n){\n        n &= n - 1;\n        count++;\n    }\n    return count;\n};\n\n},{\"./math.js\":\"795wo\",\"./binary.js\":\"efRDV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"efRDV\":[function(require,module,exports) {\n/* eslint-env browser */ /**\n * Binary data constants.\n *\n * @module binary\n */ /**\n * n-th bit activated.\n *\n * @type {number}\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"BIT1\", ()=>BIT1);\nparcelHelpers.export(exports, \"BIT2\", ()=>BIT2);\nparcelHelpers.export(exports, \"BIT3\", ()=>BIT3);\nparcelHelpers.export(exports, \"BIT4\", ()=>BIT4);\nparcelHelpers.export(exports, \"BIT5\", ()=>BIT5);\nparcelHelpers.export(exports, \"BIT6\", ()=>BIT6);\nparcelHelpers.export(exports, \"BIT7\", ()=>BIT7);\nparcelHelpers.export(exports, \"BIT8\", ()=>BIT8);\nparcelHelpers.export(exports, \"BIT9\", ()=>BIT9);\nparcelHelpers.export(exports, \"BIT10\", ()=>BIT10);\nparcelHelpers.export(exports, \"BIT11\", ()=>BIT11);\nparcelHelpers.export(exports, \"BIT12\", ()=>BIT12);\nparcelHelpers.export(exports, \"BIT13\", ()=>BIT13);\nparcelHelpers.export(exports, \"BIT14\", ()=>BIT14);\nparcelHelpers.export(exports, \"BIT15\", ()=>BIT15);\nparcelHelpers.export(exports, \"BIT16\", ()=>BIT16);\nparcelHelpers.export(exports, \"BIT17\", ()=>BIT17);\nparcelHelpers.export(exports, \"BIT18\", ()=>BIT18);\nparcelHelpers.export(exports, \"BIT19\", ()=>BIT19);\nparcelHelpers.export(exports, \"BIT20\", ()=>BIT20);\nparcelHelpers.export(exports, \"BIT21\", ()=>BIT21);\nparcelHelpers.export(exports, \"BIT22\", ()=>BIT22);\nparcelHelpers.export(exports, \"BIT23\", ()=>BIT23);\nparcelHelpers.export(exports, \"BIT24\", ()=>BIT24);\nparcelHelpers.export(exports, \"BIT25\", ()=>BIT25);\nparcelHelpers.export(exports, \"BIT26\", ()=>BIT26);\nparcelHelpers.export(exports, \"BIT27\", ()=>BIT27);\nparcelHelpers.export(exports, \"BIT28\", ()=>BIT28);\nparcelHelpers.export(exports, \"BIT29\", ()=>BIT29);\nparcelHelpers.export(exports, \"BIT30\", ()=>BIT30);\nparcelHelpers.export(exports, \"BIT31\", ()=>BIT31);\nparcelHelpers.export(exports, \"BIT32\", ()=>BIT32);\nparcelHelpers.export(exports, \"BITS0\", ()=>BITS0);\nparcelHelpers.export(exports, \"BITS1\", ()=>BITS1);\nparcelHelpers.export(exports, \"BITS2\", ()=>BITS2);\nparcelHelpers.export(exports, \"BITS3\", ()=>BITS3);\nparcelHelpers.export(exports, \"BITS4\", ()=>BITS4);\nparcelHelpers.export(exports, \"BITS5\", ()=>BITS5);\nparcelHelpers.export(exports, \"BITS6\", ()=>BITS6);\nparcelHelpers.export(exports, \"BITS7\", ()=>BITS7);\nparcelHelpers.export(exports, \"BITS8\", ()=>BITS8);\nparcelHelpers.export(exports, \"BITS9\", ()=>BITS9);\nparcelHelpers.export(exports, \"BITS10\", ()=>BITS10);\nparcelHelpers.export(exports, \"BITS11\", ()=>BITS11);\nparcelHelpers.export(exports, \"BITS12\", ()=>BITS12);\nparcelHelpers.export(exports, \"BITS13\", ()=>BITS13);\nparcelHelpers.export(exports, \"BITS14\", ()=>BITS14);\nparcelHelpers.export(exports, \"BITS15\", ()=>BITS15);\nparcelHelpers.export(exports, \"BITS16\", ()=>BITS16);\nparcelHelpers.export(exports, \"BITS17\", ()=>BITS17);\nparcelHelpers.export(exports, \"BITS18\", ()=>BITS18);\nparcelHelpers.export(exports, \"BITS19\", ()=>BITS19);\nparcelHelpers.export(exports, \"BITS20\", ()=>BITS20);\nparcelHelpers.export(exports, \"BITS21\", ()=>BITS21);\nparcelHelpers.export(exports, \"BITS22\", ()=>BITS22);\nparcelHelpers.export(exports, \"BITS23\", ()=>BITS23);\nparcelHelpers.export(exports, \"BITS24\", ()=>BITS24);\nparcelHelpers.export(exports, \"BITS25\", ()=>BITS25);\nparcelHelpers.export(exports, \"BITS26\", ()=>BITS26);\nparcelHelpers.export(exports, \"BITS27\", ()=>BITS27);\nparcelHelpers.export(exports, \"BITS28\", ()=>BITS28);\nparcelHelpers.export(exports, \"BITS29\", ()=>BITS29);\nparcelHelpers.export(exports, \"BITS30\", ()=>BITS30);\nparcelHelpers.export(exports, \"BITS31\", ()=>BITS31);\nparcelHelpers.export(exports, \"BITS32\", ()=>BITS32);\nconst BIT1 = 1;\nconst BIT2 = 2;\nconst BIT3 = 4;\nconst BIT4 = 8;\nconst BIT5 = 16;\nconst BIT6 = 32;\nconst BIT7 = 64;\nconst BIT8 = 128;\nconst BIT9 = 256;\nconst BIT10 = 512;\nconst BIT11 = 1024;\nconst BIT12 = 2048;\nconst BIT13 = 4096;\nconst BIT14 = 8192;\nconst BIT15 = 16384;\nconst BIT16 = 32768;\nconst BIT17 = 65536;\nconst BIT18 = 131072;\nconst BIT19 = 262144;\nconst BIT20 = 524288;\nconst BIT21 = 1048576;\nconst BIT22 = 2097152;\nconst BIT23 = 4194304;\nconst BIT24 = 8388608;\nconst BIT25 = 16777216;\nconst BIT26 = 33554432;\nconst BIT27 = 67108864;\nconst BIT28 = 134217728;\nconst BIT29 = 268435456;\nconst BIT30 = 536870912;\nconst BIT31 = 1073741824;\nconst BIT32 = -2147483648;\nconst BITS0 = 0;\nconst BITS1 = 1;\nconst BITS2 = 3;\nconst BITS3 = 7;\nconst BITS4 = 15;\nconst BITS5 = 31;\nconst BITS6 = 63;\nconst BITS7 = 127;\nconst BITS8 = 255;\nconst BITS9 = 511;\nconst BITS10 = 1023;\nconst BITS11 = 2047;\nconst BITS12 = 4095;\nconst BITS13 = 8191;\nconst BITS14 = 16383;\nconst BITS15 = 32767;\nconst BITS16 = 65535;\nconst BITS17 = BIT18 - 1;\nconst BITS18 = BIT19 - 1;\nconst BITS19 = BIT20 - 1;\nconst BITS20 = BIT21 - 1;\nconst BITS21 = BIT22 - 1;\nconst BITS22 = BIT23 - 1;\nconst BITS23 = BIT24 - 1;\nconst BITS24 = BIT25 - 1;\nconst BITS25 = BIT26 - 1;\nconst BITS26 = BIT27 - 1;\nconst BITS27 = BIT28 - 1;\nconst BITS28 = BIT29 - 1;\nconst BITS29 = BIT30 - 1;\nconst BITS30 = BIT31 - 1;\nconst BITS31 = 0x7FFFFFFF;\nconst BITS32 = 0xFFFFFFFF;\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"cVVIB\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"fromCharCode\", ()=>fromCharCode);\nparcelHelpers.export(exports, \"fromCodePoint\", ()=>fromCodePoint);\nparcelHelpers.export(exports, \"MAX_UTF16_CHARACTER\", ()=>MAX_UTF16_CHARACTER);\nparcelHelpers.export(exports, \"trimLeft\", ()=>trimLeft);\nparcelHelpers.export(exports, \"fromCamelCase\", ()=>fromCamelCase);\nparcelHelpers.export(exports, \"utf8ByteLength\", ()=>utf8ByteLength);\nparcelHelpers.export(exports, \"_encodeUtf8Polyfill\", ()=>_encodeUtf8Polyfill);\nparcelHelpers.export(exports, \"utf8TextEncoder\", ()=>utf8TextEncoder);\nparcelHelpers.export(exports, \"_encodeUtf8Native\", ()=>_encodeUtf8Native);\nparcelHelpers.export(exports, \"encodeUtf8\", ()=>encodeUtf8);\nparcelHelpers.export(exports, \"_decodeUtf8Polyfill\", ()=>_decodeUtf8Polyfill);\nparcelHelpers.export(exports, \"utf8TextDecoder\", ()=>utf8TextDecoder);\nparcelHelpers.export(exports, \"_decodeUtf8Native\", ()=>_decodeUtf8Native);\nparcelHelpers.export(exports, \"decodeUtf8\", ()=>decodeUtf8);\nparcelHelpers.export(exports, \"splice\", ()=>splice);\nparcelHelpers.export(exports, \"repeat\", ()=>repeat);\nvar _arrayJs = require(\"./array.js\");\nconst fromCharCode = String.fromCharCode;\nconst fromCodePoint = String.fromCodePoint;\nconst MAX_UTF16_CHARACTER = fromCharCode(65535);\n/**\n * @param {string} s\n * @return {string}\n */ const toLowerCase = (s)=>s.toLowerCase();\nconst trimLeftRegex = /^\\s*/g;\nconst trimLeft = (s)=>s.replace(trimLeftRegex, \"\");\nconst fromCamelCaseRegex = /([A-Z])/g;\nconst fromCamelCase = (s, separator)=>trimLeft(s.replace(fromCamelCaseRegex, (match)=>`${separator}${toLowerCase(match)}`));\nconst utf8ByteLength = (str)=>unescape(encodeURIComponent(str)).length;\nconst _encodeUtf8Polyfill = (str)=>{\n    const encodedString = unescape(encodeURIComponent(str));\n    const len = encodedString.length;\n    const buf = new Uint8Array(len);\n    for(let i = 0; i < len; i++)buf[i] = /** @type {number} */ encodedString.codePointAt(i);\n    return buf;\n};\nconst utf8TextEncoder = /** @type {TextEncoder} */ typeof TextEncoder !== \"undefined\" ? new TextEncoder() : null;\nconst _encodeUtf8Native = (str)=>utf8TextEncoder.encode(str);\nconst encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill;\nconst _decodeUtf8Polyfill = (buf)=>{\n    let remainingLen = buf.length;\n    let encodedString = \"\";\n    let bufPos = 0;\n    while(remainingLen > 0){\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000;\n        const bytes = buf.subarray(bufPos, bufPos + nextLen);\n        bufPos += nextLen;\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ bytes);\n        remainingLen -= nextLen;\n    }\n    return decodeURIComponent(escape(encodedString));\n};\nlet utf8TextDecoder = typeof TextDecoder === \"undefined\" ? null : new TextDecoder(\"utf-8\", {\n    fatal: true,\n    ignoreBOM: true\n});\n/* c8 ignore start */ if (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) // Safari doesn't handle BOM correctly.\n// This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n// utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n// utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n// Another issue is that from then on no BOM chars are recognized anymore\n/* c8 ignore next */ utf8TextDecoder = null;\nconst _decodeUtf8Native = (buf)=>/** @type {TextDecoder} */ utf8TextDecoder.decode(buf);\nconst decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill;\nconst splice = (str, index, remove, insert = \"\")=>str.slice(0, index) + insert + str.slice(index + remove);\nconst repeat = (source, n)=>_arrayJs.unfold(n, ()=>source).join(\"\");\n\n},{\"./array.js\":\"bulEf\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"cr3U7\":[function(require,module,exports) {\n/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */ parcelHelpers.export(exports, \"Decoder\", ()=>Decoder);\nparcelHelpers.export(exports, \"createDecoder\", ()=>createDecoder);\nparcelHelpers.export(exports, \"hasContent\", ()=>hasContent);\nparcelHelpers.export(exports, \"clone\", ()=>clone);\nparcelHelpers.export(exports, \"readUint8Array\", ()=>readUint8Array);\nparcelHelpers.export(exports, \"readVarUint8Array\", ()=>readVarUint8Array);\nparcelHelpers.export(exports, \"readTailAsUint8Array\", ()=>readTailAsUint8Array);\nparcelHelpers.export(exports, \"skip8\", ()=>skip8);\nparcelHelpers.export(exports, \"readUint8\", ()=>readUint8);\nparcelHelpers.export(exports, \"readUint16\", ()=>readUint16);\nparcelHelpers.export(exports, \"readUint32\", ()=>readUint32);\nparcelHelpers.export(exports, \"readUint32BigEndian\", ()=>readUint32BigEndian);\nparcelHelpers.export(exports, \"peekUint8\", ()=>peekUint8);\nparcelHelpers.export(exports, \"peekUint16\", ()=>peekUint16);\nparcelHelpers.export(exports, \"peekUint32\", ()=>peekUint32);\nparcelHelpers.export(exports, \"readVarUint\", ()=>readVarUint);\nparcelHelpers.export(exports, \"readVarInt\", ()=>readVarInt);\nparcelHelpers.export(exports, \"peekVarUint\", ()=>peekVarUint);\nparcelHelpers.export(exports, \"peekVarInt\", ()=>peekVarInt);\nparcelHelpers.export(exports, \"_readVarStringPolyfill\", ()=>_readVarStringPolyfill);\nparcelHelpers.export(exports, \"_readVarStringNative\", ()=>_readVarStringNative);\nparcelHelpers.export(exports, \"readVarString\", ()=>readVarString);\nparcelHelpers.export(exports, \"readTerminatedUint8Array\", ()=>readTerminatedUint8Array);\nparcelHelpers.export(exports, \"readTerminatedString\", ()=>readTerminatedString);\nparcelHelpers.export(exports, \"peekVarString\", ()=>peekVarString);\nparcelHelpers.export(exports, \"readFromDataView\", ()=>readFromDataView);\nparcelHelpers.export(exports, \"readFloat32\", ()=>readFloat32);\nparcelHelpers.export(exports, \"readFloat64\", ()=>readFloat64);\nparcelHelpers.export(exports, \"readBigInt64\", ()=>readBigInt64);\nparcelHelpers.export(exports, \"readBigUint64\", ()=>readBigUint64);\nparcelHelpers.export(exports, \"readAny\", ()=>readAny);\n/**\n * T must not be null.\n *\n * @template T\n */ parcelHelpers.export(exports, \"RleDecoder\", ()=>RleDecoder);\nparcelHelpers.export(exports, \"IntDiffDecoder\", ()=>IntDiffDecoder);\nparcelHelpers.export(exports, \"RleIntDiffDecoder\", ()=>RleIntDiffDecoder);\nparcelHelpers.export(exports, \"UintOptRleDecoder\", ()=>UintOptRleDecoder);\nparcelHelpers.export(exports, \"IncUintOptRleDecoder\", ()=>IncUintOptRleDecoder);\nparcelHelpers.export(exports, \"IntDiffOptRleDecoder\", ()=>IntDiffOptRleDecoder);\nparcelHelpers.export(exports, \"StringDecoder\", ()=>StringDecoder);\nvar _binaryJs = require(\"./binary.js\");\nvar _mathJs = require(\"./math.js\");\nvar _numberJs = require(\"./number.js\");\nvar _stringJs = require(\"./string.js\");\nvar _errorJs = require(\"./error.js\");\nvar _encodingJs = require(\"./encoding.js\");\nconst errorUnexpectedEndOfArray = _errorJs.create(\"Unexpected end of array\");\nconst errorIntegerOutOfRange = _errorJs.create(\"Integer out of Range\");\nclass Decoder {\n    /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */ constructor(uint8Array){\n        /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */ this.arr = uint8Array;\n        /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */ this.pos = 0;\n    }\n}\nconst createDecoder = (uint8Array)=>new Decoder(uint8Array);\nconst hasContent = (decoder)=>decoder.pos !== decoder.arr.length;\nconst clone = (decoder, newPos = decoder.pos)=>{\n    const _decoder = createDecoder(decoder.arr);\n    _decoder.pos = newPos;\n    return _decoder;\n};\nconst readUint8Array = (decoder, len)=>{\n    const view = new Uint8Array(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len);\n    decoder.pos += len;\n    return view;\n};\nconst readVarUint8Array = (decoder)=>readUint8Array(decoder, readVarUint(decoder));\nconst readTailAsUint8Array = (decoder)=>readUint8Array(decoder, decoder.arr.length - decoder.pos);\nconst skip8 = (decoder)=>decoder.pos++;\nconst readUint8 = (decoder)=>decoder.arr[decoder.pos++];\nconst readUint16 = (decoder)=>{\n    const uint = decoder.arr[decoder.pos] + (decoder.arr[decoder.pos + 1] << 8);\n    decoder.pos += 2;\n    return uint;\n};\nconst readUint32 = (decoder)=>{\n    const uint = decoder.arr[decoder.pos] + (decoder.arr[decoder.pos + 1] << 8) + (decoder.arr[decoder.pos + 2] << 16) + (decoder.arr[decoder.pos + 3] << 24) >>> 0;\n    decoder.pos += 4;\n    return uint;\n};\nconst readUint32BigEndian = (decoder)=>{\n    const uint = decoder.arr[decoder.pos + 3] + (decoder.arr[decoder.pos + 2] << 8) + (decoder.arr[decoder.pos + 1] << 16) + (decoder.arr[decoder.pos] << 24) >>> 0;\n    decoder.pos += 4;\n    return uint;\n};\nconst peekUint8 = (decoder)=>decoder.arr[decoder.pos];\nconst peekUint16 = (decoder)=>decoder.arr[decoder.pos] + (decoder.arr[decoder.pos + 1] << 8);\nconst peekUint32 = (decoder)=>decoder.arr[decoder.pos] + (decoder.arr[decoder.pos + 1] << 8) + (decoder.arr[decoder.pos + 2] << 16) + (decoder.arr[decoder.pos + 3] << 24) >>> 0;\nconst readVarUint = (decoder)=>{\n    let num = 0;\n    let mult = 1;\n    const len = decoder.arr.length;\n    while(decoder.pos < len){\n        const r = decoder.arr[decoder.pos++];\n        // num = num | ((r & binary.BITS7) << len)\n        num = num + (r & _binaryJs.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n        ;\n        mult *= 128 // next iteration, shift 7 \"more\" to the left\n        ;\n        if (r < _binaryJs.BIT8) return num;\n        /* c8 ignore start */ if (num > _numberJs.MAX_SAFE_INTEGER) throw errorIntegerOutOfRange;\n    /* c8 ignore stop */ }\n    throw errorUnexpectedEndOfArray;\n};\nconst readVarInt = (decoder)=>{\n    let r = decoder.arr[decoder.pos++];\n    let num = r & _binaryJs.BITS6;\n    let mult = 64;\n    const sign = (r & _binaryJs.BIT7) > 0 ? -1 : 1;\n    if ((r & _binaryJs.BIT8) === 0) // don't continue reading\n    return sign * num;\n    const len = decoder.arr.length;\n    while(decoder.pos < len){\n        r = decoder.arr[decoder.pos++];\n        // num = num | ((r & binary.BITS7) << len)\n        num = num + (r & _binaryJs.BITS7) * mult;\n        mult *= 128;\n        if (r < _binaryJs.BIT8) return sign * num;\n        /* c8 ignore start */ if (num > _numberJs.MAX_SAFE_INTEGER) throw errorIntegerOutOfRange;\n    /* c8 ignore stop */ }\n    throw errorUnexpectedEndOfArray;\n};\nconst peekVarUint = (decoder)=>{\n    const pos = decoder.pos;\n    const s = readVarUint(decoder);\n    decoder.pos = pos;\n    return s;\n};\nconst peekVarInt = (decoder)=>{\n    const pos = decoder.pos;\n    const s = readVarInt(decoder);\n    decoder.pos = pos;\n    return s;\n};\nconst _readVarStringPolyfill = (decoder)=>{\n    let remainingLen = readVarUint(decoder);\n    if (remainingLen === 0) return \"\";\n    else {\n        let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n        ;\n        if (--remainingLen < 100) while(remainingLen--)encodedString += String.fromCodePoint(readUint8(decoder));\n        else while(remainingLen > 0){\n            const nextLen = remainingLen < 10000 ? remainingLen : 10000;\n            // this is dangerous, we create a fresh array view from the existing buffer\n            const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen);\n            decoder.pos += nextLen;\n            // Starting with ES5.1 we can supply a generic array-like object as arguments\n            encodedString += String.fromCodePoint.apply(null, /** @type {any} */ bytes);\n            remainingLen -= nextLen;\n        }\n        return decodeURIComponent(escape(encodedString));\n    }\n};\nconst _readVarStringNative = (decoder)=>/** @type any */ _stringJs.utf8TextDecoder.decode(readVarUint8Array(decoder));\nconst readVarString = _stringJs.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill;\nconst readTerminatedUint8Array = (decoder)=>{\n    const encoder = _encodingJs.createEncoder();\n    let b;\n    while(true){\n        b = readUint8(decoder);\n        if (b === 0) return _encodingJs.toUint8Array(encoder);\n        if (b === 1) b = readUint8(decoder);\n        _encodingJs.write(encoder, b);\n    }\n};\nconst readTerminatedString = (decoder)=>_stringJs.decodeUtf8(readTerminatedUint8Array(decoder));\nconst peekVarString = (decoder)=>{\n    const pos = decoder.pos;\n    const s = readVarString(decoder);\n    decoder.pos = pos;\n    return s;\n};\nconst readFromDataView = (decoder, len)=>{\n    const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len);\n    decoder.pos += len;\n    return dv;\n};\nconst readFloat32 = (decoder)=>readFromDataView(decoder, 4).getFloat32(0, false);\nconst readFloat64 = (decoder)=>readFromDataView(decoder, 8).getFloat64(0, false);\nconst readBigInt64 = (decoder)=>/** @type {any} */ readFromDataView(decoder, 8).getBigInt64(0, false);\nconst readBigUint64 = (decoder)=>/** @type {any} */ readFromDataView(decoder, 8).getBigUint64(0, false);\n/**\n * @type {Array<function(Decoder):any>}\n */ const readAnyLookupTable = [\n    (decoder)=>undefined,\n    (decoder)=>null,\n    readVarInt,\n    readFloat32,\n    readFloat64,\n    readBigInt64,\n    (decoder)=>false,\n    (decoder)=>true,\n    readVarString,\n    (decoder)=>{\n        const len = readVarUint(decoder);\n        /**\n     * @type {Object<string,any>}\n     */ const obj = {};\n        for(let i = 0; i < len; i++){\n            const key = readVarString(decoder);\n            obj[key] = readAny(decoder);\n        }\n        return obj;\n    },\n    (decoder)=>{\n        const len = readVarUint(decoder);\n        const arr = [];\n        for(let i = 0; i < len; i++)arr.push(readAny(decoder));\n        return arr;\n    },\n    readVarUint8Array // CASE 116: Uint8Array\n];\nconst readAny = (decoder)=>readAnyLookupTable[127 - readUint8(decoder)](decoder);\nclass RleDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */ constructor(uint8Array, reader){\n        super(uint8Array);\n        /**\n     * The reader\n     */ this.reader = reader;\n        /**\n     * Current state\n     * @type {T|null}\n     */ this.s = null;\n        this.count = 0;\n    }\n    read() {\n        if (this.count === 0) {\n            this.s = this.reader(this);\n            if (hasContent(this)) this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n            ;\n            else this.count = -1 // read the current value forever\n            ;\n        }\n        this.count--;\n        return /** @type {T} */ this.s;\n    }\n}\nclass IntDiffDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */ constructor(uint8Array, start){\n        super(uint8Array);\n        /**\n     * Current state\n     * @type {number}\n     */ this.s = start;\n    }\n    /**\n   * @return {number}\n   */ read() {\n        this.s += readVarInt(this);\n        return this.s;\n    }\n}\nclass RleIntDiffDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */ constructor(uint8Array, start){\n        super(uint8Array);\n        /**\n     * Current state\n     * @type {number}\n     */ this.s = start;\n        this.count = 0;\n    }\n    /**\n   * @return {number}\n   */ read() {\n        if (this.count === 0) {\n            this.s += readVarInt(this);\n            if (hasContent(this)) this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n            ;\n            else this.count = -1 // read the current value forever\n            ;\n        }\n        this.count--;\n        return /** @type {number} */ this.s;\n    }\n}\nclass UintOptRleDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   */ constructor(uint8Array){\n        super(uint8Array);\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n    }\n    read() {\n        if (this.count === 0) {\n            this.s = readVarInt(this);\n            // if the sign is negative, we read the count too, otherwise count is 1\n            const isNegative = _mathJs.isNegativeZero(this.s);\n            this.count = 1;\n            if (isNegative) {\n                this.s = -this.s;\n                this.count = readVarUint(this) + 2;\n            }\n        }\n        this.count--;\n        return /** @type {number} */ this.s;\n    }\n}\nclass IncUintOptRleDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   */ constructor(uint8Array){\n        super(uint8Array);\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n    }\n    read() {\n        if (this.count === 0) {\n            this.s = readVarInt(this);\n            // if the sign is negative, we read the count too, otherwise count is 1\n            const isNegative = _mathJs.isNegativeZero(this.s);\n            this.count = 1;\n            if (isNegative) {\n                this.s = -this.s;\n                this.count = readVarUint(this) + 2;\n            }\n        }\n        this.count--;\n        return /** @type {number} */ this.s++;\n    }\n}\nclass IntDiffOptRleDecoder extends Decoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   */ constructor(uint8Array){\n        super(uint8Array);\n        /**\n     * @type {number}\n     */ this.s = 0;\n        this.count = 0;\n        this.diff = 0;\n    }\n    /**\n   * @return {number}\n   */ read() {\n        if (this.count === 0) {\n            const diff = readVarInt(this);\n            // if the first bit is set, we read more data\n            const hasCount = diff & 1;\n            this.diff = _mathJs.floor(diff / 2) // shift >> 1\n            ;\n            this.count = 1;\n            if (hasCount) this.count = readVarUint(this) + 2;\n        }\n        this.s += this.diff;\n        this.count--;\n        return this.s;\n    }\n}\nclass StringDecoder {\n    /**\n   * @param {Uint8Array} uint8Array\n   */ constructor(uint8Array){\n        this.decoder = new UintOptRleDecoder(uint8Array);\n        this.str = readVarString(this.decoder);\n        /**\n     * @type {number}\n     */ this.spos = 0;\n    }\n    /**\n   * @return {string}\n   */ read() {\n        const end = this.spos + this.decoder.read();\n        const res = this.str.slice(this.spos, end);\n        this.spos = end;\n        return res;\n    }\n}\n\n},{\"./binary.js\":\"efRDV\",\"./math.js\":\"795wo\",\"./number.js\":\"jKiy9\",\"./string.js\":\"cVVIB\",\"./error.js\":\"940l9\",\"./encoding.js\":\"g4TSB\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"940l9\":[function(require,module,exports) {\n/**\n * Error helpers.\n *\n * @module error\n */ /**\n * @param {string} s\n * @return {Error}\n */ /* c8 ignore next */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"create\", ()=>create);\nparcelHelpers.export(exports, \"methodUnimplemented\", ()=>methodUnimplemented);\nparcelHelpers.export(exports, \"unexpectedCase\", ()=>unexpectedCase);\nconst create = (s)=>new Error(s);\nconst methodUnimplemented = ()=>{\n    throw create(\"Method unimplemented\");\n};\nconst unexpectedCase = ()=>{\n    throw create(\"Unexpected case\");\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"jR6wq\":[function(require,module,exports) {\n/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"rand\", ()=>rand);\nparcelHelpers.export(exports, \"uint32\", ()=>uint32);\nparcelHelpers.export(exports, \"uint53\", ()=>uint53);\nparcelHelpers.export(exports, \"oneOf\", ()=>oneOf);\nparcelHelpers.export(exports, \"uuidv4\", ()=>uuidv4);\nvar _mathJs = require(\"./math.js\");\nvar _binaryJs = require(\"./binary.js\");\nvar _webcrypto = require(\"lib0/webcrypto\");\nconst rand = Math.random;\nconst uint32 = ()=>(0, _webcrypto.getRandomValues)(new Uint32Array(1))[0];\nconst uint53 = ()=>{\n    const arr = (0, _webcrypto.getRandomValues)(new Uint32Array(8));\n    return (arr[0] & _binaryJs.BITS21) * (_binaryJs.BITS32 + 1) + (arr[1] >>> 0);\n};\nconst oneOf = (arr)=>arr[_mathJs.floor(rand() * arr.length)];\n// @ts-ignore\nconst uuidv4Template = \"10000000-1000-4000-8000-100000000000\";\nconst uuidv4 = ()=>uuidv4Template.replace(/[018]/g, /** @param {number} c */ (c)=>(c ^ uint32() & 15 >> c / 4).toString(16));\n\n},{\"./math.js\":\"795wo\",\"./binary.js\":\"efRDV\",\"lib0/webcrypto\":\"72Gsz\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"72Gsz\":[function(require,module,exports) {\n/* eslint-env browser */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"subtle\", ()=>subtle);\nparcelHelpers.export(exports, \"getRandomValues\", ()=>getRandomValues);\nconst subtle = crypto.subtle;\nconst getRandomValues = crypto.getRandomValues.bind(crypto);\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"gbTJW\":[function(require,module,exports) {\n/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"create\", ()=>create);\nparcelHelpers.export(exports, \"createEmpty\", ()=>createEmpty);\nparcelHelpers.export(exports, \"all\", ()=>all);\nparcelHelpers.export(exports, \"reject\", ()=>reject);\nparcelHelpers.export(exports, \"resolve\", ()=>resolve);\nparcelHelpers.export(exports, \"resolveWith\", ()=>resolveWith);\nparcelHelpers.export(exports, \"until\", ()=>until);\nparcelHelpers.export(exports, \"wait\", ()=>wait);\nparcelHelpers.export(exports, \"isPromise\", ()=>isPromise);\nvar _timeJs = require(\"./time.js\");\nconst create = (f)=>/** @type {Promise<T>} */ new Promise(f);\nconst createEmpty = (f)=>new Promise(f);\nconst all = Promise.all.bind(Promise);\nconst reject = (reason)=>Promise.reject(reason);\nconst resolve = (res)=>Promise.resolve(res);\nconst resolveWith = (res)=>Promise.resolve(res);\nconst until = (timeout, check, intervalResolution = 10)=>create((resolve, reject)=>{\n        const startTime = _timeJs.getUnixTime();\n        const hasTimeout = timeout > 0;\n        const untilInterval = ()=>{\n            if (check()) {\n                clearInterval(intervalHandle);\n                resolve();\n            } else if (hasTimeout) /* c8 ignore else */ {\n                if (_timeJs.getUnixTime() - startTime > timeout) {\n                    clearInterval(intervalHandle);\n                    reject(new Error(\"Timeout\"));\n                }\n            }\n        };\n        const intervalHandle = setInterval(untilInterval, intervalResolution);\n    });\nconst wait = (timeout)=>create((resolve, reject)=>setTimeout(resolve, timeout));\nconst isPromise = (p)=>p instanceof Promise || p && p.then && p.catch && p.finally;\n\n},{\"./time.js\":\"fLlrR\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"fLlrR\":[function(require,module,exports) {\n/**\n * Utility module to work with time.\n *\n * @module time\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"getDate\", ()=>getDate);\nparcelHelpers.export(exports, \"getUnixTime\", ()=>getUnixTime);\nparcelHelpers.export(exports, \"humanizeDuration\", ()=>humanizeDuration);\nvar _metricJs = require(\"./metric.js\");\nvar _mathJs = require(\"./math.js\");\nconst getDate = ()=>new Date();\nconst getUnixTime = Date.now;\nconst humanizeDuration = (d)=>{\n    if (d < 60000) {\n        const p = _metricJs.prefix(d, -1);\n        return _mathJs.round(p.n * 100) / 100 + p.prefix + \"s\";\n    }\n    d = _mathJs.floor(d / 1000);\n    const seconds = d % 60;\n    const minutes = _mathJs.floor(d / 60) % 60;\n    const hours = _mathJs.floor(d / 3600) % 24;\n    const days = _mathJs.floor(d / 86400);\n    if (days > 0) return days + \"d\" + (hours > 0 || minutes > 30 ? \" \" + (minutes > 30 ? hours + 1 : hours) + \"h\" : \"\");\n    if (hours > 0) /* c8 ignore next */ return hours + \"h\" + (minutes > 0 || seconds > 30 ? \" \" + (seconds > 30 ? minutes + 1 : minutes) + \"min\" : \"\");\n    return minutes + \"min\" + (seconds > 0 ? \" \" + seconds + \"s\" : \"\");\n};\n\n},{\"./metric.js\":\"7I5CG\",\"./math.js\":\"795wo\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"7I5CG\":[function(require,module,exports) {\n/**\n * Utility module to convert metric values.\n *\n * @module metric\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"yotta\", ()=>yotta);\nparcelHelpers.export(exports, \"zetta\", ()=>zetta);\nparcelHelpers.export(exports, \"exa\", ()=>exa);\nparcelHelpers.export(exports, \"peta\", ()=>peta);\nparcelHelpers.export(exports, \"tera\", ()=>tera);\nparcelHelpers.export(exports, \"giga\", ()=>giga);\nparcelHelpers.export(exports, \"mega\", ()=>mega);\nparcelHelpers.export(exports, \"kilo\", ()=>kilo);\nparcelHelpers.export(exports, \"hecto\", ()=>hecto);\nparcelHelpers.export(exports, \"deca\", ()=>deca);\nparcelHelpers.export(exports, \"deci\", ()=>deci);\nparcelHelpers.export(exports, \"centi\", ()=>centi);\nparcelHelpers.export(exports, \"milli\", ()=>milli);\nparcelHelpers.export(exports, \"micro\", ()=>micro);\nparcelHelpers.export(exports, \"nano\", ()=>nano);\nparcelHelpers.export(exports, \"pico\", ()=>pico);\nparcelHelpers.export(exports, \"femto\", ()=>femto);\nparcelHelpers.export(exports, \"atto\", ()=>atto);\nparcelHelpers.export(exports, \"zepto\", ()=>zepto);\nparcelHelpers.export(exports, \"yocto\", ()=>yocto);\nparcelHelpers.export(exports, \"prefix\", ()=>prefix);\nvar _mathJs = require(\"./math.js\");\nconst yotta = 1e24;\nconst zetta = 1e21;\nconst exa = 1e18;\nconst peta = 1e15;\nconst tera = 1e12;\nconst giga = 1e9;\nconst mega = 1e6;\nconst kilo = 1e3;\nconst hecto = 1e2;\nconst deca = 10;\nconst deci = 0.1;\nconst centi = 0.01;\nconst milli = 1e-3;\nconst micro = 1e-6;\nconst nano = 1e-9;\nconst pico = 1e-12;\nconst femto = 1e-15;\nconst atto = 1e-18;\nconst zepto = 1e-21;\nconst yocto = 1e-24;\nconst prefixUp = [\n    \"\",\n    \"k\",\n    \"M\",\n    \"G\",\n    \"T\",\n    \"P\",\n    \"E\",\n    \"Z\",\n    \"Y\"\n];\nconst prefixDown = [\n    \"\",\n    \"m\",\n    \"\\u03BC\",\n    \"n\",\n    \"p\",\n    \"f\",\n    \"a\",\n    \"z\",\n    \"y\"\n];\nconst prefix = (n, baseMultiplier = 0)=>{\n    const nPow = n === 0 ? 0 : _mathJs.log10(n);\n    let mult = 0;\n    while(nPow < mult * 3 && baseMultiplier > -8){\n        baseMultiplier--;\n        mult--;\n    }\n    while(nPow >= 3 + mult * 3 && baseMultiplier < 8){\n        baseMultiplier++;\n        mult++;\n    }\n    const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier];\n    return {\n        n: _mathJs.round((mult > 0 ? n / _mathJs.exp10(mult * 3) : n * _mathJs.exp10(mult * -3)) * 1e12) / 1e12,\n        prefix\n    };\n};\n\n},{\"./math.js\":\"795wo\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"a8sZz\":[function(require,module,exports) {\n/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"createUint8ArrayFromLen\", ()=>createUint8ArrayFromLen);\nparcelHelpers.export(exports, \"createUint8ArrayViewFromArrayBuffer\", ()=>createUint8ArrayViewFromArrayBuffer);\nparcelHelpers.export(exports, \"createUint8ArrayFromArrayBuffer\", ()=>createUint8ArrayFromArrayBuffer);\nparcelHelpers.export(exports, \"toBase64\", ()=>toBase64);\nparcelHelpers.export(exports, \"fromBase64\", ()=>fromBase64);\nparcelHelpers.export(exports, \"toBase64UrlEncoded\", ()=>toBase64UrlEncoded);\nparcelHelpers.export(exports, \"fromBase64UrlEncoded\", ()=>fromBase64UrlEncoded);\nparcelHelpers.export(exports, \"toHexString\", ()=>toHexString);\nparcelHelpers.export(exports, \"fromHexString\", ()=>fromHexString);\nparcelHelpers.export(exports, \"copyUint8Array\", ()=>copyUint8Array);\nparcelHelpers.export(exports, \"encodeAny\", ()=>encodeAny);\nparcelHelpers.export(exports, \"decodeAny\", ()=>decodeAny);\nparcelHelpers.export(exports, \"shiftNBitsLeft\", ()=>shiftNBitsLeft);\nvar _stringJs = require(\"./string.js\");\nvar _environmentJs = require(\"./environment.js\");\nvar _arrayJs = require(\"./array.js\");\nvar _mathJs = require(\"./math.js\");\nvar _encodingJs = require(\"./encoding.js\");\nvar _decodingJs = require(\"./decoding.js\");\nvar Buffer = require(\"f3dd72291113e2d0\").Buffer;\nconst createUint8ArrayFromLen = (len)=>new Uint8Array(len);\nconst createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length)=>new Uint8Array(buffer, byteOffset, length);\nconst createUint8ArrayFromArrayBuffer = (buffer)=>new Uint8Array(buffer);\n/* c8 ignore start */ /**\n * @param {Uint8Array} bytes\n * @return {string}\n */ const toBase64Browser = (bytes)=>{\n    let s = \"\";\n    for(let i = 0; i < bytes.byteLength; i++)s += _stringJs.fromCharCode(bytes[i]);\n    // eslint-disable-next-line no-undef\n    return btoa(s);\n};\n/* c8 ignore stop */ /**\n * @param {Uint8Array} bytes\n * @return {string}\n */ const toBase64Node = (bytes)=>Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString(\"base64\");\n/* c8 ignore start */ /**\n * @param {string} s\n * @return {Uint8Array}\n */ const fromBase64Browser = (s)=>{\n    // eslint-disable-next-line no-undef\n    const a = atob(s);\n    const bytes = createUint8ArrayFromLen(a.length);\n    for(let i = 0; i < a.length; i++)bytes[i] = a.charCodeAt(i);\n    return bytes;\n};\n/* c8 ignore stop */ /**\n * @param {string} s\n */ const fromBase64Node = (s)=>{\n    const buf = Buffer.from(s, \"base64\");\n    return createUint8ArrayViewFromArrayBuffer(buf.buffer, buf.byteOffset, buf.byteLength);\n};\nconst toBase64 = _environmentJs.isBrowser ? toBase64Browser : toBase64Node;\nconst fromBase64 = _environmentJs.isBrowser ? fromBase64Browser : fromBase64Node;\nconst toBase64UrlEncoded = (buf)=>toBase64(buf).replaceAll(\"+\", \"-\").replaceAll(\"/\", \"_\").replaceAll(\"=\", \"\");\nconst fromBase64UrlEncoded = (base64)=>fromBase64(base64.replaceAll(\"-\", \"+\").replaceAll(\"_\", \"/\"));\nconst toHexString = (buf)=>_arrayJs.map(buf, (b)=>b.toString(16).padStart(2, \"0\")).join(\"\");\nconst fromHexString = (hex)=>{\n    const hlen = hex.length;\n    const buf = new Uint8Array(_mathJs.ceil(hlen / 2));\n    for(let i = 0; i < hlen; i += 2)buf[buf.length - i / 2 - 1] = Number.parseInt(hex.slice(hlen - i - 2, hlen - i), 16);\n    return buf;\n};\nconst copyUint8Array = (uint8Array)=>{\n    const newBuf = createUint8ArrayFromLen(uint8Array.byteLength);\n    newBuf.set(uint8Array);\n    return newBuf;\n};\nconst encodeAny = (data)=>_encodingJs.encode((encoder)=>_encodingJs.writeAny(encoder, data));\nconst decodeAny = (buf)=>_decodingJs.readAny(_decodingJs.createDecoder(buf));\nconst shiftNBitsLeft = (bs, N)=>{\n    if (N === 0) return bs;\n    bs = new Uint8Array(bs);\n    bs[0] <<= N;\n    for(let i = 1; i < bs.length; i++){\n        bs[i - 1] |= bs[i] >>> 8 - N;\n        bs[i] <<= N;\n    }\n    return bs;\n};\n\n},{\"f3dd72291113e2d0\":\"1XYH5\",\"./string.js\":\"cVVIB\",\"./environment.js\":\"c9W1d\",\"./array.js\":\"bulEf\",\"./math.js\":\"795wo\",\"./encoding.js\":\"g4TSB\",\"./decoding.js\":\"cr3U7\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"c9W1d\":[function(require,module,exports) {\n/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"isNode\", ()=>isNode);\nparcelHelpers.export(exports, \"isBrowser\", ()=>isBrowser);\nparcelHelpers.export(exports, \"isMac\", ()=>isMac);\nparcelHelpers.export(exports, \"hasParam\", ()=>hasParam);\nparcelHelpers.export(exports, \"getParam\", ()=>getParam);\nparcelHelpers.export(exports, \"getVariable\", ()=>getVariable);\nparcelHelpers.export(exports, \"getConf\", ()=>getConf);\nparcelHelpers.export(exports, \"hasConf\", ()=>hasConf);\nparcelHelpers.export(exports, \"production\", ()=>production);\nparcelHelpers.export(exports, \"supportsColor\", ()=>supportsColor);\nvar _mapJs = require(\"./map.js\");\nvar _stringJs = require(\"./string.js\");\nvar _conditionsJs = require(\"./conditions.js\");\nvar _storageJs = require(\"./storage.js\");\nvar _functionJs = require(\"./function.js\");\nvar process = require(\"7bffcb6793b3d5d2\");\nconst isNode = typeof process !== \"undefined\" && process.release && /node|io\\.js/.test(process.release.name) && Object.prototype.toString.call(typeof process !== \"undefined\" ? process : 0) === \"[object process]\";\nconst isBrowser = typeof window !== \"undefined\" && typeof document !== \"undefined\" && !isNode;\nconst isMac = typeof navigator !== \"undefined\" ? /Mac/.test(navigator.platform) : false;\n/**\n * @type {Map<string,string>}\n */ let params;\nconst args = [];\n/* c8 ignore start */ const computeParams = ()=>{\n    if (params === undefined) {\n        if (isNode) {\n            params = _mapJs.create();\n            const pargs = process.argv;\n            let currParamName = null;\n            for(let i = 0; i < pargs.length; i++){\n                const parg = pargs[i];\n                if (parg[0] === \"-\") {\n                    if (currParamName !== null) params.set(currParamName, \"\");\n                    currParamName = parg;\n                } else if (currParamName !== null) {\n                    params.set(currParamName, parg);\n                    currParamName = null;\n                } else args.push(parg);\n            }\n            if (currParamName !== null) params.set(currParamName, \"\");\n        // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n        } else if (typeof location === \"object\") {\n            params = _mapJs.create(); // eslint-disable-next-line no-undef\n            (location.search || \"?\").slice(1).split(\"&\").forEach((kv)=>{\n                if (kv.length !== 0) {\n                    const [key, value] = kv.split(\"=\");\n                    params.set(`--${_stringJs.fromCamelCase(key, \"-\")}`, value);\n                    params.set(`-${_stringJs.fromCamelCase(key, \"-\")}`, value);\n                }\n            });\n        } else params = _mapJs.create();\n    }\n    return params;\n};\nconst hasParam = (name)=>computeParams().has(name);\nconst getParam = (name, defaultVal)=>computeParams().get(name) || defaultVal;\nconst getVariable = (name)=>isNode ? _conditionsJs.undefinedToNull(process.env[name.toUpperCase()]) : _conditionsJs.undefinedToNull(_storageJs.varStorage.getItem(name));\nconst getConf = (name)=>computeParams().get(\"--\" + name) || getVariable(name);\nconst hasConf = (name)=>hasParam(\"--\" + name) || getVariable(name) !== null;\nconst production = hasConf(\"production\");\n/* c8 ignore next 2 */ const forceColor = isNode && _functionJs.isOneOf(undefined, [\n    \"true\",\n    \"1\",\n    \"2\"\n]);\nconst supportsColor = !hasParam(\"no-colors\") && (!isNode || process.stdout.isTTY || forceColor) && (!isNode || hasParam(\"color\") || forceColor || getVariable(\"COLORTERM\") !== null || (getVariable(\"TERM\") || \"\").includes(\"color\") /* c8 ignore stop */ );\n\n},{\"7bffcb6793b3d5d2\":\"kluga\",\"./map.js\":\"lJGY0\",\"./string.js\":\"cVVIB\",\"./conditions.js\":\"sTNtM\",\"./storage.js\":\"hNWL3\",\"./function.js\":\"eR5QY\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"sTNtM\":[function(require,module,exports) {\n/**\n * Often used conditions.\n *\n * @module conditions\n */ /**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */ /* c8 ignore next */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"undefinedToNull\", ()=>undefinedToNull);\nconst undefinedToNull = (v)=>v === undefined ? null : v;\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"hNWL3\":[function(require,module,exports) {\n/* eslint-env browser */ /**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */ /* c8 ignore start */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"varStorage\", ()=>varStorage);\nparcelHelpers.export(exports, \"onChange\", ()=>onChange);\nparcelHelpers.export(exports, \"offChange\", ()=>offChange);\nclass VarStoragePolyfill {\n    constructor(){\n        this.map = new Map();\n    }\n    /**\n   * @param {string} key\n   * @param {any} newValue\n   */ setItem(key, newValue) {\n        this.map.set(key, newValue);\n    }\n    /**\n   * @param {string} key\n   */ getItem(key) {\n        return this.map.get(key);\n    }\n}\n/* c8 ignore stop */ /**\n * @type {any}\n */ let _localStorage = new VarStoragePolyfill();\nlet usePolyfill = true;\n/* c8 ignore start */ try {\n    // if the same-origin rule is violated, accessing localStorage might thrown an error\n    if (typeof localStorage !== \"undefined\" && localStorage) {\n        _localStorage = localStorage;\n        usePolyfill = false;\n    }\n} catch (e) {}\nconst varStorage = _localStorage;\nconst onChange = (eventHandler)=>usePolyfill || addEventListener(\"storage\", /** @type {any} */ eventHandler);\nconst offChange = (eventHandler)=>usePolyfill || removeEventListener(\"storage\", /** @type {any} */ eventHandler);\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"eR5QY\":[function(require,module,exports) {\n/**\n * Common functions and function call helpers.\n *\n * @module function\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"callAll\", ()=>callAll);\nparcelHelpers.export(exports, \"nop\", ()=>nop);\nparcelHelpers.export(exports, \"apply\", ()=>apply);\nparcelHelpers.export(exports, \"id\", ()=>id);\nparcelHelpers.export(exports, \"equalityStrict\", ()=>equalityStrict);\nparcelHelpers.export(exports, \"equalityFlat\", ()=>equalityFlat);\nparcelHelpers.export(exports, \"equalityDeep\", ()=>equalityDeep);\nparcelHelpers.export(exports, \"isOneOf\", ()=>isOneOf);\nparcelHelpers.export(exports, \"isArray\", ()=>isArray);\nparcelHelpers.export(exports, \"isString\", ()=>isString);\nparcelHelpers.export(exports, \"isNumber\", ()=>isNumber);\nparcelHelpers.export(exports, \"is\", ()=>is);\nparcelHelpers.export(exports, \"isTemplate\", ()=>isTemplate);\nvar _arrayJs = require(\"./array.js\");\nvar _objectJs = require(\"./object.js\");\nconst callAll = (fs, args, i = 0)=>{\n    try {\n        for(; i < fs.length; i++)fs[i](...args);\n    } finally{\n        if (i < fs.length) callAll(fs, args, i + 1);\n    }\n};\nconst nop = ()=>{};\nconst apply = (f)=>f();\nconst id = (a)=>a;\nconst equalityStrict = (a, b)=>a === b;\nconst equalityFlat = (a, b)=>a === b || a != null && b != null && a.constructor === b.constructor && (_arrayJs.isArray(a) && _arrayJs.equalFlat(a, /** @type {Array<T>} */ b) || typeof a === \"object\" && _objectJs.equalFlat(a, b));\nconst equalityDeep = (a, b)=>{\n    if (a == null || b == null) return equalityStrict(a, b);\n    if (a.constructor !== b.constructor) return false;\n    if (a === b) return true;\n    switch(a.constructor){\n        case ArrayBuffer:\n            a = new Uint8Array(a);\n            b = new Uint8Array(b);\n        // eslint-disable-next-line no-fallthrough\n        case Uint8Array:\n            if (a.byteLength !== b.byteLength) return false;\n            for(let i = 0; i < a.length; i++){\n                if (a[i] !== b[i]) return false;\n            }\n            break;\n        case Set:\n            if (a.size !== b.size) return false;\n            for (const value of a){\n                if (!b.has(value)) return false;\n            }\n            break;\n        case Map:\n            if (a.size !== b.size) return false;\n            for (const key of a.keys()){\n                if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) return false;\n            }\n            break;\n        case Object:\n            if (_objectJs.length(a) !== _objectJs.length(b)) return false;\n            for(const key in a){\n                if (!_objectJs.hasProperty(a, key) || !equalityDeep(a[key], b[key])) return false;\n            }\n            break;\n        case Array:\n            if (a.length !== b.length) return false;\n            for(let i = 0; i < a.length; i++){\n                if (!equalityDeep(a[i], b[i])) return false;\n            }\n            break;\n        default:\n            return false;\n    }\n    return true;\n};\nconst isOneOf = (value, options)=>options.includes(value);\nconst isArray = _arrayJs.isArray;\nconst isString = (s)=>s && s.constructor === String;\nconst isNumber = (n)=>n != null && n.constructor === Number;\nconst is = (n, T)=>n && n.constructor === T;\nconst isTemplate = (T)=>/**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/ (n)=>n && n.constructor === T;\n\n},{\"./array.js\":\"bulEf\",\"./object.js\":\"i9Pf5\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"i9Pf5\":[function(require,module,exports) {\n/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */ /**\n * @return {Object<string,any>} obj\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"create\", ()=>create);\nparcelHelpers.export(exports, \"assign\", ()=>assign);\nparcelHelpers.export(exports, \"keys\", ()=>keys);\nparcelHelpers.export(exports, \"forEach\", ()=>forEach);\nparcelHelpers.export(exports, \"map\", ()=>map);\nparcelHelpers.export(exports, \"length\", ()=>length);\nparcelHelpers.export(exports, \"some\", ()=>some);\nparcelHelpers.export(exports, \"isEmpty\", ()=>isEmpty);\nparcelHelpers.export(exports, \"every\", ()=>every);\nparcelHelpers.export(exports, \"hasProperty\", ()=>hasProperty);\nparcelHelpers.export(exports, \"equalFlat\", ()=>equalFlat);\nconst create = ()=>Object.create(null);\nconst assign = Object.assign;\nconst keys = Object.keys;\nconst forEach = (obj, f)=>{\n    for(const key in obj)f(obj[key], key);\n};\nconst map = (obj, f)=>{\n    const results = [];\n    for(const key in obj)results.push(f(obj[key], key));\n    return results;\n};\nconst length = (obj)=>keys(obj).length;\nconst some = (obj, f)=>{\n    for(const key in obj){\n        if (f(obj[key], key)) return true;\n    }\n    return false;\n};\nconst isEmpty = (obj)=>{\n    // eslint-disable-next-line\n    for(const _k in obj)return false;\n    return true;\n};\nconst every = (obj, f)=>{\n    for(const key in obj){\n        if (!f(obj[key], key)) return false;\n    }\n    return true;\n};\nconst hasProperty = (obj, key)=>Object.prototype.hasOwnProperty.call(obj, key);\nconst equalFlat = (a, b)=>a === b || length(a) === length(b) && every(a, (val, key)=>(val !== undefined || hasProperty(b, key)) && b[key] === val);\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"azyau\":[function(require,module,exports) {\n/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"BOLD\", ()=>(0, _loggingCommonJs.BOLD));\nparcelHelpers.export(exports, \"UNBOLD\", ()=>(0, _loggingCommonJs.UNBOLD));\nparcelHelpers.export(exports, \"BLUE\", ()=>(0, _loggingCommonJs.BLUE));\nparcelHelpers.export(exports, \"GREY\", ()=>(0, _loggingCommonJs.GREY));\nparcelHelpers.export(exports, \"GREEN\", ()=>(0, _loggingCommonJs.GREEN));\nparcelHelpers.export(exports, \"RED\", ()=>(0, _loggingCommonJs.RED));\nparcelHelpers.export(exports, \"PURPLE\", ()=>(0, _loggingCommonJs.PURPLE));\nparcelHelpers.export(exports, \"ORANGE\", ()=>(0, _loggingCommonJs.ORANGE));\nparcelHelpers.export(exports, \"UNCOLOR\", ()=>(0, _loggingCommonJs.UNCOLOR));\nparcelHelpers.export(exports, \"print\", ()=>print);\nparcelHelpers.export(exports, \"warn\", ()=>warn);\nparcelHelpers.export(exports, \"printError\", ()=>printError);\nparcelHelpers.export(exports, \"printImg\", ()=>printImg);\nparcelHelpers.export(exports, \"printImgBase64\", ()=>printImgBase64);\nparcelHelpers.export(exports, \"group\", ()=>group);\nparcelHelpers.export(exports, \"groupCollapsed\", ()=>groupCollapsed);\nparcelHelpers.export(exports, \"groupEnd\", ()=>groupEnd);\nparcelHelpers.export(exports, \"printDom\", ()=>printDom);\nparcelHelpers.export(exports, \"printCanvas\", ()=>printCanvas);\nparcelHelpers.export(exports, \"vconsoles\", ()=>vconsoles);\n/* c8 ignore start */ parcelHelpers.export(exports, \"VConsole\", ()=>VConsole);\nparcelHelpers.export(exports, \"createVConsole\", ()=>createVConsole);\nparcelHelpers.export(exports, \"createModuleLogger\", ()=>createModuleLogger);\nvar _environmentJs = require(\"./environment.js\");\nvar _setJs = require(\"./set.js\");\nvar _pairJs = require(\"./pair.js\");\nvar _domJs = require(\"./dom.js\");\nvar _jsonJs = require(\"./json.js\");\nvar _mapJs = require(\"./map.js\");\nvar _eventloopJs = require(\"./eventloop.js\");\nvar _mathJs = require(\"./math.js\");\nvar _loggingCommonJs = require(\"./logging.common.js\");\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */ const _browserStyleMap = {\n    [_loggingCommonJs.BOLD]: _pairJs.create(\"font-weight\", \"bold\"),\n    [_loggingCommonJs.UNBOLD]: _pairJs.create(\"font-weight\", \"normal\"),\n    [_loggingCommonJs.BLUE]: _pairJs.create(\"color\", \"blue\"),\n    [_loggingCommonJs.GREEN]: _pairJs.create(\"color\", \"green\"),\n    [_loggingCommonJs.GREY]: _pairJs.create(\"color\", \"grey\"),\n    [_loggingCommonJs.RED]: _pairJs.create(\"color\", \"red\"),\n    [_loggingCommonJs.PURPLE]: _pairJs.create(\"color\", \"purple\"),\n    [_loggingCommonJs.ORANGE]: _pairJs.create(\"color\", \"orange\"),\n    [_loggingCommonJs.UNCOLOR]: _pairJs.create(\"color\", \"black\")\n};\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */ /* c8 ignore start */ const computeBrowserLoggingArgs = (args)=>{\n    const strBuilder = [];\n    const styles = [];\n    const currentStyle = _mapJs.create();\n    /**\n   * @type {Array<string|Object|number>}\n   */ let logArgs = [];\n    // try with formatting until we find something unsupported\n    let i = 0;\n    for(; i < args.length; i++){\n        const arg = args[i];\n        // @ts-ignore\n        const style = _browserStyleMap[arg];\n        if (style !== undefined) currentStyle.set(style.left, style.right);\n        else {\n            if (arg.constructor === String || arg.constructor === Number) {\n                const style = _domJs.mapToStyleString(currentStyle);\n                if (i > 0 || style.length > 0) {\n                    strBuilder.push(\"%c\" + arg);\n                    styles.push(style);\n                } else strBuilder.push(arg);\n            } else break;\n        }\n    }\n    if (i > 0) {\n        // create logArgs with what we have so far\n        logArgs = styles;\n        logArgs.unshift(strBuilder.join(\"\"));\n    }\n    // append the rest\n    for(; i < args.length; i++){\n        const arg = args[i];\n        if (!(arg instanceof Symbol)) logArgs.push(arg);\n    }\n    return logArgs;\n};\n/* c8 ignore stop */ /* c8 ignore start */ const computeLoggingArgs = _environmentJs.supportsColor ? computeBrowserLoggingArgs : _loggingCommonJs.computeNoColorLoggingArgs;\nconst print = (...args)=>{\n    console.log(...computeLoggingArgs(args));\n    /* c8 ignore next */ vconsoles.forEach((vc)=>vc.print(args));\n};\nconst warn = (...args)=>{\n    console.warn(...computeLoggingArgs(args));\n    args.unshift(_loggingCommonJs.ORANGE);\n    vconsoles.forEach((vc)=>vc.print(args));\n};\nconst printError = (err)=>{\n    console.error(err);\n    vconsoles.forEach((vc)=>vc.printError(err));\n};\nconst printImg = (url, height)=>{\n    if (_environmentJs.isBrowser) console.log(\"%c                      \", `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`);\n    vconsoles.forEach((vc)=>vc.printImg(url, height));\n};\nconst printImgBase64 = (base64, height)=>printImg(`data:image/gif;base64,${base64}`, height);\nconst group = (...args)=>{\n    console.group(...computeLoggingArgs(args));\n    /* c8 ignore next */ vconsoles.forEach((vc)=>vc.group(args));\n};\nconst groupCollapsed = (...args)=>{\n    console.groupCollapsed(...computeLoggingArgs(args));\n    /* c8 ignore next */ vconsoles.forEach((vc)=>vc.groupCollapsed(args));\n};\nconst groupEnd = ()=>{\n    console.groupEnd();\n    /* c8 ignore next */ vconsoles.forEach((vc)=>vc.groupEnd());\n};\nconst printDom = (createNode)=>vconsoles.forEach((vc)=>vc.printDom(createNode()));\nconst printCanvas = (canvas, height)=>printImg(canvas.toDataURL(), height);\nconst vconsoles = _setJs.create();\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */ /* c8 ignore start */ const _computeLineSpans = (args)=>{\n    const spans = [];\n    const currentStyle = new Map();\n    // try with formatting until we find something unsupported\n    let i = 0;\n    for(; i < args.length; i++){\n        const arg = args[i];\n        // @ts-ignore\n        const style = _browserStyleMap[arg];\n        if (style !== undefined) currentStyle.set(style.left, style.right);\n        else {\n            if (arg.constructor === String || arg.constructor === Number) {\n                // @ts-ignore\n                const span = _domJs.element(\"span\", [\n                    _pairJs.create(\"style\", _domJs.mapToStyleString(currentStyle))\n                ], [\n                    _domJs.text(arg.toString())\n                ]);\n                if (span.innerHTML === \"\") span.innerHTML = \"&nbsp;\";\n                spans.push(span);\n            } else break;\n        }\n    }\n    // append the rest\n    for(; i < args.length; i++){\n        let content = args[i];\n        if (!(content instanceof Symbol)) {\n            if (content.constructor !== String && content.constructor !== Number) content = \" \" + _jsonJs.stringify(content) + \" \";\n            spans.push(_domJs.element(\"span\", [], [\n                _domJs.text(/** @type {string} */ content)\n            ]));\n        }\n    }\n    return spans;\n};\n/* c8 ignore stop */ const lineStyle = \"font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;\";\nclass VConsole {\n    /**\n   * @param {Element} dom\n   */ constructor(dom){\n        this.dom = dom;\n        /**\n     * @type {Element}\n     */ this.ccontainer = this.dom;\n        this.depth = 0;\n        vconsoles.add(this);\n    }\n    /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */ group(args, collapsed = false) {\n        _eventloopJs.enqueue(()=>{\n            const triangleDown = _domJs.element(\"span\", [\n                _pairJs.create(\"hidden\", collapsed),\n                _pairJs.create(\"style\", \"color:grey;font-size:120%;\")\n            ], [\n                _domJs.text(\"\\u25BC\")\n            ]);\n            const triangleRight = _domJs.element(\"span\", [\n                _pairJs.create(\"hidden\", !collapsed),\n                _pairJs.create(\"style\", \"color:grey;font-size:125%;\")\n            ], [\n                _domJs.text(\"\\u25B6\")\n            ]);\n            const content = _domJs.element(\"div\", [\n                _pairJs.create(\"style\", `${lineStyle};padding-left:${this.depth * 10}px`)\n            ], [\n                triangleDown,\n                triangleRight,\n                _domJs.text(\" \")\n            ].concat(_computeLineSpans(args)));\n            const nextContainer = _domJs.element(\"div\", [\n                _pairJs.create(\"hidden\", collapsed)\n            ]);\n            const nextLine = _domJs.element(\"div\", [], [\n                content,\n                nextContainer\n            ]);\n            _domJs.append(this.ccontainer, [\n                nextLine\n            ]);\n            this.ccontainer = nextContainer;\n            this.depth++;\n            // when header is clicked, collapse/uncollapse container\n            _domJs.addEventListener(content, \"click\", (_event)=>{\n                nextContainer.toggleAttribute(\"hidden\");\n                triangleDown.toggleAttribute(\"hidden\");\n                triangleRight.toggleAttribute(\"hidden\");\n            });\n        });\n    }\n    /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */ groupCollapsed(args) {\n        this.group(args, true);\n    }\n    groupEnd() {\n        _eventloopJs.enqueue(()=>{\n            if (this.depth > 0) {\n                this.depth--;\n                // @ts-ignore\n                this.ccontainer = this.ccontainer.parentElement.parentElement;\n            }\n        });\n    }\n    /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */ print(args) {\n        _eventloopJs.enqueue(()=>{\n            _domJs.append(this.ccontainer, [\n                _domJs.element(\"div\", [\n                    _pairJs.create(\"style\", `${lineStyle};padding-left:${this.depth * 10}px`)\n                ], _computeLineSpans(args))\n            ]);\n        });\n    }\n    /**\n   * @param {Error} err\n   */ printError(err) {\n        this.print([\n            _loggingCommonJs.RED,\n            _loggingCommonJs.BOLD,\n            err.toString()\n        ]);\n    }\n    /**\n   * @param {string} url\n   * @param {number} height\n   */ printImg(url, height) {\n        _eventloopJs.enqueue(()=>{\n            _domJs.append(this.ccontainer, [\n                _domJs.element(\"img\", [\n                    _pairJs.create(\"src\", url),\n                    _pairJs.create(\"height\", `${_mathJs.round(height * 1.5)}px`)\n                ])\n            ]);\n        });\n    }\n    /**\n   * @param {Node} node\n   */ printDom(node) {\n        _eventloopJs.enqueue(()=>{\n            _domJs.append(this.ccontainer, [\n                node\n            ]);\n        });\n    }\n    destroy() {\n        _eventloopJs.enqueue(()=>{\n            vconsoles.delete(this);\n        });\n    }\n}\nconst createVConsole = (dom)=>new VConsole(dom);\nconst createModuleLogger = (moduleName)=>_loggingCommonJs.createModuleLogger(print, moduleName);\n\n},{\"./environment.js\":\"c9W1d\",\"./set.js\":\"7fyzs\",\"./pair.js\":\"3rJmd\",\"./dom.js\":\"6fZdO\",\"./json.js\":\"jeBH6\",\"./map.js\":\"lJGY0\",\"./eventloop.js\":\"7SRPI\",\"./math.js\":\"795wo\",\"./logging.common.js\":\"3IPdD\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"3rJmd\":[function(require,module,exports) {\n/**\n * Working with value pairs.\n *\n * @module pair\n */ /**\n * @template L,R\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"Pair\", ()=>Pair);\nparcelHelpers.export(exports, \"create\", ()=>create);\nparcelHelpers.export(exports, \"createReversed\", ()=>createReversed);\nparcelHelpers.export(exports, \"forEach\", ()=>forEach);\nparcelHelpers.export(exports, \"map\", ()=>map);\nclass Pair {\n    /**\n   * @param {L} left\n   * @param {R} right\n   */ constructor(left, right){\n        this.left = left;\n        this.right = right;\n    }\n}\nconst create = (left, right)=>new Pair(left, right);\nconst createReversed = (right, left)=>new Pair(left, right);\nconst forEach = (arr, f)=>arr.forEach((p)=>f(p.left, p.right));\nconst map = (arr, f)=>arr.map((p)=>f(p.left, p.right));\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"6fZdO\":[function(require,module,exports) {\n/* eslint-env browser */ /**\n * Utility module to work with the DOM.\n *\n * @module dom\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"doc\", ()=>doc);\nparcelHelpers.export(exports, \"createElement\", ()=>createElement);\nparcelHelpers.export(exports, \"createDocumentFragment\", ()=>createDocumentFragment);\nparcelHelpers.export(exports, \"createTextNode\", ()=>createTextNode);\nparcelHelpers.export(exports, \"domParser\", ()=>domParser);\nparcelHelpers.export(exports, \"emitCustomEvent\", ()=>emitCustomEvent);\nparcelHelpers.export(exports, \"setAttributes\", ()=>setAttributes);\nparcelHelpers.export(exports, \"setAttributesMap\", ()=>setAttributesMap);\nparcelHelpers.export(exports, \"fragment\", ()=>fragment);\nparcelHelpers.export(exports, \"append\", ()=>append);\nparcelHelpers.export(exports, \"remove\", ()=>remove);\nparcelHelpers.export(exports, \"addEventListener\", ()=>addEventListener);\nparcelHelpers.export(exports, \"removeEventListener\", ()=>removeEventListener);\nparcelHelpers.export(exports, \"addEventListeners\", ()=>addEventListeners);\nparcelHelpers.export(exports, \"removeEventListeners\", ()=>removeEventListeners);\nparcelHelpers.export(exports, \"element\", ()=>element);\nparcelHelpers.export(exports, \"canvas\", ()=>canvas);\nparcelHelpers.export(exports, \"text\", ()=>text);\nparcelHelpers.export(exports, \"pairToStyleString\", ()=>pairToStyleString);\nparcelHelpers.export(exports, \"pairsToStyleString\", ()=>pairsToStyleString);\nparcelHelpers.export(exports, \"mapToStyleString\", ()=>mapToStyleString);\nparcelHelpers.export(exports, \"querySelector\", ()=>querySelector);\nparcelHelpers.export(exports, \"querySelectorAll\", ()=>querySelectorAll);\nparcelHelpers.export(exports, \"getElementById\", ()=>getElementById);\nparcelHelpers.export(exports, \"parseFragment\", ()=>parseFragment);\nparcelHelpers.export(exports, \"parseElement\", ()=>parseElement);\nparcelHelpers.export(exports, \"replaceWith\", ()=>replaceWith);\nparcelHelpers.export(exports, \"insertBefore\", ()=>insertBefore);\nparcelHelpers.export(exports, \"appendChild\", ()=>appendChild);\nparcelHelpers.export(exports, \"ELEMENT_NODE\", ()=>ELEMENT_NODE);\nparcelHelpers.export(exports, \"TEXT_NODE\", ()=>TEXT_NODE);\nparcelHelpers.export(exports, \"CDATA_SECTION_NODE\", ()=>CDATA_SECTION_NODE);\nparcelHelpers.export(exports, \"COMMENT_NODE\", ()=>COMMENT_NODE);\nparcelHelpers.export(exports, \"DOCUMENT_NODE\", ()=>DOCUMENT_NODE);\nparcelHelpers.export(exports, \"DOCUMENT_TYPE_NODE\", ()=>DOCUMENT_TYPE_NODE);\nparcelHelpers.export(exports, \"DOCUMENT_FRAGMENT_NODE\", ()=>DOCUMENT_FRAGMENT_NODE);\nparcelHelpers.export(exports, \"checkNodeType\", ()=>checkNodeType);\nparcelHelpers.export(exports, \"isParentOf\", ()=>isParentOf);\nvar _pairJs = require(\"./pair.js\");\nvar _mapJs = require(\"./map.js\");\nconst doc = /** @type {Document} */ typeof document !== \"undefined\" ? document : {};\nconst createElement = (name)=>doc.createElement(name);\nconst createDocumentFragment = ()=>doc.createDocumentFragment();\nconst createTextNode = (text)=>doc.createTextNode(text);\nconst domParser = /** @type {DOMParser} */ typeof DOMParser !== \"undefined\" ? new DOMParser() : null;\nconst emitCustomEvent = (el, name, opts)=>el.dispatchEvent(new CustomEvent(name, opts));\nconst setAttributes = (el, attrs)=>{\n    _pairJs.forEach(attrs, (key, value)=>{\n        if (value === false) el.removeAttribute(key);\n        else if (value === true) el.setAttribute(key, \"\");\n        else // @ts-ignore\n        el.setAttribute(key, value);\n    });\n    return el;\n};\nconst setAttributesMap = (el, attrs)=>{\n    attrs.forEach((value, key)=>{\n        el.setAttribute(key, value);\n    });\n    return el;\n};\nconst fragment = (children)=>{\n    const fragment = createDocumentFragment();\n    for(let i = 0; i < children.length; i++)appendChild(fragment, children[i]);\n    return fragment;\n};\nconst append = (parent, nodes)=>{\n    appendChild(parent, fragment(nodes));\n    return parent;\n};\nconst remove = (el)=>el.remove();\nconst addEventListener = (el, name, f)=>el.addEventListener(name, f);\nconst removeEventListener = (el, name, f)=>el.removeEventListener(name, f);\nconst addEventListeners = (node, listeners)=>{\n    _pairJs.forEach(listeners, (name, f)=>addEventListener(node, name, f));\n    return node;\n};\nconst removeEventListeners = (node, listeners)=>{\n    _pairJs.forEach(listeners, (name, f)=>removeEventListener(node, name, f));\n    return node;\n};\nconst element = (name, attrs = [], children = [])=>append(setAttributes(createElement(name), attrs), children);\nconst canvas = (width, height)=>{\n    const c = /** @type {HTMLCanvasElement} */ createElement(\"canvas\");\n    c.height = height;\n    c.width = width;\n    return c;\n};\nconst text = createTextNode;\nconst pairToStyleString = (pair)=>`${pair.left}:${pair.right};`;\nconst pairsToStyleString = (pairs)=>pairs.map(pairToStyleString).join(\"\");\nconst mapToStyleString = (m)=>_mapJs.map(m, (value, key)=>`${key}:${value};`).join(\"\");\nconst querySelector = (el, query)=>el.querySelector(query);\nconst querySelectorAll = (el, query)=>el.querySelectorAll(query);\nconst getElementById = (id)=>/** @type {HTMLElement} */ doc.getElementById(id);\n/**\n * @param {string} html\n * @return {HTMLElement}\n */ const _parse = (html)=>domParser.parseFromString(`<html><body>${html}</body></html>`, \"text/html\").body;\nconst parseFragment = (html)=>fragment(/** @type {any} */ _parse(html).childNodes);\nconst parseElement = (html)=>/** @type HTMLElement */ _parse(html).firstElementChild;\nconst replaceWith = (oldEl, newEl)=>oldEl.replaceWith(newEl);\nconst insertBefore = (parent, el, ref)=>parent.insertBefore(el, ref);\nconst appendChild = (parent, child)=>parent.appendChild(child);\nconst ELEMENT_NODE = doc.ELEMENT_NODE;\nconst TEXT_NODE = doc.TEXT_NODE;\nconst CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE;\nconst COMMENT_NODE = doc.COMMENT_NODE;\nconst DOCUMENT_NODE = doc.DOCUMENT_NODE;\nconst DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE;\nconst DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE;\nconst checkNodeType = (node, type)=>node.nodeType === type;\nconst isParentOf = (parent, child)=>{\n    let p = child.parentNode;\n    while(p && p !== parent)p = p.parentNode;\n    return p === parent;\n} /* c8 ignore stop */ ;\n\n},{\"./pair.js\":\"3rJmd\",\"./map.js\":\"lJGY0\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"jeBH6\":[function(require,module,exports) {\n/**\n * JSON utility functions.\n *\n * @module json\n */ /**\n * Transform JavaScript object to JSON.\n *\n * @param {any} object\n * @return {string}\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"stringify\", ()=>stringify);\nparcelHelpers.export(exports, \"parse\", ()=>parse);\nconst stringify = JSON.stringify;\nconst parse = JSON.parse;\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"7SRPI\":[function(require,module,exports) {\n/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */ /**\n * Utility module to work with EcmaScript's event loop.\n *\n * @module eventloop\n */ /**\n * @type {Array<function>}\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"enqueue\", ()=>enqueue);\nparcelHelpers.export(exports, \"timeout\", ()=>timeout);\nparcelHelpers.export(exports, \"interval\", ()=>interval);\nparcelHelpers.export(exports, \"Animation\", ()=>Animation);\nparcelHelpers.export(exports, \"animationFrame\", ()=>animationFrame);\nparcelHelpers.export(exports, \"idleCallback\", ()=>idleCallback);\nparcelHelpers.export(exports, \"createDebouncer\", ()=>createDebouncer);\nlet queue = [];\nconst _runQueue = ()=>{\n    for(let i = 0; i < queue.length; i++)queue[i]();\n    queue = [];\n};\nconst enqueue = (f)=>{\n    queue.push(f);\n    if (queue.length === 1) setTimeout(_runQueue, 0);\n};\n/**\n * @typedef {Object} TimeoutObject\n * @property {function} TimeoutObject.destroy\n */ /**\n * @param {function(number):void} clearFunction\n */ const createTimeoutClass = (clearFunction)=>class TT {\n        /**\n   * @param {number} timeoutId\n   */ constructor(timeoutId){\n            this._ = timeoutId;\n        }\n        destroy() {\n            clearFunction(this._);\n        }\n    };\nconst Timeout = createTimeoutClass(clearTimeout);\nconst timeout = (timeout, callback)=>new Timeout(setTimeout(callback, timeout));\nconst Interval = createTimeoutClass(clearInterval);\nconst interval = (timeout, callback)=>new Interval(setInterval(callback, timeout));\nconst Animation = createTimeoutClass((arg)=>typeof requestAnimationFrame !== \"undefined\" && cancelAnimationFrame(arg));\nconst animationFrame = (cb)=>typeof requestAnimationFrame === \"undefined\" ? timeout(0, cb) : new Animation(requestAnimationFrame(cb));\n/* c8 ignore next */ // @ts-ignore\nconst Idle = createTimeoutClass((arg)=>typeof cancelIdleCallback !== \"undefined\" && cancelIdleCallback(arg));\nconst idleCallback = (cb)=>typeof requestIdleCallback !== \"undefined\" ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb);\nconst createDebouncer = (timeout)=>{\n    let timer = -1;\n    return (f)=>{\n        clearTimeout(timer);\n        if (f) timer = /** @type {any} */ setTimeout(f, timeout);\n    };\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"3IPdD\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"BOLD\", ()=>BOLD);\nparcelHelpers.export(exports, \"UNBOLD\", ()=>UNBOLD);\nparcelHelpers.export(exports, \"BLUE\", ()=>BLUE);\nparcelHelpers.export(exports, \"GREY\", ()=>GREY);\nparcelHelpers.export(exports, \"GREEN\", ()=>GREEN);\nparcelHelpers.export(exports, \"RED\", ()=>RED);\nparcelHelpers.export(exports, \"PURPLE\", ()=>PURPLE);\nparcelHelpers.export(exports, \"ORANGE\", ()=>ORANGE);\nparcelHelpers.export(exports, \"UNCOLOR\", ()=>UNCOLOR);\nparcelHelpers.export(exports, \"computeNoColorLoggingArgs\", ()=>computeNoColorLoggingArgs);\nparcelHelpers.export(exports, \"createModuleLogger\", ()=>createModuleLogger);\nvar _symbolJs = require(\"./symbol.js\");\nvar _timeJs = require(\"./time.js\");\nvar _environmentJs = require(\"./environment.js\");\nvar _functionJs = require(\"./function.js\");\nconst BOLD = _symbolJs.create();\nconst UNBOLD = _symbolJs.create();\nconst BLUE = _symbolJs.create();\nconst GREY = _symbolJs.create();\nconst GREEN = _symbolJs.create();\nconst RED = _symbolJs.create();\nconst PURPLE = _symbolJs.create();\nconst ORANGE = _symbolJs.create();\nconst UNCOLOR = _symbolJs.create();\nconst computeNoColorLoggingArgs = (args)=>{\n    const strBuilder = [];\n    const logArgs = [];\n    // try with formatting until we find something unsupported\n    let i = 0;\n    for(; i < args.length; i++){\n        const arg = args[i];\n        if (arg.constructor === String || arg.constructor === Number) strBuilder.push(arg);\n        else if (arg.constructor === Object) logArgs.push(JSON.stringify(arg));\n    }\n    return logArgs;\n};\n/* c8 ignore stop */ const loggingColors = [\n    GREEN,\n    PURPLE,\n    ORANGE,\n    BLUE\n];\nlet nextColor = 0;\nlet lastLoggingTime = _timeJs.getUnixTime();\nconst createModuleLogger = (_print, moduleName)=>{\n    const color = loggingColors[nextColor];\n    const debugRegexVar = _environmentJs.getVariable(\"log\");\n    const doLogging = debugRegexVar !== null && (debugRegexVar === \"*\" || debugRegexVar === \"true\" || new RegExp(debugRegexVar, \"gi\").test(moduleName));\n    nextColor = (nextColor + 1) % loggingColors.length;\n    moduleName += \": \";\n    return !doLogging ? _functionJs.nop : (...args)=>{\n        const timeNow = _timeJs.getUnixTime();\n        const timeDiff = timeNow - lastLoggingTime;\n        lastLoggingTime = timeNow;\n        _print(color, moduleName, UNCOLOR, ...args.map((arg)=>typeof arg === \"string\" || typeof arg === \"symbol\" ? arg : JSON.stringify(arg)), color, \" +\" + timeDiff + \"ms\");\n    };\n} /* c8 ignore stop */ ;\n\n},{\"./symbol.js\":\"1hkox\",\"./time.js\":\"fLlrR\",\"./environment.js\":\"c9W1d\",\"./function.js\":\"eR5QY\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"1hkox\":[function(require,module,exports) {\n/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */ /**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"create\", ()=>create);\nparcelHelpers.export(exports, \"isSymbol\", ()=>isSymbol);\nconst create = Symbol;\nconst isSymbol = (s)=>typeof s === \"symbol\";\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"lB9HM\":[function(require,module,exports) {\n/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */ /**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"mapIterator\", ()=>mapIterator);\nparcelHelpers.export(exports, \"createIterator\", ()=>createIterator);\nparcelHelpers.export(exports, \"iteratorFilter\", ()=>iteratorFilter);\nparcelHelpers.export(exports, \"iteratorMap\", ()=>iteratorMap);\nconst mapIterator = (iterator, f)=>({\n        [Symbol.iterator] () {\n            return this;\n        },\n        // @ts-ignore\n        next () {\n            const r = iterator.next();\n            return {\n                value: r.done ? undefined : f(r.value),\n                done: r.done\n            };\n        }\n    });\nconst createIterator = (next)=>({\n        /**\n   * @return {IterableIterator<T>}\n   */ [Symbol.iterator] () {\n            return this;\n        },\n        // @ts-ignore\n        next\n    });\nconst iteratorFilter = (iterator, filter)=>createIterator(()=>{\n        let res;\n        do res = iterator.next();\n        while (!res.done && !filter(res.value));\n        return res;\n    });\nconst iteratorMap = (iterator, fmap)=>createIterator(()=>{\n        const { done, value } = iterator.next();\n        return {\n            done,\n            value: done ? undefined : fmap(value)\n        };\n    });\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"l6Pwy\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"viLoadSnapshot\", ()=>viLoadSnapshot);\nparcelHelpers.export(exports, \"applyEnv\", ()=>applyEnv);\nvar _apiProxy = require(\"../../../base/load/api/api-proxy\");\nvar _apiProxyDef = require(\"../../../base/load/api/api-proxy-def\");\nvar _dbProxy = require(\"../../../base/load/db/db-proxy\");\nvar _codeLoader = require(\"../../ed/logic/code-loader\");\nconst encoder = new TextEncoder();\nconst viLoadSnapshot = async (p)=>{\n    let api_url = p.site.config.api_url;\n    try {\n        const apiURL = new URL(api_url);\n        if (api_url && apiURL.hostname) {\n            await (0, _apiProxyDef.loadApiProxyDef)(api_url, true);\n            if (!p.script.db) p.script.db = (0, _dbProxy.dbProxy)(api_url);\n            if (!p.script.api) p.script.api = (0, _apiProxy.apiProxy)(api_url);\n        }\n    } catch (e) {\n        if (e && !e.message.toLowerCase().includes(\"invalid url\")) console.warn(\"Failed to load API [Snapshot]:\", api_url);\n    }\n    await applyEnv(p);\n};\nconst applyEnv = async (p)=>{\n    const w = window;\n    if (p.site.config.api_url) {\n        w.db = (0, _dbProxy.dbProxy)(p.site.config.api_url);\n        w.api = (0, _apiProxy.apiProxy)(p.site.config.api_url);\n    }\n    await (0, _codeLoader.loadCode)(p, p.site_tstamp);\n};\n\n},{\"../../../base/load/api/api-proxy\":\"gSUXN\",\"../../../base/load/api/api-proxy-def\":\"ad3R8\",\"../../../base/load/db/db-proxy\":\"gXSmQ\",\"../../ed/logic/code-loader\":\"43JBt\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"43JBt\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"loadFrontEnd\", ()=>loadFrontEnd);\nparcelHelpers.export(exports, \"loadTypings\", ()=>loadTypings);\nparcelHelpers.export(exports, \"loadCode\", ()=>loadCode);\nconst loadFrontEnd = async (p, ts)=>{\n    const id_site = p.site.id;\n    const url = `/prod/${id_site}/_prasi/code/index.js?ts=${ts}`;\n    const fn = new Function(\"callback\", `\nimport(\"${url}\")\n  .catch((e) => console.error(\"Failed to load site code\\\\n\\\\n\", e))\n  .then(callback)`);\n    try {\n        await new Promise((resolve)=>{\n            try {\n                fn((exports)=>{\n                    const w = window;\n                    for (const [k, v] of Object.entries(exports)){\n                        w[k] = v;\n                        p.site_exports[k] = v;\n                    }\n                    resolve(exports);\n                });\n            } catch (e) {\n                console.log(\"Failed to load site code\", e);\n            }\n        });\n    } catch (e) {}\n};\nconst loadTypings = async (p)=>{\n    const id_site = p.site.id;\n    await Promise.all([\n        fetch(`/prod/${id_site}/_prasi/typings.d.ts`).catch(()=>{}).then(async (res)=>{\n            if (res) {\n                p.site_dts = await res.text();\n                p.render();\n            }\n        }),\n        fetch(`/prod/${id_site}/_prasi/type_def`).catch(()=>{}).then(async (res)=>{\n            if (res) {\n                p.site_dts_entry = await res.json();\n                p.render();\n            }\n        })\n    ]);\n};\nconst loadCode = async (p, ts)=>{\n    try {\n        await Promise.all([\n            loadTypings(p),\n            loadFrontEnd(p, ts)\n        ]);\n    } catch (e) {\n        console.log(\"Failed to load site code\", e);\n    }\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"47fGT\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"responsiveVal\", ()=>responsiveVal);\nconst responsiveVal = (item, key, mode, defaultVal)=>{\n    let value = item[key];\n    if (mode === \"desktop\" || !mode) {\n        if (!value && item.mobile && item.mobile[key]) value = item.mobile[key];\n    } else if (item.mobile && item.mobile[key]) value = item.mobile[key];\n    if (!value) value = defaultVal;\n    return value;\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"5aNau\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"edRoute\", ()=>edRoute);\nparcelHelpers.export(exports, \"reloadLayout\", ()=>reloadLayout);\nparcelHelpers.export(exports, \"reloadPage\", ()=>reloadPage);\nparcelHelpers.export(exports, \"loadPageMetaCache\", ()=>loadPageMetaCache);\nparcelHelpers.export(exports, \"savePageMetaCache\", ()=>savePageMetaCache);\nvar _wasmGzip = require(\"wasm-gzip\");\nvar _isEditing = require(\"./active/is-editing\");\nvar _load = require(\"./comp/load\");\nvar _edGlobal = require(\"./ed-global\");\nvar _edSite = require(\"./ed-site\");\nvar _build = require(\"./tree/build\");\nvar _idbKeyval = require(\"idb-keyval\");\nvar _extractNav = require(\"../../vi/render/script/extract-nav\");\nvar Buffer = require(\"686da3b6f0fee310\").Buffer;\nconst edRoute = async (p)=>{\n    if (p.sync && (p.status === \"ready\" || p.status === \"init\")) {\n        if (!p.site.domain && !p.site.name) {\n            p.status = \"load-site\";\n            const site = await p.sync.site.load(p.site.id);\n            if (!site) {\n                p.status = \"site-not-found\";\n                p.render();\n                return;\n            }\n            await (0, _edSite.loadSite)(p, site, \"from-route\");\n        }\n        if (p.page.cur.id !== params.page_id || !p.page.cur.snapshot || !p.page.list[p.page.cur.id]) {\n            const page = p.page.list[params.page_id];\n            if (page && p.page.doc && page.on_update) {\n                p.page.doc.off(\"update\", page.on_update);\n                const cur = p.page.list[params.page_id];\n                p.page.cur = cur.page;\n                p.page.doc = cur.doc;\n            }\n            await reloadPage(p, params.page_id, \"load-route\");\n        }\n    }\n};\nconst reloadLayout = async (p, layout_id, note)=>{\n    if (!p.sync) return;\n    const remotePage = await p.sync.page.load(layout_id);\n    if (remotePage) {\n        if (remotePage.comps) {\n            for (const [id_comp, c] of Object.entries(remotePage.comps))if (c && c.snapshot) await (0, _load.loadCompSnapshot)(p, id_comp, c.snapshot);\n        }\n        if (remotePage.snapshot) {\n            const doc = new Y.Doc();\n            Y.applyUpdate(doc, (0, _wasmGzip.decompress)(remotePage.snapshot));\n            let page = p.page.list[remotePage.id];\n            if (!page) {\n                p.page.list[remotePage.id] = {};\n                page = p.page.list[remotePage.id];\n            }\n            if (page.on_update && page.doc) page.doc.off(\"update\", page.on_update);\n            page.on_update = async (bin, origin)=>{\n                if (origin === \"local\" || !p.sync) return;\n                const res = await p.sync.yjs.sv_local(\"page\", layout_id, Buffer.from((0, _wasmGzip.compress)(bin)));\n                if (res) {\n                    const diff_local = Y.encodeStateAsUpdate(doc, (0, _wasmGzip.decompress)(res.sv));\n                    Y.applyUpdate(doc, (0, _wasmGzip.decompress)(res.diff), \"local\");\n                    if (!(0, _isEditing.isTextEditing)()) await (0, _build.treeRebuild)(p, {\n                        note: note + \" page-on-update\"\n                    });\n                    await p.sync.yjs.diff_local(\"page\", p.page.cur.id, Buffer.from((0, _wasmGzip.compress)(diff_local)));\n                    p.preview.page_cache[layout_id] = {\n                        root,\n                        url: \"~~@$#%^#@~LAYOUT~~@$#%^#@~\"\n                    };\n                    await (0, _build.treeCacheBuild)(p, layout_id);\n                    p.render();\n                    const meta_cache = p.preview.meta_cache[layout_id];\n                    if (meta_cache) {\n                        p.site.layout.meta = meta_cache.meta;\n                        p.site.layout.entry = meta_cache.entry;\n                        savePageMetaCache(p, meta_cache.meta);\n                    }\n                }\n            };\n            const root = doc.getMap(\"map\").get(\"root\")?.toJSON();\n            if (root) {\n                p.preview.page_cache[layout_id] = {\n                    root,\n                    url: \"~~@$#%^#@~LAYOUT~~@$#%^#@~\"\n                };\n                await (0, _build.treeCacheBuild)(p, layout_id);\n                const meta_cache = p.preview.meta_cache[layout_id];\n                if (meta_cache) {\n                    p.site.layout.meta = meta_cache.meta;\n                    p.site.layout.entry = meta_cache.entry;\n                    savePageMetaCache(p, meta_cache.meta);\n                }\n                p.render();\n            }\n        }\n    }\n};\nconst reloadPage = async (p, page_id, note, should_render)=>{\n    if (!p.sync) return;\n    p.status = \"reload\";\n    const remotePage = await p.sync.page.load(page_id);\n    if (!remotePage) {\n        p.status = \"page-not-found\";\n        p.render();\n        return;\n    }\n    if (remotePage.comps) {\n        for (const [id_comp, c] of Object.entries(remotePage.comps))if (c && c.snapshot) await (0, _load.loadCompSnapshot)(p, id_comp, c.snapshot);\n    }\n    p.page.cur = remotePage;\n    if (remotePage.snapshot) {\n        const doc = new Y.Doc();\n        Y.applyUpdate(doc, (0, _wasmGzip.decompress)(remotePage.snapshot));\n        let page = p.page.list[remotePage.id];\n        if (!page) {\n            p.page.list[remotePage.id] = {};\n            page = p.page.list[remotePage.id];\n        }\n        if (page.on_update && page.doc) page.doc.off(\"update\", page.on_update);\n        page.on_update = async (bin, origin)=>{\n            if (origin === \"local\" || !p.sync) return;\n            if (page.page.id !== remotePage.id) {\n                alert(\"Page ID Mismatch!\\n Refreshing to preventing data loss...\");\n                location.reload();\n                return;\n            }\n            const res = await p.sync.yjs.sv_local(\"page\", p.page.cur.id, Buffer.from((0, _wasmGzip.compress)(bin)));\n            if (res) {\n                const diff_local = Y.encodeStateAsUpdate(doc, (0, _wasmGzip.decompress)(res.sv));\n                Y.applyUpdate(doc, (0, _wasmGzip.decompress)(res.diff), \"local\");\n                if (!(0, _isEditing.isTextEditing)()) await (0, _build.treeRebuild)(p, {\n                    note: note + \" page-on-update\"\n                });\n                await p.sync.yjs.diff_local(\"page\", p.page.cur.id, Buffer.from((0, _wasmGzip.compress)(diff_local)));\n                p.ui.syncing = false;\n                p.page.entry = doc.getMap(\"map\").get(\"root\")?.get(\"childs\")?.map((e)=>e.get(\"id\"));\n                if ((0, _edGlobal.active).should_render_main) p.render();\n            }\n        };\n        doc.on(\"update\", page.on_update);\n        p.page.doc = doc;\n        if (p.page.doc) {\n            page.page = p.page.cur;\n            page.doc = p.page.doc;\n            p.page.entry = p.page.doc.getMap(\"map\").get(\"root\")?.get(\"childs\")?.map((e)=>e.get(\"id\"));\n            if (!Array.isArray(p.page.entry)) p.sync.code.action({\n                type: \"flush-page-cache\",\n                page_id: page_id\n            }).then(()=>{\n                location.reload();\n            });\n        }\n        if (p.page.doc) await (0, _build.treeRebuild)(p, {\n            note: note + \" page-init\"\n        });\n    }\n    p.status = \"ready\";\n    if (should_render !== false) p.render();\n};\nconst loadPageMetaCache = async (p, page_id)=>{\n    const idb_cache = await (0, _idbKeyval.get)(`page-${page_id}`, (0, _extractNav.nav).store);\n    if (idb_cache) {\n        p.preview.meta_cache[page_id] = idb_cache;\n        return p.preview.meta_cache[page_id];\n    }\n};\nconst savePageMetaCache = async (p, meta)=>{\n    const cleaned_meta = {};\n    for (const [k, v] of Object.entries(meta))cleaned_meta[k] = {\n        item: v.item,\n        instances: v.instances,\n        parent: v.parent,\n        jsx_prop: v.jsx_prop\n    };\n    p.preview.meta_cache[params.page_id] = {\n        meta: cleaned_meta,\n        entry: p.page.entry,\n        url: p.page.cur.url\n    };\n    (0, _idbKeyval.set)(`page-${params.page_id}`, p.preview.meta_cache[params.page_id], (0, _extractNav.nav).store);\n};\n\n},{\"686da3b6f0fee310\":\"1XYH5\",\"wasm-gzip\":\"lSV23\",\"./active/is-editing\":\"dhggL\",\"./comp/load\":\"aigu6\",\"./ed-global\":\"6QDfO\",\"./ed-site\":\"fbNqA\",\"./tree/build\":\"dNllk\",\"idb-keyval\":\"8Atof\",\"../../vi/render/script/extract-nav\":\"hXbWs\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"fbNqA\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"loadSite\", ()=>loadSite);\nvar _loadLegacy = require(\"../../vi/load/load-legacy\");\nvar _loadSnapshot = require(\"../../vi/load/load-snapshot\");\nconst loadSite = async (p, site, note)=>{\n    p.site = site;\n    if (!p.script.db && !p.script.api) {\n        if (!location.pathname.startsWith(\"/ed/\")) await (0, _loadLegacy.viLoadLegacy)({\n            mode: p.mode,\n            site: {\n                api_url: p.site.config.api_url,\n                id: p.site.id,\n                api: {\n                    get () {\n                        return p.script.api;\n                    },\n                    set (val) {\n                        p.script.api = val;\n                    }\n                },\n                db: {\n                    get () {\n                        return p.script.db;\n                    },\n                    set (val) {\n                        p.script.db = val;\n                    }\n                }\n            },\n            render: ()=>{}\n        });\n        else await (0, _loadSnapshot.viLoadSnapshot)(p);\n    }\n};\n\n},{\"../../vi/load/load-legacy\":\"ibQ3Y\",\"../../vi/load/load-snapshot\":\"l6Pwy\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"ibQ3Y\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"viLoadLegacy\", ()=>viLoadLegacy);\nvar _apiProxy = require(\"../../../base/load/api/api-proxy\");\nvar _apiProxyDef = require(\"../../../base/load/api/api-proxy-def\");\nvar _dbProxy = require(\"../../../base/load/db/db-proxy\");\nvar _dynamicImport = require(\"../../ed/panel/side/style/tools/dynamic-import\");\nvar _dynamicImportDefault = parcelHelpers.interopDefault(_dynamicImport);\nvar _arg = require(\"../render/script/arg\");\nconst viLoadLegacy = async (vi)=>{\n    const w = window;\n    if (!w.exports) w.exports = {};\n    const site = await _db.site.findFirst({\n        where: {\n            id: vi.site.id\n        },\n        include: {\n            component_site: true\n        }\n    });\n    if (site) {\n        if (site.component_site) for (const cg of site.component_site){\n            const path = `/npm/site/${cg.id_site}/site.js`;\n            await (0, _dynamicImportDefault.default)(path);\n        }\n        let api_url = vi.site.api_url;\n        if (!api_url) api_url = (site.config || {}).api_url || \"\";\n        if (!api_url) return;\n        try {\n            const apiURL = new URL(api_url);\n            if (api_url && apiURL.hostname) try {\n                await (0, _apiProxyDef.loadApiProxyDef)(api_url, true);\n            } catch (e) {\n                console.warn(\"Failed to load API [Legacy]:\", api_url);\n            }\n        } catch (e) {}\n        const path = `/npm/site/${vi.site.id}/site.js`;\n        await (0, _dynamicImportDefault.default)(path);\n        if (!vi.site.db.get()) vi.site.db.set((0, _dbProxy.dbProxy)(api_url));\n        if (!vi.site.api.get()) vi.site.api.set((0, _apiProxy.apiProxy)(api_url));\n        const w = window;\n        if (site.js_compiled) {\n            const config = site.config;\n            const exec = (fn, scopes)=>{\n                if (config.api_url && !scopes[\"api\"]) {\n                    scopes[\"api\"] = vi.site.api.get();\n                    scopes[\"db\"] = vi.site.db.get();\n                }\n                scopes.params = w.params;\n                scopes.module = {};\n                const f = new Function(...Object.keys(scopes), fn);\n                const res = f(...Object.values(scopes));\n                return res;\n            };\n            const scope = {\n                ...(0, _arg.viScriptArg)({\n                    site: vi.site,\n                    mode: vi.mode\n                }),\n                types: {},\n                exports: w.exports,\n                load: (0, _dynamicImportDefault.default),\n                render: vi.render,\n                module: {\n                    exports: {}\n                }\n            };\n            await exec(site.js_compiled, scope);\n            if (scope.module.exports) for (const [k, v] of Object.entries(scope.module.exports))w.exports[k] = v;\n        }\n    }\n};\n\n},{\"../../../base/load/api/api-proxy\":\"gSUXN\",\"../../../base/load/api/api-proxy-def\":\"ad3R8\",\"../../../base/load/db/db-proxy\":\"gXSmQ\",\"../../ed/panel/side/style/tools/dynamic-import\":\"3Xtlr\",\"../render/script/arg\":\"btInY\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"3Xtlr\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"importModule\", ()=>importModule);\nvar _general = require(\"../../../../../../utils/types/general\");\nfunction toAbsoluteURL(url) {\n    const a = document.createElement(\"a\");\n    a.setAttribute(\"href\", url); // <a href=\"hoge.html\">\n    return a.cloneNode(false).href; // -> \"http://example.com/hoge.html\"\n}\nfunction importModule(url) {\n    if (!url) return \"\";\n    return new Promise((resolve, reject)=>{\n        const vector = \"$importModule$\" + Math.random().toString(32).slice(2);\n        const script = document.createElement(\"script\");\n        const destructor = ()=>{\n            delete window[vector];\n            script.onerror = null;\n            script.onload = null;\n            script.remove();\n            URL.revokeObjectURL(script.src);\n            script.src = \"\";\n        };\n        script.defer = true;\n        script.type = \"module\";\n        script.onerror = ()=>{\n            reject(new Error(`Failed to import: ${url}`));\n            destructor();\n        };\n        script.onload = ()=>{\n            resolve(window[vector]);\n            destructor();\n        };\n        const absURL = (0, _general.w).basehost ? (0, _general.w).basehost + url : toAbsoluteURL(url);\n        const loader = `import * as m from \"${absURL}\"; window.${vector} = m;`; // export Module\n        const blob = new Blob([\n            loader\n        ], {\n            type: \"text/javascript\"\n        });\n        script.src = URL.createObjectURL(blob);\n        document.head.appendChild(script);\n    });\n}\nexports.default = importModule;\n\n},{\"../../../../../../utils/types/general\":\"fBAQm\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"btInY\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"viScriptArg\", ()=>viScriptArg);\nconst viScriptArg = (vi)=>({\n        isMobile: vi.mode === \"mobile\",\n        isDesktop: vi.mode === \"desktop\",\n        isEditor: location.pathname.startsWith(\"/ed/\")\n    });\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"lSNIl\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"Vi\", ()=>Vi);\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _react = require(\"react\");\nvar _webUtils = require(\"web-utils\");\nvar _load = require(\"./load/load\");\nvar _global = require(\"./render/global\");\nvar _render = require(\"./render/render\");\nvar _extractNav = require(\"./render/script/extract-nav\");\nvar _root = require(\"./root\");\nvar _errorBox = require(\"./utils/error-box\");\nconst w = window;\nconst Vi = ({ meta, entry, api_url, site_id, api, mode, db, visit, script, page_id, render_stat: rs, on_status_changed, on_preload, layout, comp_load })=>{\n    const vi = (0, _webUtils.useGlobal)((0, _global.ViGlobal), \"VI\");\n    vi.mode = mode;\n    vi.entry = entry;\n    vi.on_preload = on_preload;\n    vi.comp.load = comp_load;\n    w.siteurl = (pathname, forceOriginal)=>{\n        if (pathname.startsWith(\"http://\") || pathname.startsWith(\"https://\")) return pathname;\n        try {\n            if ([\n                \"prasi.avolut.com\",\n                \"localhost\"\n            ].includes(location.hostname)) {\n                if (vi.site.api_url) {\n                    if (!vi.site_url) vi.site_url = new URL(vi.site.api_url);\n                }\n            } else if (!vi.site_url) {\n                if (forceOriginal && vi.site.api_url) vi.site_url = new URL(vi.site.api_url);\n                else vi.site_url = new URL(location.href);\n                vi.site_url.pathname = \"\";\n            }\n        } catch (e) {}\n        if (vi.site_url) {\n            const u = vi.site_url;\n            let path = pathname;\n            if (!path.startsWith(\"/\")) path = \"/\" + path;\n            if (w.prasiContext.siteUrl) path = w.prasiContext.siteUrl(path);\n            return `${u.protocol}//${u.host}${path}`;\n        }\n        return pathname;\n    };\n    w.isMobile = mode === \"mobile\";\n    w.isDesktop = mode === \"desktop\";\n    w.preload = (_urls, opt)=>{\n        if (!vi.page.navs[page_id]) vi.page.navs[page_id] = new Set();\n        const urls = typeof _urls === \"string\" ? [\n            _urls\n        ] : _urls;\n        for (const url of urls)vi.page.navs[page_id].add(url);\n        clearTimeout((0, _extractNav.nav).timeout);\n        (0, _extractNav.nav).timeout = setTimeout(()=>{\n            if (vi.on_preload) vi.on_preload({\n                urls: Array.from(vi.page.navs[page_id]),\n                opt: {\n                    on_load: opt?.on_load\n                }\n            });\n        }, 100);\n        return \"\";\n    };\n    vi.layout = layout;\n    vi.page.cur.id = page_id;\n    vi.on_status_changes = on_status_changed;\n    if (rs === \"disabled\") (0, _render.render_stat).enabled = false;\n    if (vi.meta !== meta) vi.meta = meta;\n    if (script) vi.script.init_local_effect = script.init_local_effect;\n    vi.visit = visit;\n    if (vi.status === \"init\") {\n        vi.site.db = db;\n        vi.site.api = api;\n        (0, _load.viLoad)(vi, {\n            api_url,\n            site_id\n        });\n    }\n    if (on_preload) (0, _react.useEffect)(()=>{\n        setTimeout(()=>{\n            const nav = vi.page.navs[vi.page.cur.id];\n            if (nav) on_preload({\n                urls: Array.from(nav),\n                opt: {\n                    on_load (pages) {}\n                }\n            });\n        }, 500);\n    }, [\n        vi.page.cur.id\n    ]);\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _errorBox.ErrorBox), {\n        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _react.Suspense), {\n            children: /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _root.ViRoot), {})\n        })\n    });\n};\n\n},{\"react/jsx-runtime\":\"16Crh\",\"react\":\"jhHkt\",\"web-utils\":\"8vvzC\",\"./load/load\":\"9mDWt\",\"./render/global\":\"1IdeH\",\"./render/render\":\"8FwN3\",\"./render/script/extract-nav\":\"hXbWs\",\"./root\":\"6ey3Y\",\"./utils/error-box\":\"4gof8\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"9mDWt\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"viLoad\", ()=>viLoad);\nconst viLoad = (vi, arg)=>{\n    vi.status = \"loading\";\n    if (vi.on_status_changes) vi.on_status_changes(vi.status);\n    vi.site.id = arg.site_id;\n    vi.site.api_url = arg.api_url;\n    vi.status = \"ready\";\n    if (vi.on_status_changes) vi.on_status_changes(vi.status);\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"1IdeH\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"ViGlobal\", ()=>ViGlobal);\nconst ViGlobal = {\n    ts: 0,\n    status: \"init\",\n    meta: {},\n    entry: [],\n    tick: 0,\n    mode: \"desktop\",\n    site: {\n        id: \"\",\n        api_url: \"\",\n        api: null,\n        db: null\n    },\n    site_url: null,\n    script: {\n        init_local_effect: undefined\n    },\n    visit: undefined,\n    on_status_changes: undefined,\n    layout: undefined,\n    page: {\n        cur: {\n            id: \"\"\n        },\n        navs: {}\n    },\n    comp: {\n        load: async ()=>{\n            return null;\n        }\n    },\n    on_preload: undefined\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"8FwN3\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"render_stat\", ()=>render_stat);\nparcelHelpers.export(exports, \"ViRender\", ()=>ViRender);\nparcelHelpers.export(exports, \"ViChild\", ()=>ViChild);\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _react = require(\"react\");\nvar _webUtils = require(\"web-utils\");\nvar _errorBox = require(\"../utils/error-box\");\nvar _global = require(\"./global\");\nvar _parts = require(\"./parts\");\nvar _script = require(\"./script\");\nconst MAX_RENDER_IN_SECOND = 70;\nconst JS_CONFIG = {\n    debug: !!localStorage.getItem(\"prasi-js-debug\")\n};\nconst render_stat = {\n    enabled: false,\n    meta: {}\n};\nconst ViRender = ({ meta, passprop, is_layout, parent_key, depth })=>{\n    if (render_stat.enabled) {\n        const rstat_meta = render_stat.meta;\n        if (!rstat_meta[meta.item.id]) rstat_meta[meta.item.id] = {\n            last_render: Math.floor(Date.now() / 1000),\n            count: 1\n        };\n        else if (rstat_meta[meta.item.id].last_render === Math.floor(Date.now() / 1000)) rstat_meta[meta.item.id].count++;\n        else rstat_meta[meta.item.id] = {\n            last_render: Math.floor(Date.now() / 1000),\n            count: 1\n        };\n        if (rstat_meta[meta.item.id]?.count > MAX_RENDER_IN_SECOND) return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(\"div\", {\n            className: \"bg-orange-100 border border-orange-300 rounded-sm text-xs flex flex-col items-center\",\n            children: [\n                /*#__PURE__*/ (0, _jsxRuntime.jsxs)(\"div\", {\n                    className: \"text-[10px] font-bold text-red-900 self-stretch px-1\",\n                    children: [\n                        \"WARNING: Render loop detected in [\",\n                        meta.item.name,\n                        \"]\"\n                    ]\n                }),\n                /*#__PURE__*/ (0, _jsxRuntime.jsxs)(\"p\", {\n                    className: \"border-b border-orange-300 px-1 pb-1 min-w-[100px]\",\n                    children: [\n                        \"Rendered \",\n                        rstat_meta[meta.item.id]?.count,\n                        \" times in less than 1 second.\"\n                    ]\n                })\n            ]\n        });\n    }\n    if (!meta) return null;\n    if (meta.item.hidden) return null;\n    if (JS_CONFIG.debug) {\n        let spaces = \"\";\n        for(let i = 0; i < depth; i++)spaces += \".\";\n        console.log(spaces + meta.item.id, meta.item.name);\n    }\n    if (meta.item.adv?.js || meta.item.component?.id) return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _errorBox.ErrorBox), {\n        meta: meta,\n        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _script.ViScript), {\n            meta: meta,\n            depth: depth,\n            is_layout: is_layout,\n            passprop: {\n                ...passprop\n            },\n            parent_key: parent_key\n        })\n    });\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _errorBox.ErrorBox), {\n        meta: meta,\n        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(ViChild, {\n            meta: meta,\n            passprop: {\n                ...passprop\n            },\n            depth: depth,\n            is_layout: is_layout,\n            parent_key: parent_key\n        })\n    });\n};\nconst ViChild = ({ meta, passprop, is_layout, parent_key, depth })=>{\n    const vi = (0, _webUtils.useGlobal)((0, _global.ViGlobal), \"VI\");\n    if (is_layout && meta.item.name === \"children\") {\n        const childs = [];\n        for (const item_id of vi.entry){\n            const meta = vi.meta[item_id];\n            if (meta.item.adv?.js || meta.item.component?.id) childs.push(/*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _errorBox.ErrorBox), {\n                meta: meta,\n                children: /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _script.ViScript), {\n                    meta: meta,\n                    is_layout: false,\n                    passprop: {\n                        ...passprop\n                    },\n                    parent_key: parent_key,\n                    depth: depth + 1\n                })\n            }));\n            else {\n                const parts = (0, _parts.viParts)(vi, meta, false, passprop, depth);\n                if (vi.visit) vi.visit(meta, parts);\n                childs.push(/*#__PURE__*/ (0, _jsxRuntime.jsx)(\"div\", {\n                    ...parts.props\n                }));\n            }\n        }\n        return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _jsxRuntime.Fragment), {\n            children: childs.map((e, idx)=>/*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _react.Fragment), {\n                    children: e\n                }, idx))\n        });\n    }\n    const parts = (0, _parts.viParts)(vi, meta, is_layout, passprop, depth);\n    if (vi.visit) vi.visit(meta, parts);\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(\"div\", {\n        ...parts.props\n    });\n};\n\n},{\"react/jsx-runtime\":\"16Crh\",\"react\":\"jhHkt\",\"web-utils\":\"8vvzC\",\"../utils/error-box\":\"4gof8\",\"./global\":\"1IdeH\",\"./parts\":\"fUkcA\",\"./script\":\"biZQo\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"4gof8\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"ErrorBox\", ()=>ErrorBox);\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _reactUseErrorBoundary = require(\"react-use-error-boundary\");\nvar _webUtils = require(\"web-utils\");\nconst ErrorBox = (0, _reactUseErrorBoundary.withErrorBoundary)(({ children, meta, id, silent = true })=>{\n    const local = (0, _webUtils.useLocal)({\n        retrying: false,\n        meta\n    });\n    const [error, resetError] = (0, _reactUseErrorBoundary.useErrorBoundary)((error, errorInfo)=>{\n        if (silent !== true) console.warn(error);\n    });\n    if (meta && local.meta !== meta) {\n        local.meta = meta;\n        setTimeout(resetError);\n    }\n    let _meta = meta;\n    if (error) return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(\"div\", {\n        className: \"bg-red-100 border border-red-300 rounded-sm text-xs flex flex-col items-center\",\n        children: [\n            /*#__PURE__*/ (0, _jsxRuntime.jsxs)(\"div\", {\n                className: \"text-[10px] font-bold text-red-900 self-stretch px-1\",\n                children: [\n                    \"ERROR \",\n                    _meta?.item.name ? \"[\" + _meta.item.name + \"]:\" : \"\"\n                ]\n            }),\n            /*#__PURE__*/ (0, _jsxRuntime.jsx)(\"p\", {\n                className: \"border-b border-red-300 px-1 pb-1 min-w-[100px]\",\n                children: !local.retrying ? /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _jsxRuntime.Fragment), {\n                    children: error.message\n                }) : /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _jsxRuntime.Fragment), {\n                    children: \"Retrying...\"\n                })\n            }),\n            /*#__PURE__*/ (0, _jsxRuntime.jsx)(\"div\", {\n                className: \"p-1\",\n                children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(\"button\", {\n                    onClick: ()=>{\n                        local.retrying = true;\n                        local.render();\n                        setTimeout(()=>{\n                            local.retrying = false;\n                            local.render();\n                            resetError();\n                        }, 100);\n                    },\n                    className: \"bg-white border border-white hover:border-red-400 hover:bg-red-50 rounded px-2\",\n                    children: \"Try again\"\n                })\n            })\n        ]\n    });\n    return children;\n});\n\n},{\"react/jsx-runtime\":\"16Crh\",\"react-use-error-boundary\":\"dGgYx\",\"web-utils\":\"8vvzC\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"dGgYx\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"ErrorBoundaryContext\", ()=>ErrorBoundaryContext);\nparcelHelpers.export(exports, \"withErrorBoundary\", ()=>withErrorBoundary);\nparcelHelpers.export(exports, \"useErrorBoundary\", ()=>useErrorBoundary);\nvar _react = require(\"react\");\nvar _reactDefault = parcelHelpers.interopDefault(_react);\nclass ErrorBoundary extends (0, _react.Component) {\n    displayName = \"ReactUseErrorBoundary\";\n    componentDidCatch(...args) {\n        this.setState({});\n        this.props.onError(...args);\n    }\n    render() {\n        return this.props.children;\n    }\n}\nconst noop = ()=>false;\nconst errorBoundaryContext = (0, _react.createContext)({\n    componentDidCatch: {\n        current: undefined\n    },\n    error: undefined,\n    setError: noop\n});\nfunction ErrorBoundaryContext({ children }) {\n    const [error, setError] = (0, _react.useState)();\n    const componentDidCatch = (0, _react.useRef)();\n    const ctx = (0, _react.useMemo)(()=>({\n            componentDidCatch,\n            error,\n            setError\n        }), [\n        error\n    ]);\n    return (0, _reactDefault.default).createElement(errorBoundaryContext.Provider, {\n        value: ctx\n    }, (0, _reactDefault.default).createElement(ErrorBoundary, {\n        error: error,\n        onError: (error, errorInfo)=>{\n            setError(error);\n            componentDidCatch.current?.(error, errorInfo);\n        }\n    }, children));\n}\nErrorBoundaryContext.displayName = \"ReactUseErrorBoundaryContext\";\nfunction withErrorBoundary(WrappedComponent) {\n    function WithErrorBoundary(props) {\n        return (0, _reactDefault.default).createElement(ErrorBoundaryContext, null, (0, _reactDefault.default).createElement(WrappedComponent, {\n            key: \"WrappedComponent\",\n            ...props\n        }));\n    }\n    WithErrorBoundary.displayName = `WithErrorBoundary(${WrappedComponent.displayName ?? WrappedComponent.name ?? \"Component\"})`;\n    return WithErrorBoundary;\n}\nfunction useErrorBoundary(componentDidCatch) {\n    const ctx = (0, _react.useContext)(errorBoundaryContext);\n    ctx.componentDidCatch.current = componentDidCatch;\n    const resetError = (0, _react.useCallback)(()=>{\n        ctx.setError(undefined);\n    }, []);\n    return [\n        ctx.error,\n        resetError\n    ];\n}\n\n},{\"react\":\"jhHkt\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"fUkcA\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"viParts\", ()=>viParts);\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _gen = require(\"../../../utils/css/gen\");\nvar _render = require(\"./render\");\nconst viParts = (vi, meta, is_layout, passprop, depth)=>{\n    const item = meta.item;\n    let inherit = undefined;\n    if (item.component?.style) inherit = {\n        style: item.component.style,\n        className: (0, _gen.produceCSS)(item.component.style, {\n            mode: vi.mode\n        })\n    };\n    const props = {\n        className: (0, _gen.produceCSS)(item, {\n            mode: vi.mode\n        }),\n        inherit\n    };\n    let text_props = {};\n    const childs = meta.item.childs;\n    let children = undefined;\n    if (meta.item.type === \"text\") {\n        children = null;\n        props.dangerouslySetInnerHTML = {\n            __html: meta.item.html || \"\"\n        };\n    } else children = Array.isArray(childs) && childs?.map((item)=>{\n        if (!item) return null;\n        const { id } = item;\n        const meta = is_layout ? vi.layout?.meta[id] : vi.meta[id];\n        if (!meta) return null;\n        return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _render.ViRender), {\n            meta: meta,\n            is_layout: is_layout,\n            passprop: {\n                ...passprop\n            },\n            depth: depth + 1\n        }, id);\n    });\n    props.children = children;\n    if (meta.item.adv?.html) {\n        delete props.children;\n        props.dangerouslySetInnerHTML = {\n            __html: meta.item.adv?.html\n        };\n    } else if (meta.item.adv?.js && !meta.item.adv.js.includes(\"children\")) {\n        delete props.children;\n        delete props.dangerouslySetInnerHTML;\n    }\n    return {\n        props,\n        text_props\n    };\n};\n\n},{\"react/jsx-runtime\":\"16Crh\",\"../../../utils/css/gen\":\"lljkd\",\"./render\":\"8FwN3\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"lljkd\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"produceCSS\", ()=>produceCSS);\nvar _advanced = require(\"./advanced\");\nvar _background = require(\"./background\");\nvar _border = require(\"./border\");\nvar _dimension = require(\"./dimension\");\nvar _editor = require(\"./editor\");\nvar _font = require(\"./font\");\nvar _layout = require(\"./layout\");\nvar _padding = require(\"./padding\");\nconst produceCSS = (item, arg)=>{\n    try {\n        return cx([\n            item.id ? `s-${item.id}` : \"\",\n            css`\n        display: flex;\n        position: relative;\n        user-select: none;\n        ${(0, _layout.cssLayout)(item, arg.mode)}\n        ${(0, _padding.cssPadding)(item, arg.mode)}\n        ${(0, _dimension.cssDimension)(item, arg.mode, arg?.editor)}\n        ${(0, _border.cssBorder)(item, arg.mode)}\n        ${(0, _background.cssBackground)(item, arg.mode)}\n        ${(0, _font.cssFont)(item, arg.mode)}\n      `,\n            (arg?.hover || arg?.active) && (0, _editor.cssEditor)({\n                item,\n                hover: arg?.hover,\n                active: arg?.active\n            }),\n            (0, _advanced.cssAdv)(item, arg.mode)\n        ]);\n    } catch (e) {\n        console.log(e);\n    }\n    return cx([]);\n};\n\n},{\"./advanced\":\"g1X3l\",\"./background\":\"ek1v7\",\"./border\":\"a0Rr1\",\"./dimension\":\"hoVfB\",\"./editor\":\"eRBmI\",\"./font\":\"bH9nH\",\"./layout\":\"8LbRi\",\"./padding\":\"5AbI8\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"g1X3l\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"cssAdv\", ()=>cssAdv);\nvar _responsiveVal = require(\"../../nova/ed/panel/side/style/tools/responsive-val\");\nconst cssAdv = (cur, mode)=>{\n    const adv = (0, _responsiveVal.responsiveVal)(cur, \"adv\", mode, {});\n    if (typeof adv.css === \"string\") {\n        const hasCSS = adv.css.trim();\n        if (hasCSS) return cx(css`\n          ${adv.css}\n        `, mode);\n    }\n    return \"\";\n};\n\n},{\"../../nova/ed/panel/side/style/tools/responsive-val\":\"47fGT\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"ek1v7\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"cssBackground\", ()=>cssBackground);\nvar _responsiveVal = require(\"../../nova/ed/panel/side/style/tools/responsive-val\");\nconst cssBackground = (cur, mode)=>{\n    const bg = (0, _responsiveVal.responsiveVal)(cur, \"bg\", mode, {\n        size: \"contain\",\n        pos: \"center\"\n    });\n    let bgurl = `${serverurl}${bg.url}`;\n    if (bg && bg.url && bg.url.startsWith(\"http\")) bgurl = bg.url;\n    return cx(`\n      background-repeat: no-repeat;\n    `, bg.color && `\n        background-color: ${bg.color};\n      `, bg.size && `\n        background-size: ${bg.size};\n      `, bg.pos && `\n        background-position: ${bg.pos};\n      `);\n};\n\n},{\"../../nova/ed/panel/side/style/tools/responsive-val\":\"47fGT\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"a0Rr1\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"cssBorder\", ()=>cssBorder);\nvar _lodashGet = require(\"lodash.get\");\nvar _lodashGetDefault = parcelHelpers.interopDefault(_lodashGet);\nvar _responsiveVal = require(\"../../nova/ed/panel/side/style/tools/responsive-val\");\nconst cssBorder = (cur, mode)=>{\n    const border = (0, _responsiveVal.responsiveVal)(cur, \"border\", mode, {\n        style: \"solid\",\n        stroke: {},\n        rounded: {\n            tr: 0,\n            tl: 0,\n            bl: 0,\n            br: 0\n        },\n        color: \"transparent\"\n    });\n    return cx(pick(border, \"stroke.l\", \"border-left-width\"), pick(border, \"stroke.r\", \"border-right-width\"), pick(border, \"stroke.b\", \"border-bottom-width\"), pick(border, \"stroke.t\", \"border-top-width\"), pick(border, \"color\", \"border-color\", \"transparent\"), pick(border, \"style\", \"border-style\", \"dashed\"), pick(border, \"rounded.tl\", \"border-top-left-radius\"), pick(border, \"rounded.tr\", \"border-top-right-radius\"), pick(border, \"rounded.bl\", \"border-bottom-left-radius\"), pick(border, \"rounded.br\", \"border-bottom-right-radius\"));\n};\nconst pick = (obj, key, attr, notpx)=>{\n    const val = (0, _lodashGetDefault.default)(obj, key);\n    if (notpx) {\n        if (val) return `${attr}: ${val};`;\n        else return `${attr}: ${notpx};`;\n    } else if (val) return `${attr}: ${val}px;`;\n};\n\n},{\"lodash.get\":\"hHAu7\",\"../../nova/ed/panel/side/style/tools/responsive-val\":\"47fGT\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"hoVfB\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"cssDimension\", ()=>cssDimension);\nvar _responsiveVal = require(\"../../nova/ed/panel/side/style/tools/responsive-val\");\nconst cssDimension = (cur, mode, editor)=>{\n    const dim = (0, _responsiveVal.responsiveVal)(cur, \"dim\", mode, {\n        h: \"fit\",\n        w: \"fit\"\n    });\n    if (dim.w === \"full\" && dim.h === \"full\") return `\n      width:100%;\n      height:100%;\n      flex:1;\n    `;\n    return cx(dim.w === \"fit\" && `\n        & > .txt-box > * {\n          white-space: nowrap !important;\n        }\n      `, dim.w === \"full\" && `\n        width: 100%;\n      `, dim.w && typeof dim.w === \"number\" && dim.w >= 0 && `\n        width: ${dim.w}${dim.wUnit || \"px\"};\n        overflow-x: clip;\n      `, dim.h === \"full\" && `\n        height: ${editor ? \"100%\" : \"100\" + (cur.type === \"section\" ? mode === \"mobile\" ? \"vh\" : \"vh\" : \"%\")};\n        margin-bottom: auto;\n      `, dim.h && typeof dim.h === \"number\" && dim.h >= 0 && `\n        height: ${dim.h}${dim.hUnit || \"px\"};\n        overflow-y: clip;\n      `);\n};\n\n},{\"../../nova/ed/panel/side/style/tools/responsive-val\":\"47fGT\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"eRBmI\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"cssEditor\", ()=>cssEditor);\nconst cssEditor = ({ item, hover, active })=>{\n    return cx(hover && css`\n        & {\n          box-shadow: inset 0 0 0px 3px #bae3fd;\n          > img {\n            opacity: 0.6;\n          }\n        }\n      `, active && css`\n        box-shadow: inset 0 0 0px 2px #009cff !important;\n        > img {\n          opacity: 0.6;\n        }\n      `);\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"bH9nH\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"glbFont\", ()=>glbFont);\nparcelHelpers.export(exports, \"cssFont\", ()=>cssFont);\nvar _responsiveVal = require(\"../../nova/ed/panel/side/style/tools/responsive-val\");\nconst glbFont = window;\nconst cssFont = (cur, mode)=>{\n    const font = (0, _responsiveVal.responsiveVal)(cur, \"font\", mode, {});\n    if (font.family) {\n        if (!glbFont.loadedFonts) glbFont.loadedFonts = [];\n        const weight = `:wght@${[\n            300,\n            400,\n            500,\n            600\n        ].join(\";\")}`;\n        const fontName = font.family.replace(/ /g, \"+\");\n        if (glbFont.loadedFonts.indexOf(font.family) < 0) {\n            glbFont.loadedFonts.push(font.family);\n            const doc = document;\n            const _href = `/_font/css2?family=${fontName}${weight}`;\n            if (!doc.querySelector(`link[href=\"${_href}]`)) {\n                const link = doc.createElement(\"link\");\n                link.type = \"text/css\";\n                link.rel = \"stylesheet\";\n                link.href = _href;\n                doc.head.appendChild(link);\n            }\n        }\n    }\n    if (!font.family && glbFont.defaultFont) font.family = glbFont.defaultFont;\n    const res = cx(font.color && `\n        color: ${font.color};\n      `, font.whitespace === \"whitespace-normal\" && `\n      word-break: break-word;\n    `, font.whitespace === \"whitespace-nowrap\" && `\n        white-space: nowrap;\n      `, font.color && `\n        color: ${font.color};\n      `, `\n      text-align: ${font.align ? font.align : \"left\"};\n    `, font.size && `\n        font-size: ${font.size || 15}px;\n      `, font.height && `\n        line-height: ${font.height === \"auto\" ? \"normal\" : `${font.height}%`};\n      `, font.family && `\n        font-family: ${font.family};\n      `);\n    return res;\n};\n\n},{\"../../nova/ed/panel/side/style/tools/responsive-val\":\"47fGT\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"8LbRi\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"cssLayout\", ()=>cssLayout);\nvar _responsiveVal = require(\"../../nova/ed/panel/side/style/tools/responsive-val\");\nconst cssLayout = (cur, mode)=>{\n    const result = [];\n    let layout = (0, _responsiveVal.responsiveVal)(cur, \"layout\", mode, {\n        dir: \"col\",\n        align: \"top-left\",\n        gap: 0,\n        wrap: undefined\n    });\n    if (layout) {\n        if (layout.wrap) result.push(layout.wrap === \"flex-wrap\" ? \"flex-wrap: wrap;\" : \"flex-wrap: nowrap;\");\n        if (layout.dir.startsWith(\"col\")) {\n            if (layout.dir === \"col\") result.push(\"flex-direction: column;\");\n            else if (layout.dir === \"col-reverse\") result.push(\"flex-direction: column-reverse;\");\n            if (layout.gap === \"auto\") {\n                if (layout.align === \"left\") result.push(\"align-items:start; justify-content: space-between;\");\n                if (layout.align === \"center\") result.push(\"align-items:center; justify-content: space-between;\");\n                if (layout.align === \"right\") result.push(\"align-items:end; justify-content: space-between;\");\n            } else {\n                result.push(`gap: ${layout.gap}px;`);\n                if (layout.align === \"top-left\") result.push(\"align-items:start; justify-content: start;\");\n                if (layout.align === \"top-center\") result.push(\"align-items:center; justify-content: start;\");\n                if (layout.align === \"top-right\") result.push(\"align-items:end; justify-content: start;\");\n                if (layout.align === \"left\") result.push(\"align-items:start; justify-content: center;\");\n                if (layout.align === \"center\") result.push(\"align-items:center; justify-content: center;\");\n                if (layout.align === \"right\") result.push(\"align-items:end; justify-content: center;\");\n                if (layout.align === \"bottom-left\") result.push(\"align-items:start; justify-content: end;\");\n                if (layout.align === \"bottom-center\") result.push(\"align-items:center; justify-content: end;\");\n                if (layout.align === \"bottom-right\") result.push(\"align-items:end; justify-content: end;\");\n            }\n        } else {\n            if (layout.dir === \"row\") result.push(\"flex-direction: row;\");\n            else if (layout.dir === \"row-reverse\") result.push(\"flex-direction: row-reverse;\");\n            if (layout.gap === \"auto\") {\n                if (layout.align === \"top\") result.push(\"align-items:start; justify-content: space-between;\");\n                if (layout.align === \"center\") result.push(\"align-items:center; justify-content: space-between;\");\n                if (layout.align === \"bottom\") result.push(\"align-items:end; justify-content: space-between;\");\n            } else {\n                result.push(`\n            gap: ${layout.gap}px;\n          `);\n                if (layout.align === \"top-left\") result.push(\"align-items:start; justify-content: start;\");\n                if (layout.align === \"top-center\") result.push(\"align-items:start; justify-content: center;\");\n                if (layout.align === \"top-right\") result.push(\"align-items:start; justify-content: end;\");\n                if (layout.align === \"left\") result.push(\"align-items:center; justify-content: start;\");\n                if (layout.align === \"center\") result.push(\"align-items:center; justify-content: center;\");\n                if (layout.align === \"right\") result.push(\"align-items:center; justify-content: end;\");\n                if (layout.align === \"bottom-left\") result.push(\"align-items:end; justify-content: start;\");\n                if (layout.align === \"bottom-center\") result.push(\"align-items:end; justify-content: center;\");\n                if (layout.align === \"bottom-right\") result.push(\"align-items:end; justify-content: end;\");\n            }\n        }\n    } else return \"flex-direction:column; align-items:start; justify-content: start;\";\n    return result.join(\"\\n\t\").trim();\n};\n\n},{\"../../nova/ed/panel/side/style/tools/responsive-val\":\"47fGT\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"5AbI8\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"cssPadding\", ()=>cssPadding);\nvar _responsiveVal = require(\"../../nova/ed/panel/side/style/tools/responsive-val\");\nconst cssPadding = (cur, mode)=>{\n    const padding = (0, _responsiveVal.responsiveVal)(cur, \"padding\", mode, {\n        l: 0,\n        b: 0,\n        t: 0,\n        r: 0\n    });\n    return cx(padding.l !== undefined && `\n        padding-left: ${padding.l}px;\n      `, padding.r !== undefined && `\n        padding-right: ${padding.r}px;\n      `, padding.b !== undefined && `\n        padding-bottom: ${padding.b}px;\n      `, padding.t !== undefined && `\n        padding-top: ${padding.t}px; \n      `);\n};\n\n},{\"../../nova/ed/panel/side/style/tools/responsive-val\":\"47fGT\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"biZQo\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"ViScript\", ()=>ViScript);\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _react = require(\"react\");\nvar _webUtils = require(\"web-utils\");\nvar _global = require(\"./global\");\nvar _render = require(\"./render\");\nvar _evalProp = require(\"./script/eval-prop\");\nvar _evalScript = require(\"./script/eval-script\");\nconst ViScript = ({ meta, passprop, is_layout, parent_key, depth })=>{\n    const vi = (0, _webUtils.useGlobal)((0, _global.ViGlobal), \"VI\");\n    const [_, _set] = (0, _react.useState)({});\n    meta.render = ()=>{\n        _set({});\n    };\n    let _pass = passprop;\n    if (meta.item.component?.id) {\n        if (!_pass) _pass = {};\n        (0, _evalProp.viEvalProps)(vi, meta, is_layout, _pass, depth, parent_key);\n    }\n    if (meta.item.adv?.html) return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _render.ViChild), {\n        meta: meta,\n        passprop: _pass,\n        is_layout: is_layout,\n        depth: depth\n    });\n    if (meta.item.adv?.js) {\n        (0, _evalScript.viEvalScript)(vi, meta, is_layout, _pass, depth, parent_key);\n        if (meta.script) return meta.script.result;\n    }\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _render.ViChild), {\n        meta: meta,\n        passprop: _pass,\n        is_layout: is_layout,\n        depth: depth\n    });\n};\n\n},{\"react/jsx-runtime\":\"16Crh\",\"react\":\"jhHkt\",\"web-utils\":\"8vvzC\",\"./global\":\"1IdeH\",\"./render\":\"8FwN3\",\"./script/eval-prop\":\"lo2Yr\",\"./script/eval-script\":\"4WwoJ\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"lo2Yr\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"w\", ()=>w);\nparcelHelpers.export(exports, \"viEvalProps\", ()=>viEvalProps);\nparcelHelpers.export(exports, \"updatePropScope\", ()=>updatePropScope);\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _cuid2 = require(\"@paralleldrive/cuid2\");\nvar _edGlobal = require(\"../../../ed/logic/ed-global\");\nvar _render = require(\"../render\");\nvar _arg = require(\"./arg\");\nvar _evalScript = require(\"./eval-script\");\nvar _extractNav = require(\"./extract-nav\");\nconst w = window;\nconst viEvalProps = (vi, meta, is_layout, passprop, depth, parent_key)=>{\n    if (meta.item.component?.id) {\n        let script = meta.item.script;\n        if (parent_key) {\n            if (!meta.item.script_keyed) meta.item.script_keyed = {};\n            if (!meta.item.script_keyed[parent_key]) meta.item.script_keyed[parent_key] = {};\n            script = meta.item.script_keyed[parent_key];\n        } else {\n            if (!meta.item.script) meta.item.script = {};\n            script = meta.item.script;\n        }\n        if (!script) return;\n        const exports = window.exports;\n        const arg = {\n            ...exports,\n            db: vi.site.db,\n            api: vi.site.api,\n            ...(0, _arg.viScriptArg)(vi),\n            ...passprop,\n            params\n        };\n        script.props = {};\n        let fails = new Set();\n        if (!!meta.item.component.props) {\n            const _props = {};\n            for (const [name, prop] of Object.entries(meta.item.component.props))try {\n                if (prop.meta?.type === \"content-element\") {\n                    let val = {\n                        _jsx: true,\n                        fn: (arg)=>{\n                            const id = prop.content?.id;\n                            if (id) {\n                                const m = is_layout ? vi.layout?.meta[id] : vi.meta[id];\n                                if (!m) return null;\n                                const instances = meta.instances;\n                                if (!arg.meta.item.originalId || !instances) return null;\n                                const instance = instances[meta.item.id];\n                                if (!instance) return null;\n                                const original_id = arg.meta.item.originalId;\n                                if (m.mitem && (prop.jsxCalledBy && (!prop.jsxCalledBy.includes(original_id) || prop.jsxCalledBy.length !== 2) || !prop.jsxCalledBy)) {\n                                    const mprop = meta.mitem?.get(\"component\")?.get(\"props\")?.get(name);\n                                    if (mprop) {\n                                        let mjby = mprop.get(\"jsxCalledBy\");\n                                        if (!mjby || typeof mjby !== \"object\") mprop.set(\"jsxCalledBy\", [\n                                            meta.item.id,\n                                            original_id\n                                        ]);\n                                        else if (Array.isArray(mjby) && (!mjby.includes(original_id) || mjby.length !== 2 || mjby[0] !== meta.item.id || mjby[1] !== original_id)) mprop.set(\"jsxCalledBy\", [\n                                            meta.item.id,\n                                            original_id\n                                        ]);\n                                    }\n                                }\n                                return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _render.ViRender), {\n                                    meta: m,\n                                    passprop: arg.passprop,\n                                    is_layout: is_layout,\n                                    depth: depth + 1\n                                });\n                            }\n                            return null;\n                        }\n                    };\n                    arg[name] = val;\n                    if (passprop) passprop[name] = val;\n                    continue;\n                }\n                if (prop.value) (0, _extractNav.extractNavigate)(vi, prop.value);\n                if (!prop.valueBuilt && prop.value && meta.mitem) {\n                    const mprop = meta.mitem?.get(\"component\")?.get(\"props\")?.get(name);\n                    if (mprop) {\n                        updatePropValueBuilt(mprop, prop.value);\n                        return;\n                    }\n                }\n                const js = prop.valueBuilt || \"\";\n                const src = (0, _evalScript.replaceWithObject)(js, (0, _evalScript.replacement)) || \"\";\n                const fn = new Function(...Object.keys(arg), `// [${meta.item.name}] ${name}: ${meta.item.id} \n  return ${src}\n    `);\n                script.props[name] = {\n                    value: src\n                };\n                let val = fn(...Object.values(arg));\n                if (typeof val === \"function\") {\n                    script.props[name].fn = val;\n                    val = (...args)=>{\n                        if (script) return script.props?.[name].fn(...args);\n                    };\n                }\n                arg[name] = val;\n                _props[name] = val;\n                if (passprop) passprop[name] = val;\n            } catch (e) {\n                fails.add(name);\n            }\n            if (location.pathname.startsWith(\"/ed/\") && (0, _edGlobal.active).item_id) {\n                if (meta.item.id === (0, _edGlobal.active).item_id) {\n                    (0, _edGlobal.active).scope = {};\n                    for (const [k, v] of Object.entries(passprop))(0, _edGlobal.active).scope[k] = v;\n                    (0, _edGlobal.active).scope.self_props = _props;\n                }\n            }\n        }\n    }\n};\nconst conf = {\n    timeout: null,\n    set: new WeakSet(),\n    map: {},\n    src: {}\n};\nconst updatePropValueBuilt = (mprop, src)=>{\n    if (!conf.set.has(mprop)) {\n        conf.set.add(mprop);\n        const id = (0, _cuid2.createId)();\n        conf.map[id] = {\n            mprop\n        };\n        conf.src[id] = src;\n    }\n    clearTimeout(conf.timeout);\n    conf.timeout = setTimeout(async ()=>{\n        const result = await _api.code_build(conf.src);\n        let doc = null;\n        for (const [k, v] of Object.entries(result)){\n            const mprop = conf.map[k].mprop;\n            if (!doc && mprop.doc) {\n                doc = mprop.doc;\n                break;\n            }\n        }\n        if (doc) {\n            doc.transact(()=>{\n                for (const [k, v] of Object.entries(result)){\n                    const mprop = conf.map[k].mprop;\n                    mprop.set(\"valueBuilt\", v);\n                }\n            });\n            conf.set = new WeakSet();\n            conf.map = {};\n            conf.src = {};\n        }\n    }, 300);\n};\nconst updatePropScope = (vi, meta, scope, parent_key)=>{\n    const script = parent_key ? meta.item.script_keyed?.[parent_key] : meta.item.script;\n    if (!script) return;\n    if (script.props) {\n        const scopes = {\n            ...scope,\n            api: vi.site.api,\n            db: vi.site.db\n        };\n        for (const [name, prop] of Object.entries(script.props))if (prop.fn) {\n            const fn = new Function(...Object.keys(scopes), `// [${meta.item.name}] ${name}: ${meta.item.id} \n  return ${prop.value || \"\"}\n    `);\n            prop.fn = fn(...Object.values(scopes));\n        }\n    }\n};\n\n},{\"react/jsx-runtime\":\"16Crh\",\"@paralleldrive/cuid2\":\"20RGP\",\"../../../ed/logic/ed-global\":\"6QDfO\",\"../render\":\"8FwN3\",\"./arg\":\"btInY\",\"./eval-script\":\"4WwoJ\",\"./extract-nav\":\"hXbWs\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"4WwoJ\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"viEvalScript\", ()=>viEvalScript);\nparcelHelpers.export(exports, \"replacement\", ()=>replacement);\nparcelHelpers.export(exports, \"replaceWithObject\", ()=>replaceWithObject);\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _react = require(\"react\");\nvar _general = require(\"../../../../utils/types/general\");\nvar _errorBox = require(\"../../utils/error-box\");\nvar _parts = require(\"../parts\");\nvar _arg = require(\"./arg\");\nvar _evalProp = require(\"./eval-prop\");\nvar _extractNav = require(\"./extract-nav\");\nvar _local = require(\"./local\");\nvar _passprop = require(\"./passprop\");\nconst viEvalScript = (vi, meta, is_layout, passprop, depth, parent_key)=>{\n    const parts = (0, _parts.viParts)(vi, meta, is_layout, passprop, depth);\n    if (vi.visit) vi.visit(meta, parts);\n    if (!meta.script) meta.script = {\n        scope: passprop,\n        result: null,\n        Local: (0, _local.createViLocal)(vi, is_layout, meta),\n        PassProp: (0, _passprop.createViPassProp)(vi, is_layout, meta, passprop)\n    };\n    else meta.script.scope = passprop;\n    const script = meta.script;\n    const exports = window.exports;\n    const arg = {\n        useEffect: (0, _react.useEffect),\n        children: parts.props.children,\n        props: parts.props,\n        Local: script?.Local,\n        db: vi.site.db,\n        api: vi.site.api,\n        PassProp: script?.PassProp,\n        ErrorBox: (0, _errorBox.ErrorBox),\n        newElement: ()=>{},\n        render: (jsx)=>{\n            let result = jsx;\n            if (/*#__PURE__*/ (0, _react.isValidElement)(jsx) && jsx.props.children) {\n                const override_children = (el)=>{\n                    let should_replace = false;\n                    const new_childs = [];\n                    if (/*#__PURE__*/ (0, _react.isValidElement)(el)) {\n                        if (el.type === meta.script?.PassProp) return {\n                            should_replace: true,\n                            el: {\n                                ...el,\n                                props: {\n                                    ...el.props,\n                                    internal_key: el.key\n                                }\n                            }\n                        };\n                        if (Array.isArray(el.props?.children)) for (const child of el.props?.children){\n                            if (Array.isArray(child)) {\n                                const sub_child = [];\n                                let sub_replace = false;\n                                for (const c of child){\n                                    let nc = override_children(c);\n                                    if (nc.should_replace) {\n                                        sub_child.push(nc.el);\n                                        sub_replace = true;\n                                    } else sub_child.push(c);\n                                }\n                                if (sub_replace) {\n                                    should_replace = true;\n                                    new_childs.push(sub_child);\n                                } else new_childs.push(child);\n                            } else if (typeof child === \"object\") {\n                                if (child.type === meta.script?.PassProp) {\n                                    should_replace = true;\n                                    new_childs.push({\n                                        ...child,\n                                        props: {\n                                            ...child.props,\n                                            internal_key: child.props.key\n                                        }\n                                    });\n                                }\n                            } else new_childs.push(child);\n                        }\n                    }\n                    return {\n                        should_replace,\n                        el: {\n                            ...el,\n                            props: {\n                                ...el.props,\n                                children: new_childs\n                            }\n                        }\n                    };\n                };\n                const res = override_children(jsx);\n                if (res.should_replace) result = res.el;\n            }\n            if (script) script.result = /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _react.Suspense), {\n                children: result\n            });\n        },\n        params,\n        ...(0, _arg.viScriptArg)(vi),\n        ...exports,\n        ...passprop,\n        _meta: vi.meta,\n        _item: meta.item,\n        _syncm: typeof syncronize !== \"undefined\" ? syncronize : undefined\n    };\n    if (typeof passprop === \"object\") {\n        for (const [k, v] of Object.entries(passprop))if (typeof v === \"object\" && v && v._jsx) {\n            const jprop = v;\n            arg[k] = /*#__PURE__*/ (0, _jsxRuntime.jsx)(JsxProp, {\n                fn: jprop.fn,\n                passprop: {\n                    ...passprop\n                },\n                meta: meta\n            });\n        }\n    }\n    if (!(0, _general.w).isEditor && meta.item.adv?.js) (0, _extractNav.extractNavigate)(vi, meta.item.adv.js);\n    const js = meta.item.adv?.jsBuilt || \"\";\n    const src = replaceWithObject(js, replacement) || \"\";\n    try {\n        const fn = new Function(...Object.keys(arg), \"___js\", `// ${meta.item.name}: ${meta.item.id} \ntry {\n${src}\n} catch(e) {\n  console.warn(\"Error at item ${meta.item.name}:\", ___js);\n  console.error(e);\n}\n  `);\n        fn(...Object.values(arg), meta.item.adv?.js);\n    } catch (e) {\n        console.warn(`Error at item ${meta.item.name}:`, meta.item.adv?.js);\n        console.error(e);\n    }\n    (0, _evalProp.updatePropScope)(vi, meta, passprop, parent_key);\n};\nconst JsxProp = ({ fn, meta, passprop })=>{\n    return fn({\n        passprop,\n        meta\n    });\n};\nconst replacement = {\n    \"stroke-width\": \"strokeWidth\",\n    \"fill-rule\": \"fillRule\",\n    \"clip-rule\": \"clipRule\",\n    \"stroke-linejoin\": \"strokeLinejoin\",\n    \"stroke-linecap\": \"strokeLinecap\",\n    \"clip-path\": \"clipPath\"\n};\nconst replaceWithObject = (tpl, data)=>{\n    let res = tpl;\n    for (const [k, v] of Object.entries(data))res = res.replaceAll(k, v);\n    return res;\n};\n\n},{\"react/jsx-runtime\":\"16Crh\",\"react\":\"jhHkt\",\"../../../../utils/types/general\":\"fBAQm\",\"../../utils/error-box\":\"4gof8\",\"../parts\":\"fUkcA\",\"./arg\":\"btInY\",\"./eval-prop\":\"lo2Yr\",\"./extract-nav\":\"hXbWs\",\"./local\":\"gyKJq\",\"./passprop\":\"8v4MD\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"gyKJq\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"editorLocalValue\", ()=>editorLocalValue);\nparcelHelpers.export(exports, \"createViLocal\", ()=>createViLocal);\nvar _react = require(\"react\");\nvar _evalProp = require(\"./eval-prop\");\nvar _passprop = require(\"./passprop\");\nconst editorLocalValue = {};\nconst createViLocal = (vi, is_layout, meta)=>{\n    return (arg)=>{\n        const isEditor = [\n            \"localhost\",\n            \"prasi.avolut.com\"\n        ].includes(location.hostname) && location.pathname.startsWith(\"/ed/\");\n        let id = meta.item.id;\n        const { children, parent_key } = arg;\n        const init_local_effect = vi.script?.init_local_effect;\n        const metas = is_layout ? vi.layout?.meta : vi.meta;\n        const ref = (0, _react.useRef)(editorLocalValue[id] ? editorLocalValue[id] : arg.value);\n        const [_, set] = (0, _react.useState)({});\n        const local = ref.current;\n        local.render = ()=>{\n            if (window.prasiContext.render) window.prasiContext.render();\n            else set({});\n        };\n        (0, _evalProp.updatePropScope)(vi, meta, meta.script?.scope, parent_key);\n        if (arg.hook) arg.hook(local);\n        (0, _react.useEffect)(()=>{\n            if (meta.parent?.instance_id && metas) {\n                const parent_meta = metas[meta.parent?.instance_id];\n                if (parent_meta && parent_meta.instances) {\n                    for (const [k, v] of Object.entries(parent_meta.instances[meta.parent.instance_id]))if (v === meta.item.id) {\n                        id = k;\n                        break;\n                    }\n                }\n            }\n            let should_run = !init_local_effect[id];\n            if (should_run) {\n                if (typeof init_local_effect === \"object\") init_local_effect[id] = true;\n                const fn = async ()=>{\n                    if (arg.effect) {\n                        await arg.effect(local);\n                        if (isEditor) editorLocalValue[id] = local;\n                    }\n                };\n                fn();\n            }\n            return ()=>{};\n        }, [\n            ...arg.deps || [],\n            location.pathname\n        ]);\n        (0, _react.useEffect)(()=>{\n            if (isEditor) {\n                if (editorLocalValue[id] === null) {\n                    const fn = async ()=>{\n                        if (arg.effect) {\n                            await arg.effect(local);\n                            if (isEditor) editorLocalValue[id] = local;\n                        }\n                    };\n                    fn();\n                }\n            }\n        }, [\n            editorLocalValue[id]\n        ]);\n        return (0, _passprop.modifyChild)(children, {\n            ...meta.script?.scope,\n            [arg.name]: local\n        });\n    };\n};\n\n},{\"react\":\"jhHkt\",\"./eval-prop\":\"lo2Yr\",\"./passprop\":\"8v4MD\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"8v4MD\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"createViPassProp\", ()=>createViPassProp);\nparcelHelpers.export(exports, \"modifyChild\", ()=>modifyChild);\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _lodashGet = require(\"lodash.get\");\nvar _lodashGetDefault = parcelHelpers.interopDefault(_lodashGet);\nvar _react = require(\"react\");\nvar _render = require(\"../render\");\nconst createViPassProp = (vi, is_layout, meta, passprop)=>{\n    return (arg)=>{\n        const [_, render] = (0, _react.useState)({});\n        const internal_key = arg.internal_key;\n        if (!meta.item.script) meta.item.script = {};\n        let script = meta.item.script;\n        if (internal_key) {\n            if (!meta.item.script_keyed) meta.item.script_keyed = {};\n            if (!meta.item.script_keyed[internal_key]) meta.item.script_keyed[internal_key] = {};\n            script = meta.item.script_keyed[internal_key];\n        }\n        if (!script.passprop) script.passprop = {};\n        const script_pass = {};\n        if (script.passprop) {\n            let is_changed = false;\n            for (const [k, v] of Object.entries(arg))if (![\n                \"children\",\n                \"key\"\n            ].includes(k)) {\n                is_changed = true;\n                script_pass[k] = v;\n                script.passprop[k] = {\n                    end: 0,\n                    start: 0,\n                    value: v\n                };\n            }\n        }\n        const _pass = {\n            ...passprop,\n            ...script_pass\n        };\n        if (!Array.isArray(arg.children) && /*#__PURE__*/ (0, _react.isValidElement)(arg.children) && typeof arg.children === \"object\") {\n            const children = (0, _lodashGetDefault.default)(arg.children, \"props.meta.item.component.props.child.content.childs\");\n            if (Array.isArray(children)) {\n                let is_meta = true;\n                for (const c of children)if (!(!/*#__PURE__*/ (0, _react.isValidElement)(c) && typeof c === \"object\")) is_meta = false;\n                if (is_meta) return children.map((item)=>{\n                    let cmeta = vi.meta[item.id];\n                    if (!cmeta) {\n                        vi.meta[item.id] = {\n                            item\n                        };\n                        cmeta = vi.meta[item.id];\n                    }\n                    if (cmeta) {\n                        if (Object.keys(cmeta.item).length <= 3) {\n                            if (cmeta.mitem) {\n                                const citem = {\n                                    ...cmeta.item\n                                };\n                                const ref_item = cmeta.mitem.toJSON();\n                                cmeta.item = {\n                                    ...ref_item,\n                                    ...citem\n                                };\n                            }\n                        }\n                        return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _render.ViRender), {\n                            is_layout: is_layout,\n                            meta: cmeta,\n                            passprop: _pass,\n                            parent_key: arg.internal_key\n                        }, item.id);\n                    }\n                    return null;\n                });\n            }\n        }\n        if (!Array.isArray(arg.children) && !/*#__PURE__*/ (0, _react.isValidElement)(arg.children) && typeof arg.children === \"object\") {\n            const child_id = arg.children.id;\n            if (child_id) {\n                let meta = vi.meta[child_id];\n                if (!meta) {\n                    vi.meta[child_id] = {\n                        item: arg.children\n                    };\n                    meta = vi.meta[child_id];\n                    const comp_id = meta.item.component?.id;\n                    if (comp_id) vi.comp.load(comp_id).then((comp)=>{\n                        if (comp) {\n                            for (const [k, v] of Object.entries(comp)){\n                                const item = meta.item;\n                                if (!item[k]) item[k] = v;\n                            }\n                            const props = meta.item.component?.props;\n                            for (const [k, v] of Object.entries(comp.component?.props || {}))if (!props[k]) props[k] = v;\n                            render({});\n                        }\n                    });\n                }\n                return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _render.ViRender), {\n                    is_layout: is_layout,\n                    meta: meta,\n                    passprop: _pass,\n                    parent_key: arg.internal_key\n                });\n            }\n        }\n        const result = modifyChild(arg, _pass, internal_key ? {\n            parent_key: internal_key\n        } : undefined);\n        return result;\n    };\n};\nconst modifyChild = (arg, passprop, add_props)=>{\n    let prop = {};\n    if (Array.isArray(arg)) prop.children = arg;\n    else prop = arg;\n    if (Array.isArray(prop.children)) {\n        const childs = [];\n        for (const child of prop.children)childs.push(modify(child, prop, passprop, add_props));\n        return childs;\n    }\n    return modify(prop.children, prop, passprop, add_props);\n};\nconst modify = (el, arg, passprop, add_props)=>{\n    if (/*#__PURE__*/ (0, _react.isValidElement)(el)) {\n        const passarg = {\n            ...arg\n        };\n        delete passarg.children;\n        return {\n            ...el,\n            props: {\n                ...el.props,\n                ...add_props,\n                passprop: {\n                    ...passprop,\n                    ...passarg\n                }\n            }\n        };\n    }\n    return el;\n};\n\n},{\"react/jsx-runtime\":\"16Crh\",\"lodash.get\":\"hHAu7\",\"react\":\"jhHkt\",\"../render\":\"8FwN3\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"6ey3Y\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"ViRoot\", ()=>ViRoot);\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _webUtils = require(\"web-utils\");\nvar _loading = require(\"../../utils/ui/loading\");\nvar _global = require(\"./render/global\");\nvar _render = require(\"./render/render\");\nvar _errorBox = require(\"./utils/error-box\");\nconst ViRoot = ({})=>{\n    const vi = (0, _webUtils.useGlobal)((0, _global.ViGlobal), \"VI\");\n    const local = (0, _webUtils.useLocal)({\n        tick: Date.now()\n    });\n    vi.tick = local.tick;\n    if (vi.status !== \"ready\") return /*#__PURE__*/ (0, _jsxRuntime.jsx)(\"div\", {\n        className: \"flex flex-1 flex-col relative\",\n        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _loading.Loading), {\n            backdrop: false\n        })\n    });\n    const is_layout = !!vi.layout?.entry && vi.layout.entry.length > 0;\n    let entry = vi.entry;\n    if (is_layout && vi.layout?.entry) entry = vi.layout?.entry;\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(\"div\", {\n        className: \"flex flex-1 flex-col relative\",\n        children: Array.isArray(entry) && entry.map((id)=>{\n            const meta = is_layout ? vi.layout?.meta[id] : vi.meta[id];\n            if (meta) {\n                if (Element) return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _errorBox.ErrorBox), {\n                    children: /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _render.ViRender), {\n                        meta: meta,\n                        is_layout: is_layout,\n                        depth: 0\n                    })\n                }, meta.item.id);\n            }\n            return null;\n        })\n    });\n};\n\n},{\"react/jsx-runtime\":\"16Crh\",\"web-utils\":\"8vvzC\",\"../../utils/ui/loading\":\"loFlS\",\"./render/global\":\"1IdeH\",\"./render/render\":\"8FwN3\",\"./utils/error-box\":\"4gof8\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"3HiP9\":[function(require,module,exports) {\n/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.37\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License */ /*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */ /////////////////////////////////////////////////////////////////////////////////\n(function(window1, undefined) {\n    \"use strict\";\n    //////////////\n    // Constants\n    /////////////\n    var LIBVERSION = \"1.0.37\", EMPTY = \"\", UNKNOWN = \"?\", FUNC_TYPE = \"function\", UNDEF_TYPE = \"undefined\", OBJ_TYPE = \"object\", STR_TYPE = \"string\", MAJOR = \"major\", MODEL = \"model\", NAME = \"name\", TYPE = \"type\", VENDOR = \"vendor\", VERSION = \"version\", ARCHITECTURE = \"architecture\", CONSOLE = \"console\", MOBILE = \"mobile\", TABLET = \"tablet\", SMARTTV = \"smarttv\", WEARABLE = \"wearable\", EMBEDDED = \"embedded\", UA_MAX_LENGTH = 500;\n    var AMAZON = \"Amazon\", APPLE = \"Apple\", ASUS = \"ASUS\", BLACKBERRY = \"BlackBerry\", BROWSER = \"Browser\", CHROME = \"Chrome\", EDGE = \"Edge\", FIREFOX = \"Firefox\", GOOGLE = \"Google\", HUAWEI = \"Huawei\", LG = \"LG\", MICROSOFT = \"Microsoft\", MOTOROLA = \"Motorola\", OPERA = \"Opera\", SAMSUNG = \"Samsung\", SHARP = \"Sharp\", SONY = \"Sony\", XIAOMI = \"Xiaomi\", ZEBRA = \"Zebra\", FACEBOOK = \"Facebook\", CHROMIUM_OS = \"Chromium OS\", MAC_OS = \"Mac OS\";\n    ///////////\n    // Helper\n    //////////\n    var extend = function(regexes, extensions) {\n        var mergedRegexes = {};\n        for(var i in regexes)if (extensions[i] && extensions[i].length % 2 === 0) mergedRegexes[i] = extensions[i].concat(regexes[i]);\n        else mergedRegexes[i] = regexes[i];\n        return mergedRegexes;\n    }, enumerize = function(arr) {\n        var enums = {};\n        for(var i = 0; i < arr.length; i++)enums[arr[i].toUpperCase()] = arr[i];\n        return enums;\n    }, has = function(str1, str2) {\n        return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n    }, lowerize = function(str) {\n        return str.toLowerCase();\n    }, majorize = function(version) {\n        return typeof version === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split(\".\")[0] : undefined;\n    }, trim = function(str, len) {\n        if (typeof str === STR_TYPE) {\n            str = str.replace(/^\\s\\s*/, EMPTY);\n            return typeof len === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n        }\n    };\n    ///////////////\n    // Map helper\n    //////////////\n    var rgxMapper = function(ua, arrays) {\n        var i = 0, j, k, p, q, matches, match;\n        // loop through all regexes maps\n        while(i < arrays.length && !matches){\n            var regex = arrays[i], props = arrays[i + 1]; // odd sequence (1,3,5,..)\n            j = k = 0;\n            // try matching uastring with regexes\n            while(j < regex.length && !matches){\n                if (!regex[j]) break;\n                matches = regex[j++].exec(ua);\n                if (!!matches) for(p = 0; p < props.length; p++){\n                    match = matches[++k];\n                    q = props[p];\n                    // check if given property is actually array\n                    if (typeof q === OBJ_TYPE && q.length > 0) {\n                        if (q.length === 2) {\n                            if (typeof q[1] == FUNC_TYPE) // assign modified match\n                            this[q[0]] = q[1].call(this, match);\n                            else // assign given value, ignore regex match\n                            this[q[0]] = q[1];\n                        } else if (q.length === 3) {\n                            // check whether function or regex\n                            if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) // call function (usually string mapper)\n                            this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                            else // sanitize match using given regex\n                            this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                        } else if (q.length === 4) this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                    } else this[q] = match ? match : undefined;\n                }\n            }\n            i += 2;\n        }\n    }, strMapper = function(str, map) {\n        for(var i in map){\n            // check if current value is array\n            if (typeof map[i] === OBJ_TYPE && map[i].length > 0) for(var j = 0; j < map[i].length; j++){\n                if (has(map[i][j], str)) return i === UNKNOWN ? undefined : i;\n            }\n            else if (has(map[i], str)) return i === UNKNOWN ? undefined : i;\n        }\n        return str;\n    };\n    ///////////////\n    // String map\n    //////////////\n    // Safari < 3.0\n    var oldSafariMap = {\n        \"1.0\": \"/8\",\n        \"1.2\": \"/1\",\n        \"1.3\": \"/3\",\n        \"2.0\": \"/412\",\n        \"2.0.2\": \"/416\",\n        \"2.0.3\": \"/417\",\n        \"2.0.4\": \"/419\",\n        \"?\": \"/\"\n    }, windowsVersionMap = {\n        \"ME\": \"4.90\",\n        \"NT 3.11\": \"NT3.51\",\n        \"NT 4.0\": \"NT4.0\",\n        \"2000\": \"NT 5.0\",\n        \"XP\": [\n            \"NT 5.1\",\n            \"NT 5.2\"\n        ],\n        \"Vista\": \"NT 6.0\",\n        \"7\": \"NT 6.1\",\n        \"8\": \"NT 6.2\",\n        \"8.1\": \"NT 6.3\",\n        \"10\": [\n            \"NT 6.4\",\n            \"NT 10.0\"\n        ],\n        \"RT\": \"ARM\"\n    };\n    //////////////\n    // Regex map\n    /////////////\n    var regexes = {\n        browser: [\n            [\n                /\\b(?:crmo|crios)\\/([\\w\\.]+)/i // Chrome for Android/iOS\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Chrome\"\n                ]\n            ],\n            [\n                /edg(?:e|ios|a)?\\/([\\w\\.]+)/i // Microsoft Edge\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Edge\"\n                ]\n            ],\n            [\n                // Presto based\n                /(opera mini)\\/([-\\w\\.]+)/i,\n                /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,\n                /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i // Opera\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /opios[\\/ ]+([\\w\\.]+)/i // Opera mini on iphone >= 8.0\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    OPERA + \" Mini\"\n                ]\n            ],\n            [\n                /\\bopr\\/([\\w\\.]+)/i // Opera Webkit\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    OPERA\n                ]\n            ],\n            [\n                // Mixed\n                /\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i // Baidu\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Baidu\"\n                ]\n            ],\n            [\n                /(kindle)\\/([\\w\\.]+)/i,\n                /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,\n                // Trident based\n                /(avant|iemobile|slim)\\s?(?:browser)?[\\/ ]?([\\w\\.]*)/i,\n                /(?:ms|\\()(ie) ([\\w\\.]+)/i,\n                // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n                /(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,\n                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n                /(heytap|ovi)browser\\/([\\d\\.]+)/i,\n                /(weibo)__([\\d\\.]+)/i // Weibo\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i // UCBrowser\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"UC\" + BROWSER\n                ]\n            ],\n            [\n                /microm.+\\bqbcore\\/([\\w\\.]+)/i,\n                /\\bqbcore\\/([\\w\\.]+).+microm/i,\n                /micromessenger\\/([\\w\\.]+)/i // WeChat\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"WeChat\"\n                ]\n            ],\n            [\n                /konqueror\\/([\\w\\.]+)/i // Konqueror\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Konqueror\"\n                ]\n            ],\n            [\n                /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i // IE11\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"IE\"\n                ]\n            ],\n            [\n                /ya(?:search)?browser\\/([\\w\\.]+)/i // Yandex\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Yandex\"\n                ]\n            ],\n            [\n                /slbrowser\\/([\\w\\.]+)/i // Smart Lenovo Browser\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Smart Lenovo \" + BROWSER\n                ]\n            ],\n            [\n                /(avast|avg)\\/([\\w\\.]+)/i // Avast/AVG Secure Browser\n            ],\n            [\n                [\n                    NAME,\n                    /(.+)/,\n                    \"$1 Secure \" + BROWSER\n                ],\n                VERSION\n            ],\n            [\n                /\\bfocus\\/([\\w\\.]+)/i // Firefox Focus\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    FIREFOX + \" Focus\"\n                ]\n            ],\n            [\n                /\\bopt\\/([\\w\\.]+)/i // Opera Touch\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    OPERA + \" Touch\"\n                ]\n            ],\n            [\n                /coc_coc\\w+\\/([\\w\\.]+)/i // Coc Coc Browser\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Coc Coc\"\n                ]\n            ],\n            [\n                /dolfin\\/([\\w\\.]+)/i // Dolphin\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Dolphin\"\n                ]\n            ],\n            [\n                /coast\\/([\\w\\.]+)/i // Opera Coast\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    OPERA + \" Coast\"\n                ]\n            ],\n            [\n                /miuibrowser\\/([\\w\\.]+)/i // MIUI Browser\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"MIUI \" + BROWSER\n                ]\n            ],\n            [\n                /fxios\\/([-\\w\\.]+)/i // Firefox for iOS\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    FIREFOX\n                ]\n            ],\n            [\n                /\\bqihu|(qi?ho?o?|360)browser/i // 360\n            ],\n            [\n                [\n                    NAME,\n                    \"360 \" + BROWSER\n                ]\n            ],\n            [\n                /(oculus|sailfish|huawei|vivo)browser\\/([\\w\\.]+)/i\n            ],\n            [\n                [\n                    NAME,\n                    /(.+)/,\n                    \"$1 \" + BROWSER\n                ],\n                VERSION\n            ],\n            [\n                /samsungbrowser\\/([\\w\\.]+)/i // Samsung Internet\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    SAMSUNG + \" Internet\"\n                ]\n            ],\n            [\n                /(comodo_dragon)\\/([\\w\\.]+)/i // Comodo Dragon\n            ],\n            [\n                [\n                    NAME,\n                    /_/g,\n                    \" \"\n                ],\n                VERSION\n            ],\n            [\n                /metasr[\\/ ]?([\\d\\.]+)/i // Sogou Explorer\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Sogou Explorer\"\n                ]\n            ],\n            [\n                /(sogou)mo\\w+\\/([\\d\\.]+)/i // Sogou Mobile\n            ],\n            [\n                [\n                    NAME,\n                    \"Sogou Mobile\"\n                ],\n                VERSION\n            ],\n            [\n                /(electron)\\/([\\w\\.]+) safari/i,\n                /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,\n                /m?(qqbrowser|2345Explorer)[\\/ ]?([\\w\\.]+)/i // QQBrowser/2345 Browser\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /(lbbrowser)/i,\n                /\\[(linkedin)app\\]/i // LinkedIn App for iOS & Android\n            ],\n            [\n                NAME\n            ],\n            [\n                // WebView\n                /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i // Facebook App for iOS & Android\n            ],\n            [\n                [\n                    NAME,\n                    FACEBOOK\n                ],\n                VERSION\n            ],\n            [\n                /(Klarna)\\/([\\w\\.]+)/i,\n                /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,\n                /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,\n                /safari (line)\\/([\\w\\.]+)/i,\n                /\\b(line)\\/([\\w\\.]+)\\/iab/i,\n                /(alipay)client\\/([\\w\\.]+)/i,\n                /(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i // Chromium/Instagram/Snapchat\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /\\bgsa\\/([\\w\\.]+) .*safari\\//i // Google Search Appliance on iOS\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"GSA\"\n                ]\n            ],\n            [\n                /musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i // TikTok\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"TikTok\"\n                ]\n            ],\n            [\n                /headlesschrome(?:\\/([\\w\\.]+)| )/i // Chrome Headless\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    CHROME + \" Headless\"\n                ]\n            ],\n            [\n                / wv\\).+(chrome)\\/([\\w\\.]+)/i // Chrome WebView\n            ],\n            [\n                [\n                    NAME,\n                    CHROME + \" WebView\"\n                ],\n                VERSION\n            ],\n            [\n                /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i // Android Browser\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Android \" + BROWSER\n                ]\n            ],\n            [\n                /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i // Mobile Safari\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Mobile Safari\"\n                ]\n            ],\n            [\n                /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i // Safari & Safari Mobile\n            ],\n            [\n                VERSION,\n                NAME\n            ],\n            [\n                /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i // Safari < 3.0\n            ],\n            [\n                NAME,\n                [\n                    VERSION,\n                    strMapper,\n                    oldSafariMap\n                ]\n            ],\n            [\n                /(webkit|khtml)\\/([\\w\\.]+)/i\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                // Gecko based\n                /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i // Netscape\n            ],\n            [\n                [\n                    NAME,\n                    \"Netscape\"\n                ],\n                VERSION\n            ],\n            [\n                /mobile vr; rv:([\\w\\.]+)\\).+firefox/i // Firefox Reality\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    FIREFOX + \" Reality\"\n                ]\n            ],\n            [\n                /ekiohf.+(flow)\\/([\\w\\.]+)/i,\n                /(swiftfox)/i,\n                /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,\n                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror/Klar\n                /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n                /(firefox)\\/([\\w\\.]+)/i,\n                /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,\n                // Other\n                /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir/Obigo/Mosaic/Go/ICE/UP.Browser\n                /(links) \\(([\\w\\.]+)/i,\n                /panasonic;(viera)/i // Panasonic Viera\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /(cobalt)\\/([\\w\\.]+)/i // Cobalt\n            ],\n            [\n                NAME,\n                [\n                    VERSION,\n                    /master.|lts./,\n                    \"\"\n                ]\n            ]\n        ],\n        cpu: [\n            [\n                /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i // AMD64 (x64)\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    \"amd64\"\n                ]\n            ],\n            [\n                /(ia32(?=;))/i // IA32 (quicktime)\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    lowerize\n                ]\n            ],\n            [\n                /((?:i[346]|x)86)[;\\)]/i // IA32 (x86)\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    \"ia32\"\n                ]\n            ],\n            [\n                /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i // ARM64\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    \"arm64\"\n                ]\n            ],\n            [\n                /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i // ARMHF\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    \"armhf\"\n                ]\n            ],\n            [\n                // PocketPC mistakenly identified as PowerPC\n                /windows (ce|mobile); ppc;/i\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    \"arm\"\n                ]\n            ],\n            [\n                /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i // PowerPC\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    /ower/,\n                    EMPTY,\n                    lowerize\n                ]\n            ],\n            [\n                /(sun4\\w)[;\\)]/i // SPARC\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    \"sparc\"\n                ]\n            ],\n            [\n                /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n            ],\n            [\n                [\n                    ARCHITECTURE,\n                    lowerize\n                ]\n            ]\n        ],\n        device: [\n            [\n                //////////////////////////\n                // MOBILES & TABLETS\n                /////////////////////////\n                // Samsung\n                /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    SAMSUNG\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b((?:s[cgp]h|gt|sm)-\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,\n                /samsung[- ]([-\\w]+)/i,\n                /sec-(sgh\\w+)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    SAMSUNG\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Apple\n                /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i // iPod/iPhone\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    APPLE\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\((ipad);[-\\w\\),; ]+apple/i,\n                /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n                /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    APPLE\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /(macintosh);/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    APPLE\n                ]\n            ],\n            [\n                // Sharp\n                /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    SHARP\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Huawei\n                /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    HUAWEI\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /(?:huawei|honor)([-\\w ]+)[;\\)]/i,\n                /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    HUAWEI\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Xiaomi\n                /\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,\n                /\\b; (\\w+) build\\/hm\\1/i,\n                /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,\n                /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,\n                /oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,\n                /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i // Xiaomi Mi\n            ],\n            [\n                [\n                    MODEL,\n                    /_/g,\n                    \" \"\n                ],\n                [\n                    VENDOR,\n                    XIAOMI\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,\n                /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i // Mi Pad tablets\n            ],\n            [\n                [\n                    MODEL,\n                    /_/g,\n                    \" \"\n                ],\n                [\n                    VENDOR,\n                    XIAOMI\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                // OPPO\n                /; (\\w+) bui.+ oppo/i,\n                /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"OPPO\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Vivo\n                /vivo (\\w+)(?: bui|\\))/i,\n                /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Vivo\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Realme\n                /\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Realme\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Motorola\n                /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n                /\\bmot(?:orola)?[- ](\\w*)/i,\n                /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    MOTOROLA\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    MOTOROLA\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                // LG\n                /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    LG\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n                /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n                /\\blg-?([\\d\\w]+) bui/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    LG\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Lenovo\n                /(ideatab[-\\w ]+)/i,\n                /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Lenovo\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                // Nokia\n                /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n                /nokia[-_ ]?([-\\w\\.]*)/i\n            ],\n            [\n                [\n                    MODEL,\n                    /_/g,\n                    \" \"\n                ],\n                [\n                    VENDOR,\n                    \"Nokia\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Google\n                /(pixel c)\\b/i // Google Pixel C\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    GOOGLE\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i // Google Pixel\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    GOOGLE\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Sony\n                /droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    SONY\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /sony tablet [ps]/i,\n                /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ],\n            [\n                [\n                    MODEL,\n                    \"Xperia Tablet\"\n                ],\n                [\n                    VENDOR,\n                    SONY\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                // OnePlus\n                / (kb2005|in20[12]5|be20[12][59])\\b/i,\n                /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"OnePlus\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Amazon\n                /(alexa)webm/i,\n                /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\\))/i,\n                /(kf[a-z]+)( bui|\\)).+silk\\//i // Kindle Fire HD\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    AMAZON\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i // Fire Phone\n            ],\n            [\n                [\n                    MODEL,\n                    /(.+)/g,\n                    \"Fire Phone $1\"\n                ],\n                [\n                    VENDOR,\n                    AMAZON\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // BlackBerry\n                /(playbook);[-\\w\\),; ]+(rim)/i // BlackBerry PlayBook\n            ],\n            [\n                MODEL,\n                VENDOR,\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n                /\\(bb10; (\\w+)/i // BlackBerry 10\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    BLACKBERRY\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Asus\n                /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    ASUS\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    ASUS\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // HTC\n                /(nexus 9)/i // HTC Nexus 9\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"HTC\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,\n                // ZTE\n                /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n                /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ],\n            [\n                VENDOR,\n                [\n                    MODEL,\n                    /_/g,\n                    \" \"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Acer\n                /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Acer\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                // Meizu\n                /droid.+; (m[1-5] note) bui/i,\n                /\\bmz-([-\\w]{2,})/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Meizu\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // Ulefone\n                /; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Ulefone\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                // MIXED\n                /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\\w]*)/i,\n                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n                /(hp) ([\\w ]+\\w)/i,\n                /(asus)-?(\\w+)/i,\n                /(microsoft); (lumia[\\w ]+)/i,\n                /(lenovo)[-_ ]?([-\\w]+)/i,\n                /(jolla)/i,\n                /(oppo) ?([\\w ]+) bui/i // OPPO\n            ],\n            [\n                VENDOR,\n                MODEL,\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /(kobo)\\s(ereader|touch)/i,\n                /(archos) (gamepad2?)/i,\n                /(hp).+(touchpad(?!.+tablet)|tablet)/i,\n                /(kindle)\\/([\\w\\.]+)/i,\n                /(nook)[\\w ]+build\\/(\\w+)/i,\n                /(dell) (strea[kpr\\d ]*[\\dko])/i,\n                /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,\n                /(trinity)[- ]*(t\\d{3}) bui/i,\n                /(gigaset)[- ]+(q\\w{1,9}) bui/i,\n                /(vodafone) ([\\w ]+)(?:\\)| bui)/i // Vodafone\n            ],\n            [\n                VENDOR,\n                MODEL,\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /(surface duo)/i // Surface Duo\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    MICROSOFT\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i // Fairphone\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Fairphone\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /(u304aa)/i // AT&T\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"AT&T\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\bsie-(\\w*)/i // Siemens\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Siemens\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\b(rct\\w+) b/i // RCA Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"RCA\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(venue[\\d ]{2,7}) b/i // Dell Venue Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Dell\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(q(?:mv|ta)\\w+) b/i // Verizon Tablet\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Verizon\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i // Barnes & Noble Tablet\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Barnes & Noble\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(tm\\d{3}\\w+) b/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"NuVision\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(k88) b/i // ZTE K Series Tablet\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"ZTE\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(nx\\d{3}j) b/i // ZTE Nubia\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"ZTE\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\b(gen\\d{3}) b.+49h/i // Swiss GEN Mobile\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Swiss\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\b(zur\\d{3}) b/i // Swiss ZUR Tablet\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Swiss\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b((zeki)?tb.*\\b) b/i // Zeki Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Zeki\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b([yr]\\d{2}) b/i,\n                /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i // Dragon Touch Tablet\n            ],\n            [\n                [\n                    VENDOR,\n                    \"Dragon Touch\"\n                ],\n                MODEL,\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(ns-?\\w{0,9}) b/i // Insignia Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Insignia\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b((nxa|next)-?\\w{0,9}) b/i // NextBook Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"NextBook\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i // Voice Xtreme Phones\n            ],\n            [\n                [\n                    VENDOR,\n                    \"Voice\"\n                ],\n                MODEL,\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\b(lvtel\\-)?(v1[12]) b/i // LvTel Phones\n            ],\n            [\n                [\n                    VENDOR,\n                    \"LvTel\"\n                ],\n                MODEL,\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\b(ph-1) /i // Essential PH-1\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Essential\"\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /\\b(v(100md|700na|7011|917g).*\\b) b/i // Envizen Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Envizen\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b(trio[-\\w\\. ]+) b/i // MachSpeed Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"MachSpeed\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\btu_(1491) b/i // Rotor Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Rotor\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /(shield[\\w ]+) b/i // Nvidia Shield Tablets\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Nvidia\"\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /(sprint) (\\w+)/i // Sprint Phones\n            ],\n            [\n                VENDOR,\n                MODEL,\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /(kin\\.[onetw]{3})/i // Microsoft Kin\n            ],\n            [\n                [\n                    MODEL,\n                    /\\./g,\n                    \" \"\n                ],\n                [\n                    VENDOR,\n                    MICROSOFT\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i // Zebra\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    ZEBRA\n                ],\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    ZEBRA\n                ],\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                ///////////////////\n                // SMARTTVS\n                ///////////////////\n                /smart-tv.+(samsung)/i // Samsung\n            ],\n            [\n                VENDOR,\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /hbbtv.+maple;(\\d+)/i\n            ],\n            [\n                [\n                    MODEL,\n                    /^/,\n                    \"SmartTV\"\n                ],\n                [\n                    VENDOR,\n                    SAMSUNG\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i // LG SmartTV\n            ],\n            [\n                [\n                    VENDOR,\n                    LG\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /(apple) ?tv/i // Apple TV\n            ],\n            [\n                VENDOR,\n                [\n                    MODEL,\n                    APPLE + \" TV\"\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /crkey/i // Google Chromecast\n            ],\n            [\n                [\n                    MODEL,\n                    CHROME + \"cast\"\n                ],\n                [\n                    VENDOR,\n                    GOOGLE\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /droid.+aft(\\w+)( bui|\\))/i // Fire TV\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    AMAZON\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /\\(dtv[\\);].+(aquos)/i,\n                /(aquos-tv[\\w ]+)\\)/i // Sharp\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    SHARP\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /(bravia[\\w ]+)( bui|\\))/i // Sony\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    SONY\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /(mitv-\\w{5}) bui/i // Xiaomi\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    XIAOMI\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /Hbbtv.*(technisat) (.*);/i // TechniSAT\n            ],\n            [\n                VENDOR,\n                MODEL,\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,\n                /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i // HbbTV devices\n            ],\n            [\n                [\n                    VENDOR,\n                    trim\n                ],\n                [\n                    MODEL,\n                    trim\n                ],\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i // SmartTV from Unidentified Vendors\n            ],\n            [\n                [\n                    TYPE,\n                    SMARTTV\n                ]\n            ],\n            [\n                ///////////////////\n                // CONSOLES\n                ///////////////////\n                /(ouya)/i,\n                /(nintendo) ([wids3utch]+)/i // Nintendo\n            ],\n            [\n                VENDOR,\n                MODEL,\n                [\n                    TYPE,\n                    CONSOLE\n                ]\n            ],\n            [\n                /droid.+; (shield) bui/i // Nvidia\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Nvidia\"\n                ],\n                [\n                    TYPE,\n                    CONSOLE\n                ]\n            ],\n            [\n                /(playstation [345portablevi]+)/i // Playstation\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    SONY\n                ],\n                [\n                    TYPE,\n                    CONSOLE\n                ]\n            ],\n            [\n                /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i // Microsoft Xbox\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    MICROSOFT\n                ],\n                [\n                    TYPE,\n                    CONSOLE\n                ]\n            ],\n            [\n                ///////////////////\n                // WEARABLES\n                ///////////////////\n                /((pebble))app/i // Pebble\n            ],\n            [\n                VENDOR,\n                MODEL,\n                [\n                    TYPE,\n                    WEARABLE\n                ]\n            ],\n            [\n                /(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i // Apple Watch\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    APPLE\n                ],\n                [\n                    TYPE,\n                    WEARABLE\n                ]\n            ],\n            [\n                /droid.+; (glass) \\d/i // Google Glass\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    GOOGLE\n                ],\n                [\n                    TYPE,\n                    WEARABLE\n                ]\n            ],\n            [\n                /droid.+; (wt63?0{2,3})\\)/i\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    ZEBRA\n                ],\n                [\n                    TYPE,\n                    WEARABLE\n                ]\n            ],\n            [\n                /(quest( 2| pro)?)/i // Oculus Quest\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    FACEBOOK\n                ],\n                [\n                    TYPE,\n                    WEARABLE\n                ]\n            ],\n            [\n                ///////////////////\n                // EMBEDDED\n                ///////////////////\n                /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i // Tesla\n            ],\n            [\n                VENDOR,\n                [\n                    TYPE,\n                    EMBEDDED\n                ]\n            ],\n            [\n                /(aeobc)\\b/i // Echo Dot\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    AMAZON\n                ],\n                [\n                    TYPE,\n                    EMBEDDED\n                ]\n            ],\n            [\n                ////////////////////\n                // MIXED (GENERIC)\n                ///////////////////\n                /droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i // Android Phones from Unidentified Vendors\n            ],\n            [\n                MODEL,\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i // Android Tablets from Unidentified Vendors\n            ],\n            [\n                MODEL,\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i // Unidentifiable Tablet\n            ],\n            [\n                [\n                    TYPE,\n                    TABLET\n                ]\n            ],\n            [\n                /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i // Unidentifiable Mobile\n            ],\n            [\n                [\n                    TYPE,\n                    MOBILE\n                ]\n            ],\n            [\n                /(android[-\\w\\. ]{0,9});.+buil/i // Generic Android Device\n            ],\n            [\n                MODEL,\n                [\n                    VENDOR,\n                    \"Generic\"\n                ]\n            ]\n        ],\n        engine: [\n            [\n                /windows.+ edge\\/([\\w\\.]+)/i // EdgeHTML\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    EDGE + \"HTML\"\n                ]\n            ],\n            [\n                /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i // Blink\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Blink\"\n                ]\n            ],\n            [\n                /(presto)\\/([\\w\\.]+)/i,\n                /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i,\n                /ekioh(flow)\\/([\\w\\.]+)/i,\n                /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,\n                /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,\n                /\\b(libweb)/i\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i // Gecko\n            ],\n            [\n                VERSION,\n                NAME\n            ]\n        ],\n        os: [\n            [\n                // Windows\n                /microsoft (windows) (vista|xp)/i // Windows (iTunes)\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i // Windows Phone\n            ],\n            [\n                NAME,\n                [\n                    VERSION,\n                    strMapper,\n                    windowsVersionMap\n                ]\n            ],\n            [\n                /windows nt 6\\.2; (arm)/i,\n                /windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,\n                /(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ],\n            [\n                [\n                    VERSION,\n                    strMapper,\n                    windowsVersionMap\n                ],\n                [\n                    NAME,\n                    \"Windows\"\n                ]\n            ],\n            [\n                // iOS/macOS\n                /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,\n                /(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,\n                /cfnetwork\\/.+darwin/i\n            ],\n            [\n                [\n                    VERSION,\n                    /_/g,\n                    \".\"\n                ],\n                [\n                    NAME,\n                    \"iOS\"\n                ]\n            ],\n            [\n                /(mac os x) ?([\\w\\. ]*)/i,\n                /(macintosh|mac_powerpc\\b)(?!.+haiku)/i // Mac OS\n            ],\n            [\n                [\n                    NAME,\n                    MAC_OS\n                ],\n                [\n                    VERSION,\n                    /_/g,\n                    \".\"\n                ]\n            ],\n            [\n                // Mobile OSes\n                /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i // Android-x86/HarmonyOS\n            ],\n            [\n                VERSION,\n                NAME\n            ],\n            [\n                /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,\n                /(blackberry)\\w*\\/([\\w\\.]*)/i,\n                /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,\n                /\\((series40);/i // Series 40\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /\\(bb(10);/i // BlackBerry 10\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    BLACKBERRY\n                ]\n            ],\n            [\n                /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i // Symbian\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"Symbian\"\n                ]\n            ],\n            [\n                /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    FIREFOX + \" OS\"\n                ]\n            ],\n            [\n                /web0s;.+rt(tv)/i,\n                /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i // WebOS\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"webOS\"\n                ]\n            ],\n            [\n                /watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i // watchOS\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    \"watchOS\"\n                ]\n            ],\n            [\n                // Google Chromecast\n                /crkey\\/([\\d\\.]+)/i // Google Chromecast\n            ],\n            [\n                VERSION,\n                [\n                    NAME,\n                    CHROME + \"cast\"\n                ]\n            ],\n            [\n                /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i // Chromium OS\n            ],\n            [\n                [\n                    NAME,\n                    CHROMIUM_OS\n                ],\n                VERSION\n            ],\n            [\n                // Smart TVs\n                /panasonic;(viera)/i,\n                /(netrange)mmh/i,\n                /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,\n                // Console\n                /(nintendo|playstation) ([wids345portablevuch]+)/i,\n                /(xbox); +xbox ([^\\);]+)/i,\n                // Other\n                /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,\n                /(mint)[\\/\\(\\) ]?(\\w*)/i,\n                /(mageia|vectorlinux)[; ]/i,\n                /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n                /(hurd|linux) ?([\\w\\.]*)/i,\n                /(gnu) ?([\\w\\.]*)/i,\n                /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,\n                /(haiku) (\\w+)/i // Haiku\n            ],\n            [\n                NAME,\n                VERSION\n            ],\n            [\n                /(sunos) ?([\\w\\.\\d]*)/i // Solaris\n            ],\n            [\n                [\n                    NAME,\n                    \"Solaris\"\n                ],\n                VERSION\n            ],\n            [\n                /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,\n                /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,\n                /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,\n                /(unix) ?([\\w\\.]*)/i // UNIX\n            ],\n            [\n                NAME,\n                VERSION\n            ]\n        ]\n    };\n    /////////////////\n    // Constructor\n    ////////////////\n    var UAParser = function(ua, extensions) {\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n        if (!(this instanceof UAParser)) return new UAParser(ua, extensions).getResult();\n        var _navigator = typeof window1 !== UNDEF_TYPE && window1.navigator ? window1.navigator : undefined;\n        var _ua = ua || (_navigator && _navigator.userAgent ? _navigator.userAgent : EMPTY);\n        var _uach = _navigator && _navigator.userAgentData ? _navigator.userAgentData : undefined;\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n        var _isSelfNav = _navigator && _navigator.userAgent == _ua;\n        this.getBrowser = function() {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser[MAJOR] = majorize(_browser[VERSION]);\n            // Brave-specific detection\n            if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) _browser[NAME] = \"Brave\";\n            return _browser;\n        };\n        this.getCPU = function() {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function() {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) _device[TYPE] = MOBILE;\n            // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n            if (_isSelfNav && _device[MODEL] == \"Macintosh\" && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {\n                _device[MODEL] = \"iPad\";\n                _device[TYPE] = TABLET;\n            }\n            return _device;\n        };\n        this.getEngine = function() {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function() {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            if (_isSelfNav && !_os[NAME] && _uach && _uach.platform != \"Unknown\") _os[NAME] = _uach.platform.replace(/chrome os/i, CHROMIUM_OS).replace(/macos/i, MAC_OS); // backward compatibility\n            return _os;\n        };\n        this.getResult = function() {\n            return {\n                ua: this.getUA(),\n                browser: this.getBrowser(),\n                engine: this.getEngine(),\n                os: this.getOS(),\n                device: this.getDevice(),\n                cpu: this.getCPU()\n            };\n        };\n        this.getUA = function() {\n            return _ua;\n        };\n        this.setUA = function(ua) {\n            _ua = typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER = enumerize([\n        NAME,\n        VERSION,\n        MAJOR\n    ]);\n    UAParser.CPU = enumerize([\n        ARCHITECTURE\n    ]);\n    UAParser.DEVICE = enumerize([\n        MODEL,\n        VENDOR,\n        TYPE,\n        CONSOLE,\n        MOBILE,\n        SMARTTV,\n        TABLET,\n        WEARABLE,\n        EMBEDDED\n    ]);\n    UAParser.ENGINE = UAParser.OS = enumerize([\n        NAME,\n        VERSION\n    ]);\n    ///////////\n    // Export\n    //////////\n    // check js environment\n    if (typeof exports !== UNDEF_TYPE) {\n        // nodejs env\n        if (\"object\" !== UNDEF_TYPE && module.exports) exports = module.exports = UAParser;\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof define === FUNC_TYPE && define.amd) define(function() {\n            return UAParser;\n        });\n        else if (typeof window1 !== UNDEF_TYPE) // browser env\n        window1.UAParser = UAParser;\n    }\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window1 !== UNDEF_TYPE && (window1.jQuery || window1.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function() {\n            return parser.getUA();\n        };\n        $.ua.set = function(ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for(var prop in result)$.ua[prop] = result[prop];\n        };\n    }\n})(typeof window === \"object\" ? window : this);\n\n},{}],\"7Uqsz\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"registerSiteTypings\", ()=>registerSiteTypings);\nparcelHelpers.export(exports, \"monacoTypings\", ()=>monacoTypings);\nparcelHelpers.export(exports, \"iftext\", ()=>iftext);\nparcelHelpers.export(exports, \"register\", ()=>register);\nvar _general = require(\"../types/general\");\nvar _prismaExtend = require(\"./prisma-extend\");\nvar _base = require(\"./types/base\");\nvar _prop = require(\"./types/prop\");\nconst map = new WeakMap();\nconst registerSiteTypings = (monaco, p)=>{\n    if (p.site_dts) {\n        register(monaco, p.site_dts, \"ts:site.d.ts\");\n        register(monaco, `\n  declare global {\n    import * as _ from \"index\"\n    ${Object.entries(p.site_dts_entry).map(([name, type])=>{\n            return `\n    ${type} ${name} = _.${name};`;\n        }).join(\"\\n\")}\n  }\n  export {}\n    `, \"ts:active_global.d.ts\");\n    }\n};\nconst monacoTypings = async (p, monaco, prop)=>{\n    registerSiteTypings(monaco, p);\n    if (!map.has(prop.values)) map.set(prop.values, true);\n    else return;\n    const prasi_api = (0, _general.w).prasiApi[p.site.api_url];\n    if (prasi_api) {\n        if (prasi_api && prasi_api.prismaTypes) {\n            const prisma = prasi_api.prismaTypes;\n            if (prisma) {\n                register(monaco, `\\\ndeclare module \"ts:runtime/index\" {\n  ${prisma[\"runtime/index.d.ts\"]}\n}`, `ts:runtime/index.d.ts`);\n                register(monaco, `\\\ndeclare module \"ts:runtime/library\" {\n  ${prisma[\"runtime/library.d.ts\"]}\n}`, `ts:runtime/library.d.ts`);\n                register(monaco, `\\\ndeclare module \"ts:prisma\" {\n  ${prisma[\"prisma.d.ts\"].replace(`import * as runtime from './runtime/library.js';`, `import * as runtime from 'ts:runtime/library';`).replace(`import * as runtime from './runtime/library';`, `import * as runtime from 'ts:runtime/library';`)}\n}`, `ts:prisma.d.ts`);\n            }\n            const api_types = prasi_api.apiTypes;\n            if (api_types) register(monaco, api_types, \"ts:api.d.ts\");\n        }\n    }\n    monaco.languages.typescript.typescriptDefaults.setExtraLibs([\n        {\n            filePath: \"react.d.ts\",\n            content: `declare module \"react\" {\n${await loadText(\"https://cdn.jsdelivr.net/npm/@types/react@18.3.1/index.d.ts\")}\n}`\n        },\n        {\n            filePath: \"jsx-runtime.d.ts\",\n            content: `declare module \"react/jsx-runtime\" {\n${(await loadText(\"https://cdn.jsdelivr.net/npm/@types/react@18.3.1/jsx-runtime.d.ts\")).replaceAll('from \"./\"', 'from \"react\"')}\n}`\n        }\n    ]);\n    const propText = (0, _prop.extractProp)({\n        values: prop.values,\n        types: {\n            ...prop.types,\n            ...p.script.siteTypes\n        }\n    });\n    const apiTypes = (0, _general.w).prasiApi[p.site.api_url] ? (0, _general.w).prasiApi[p.site.api_url].apiTypes : \"\";\n    let apiPath = \"app/gen/srv/api/srv\";\n    if (apiTypes && apiTypes.includes(`export * as srv from \"gen/srv/api/srv\"`)) apiPath = \"gen/srv/api/srv\";\n    register(monaco, `\\\nimport React from \"react\";\nimport {\n  FC as ReactFC,\n  ReactNode as RNode,\n  ReactElement as RElement,\n} from \"react\";\nimport prisma from 'ts:prisma';\n\n${iftext(apiTypes, `\\\nimport \"./api\"\nimport type * as SRVAPI from \"${apiPath}\";`)}\n\ndeclare global {\n  const db: prisma.PrismaClient & ${(0, _prismaExtend.prismaExtendType)};\n  \n  ${(0, _base.baseTypings)}\n\n  ${iftext(apiTypes, `\n  type Api = typeof SRVAPI;\n  type ApiName = keyof Api;\n  const api: { [k in ApiName]: Awaited<Api[k][\"handler\"]>[\"_\"][\"api\"] } & { _raw: any };\n  `)}\n}\n\n  `, \"ts:global.d.ts\");\n    register(monaco, propText.join(\"\\n\"), \"ts:typings.d.ts\");\n};\nconst loadText = async (url)=>{\n    try {\n        const res = await fetch(url);\n        return await res.text();\n    } catch (e) {\n        return \"\";\n    }\n};\nconst iftext = (condition, text)=>{\n    if (condition) return text;\n    return \"\";\n};\nconst register = (monaco, source, uri)=>{\n    const model = monaco.editor.getModels().find((e)=>{\n        return e.uri.toString() === uri;\n    });\n    if (model) model.setValue(source);\n    else monaco.editor.createModel(source, \"typescript\", monaco.Uri.parse(uri));\n};\n\n},{\"../types/general\":\"fBAQm\",\"./prisma-extend\":\"blE8M\",\"./types/base\":\"2rHcO\",\"./types/prop\":\"aEmJs\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"blE8M\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"prismaExtendType\", ()=>prismaExtendType);\nconst prismaExtendType = `\\\n{\n  _batch: {\n    update: (\n      batch: { \n        table: string, \n        data: any, \n        where: any \n      }[]\n    ) => Promise<void>;\n  };\n  _schema: {\n    tables: () => Promise<string[]>;\n    columns: (table: string) => Promise<\n      Record<\n        string,\n        {\n          is_pk: boolean;\n          type: string;\n          optional: boolean;\n          db_type: string;\n          default?: any\n        } \n      >\n    >;\n    rels: (table: string) => Promise<Record<string, {\n      type: 'has-many' | 'has-one';\n      to: {\n        table: string, \n        fields: string[]\n      };\n      from: { \n        table: string, \n        fields: string[]\n      }\n    }>>;\n  }\n}`;\nconst rel_types = `\\\n{\n  \n}`;\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"2rHcO\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"baseTypings\", ()=>baseTypings);\nconst baseTypings = `\n  type FC<T> = ReactFC<T>;\n  const Fragment: typeof React.Fragment;\n  const ReactNode: RNode;\n  const useCallback: typeof React.useCallback;\n  const useMemo: typeof React.useMemo;\n  const ReactElement: RElement;\n  const isValidElement: typeof React.isValidElement;\n  const useEffect: typeof React.useEffect;\n  const useState: typeof React.useState;\n\n  const _meta: Record<string, any>;\n  const _item: IContent;\n  const _syncm: (mitem:any, item:any) => void;\n  const pathname: string;\n  const isEditor: boolean;\n  const isLayout: boolean;\n  const isMobile: boolean;\n  const isDesktop: boolean;\n  const siteurl: (path:string) => string;\n  const preload: (urls: string | string[], opt?: {\n    on_load?: (\n      pages: {\n        id: string;\n        url: string;\n        root: IRoot;\n      }[],\n      walk: (\n        root: { root: IRoot }[],\n        visit: (item: IContent) => void | Promise<void>\n      ) => void\n    ) => void;}) => ReactNode;\n  const apiHeaders: Record<string, any>;\n  const navigate: (url: string) => void;\n  const params: any;\n  const cx: (...classNames: any[]) => string;\n  const css: (\n    tag: TemplateStringsArray | string,\n    ...props: Array<string | number | boolean | undefined | null>\n  ) => string;\n\n  const props: {\n    className: string;\n    onPointerDown?: () => void;\n    onPointerMove?: () => void;\n    onPointerLeave?: () => void;\n    inherit?: {\n      style: any, \n      className: string\n    }\n  };\n  const children: RNode;\n\n  const PassProp: FC<Record<string, any> & { children: React.ReactNode }>;\n  const Preload: FC<{ url: string[] }>;\n  const apiurl: string;\n  const pageid: string;\n  type ITEM = {\n    id: string;\n    name: string;\n    type: \"item\" | \"text\";\n    adv?: {\n      js?: string;\n      jsBuilt?: string;\n      css?: string;\n      html?: string;\n    };\n    text: string;\n    html: string;\n    component?: {\n      id: string;\n      props: Record<\n        string,\n        {\n          value: string;\n          valueBuilt: string;\n          meta: { type: string };\n        }\n      >;\n    };\n    childs: ITEM[];\n  };\n  const newElement: (gen?: (item: ITEM) => ITEM | ITEM[]) => React.ReactNode;\n  const mobile: {\n    notif: {\n      register: (user_id: string) => void;\n      send: (data: {\n        user_id: string;\n        title: string;\n        body: string;\n        data: any;\n      }) => void;\n      onTap: (\n        data: null | {\n          user_id: string;\n          title: string;\n          body: string;\n          data: any;\n        }\n      ) => void | Promise<void>;\n      onReceive: (data: {\n        user_id: string;\n        title: string;\n        body: string;\n        data: any;\n      }) => void | Promise<void>;\n    };\n  };\n  const Local: <T extends Record<string, any>>(arg: {\n    name: string;\n    idx?: any;\n    value: T;\n    children: ReactNode;\n    deps?: any[];\n    effect?: (\n      local: T & { render: () => void }\n    ) => void | (() => void) | Promise<void | (() => void)>;\n    hook?: (\n      local: T & { render: () => void }\n    ) => void | (() => void) | Promise<void | (() => void)>;\n    cache?: boolean;\n  }) => RNode\n`;\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"aEmJs\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"extractProp\", ()=>extractProp);\nvar _lodashTrim = require(\"lodash.trim\");\nvar _lodashTrimDefault = parcelHelpers.interopDefault(_lodashTrim);\nvar _react = require(\"react\");\nconst extractProp = (prop)=>{\n    const propTypes = [];\n    const props = {};\n    if (prop) {\n        if (prop.values) for (const [k, v] of Object.entries(prop.values)){\n            if (!props[k]) props[k] = {};\n            if (typeof v === \"function\") {\n                if (isFunctionalComponent(v)) props[k].type = \"React.FC\";\n                else if (isClassComponent(v)) props[k].type = \"React.Component\";\n                else props[k].type = \"any\";\n            } else if (v) {\n                if (typeof v === \"object\" && v._jsx) props[k].type = \"React.ReactElement;\";\n                else if (!!v.render && typeof v.$$typeof === \"symbol\") props[k].type = \"React.FC<Record<string,any> & {ref?:any}>\";\n                else props[k].val = v;\n            }\n        }\n    }\n    if (prop.types) for (const [k, v] of Object.entries(prop.types)){\n        if (!props[k]) props[k] = {};\n        props[k].type = v;\n    }\n    for (const [k, v] of Object.entries(props)){\n        if (v.type) {\n            if (k === \"_raw\") propTypes.push(v.type);\n            else {\n                let const_or_type = \"const\";\n                let str = v.type;\n                if (v.type.startsWith(\"type:\")) {\n                    str = v.type.substring(5);\n                    const_or_type = \"type\";\n                }\n                propTypes.push(`${const_or_type} ${k}: ${(0, _lodashTrimDefault.default)(str, \"; \\n\")};`);\n            }\n        } else if (v.val) {\n            if (typeof v.val === \"object\" && /*#__PURE__*/ (0, _react.isValidElement)(v.val)) propTypes.push(`const ${k}: ReactElement;`);\n            else try {\n                let val = v.val;\n                if (typeof val === \"object\") {\n                    if (typeof val.render === \"function\") val = {\n                        ...val,\n                        render: ()=>{}\n                    };\n                    propTypes.push(`const ${k}: ${recurseTypes(val)};`);\n                } else propTypes.push(`const ${k}: string;`);\n            } catch (e) {}\n        }\n    }\n    return propTypes;\n};\nfunction recurseTypes(object) {\n    const result = [];\n    if (typeof object === \"object\") {\n        if (object === null) return \"null\";\n        if (Array.isArray(object)) return `any[]`;\n        for (const [k, v] of Object.entries(object))result.push(`${k}: ${typeof v === \"object\" && v ? recurseTypes(v) : typeof v}`);\n        return `{\n  ${result.join(\";\\n  \")}\n}`;\n    }\n    return typeof object;\n}\nfunction isFunctionalComponent(Component) {\n    return typeof Component === \"function\" && // can be various things\n    !(Component.prototype && // native arrows don't have prototypes\n    Component.prototype.isReactComponent // special property\n    );\n}\nfunction isClassComponent(Component) {\n    return !!(typeof Component === \"function\" && Component.prototype && Component.prototype.isReactComponent);\n}\n\n},{\"lodash.trim\":\"4PJGQ\",\"react\":\"jhHkt\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"5NVm2\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"loadSession\", ()=>loadSession);\nparcelHelpers.export(exports, \"edInitSync\", ()=>edInitSync);\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _wasmGzip = require(\"wasm-gzip\");\nvar _webUtils = require(\"web-utils\");\nvar _yjs = require(\"yjs\");\nvar _wsClient = require(\"../../../utils/sync/ws-client\");\nvar _general = require(\"../../../utils/types/general\");\nvar _loading = require(\"../../../utils/ui/loading\");\nvar _edGlobal = require(\"./ed-global\");\nvar _build = require(\"./tree/build\");\nvar _edRoute = require(\"./ed-route\");\nvar _edSite = require(\"./ed-site\");\nvar _load = require(\"./comp/load\");\nvar _radix3 = require(\"radix3\");\nvar _codeLoader = require(\"./code-loader\");\nvar _typings = require(\"../../../utils/script/typings\");\nvar Buffer = require(\"727807bed56e7e58\").Buffer;\nconst decoder = new TextDecoder();\nconst page = {\n    list: [],\n    route: null\n};\nconst loadSession = (p)=>{\n    const session = JSON.parse(localStorage.getItem(\"prasi-session\") || \"null\");\n    if (!session && location.pathname.startsWith(\"/ed/\")) {\n        location.href = \"/login\";\n        return /*#__PURE__*/ (0, _jsxRuntime.jsx)((0, _loading.Loading), {\n            note: \"logging in\"\n        });\n    }\n    if (session?.data?.user) {\n        p.user.id = session.data.user.id;\n        p.user.username = session.data.user.username;\n    } else {\n        p.user.id = \"ab1390f5-40d5-448e-a8c3-84b0fb600930\";\n        p.user.username = \"anonymous\";\n    }\n};\nconst edInitSync = (p)=>{\n    loadSession(p);\n    if (location.pathname.startsWith(\"/vi/\")) {\n        if (page.list.length === 0) {\n            _db.page.findMany({\n                where: {\n                    id_site: params.site_id,\n                    is_deleted: false,\n                    is_default_layout: false\n                },\n                select: {\n                    id: true,\n                    url: true\n                }\n            }).then((list)=>{\n                page.list = list;\n                edInitSync(p);\n            });\n            return;\n        }\n        if (!page.route) {\n            page.route = (0, _radix3.createRouter)();\n            for (const e of page.list)page.route.insert(e.url, e);\n        }\n        const arrpath = location.pathname.split(\"/\");\n        const pathname = \"/\" + arrpath.slice(3).join(\"/\");\n        if (!params.page_id) {\n            const res = page.route.lookup(pathname);\n            if (res) {\n                params.page_id = res.id;\n                if (res.params) {\n                    for (const [k, v] of Object.entries(res.params))if (![\n                        \"site_id\",\n                        \"page_id\"\n                    ].includes(k)) params[k] = v;\n                }\n            }\n        }\n    }\n    if (p.sync) {\n        if (p.site.id === \"--loading--\") return false;\n        if (params.site_id !== p.site.id) {\n            p.site = (0, _webUtils.deepClone)((0, _edGlobal.EmptySite));\n            p.site.id = \"--loading--\";\n            p.ui.popup.code.init = false;\n            p.sync.site.load(params.site_id).then(async (site)=>{\n                if (site) {\n                    await (0, _edSite.loadSite)(p, site, \"from-sync\");\n                    p.render();\n                } else {\n                    alert(\"Site not found. redirecting...\");\n                    location.href = `/ed/`;\n                }\n                return;\n            });\n            return false;\n        }\n        if (!p.page.cur.id && !params.page_id && params.site_id && location.pathname.startsWith(\"/ed/\")) {\n            _db.page.findFirst({\n                where: {\n                    is_deleted: false,\n                    is_default_layout: false,\n                    id_site: params.site_id\n                },\n                select: {\n                    id: true\n                }\n            }).then((e)=>{\n                if (params.site_id === \"_\") {\n                    alert(\"asdsa\");\n                    return;\n                }\n                if (e) location.href = `/ed/${params.site_id}/${e.id}`;\n            });\n            return false;\n        }\n    }\n    if (!p.sync && !p.sync_assigned) {\n        p.sync_assigned = true;\n        (0, _wsClient.clientStartSync)({\n            user_id: p.user.id,\n            site_id: params.site_id,\n            page_id: params.page_id,\n            events: {\n                opened () {\n                    if ((0, _general.w).offline) {\n                        console.log(\"reconnected!\");\n                        (0, _general.w).offline = false;\n                        p.ui.syncing = true;\n                        p.render();\n                    } else {\n                        (0, _general.w).offline = false;\n                        p.render();\n                    }\n                },\n                shakehand (client_id) {\n                    p.user.client_id = client_id;\n                },\n                disconnected () {\n                    console.log(\"offline, reconnecting...\");\n                    (0, _general.w).offline = true;\n                    p.render();\n                    return {\n                        reconnect: true\n                    };\n                },\n                async editor_start (e) {\n                    if (params.site_id !== e.site_id || params.page_id !== e.page_id) {\n                        if (!p.page.cur.id) {\n                            p.site.id = e.site_id;\n                            p.page.cur.id = e.page_id;\n                            if (location.pathname.startsWith(\"/ed/\")) location.href = `/ed/${e.site_id}/${e.page_id}`;\n                        }\n                    } else {\n                        p.site.id = e.site_id;\n                        p.page.cur.id = e.page_id;\n                        p.render();\n                    }\n                },\n                site_updated (site) {\n                    for (const [k, v] of Object.entries(site))if (k === \"js\" || k === \"js_compiled\") p.site[k] = decoder.decode((0, _wasmGzip.decompress)(v));\n                    else p.site[k] = v;\n                    p.render();\n                },\n                async code_changes ({ ts, mode }) {\n                    if (mode === \"frontend\") await (0, _codeLoader.loadFrontEnd)(p, ts);\n                    else {\n                        console.log(\"Code updated\");\n                        await (0, _codeLoader.loadTypings)(p);\n                        if (p.ui.monaco) (0, _typings.registerSiteTypings)(p.ui.monaco, p);\n                    }\n                    await (0, _build.treeRebuild)(p);\n                    p.render();\n                },\n                async remote_svlocal (data) {\n                    let doc = null;\n                    if (data.type === \"page\" && p.page.cur.id === data.id) doc = p.page.doc;\n                    else if (data.type === \"comp\" && p.comp.list[data.id]) doc = p.comp.list[data.id].doc;\n                    if (doc && p.sync) {\n                        const diff_remote = _yjs.encodeStateAsUpdate(doc, (0, _wasmGzip.decompress)(data.sv_local));\n                        const sv_remote = _yjs.encodeStateVector(doc);\n                        const sv = Buffer.from((0, _wasmGzip.compress)(sv_remote));\n                        const diff = Buffer.from((0, _wasmGzip.compress)(diff_remote));\n                        const res = await p.sync.yjs.sv_remote(data.type, data.id, sv, diff);\n                        if (res) {\n                            _yjs.applyUpdate(doc, (0, _wasmGzip.decompress)(res.diff), \"sv_remote\");\n                            if (data.type === \"page\") {\n                                delete p.preview.meta_cache[data.id];\n                                await (0, _build.treeRebuild)(p, {\n                                    note: \"sv_remote\"\n                                });\n                            } else if (data.type === \"comp\") {\n                                const updated = await (0, _load.updateComponentMeta)(p, doc, data.id);\n                                if (updated) {\n                                    p.comp.list[data.id].meta = updated.meta;\n                                    p.comp.list[data.id].tree = updated.tree;\n                                }\n                                await (0, _build.treeRebuild)(p, {\n                                    note: \"sv_remote\"\n                                });\n                            }\n                            p.render();\n                        }\n                    }\n                }\n            }\n        }).then((e)=>{\n            p.sync = e;\n        });\n        return false;\n    } else if (params.page_id !== p.page.cur.id && location.pathname.startsWith(\"/ed\")) {\n        (0, _edRoute.reloadPage)(p, params.page_id, \"change page\");\n        return false;\n    }\n    return true;\n};\n\n},{\"727807bed56e7e58\":\"1XYH5\",\"react/jsx-runtime\":\"16Crh\",\"wasm-gzip\":\"lSV23\",\"web-utils\":\"8vvzC\",\"yjs\":\"hZY7I\",\"../../../utils/sync/ws-client\":\"jeAUP\",\"../../../utils/types/general\":\"fBAQm\",\"../../../utils/ui/loading\":\"loFlS\",\"./ed-global\":\"6QDfO\",\"./tree/build\":\"dNllk\",\"./ed-route\":\"5aNau\",\"./ed-site\":\"fbNqA\",\"./comp/load\":\"aigu6\",\"radix3\":\"affWK\",\"./code-loader\":\"43JBt\",\"../../../utils/script/typings\":\"7Uqsz\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"jeAUP\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"clientStartSync\", ()=>clientStartSync);\nvar _deepProxy = require(\"@qiwi/deep-proxy\");\nvar _hashWasm = require(\"hash-wasm\");\nvar _idbKeyval = require(\"idb-keyval\");\nvar _msgpackr = require(\"msgpackr\");\nvar _safeStableStringify = require(\"safe-stable-stringify\");\nvar _actionsDef = require(\"../../../../srv/ws/sync/actions-def\");\nvar _type = require(\"../../../../srv/ws/sync/type\");\nvar _general = require(\"../types/general\");\nvar _idb = require(\"./idb\");\nvar Buffer = require(\"e2d22eba78b6ebea\").Buffer;\nconst packr = new (0, _msgpackr.Packr)({\n    structuredClone: true\n});\n/** CONSTANT */ const WS_CONFIG = {\n    debug: !!localStorage.getItem(\"prasi-ws-debug\"),\n    reconnectTimeout: 1000\n};\n(0, _general.w).debug = new Proxy({}, {\n    get (target, p, receiver) {\n        if (p === \"off\") {\n            WS_CONFIG.debug = false;\n            localStorage.removeItem(\"prasi-js-debug\");\n            localStorage.removeItem(\"prasi-ws-debug\");\n            console.clear();\n            return [\n                \"WS DEBUG: Deactivated\"\n            ];\n        }\n        if (p === \"on\") {\n            WS_CONFIG.debug = true;\n            localStorage.setItem(\"prasi-ws-debug\", \"1\");\n            console.clear();\n            return [\n                \"WS DEBUG: Activated\"\n            ];\n        }\n        if (p === \"js\") {\n            localStorage.setItem(\"prasi-js-debug\", \"1\");\n            console.clear();\n            return [\n                \"JS DEBUG: Activated\"\n            ];\n        }\n    }\n});\nconst conf = {\n    ws: null,\n    client_id: \"\",\n    idb: null,\n    event: null\n};\nconst runtime = {\n    action: {\n        pending: {}\n    }\n};\nconst sendWs = (ws, msg)=>{\n    const raw = packr.pack(msg);\n    if (WS_CONFIG.debug) console.log(`%c\\u{2B06}`, \"color:blue\", formatBytes(raw.length, 0), msg);\n    ws.send(raw);\n};\nconst clientStartSync = async (arg)=>{\n    const { user_id, site_id, page_id, events } = arg;\n    conf.idb = (0, _idb.initIDB)(user_id);\n    await connect({\n        user_id,\n        site_id,\n        page_id\n    }, events);\n    return new (0, _deepProxy.DeepProxy)((0, _actionsDef.SyncActionDefinition), ({ target, trapName, value, key, DEFAULT, PROXY })=>{\n        if (trapName === \"set\") throw new TypeError(\"target is immutable\");\n        if (typeof value === \"string\") return (...args)=>{\n            return new Promise((resolve)=>{\n                doAction({\n                    code: value,\n                    resolve,\n                    args\n                });\n            });\n        };\n        if (trapName === \"get\") {\n            if (typeof value === \"object\" && value !== null) return PROXY;\n        }\n        return DEFAULT;\n    });\n};\nconst connect = (opt, event)=>{\n    const { user_id, page_id, site_id } = opt;\n    conf.event = event;\n    if ((0, _general.w).offline) return new Promise(async (resolve)=>{\n        resolve();\n        const eventName = \"editor_start\";\n        const data = await loadEventOffline(eventName);\n        if (event[eventName]) event[eventName](data);\n    });\n    else return new Promise((resolve, reject)=>{\n        if (!conf.ws) {\n            let reconnect = 0;\n            const retry = ()=>{\n                const url = new URL((0, _general.w).basehost || location.href);\n                url.pathname = \"/sync\";\n                url.protocol = url.protocol === \"http:\" ? \"ws:\" : \"wss:\";\n                const ws = new WebSocket(`${url.protocol}//${url.host}${url.pathname}`);\n                ws.onopen = ()=>{\n                    sendWs(ws, {\n                        type: (0, _type.SyncType).UserID,\n                        user_id,\n                        site_id,\n                        page_id\n                    });\n                    conf.ws = ws;\n                    event.opened();\n                };\n                ws.onclose = async ()=>{\n                    const res = event.disconnected();\n                    if (res.reconnect) setTimeout(async ()=>{\n                        reconnect++;\n                        retry();\n                    }, reconnect * WS_CONFIG.reconnectTimeout);\n                    else reject();\n                };\n                ws.onmessage = async (e)=>{\n                    const raw = e.data;\n                    const msg = packr.unpack(Buffer.from(await raw.arrayBuffer()));\n                    if (WS_CONFIG.debug) console.log(`%c\\u{2B07}`, `color:red`, formatBytes(raw.size, 0), msg);\n                    if (msg.type === (0, _type.SyncType).ClientID) {\n                        conf.client_id = msg.client_id;\n                        event.shakehand(msg.client_id);\n                        resolve();\n                    } else if (msg.type === (0, _type.SyncType).Event) {\n                        const eventName = msg.event;\n                        if (event[eventName]) {\n                            if (offlineEvents.includes(eventName)) saveEventOffline(eventName, msg.data);\n                            event[eventName](msg.data);\n                        }\n                    } else if (msg.type === (0, _type.SyncType).ActionResult) {\n                        const pending = runtime.action.pending[msg.argid];\n                        if (pending) {\n                            pending.resolve(msg.val);\n                            delete runtime.action.pending[msg.argid];\n                            const idb = conf.idb;\n                            if (idb) await (0, _idbKeyval.set)(msg.argid, msg.val, idb);\n                        }\n                    }\n                };\n            };\n            retry();\n        }\n    });\n};\nconst offlineEvents = [\n    \"editor_start\"\n];\nconst saveEventOffline = async (name, data)=>{\n    const idb = conf.idb;\n    if (idb) {\n        const hargs = await (0, _hashWasm.xxhash32)(`ev-${name}`);\n        await (0, _idbKeyval.set)(hargs, data, idb);\n    }\n};\nconst loadEventOffline = async (name)=>{\n    const idb = conf.idb;\n    if (idb) {\n        const hargs = await (0, _hashWasm.xxhash32)(`ev-${name}`);\n        return await (0, _idbKeyval.get)(hargs, idb);\n    }\n};\nconst doAction = async (arg)=>{\n    const { args, code, resolve } = arg;\n    const ws = conf.ws;\n    const idb = conf.idb;\n    if (idb) {\n        const sargs = (0, _safeStableStringify.stringify)(args);\n        const path = (0, _actionsDef.SyncActionPaths)[code];\n        const argid = await (0, _hashWasm.xxhash32)(`op-${path}-${sargs}`);\n        if (ws && ws.readyState === ws.OPEN) {\n            // online\n            runtime.action.pending[argid] = {\n                ts: Date.now(),\n                resolve\n            };\n            sendWs(ws, {\n                type: (0, _type.SyncType).Action,\n                code,\n                args,\n                argid\n            });\n        } else {\n            // offline\n            const cache = await (0, _idbKeyval.get)(argid, idb);\n            resolve(cache);\n        }\n    }\n};\nfunction formatBytes(bytes, decimals) {\n    if (bytes == 0) return \"0 Bytes\";\n    var k = 1024, dm = decimals || 2, sizes = [\n        \"Bytes\",\n        \"KB\",\n        \"MB\",\n        \"GB\",\n        \"TB\",\n        \"PB\",\n        \"EB\",\n        \"ZB\",\n        \"YB\"\n    ], i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n}\n\n},{\"e2d22eba78b6ebea\":\"1XYH5\",\"@qiwi/deep-proxy\":\"9NGH0\",\"hash-wasm\":\"a4nxW\",\"idb-keyval\":\"8Atof\",\"msgpackr\":\"jqveO\",\"safe-stable-stringify\":\"aCIBG\",\"../../../../srv/ws/sync/actions-def\":\"6Bu6A\",\"../../../../srv/ws/sync/type\":\"eZNf9\",\"../types/general\":\"fBAQm\",\"./idb\":\"bZFhN\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"9NGH0\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"DEFAULT\", ()=>o);\nparcelHelpers.export(exports, \"DeepProxy\", ()=>y);\nparcelHelpers.export(exports, \"createDeepProxy\", ()=>f);\nparcelHelpers.export(exports, \"defaultProxyHandler\", ()=>l);\nfunction e() {\n    return e = Object.assign || function(e) {\n        for(var t = 1; t < arguments.length; t++){\n            var r = arguments[t];\n            for(var a in r)Object.prototype.hasOwnProperty.call(r, a) && (e[a] = r[a]);\n        }\n        return e;\n    }, e.apply(this, arguments);\n}\nvar t = {\n    proxies: new WeakMap,\n    traps: new WeakMap\n}, r = function(e, t, r) {\n    return e.get(t) || e.set(t, new r).get(t);\n}, a = function(e) {\n    return e.join();\n}, n = function(e, r, n) {\n    var o, p;\n    return t.proxies.get(null == (o = t.traps.get(e)) || null == (p = o.get(r)) ? void 0 : p.get(a(n)));\n}, o = Symbol(\"default\"), p = Object.keys(Object.getOwnPropertyDescriptors(Reflect)), s = [\n    \"get\",\n    \"has\",\n    \"set\",\n    \"defineProperty\",\n    \"deleteProperty\",\n    \"getOwnPropertyDescriptor\"\n], c = function(e, t) {\n    var r = e.trapName, a = e.handler, p = e.traps, c = e.root, i = e.path, u = function(e, t) {\n        var r, a, n, o, p, s, c, i;\n        switch(e){\n            case \"get\":\n                r = t[0], a = t[1], o = t[2];\n                break;\n            case \"set\":\n                r = t[0], a = t[1], n = t[2], o = t[3];\n                break;\n            case \"deleteProperty\":\n            case \"defineProperty\":\n                r = t[0], s = t[1];\n                break;\n            case \"has\":\n            case \"getOwnPropertyDescriptor\":\n                r = t[0], a = t[1];\n                break;\n            case \"apply\":\n                r = t[0], c = t[1], p = t[2];\n                break;\n            case \"construct\":\n                r = t[0], p = t[1];\n                break;\n            case \"setPrototypeOf\":\n                r = t[0], i = t[1];\n                break;\n            default:\n                r = t[0];\n        }\n        return {\n            target: r,\n            name: a,\n            receiver: o,\n            val: n,\n            args: p,\n            descriptor: s,\n            thisValue: c,\n            prototype: i\n        };\n    }(r, t), l = u.target, y = u.name, d = u.val, h = u.receiver, g = u.args, v = u.descriptor, b = u.thisValue, k = u.prototype, w = s.includes(r) ? y : void 0;\n    return {\n        parameters: t,\n        target: l,\n        name: y,\n        val: d,\n        args: g,\n        descriptor: v,\n        receiver: h,\n        thisValue: b,\n        prototype: k,\n        trapName: r,\n        traps: p,\n        path: i,\n        handler: a,\n        key: w,\n        newValue: \"set\" === r ? d : void 0,\n        root: c,\n        get proxy () {\n            return n(c, l, i);\n        },\n        get value () {\n            return w && l[w];\n        },\n        DEFAULT: o,\n        PROXY: f.bind({\n            root: c,\n            handler: a,\n            path: [].concat(i, [\n                w\n            ])\n        })\n    };\n}, i = function() {\n    var e = [].slice.call(arguments), t = this.trapName, r = this.handler, a = c(this, e), n = a.PROXY, o = a.DEFAULT, p = r(a);\n    return p === n ? n(a.value) : p === o ? Reflect[t].apply(Reflect, e) : p;\n}, u = function(e, t, r) {\n    return p.reduce(function(a, n) {\n        return a[n] = i.bind({\n            trapName: n,\n            handler: e,\n            traps: a,\n            root: t,\n            path: r\n        }), a;\n    }, {});\n}, l = function(e) {\n    return e.DEFAULT;\n}, f = function(o, p, s, c) {\n    !function(e) {\n        if (null === e || \"object\" != typeof e && \"function\" != typeof e) throw new TypeError(\"Deep proxy could be applied to objects and functions only\");\n    }(o);\n    var i = e({}, this), f = p || i.handler || l, y = s || i.path || [], d = i.root || c || o, h = n(d, o, y);\n    if (h) return h;\n    var g = u(f, d, y), v = new Proxy(o, g);\n    return function(e, n, o, p, s) {\n        r(r(t.traps, e, WeakMap), n, Map).set(a(o), p), t.proxies.set(p, s);\n    }(d, o, y, g, v), v;\n}, y = function(e, t, r, a) {\n    return f(e, t, r, a);\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"a4nxW\":[function(require,module,exports) {\n/*!\n * hash-wasm (https://www.npmjs.com/package/hash-wasm)\n * (c) Dani Biro\n * @license MIT\n */ /******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"adler32\", ()=>adler32);\nparcelHelpers.export(exports, \"argon2Verify\", ()=>argon2Verify);\nparcelHelpers.export(exports, \"argon2d\", ()=>argon2d);\nparcelHelpers.export(exports, \"argon2i\", ()=>argon2i);\nparcelHelpers.export(exports, \"argon2id\", ()=>argon2id);\nparcelHelpers.export(exports, \"bcrypt\", ()=>bcrypt);\nparcelHelpers.export(exports, \"bcryptVerify\", ()=>bcryptVerify);\nparcelHelpers.export(exports, \"blake2b\", ()=>blake2b);\nparcelHelpers.export(exports, \"blake2s\", ()=>blake2s);\nparcelHelpers.export(exports, \"blake3\", ()=>blake3);\nparcelHelpers.export(exports, \"crc32\", ()=>crc32);\nparcelHelpers.export(exports, \"crc32c\", ()=>crc32c);\nparcelHelpers.export(exports, \"createAdler32\", ()=>createAdler32);\nparcelHelpers.export(exports, \"createBLAKE2b\", ()=>createBLAKE2b);\nparcelHelpers.export(exports, \"createBLAKE2s\", ()=>createBLAKE2s);\nparcelHelpers.export(exports, \"createBLAKE3\", ()=>createBLAKE3);\nparcelHelpers.export(exports, \"createCRC32\", ()=>createCRC32);\nparcelHelpers.export(exports, \"createCRC32C\", ()=>createCRC32C);\nparcelHelpers.export(exports, \"createHMAC\", ()=>createHMAC);\nparcelHelpers.export(exports, \"createKeccak\", ()=>createKeccak);\nparcelHelpers.export(exports, \"createMD4\", ()=>createMD4);\nparcelHelpers.export(exports, \"createMD5\", ()=>createMD5);\nparcelHelpers.export(exports, \"createRIPEMD160\", ()=>createRIPEMD160);\nparcelHelpers.export(exports, \"createSHA1\", ()=>createSHA1);\nparcelHelpers.export(exports, \"createSHA224\", ()=>createSHA224);\nparcelHelpers.export(exports, \"createSHA256\", ()=>createSHA256);\nparcelHelpers.export(exports, \"createSHA3\", ()=>createSHA3);\nparcelHelpers.export(exports, \"createSHA384\", ()=>createSHA384);\nparcelHelpers.export(exports, \"createSHA512\", ()=>createSHA512);\nparcelHelpers.export(exports, \"createSM3\", ()=>createSM3);\nparcelHelpers.export(exports, \"createWhirlpool\", ()=>createWhirlpool);\nparcelHelpers.export(exports, \"createXXHash128\", ()=>createXXHash128);\nparcelHelpers.export(exports, \"createXXHash3\", ()=>createXXHash3);\nparcelHelpers.export(exports, \"createXXHash32\", ()=>createXXHash32);\nparcelHelpers.export(exports, \"createXXHash64\", ()=>createXXHash64);\nparcelHelpers.export(exports, \"keccak\", ()=>keccak);\nparcelHelpers.export(exports, \"md4\", ()=>md4);\nparcelHelpers.export(exports, \"md5\", ()=>md5);\nparcelHelpers.export(exports, \"pbkdf2\", ()=>pbkdf2);\nparcelHelpers.export(exports, \"ripemd160\", ()=>ripemd160);\nparcelHelpers.export(exports, \"scrypt\", ()=>scrypt);\nparcelHelpers.export(exports, \"sha1\", ()=>sha1);\nparcelHelpers.export(exports, \"sha224\", ()=>sha224);\nparcelHelpers.export(exports, \"sha256\", ()=>sha256);\nparcelHelpers.export(exports, \"sha3\", ()=>sha3);\nparcelHelpers.export(exports, \"sha384\", ()=>sha384);\nparcelHelpers.export(exports, \"sha512\", ()=>sha512);\nparcelHelpers.export(exports, \"sm3\", ()=>sm3);\nparcelHelpers.export(exports, \"whirlpool\", ()=>whirlpool);\nparcelHelpers.export(exports, \"xxhash128\", ()=>xxhash128);\nparcelHelpers.export(exports, \"xxhash3\", ()=>xxhash3);\nparcelHelpers.export(exports, \"xxhash32\", ()=>xxhash32);\nparcelHelpers.export(exports, \"xxhash64\", ()=>xxhash64);\nvar global = arguments[3];\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\ntypeof SuppressedError === \"function\" && SuppressedError;\nclass Mutex {\n    constructor(){\n        this.mutex = Promise.resolve();\n    }\n    lock() {\n        let begin = ()=>{};\n        this.mutex = this.mutex.then(()=>new Promise(begin));\n        return new Promise((res)=>{\n            begin = res;\n        });\n    }\n    dispatch(fn) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const unlock = yield this.lock();\n            try {\n                return yield Promise.resolve(fn());\n            } finally{\n                unlock();\n            }\n        });\n    }\n}\n/* eslint-disable import/prefer-default-export */ /* eslint-disable no-bitwise */ var _a;\nfunction getGlobal() {\n    if (typeof globalThis !== \"undefined\") return globalThis;\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof self !== \"undefined\") return self;\n    if (typeof window !== \"undefined\") return window;\n    return global;\n}\nconst globalObject = getGlobal();\nconst nodeBuffer = (_a = globalObject.Buffer) !== null && _a !== void 0 ? _a : null;\nconst textEncoder = globalObject.TextEncoder ? new globalObject.TextEncoder() : null;\nfunction intArrayToString(arr, len) {\n    return String.fromCharCode(...arr.subarray(0, len));\n}\nfunction hexCharCodesToInt(a, b) {\n    return (a & 0xF) + (a >> 6 | a >> 3 & 0x8) << 4 | (b & 0xF) + (b >> 6 | b >> 3 & 0x8);\n}\nfunction writeHexToUInt8(buf, str) {\n    const size = str.length >> 1;\n    for(let i = 0; i < size; i++){\n        const index = i << 1;\n        buf[i] = hexCharCodesToInt(str.charCodeAt(index), str.charCodeAt(index + 1));\n    }\n}\nfunction hexStringEqualsUInt8(str, buf) {\n    if (str.length !== buf.length * 2) return false;\n    for(let i = 0; i < buf.length; i++){\n        const strIndex = i << 1;\n        if (buf[i] !== hexCharCodesToInt(str.charCodeAt(strIndex), str.charCodeAt(strIndex + 1))) return false;\n    }\n    return true;\n}\nconst alpha = \"a\".charCodeAt(0) - 10;\nconst digit = \"0\".charCodeAt(0);\nfunction getDigestHex(tmpBuffer, input, hashLength) {\n    let p = 0;\n    /* eslint-disable no-plusplus */ for(let i = 0; i < hashLength; i++){\n        let nibble = input[i] >>> 4;\n        tmpBuffer[p++] = nibble > 9 ? nibble + alpha : nibble + digit;\n        nibble = input[i] & 0xF;\n        tmpBuffer[p++] = nibble > 9 ? nibble + alpha : nibble + digit;\n    }\n    /* eslint-enable no-plusplus */ return String.fromCharCode.apply(null, tmpBuffer);\n}\nconst getUInt8Buffer = nodeBuffer !== null ? (data)=>{\n    if (typeof data === \"string\") {\n        const buf = nodeBuffer.from(data, \"utf8\");\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.length);\n    }\n    if (nodeBuffer.isBuffer(data)) return new Uint8Array(data.buffer, data.byteOffset, data.length);\n    if (ArrayBuffer.isView(data)) return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    throw new Error(\"Invalid data type!\");\n} : (data)=>{\n    if (typeof data === \"string\") return textEncoder.encode(data);\n    if (ArrayBuffer.isView(data)) return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    throw new Error(\"Invalid data type!\");\n};\nconst base64Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst base64Lookup = new Uint8Array(256);\nfor(let i = 0; i < base64Chars.length; i++)base64Lookup[base64Chars.charCodeAt(i)] = i;\nfunction encodeBase64(data, pad = true) {\n    const len = data.length;\n    const extraBytes = len % 3;\n    const parts = [];\n    const len2 = len - extraBytes;\n    for(let i = 0; i < len2; i += 3){\n        const tmp = (data[i] << 16 & 0xFF0000) + (data[i + 1] << 8 & 0xFF00) + (data[i + 2] & 0xFF);\n        const triplet = base64Chars.charAt(tmp >> 18 & 0x3F) + base64Chars.charAt(tmp >> 12 & 0x3F) + base64Chars.charAt(tmp >> 6 & 0x3F) + base64Chars.charAt(tmp & 0x3F);\n        parts.push(triplet);\n    }\n    if (extraBytes === 1) {\n        const tmp = data[len - 1];\n        const a = base64Chars.charAt(tmp >> 2);\n        const b = base64Chars.charAt(tmp << 4 & 0x3F);\n        parts.push(`${a}${b}`);\n        if (pad) parts.push(\"==\");\n    } else if (extraBytes === 2) {\n        const tmp = (data[len - 2] << 8) + data[len - 1];\n        const a = base64Chars.charAt(tmp >> 10);\n        const b = base64Chars.charAt(tmp >> 4 & 0x3F);\n        const c = base64Chars.charAt(tmp << 2 & 0x3F);\n        parts.push(`${a}${b}${c}`);\n        if (pad) parts.push(\"=\");\n    }\n    return parts.join(\"\");\n}\nfunction getDecodeBase64Length(data) {\n    let bufferLength = Math.floor(data.length * 0.75);\n    const len = data.length;\n    if (data[len - 1] === \"=\") {\n        bufferLength -= 1;\n        if (data[len - 2] === \"=\") bufferLength -= 1;\n    }\n    return bufferLength;\n}\nfunction decodeBase64(data) {\n    const bufferLength = getDecodeBase64Length(data);\n    const len = data.length;\n    const bytes = new Uint8Array(bufferLength);\n    let p = 0;\n    for(let i = 0; i < len; i += 4){\n        const encoded1 = base64Lookup[data.charCodeAt(i)];\n        const encoded2 = base64Lookup[data.charCodeAt(i + 1)];\n        const encoded3 = base64Lookup[data.charCodeAt(i + 2)];\n        const encoded4 = base64Lookup[data.charCodeAt(i + 3)];\n        bytes[p] = encoded1 << 2 | encoded2 >> 4;\n        p += 1;\n        bytes[p] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        p += 1;\n        bytes[p] = (encoded3 & 3) << 6 | encoded4 & 63;\n        p += 1;\n    }\n    return bytes;\n}\nconst MAX_HEAP = 16384;\nconst WASM_FUNC_HASH_LENGTH = 4;\nconst wasmMutex = new Mutex();\nconst wasmModuleCache = new Map();\nfunction WASMInterface(binary, hashLength) {\n    return __awaiter(this, void 0, void 0, function*() {\n        let wasmInstance = null;\n        let memoryView = null;\n        let initialized = false;\n        if (typeof WebAssembly === \"undefined\") throw new Error(\"WebAssembly is not supported in this environment!\");\n        const writeMemory = (data, offset = 0)=>{\n            memoryView.set(data, offset);\n        };\n        const getMemory = ()=>memoryView;\n        const getExports = ()=>wasmInstance.exports;\n        const setMemorySize = (totalSize)=>{\n            wasmInstance.exports.Hash_SetMemorySize(totalSize);\n            const arrayOffset = wasmInstance.exports.Hash_GetBuffer();\n            const memoryBuffer = wasmInstance.exports.memory.buffer;\n            memoryView = new Uint8Array(memoryBuffer, arrayOffset, totalSize);\n        };\n        const getStateSize = ()=>{\n            const view = new DataView(wasmInstance.exports.memory.buffer);\n            const stateSize = view.getUint32(wasmInstance.exports.STATE_SIZE, true);\n            return stateSize;\n        };\n        const loadWASMPromise = wasmMutex.dispatch(()=>__awaiter(this, void 0, void 0, function*() {\n                if (!wasmModuleCache.has(binary.name)) {\n                    const asm = decodeBase64(binary.data);\n                    const promise = WebAssembly.compile(asm);\n                    wasmModuleCache.set(binary.name, promise);\n                }\n                const module = yield wasmModuleCache.get(binary.name);\n                wasmInstance = yield WebAssembly.instantiate(module, {\n                });\n            // wasmInstance.exports._start();\n            }));\n        const setupInterface = ()=>__awaiter(this, void 0, void 0, function*() {\n                if (!wasmInstance) yield loadWASMPromise;\n                const arrayOffset = wasmInstance.exports.Hash_GetBuffer();\n                const memoryBuffer = wasmInstance.exports.memory.buffer;\n                memoryView = new Uint8Array(memoryBuffer, arrayOffset, MAX_HEAP);\n            });\n        const init = (bits = null)=>{\n            initialized = true;\n            wasmInstance.exports.Hash_Init(bits);\n        };\n        const updateUInt8Array = (data)=>{\n            let read = 0;\n            while(read < data.length){\n                const chunk = data.subarray(read, read + MAX_HEAP);\n                read += chunk.length;\n                memoryView.set(chunk);\n                wasmInstance.exports.Hash_Update(chunk.length);\n            }\n        };\n        const update = (data)=>{\n            if (!initialized) throw new Error(\"update() called before init()\");\n            const Uint8Buffer = getUInt8Buffer(data);\n            updateUInt8Array(Uint8Buffer);\n        };\n        const digestChars = new Uint8Array(hashLength * 2);\n        const digest = (outputType, padding = null)=>{\n            if (!initialized) throw new Error(\"digest() called before init()\");\n            initialized = false;\n            wasmInstance.exports.Hash_Final(padding);\n            if (outputType === \"binary\") // the data is copied to allow GC of the original memory object\n            return memoryView.slice(0, hashLength);\n            return getDigestHex(digestChars, memoryView, hashLength);\n        };\n        const save = ()=>{\n            if (!initialized) throw new Error(\"save() can only be called after init() and before digest()\");\n            const stateOffset = wasmInstance.exports.Hash_GetState();\n            const stateLength = getStateSize();\n            const memoryBuffer = wasmInstance.exports.memory.buffer;\n            const internalState = new Uint8Array(memoryBuffer, stateOffset, stateLength);\n            // prefix is 4 bytes from SHA1 hash of the WASM binary\n            // it is used to detect incompatible internal states between different versions of hash-wasm\n            const prefixedState = new Uint8Array(WASM_FUNC_HASH_LENGTH + stateLength);\n            writeHexToUInt8(prefixedState, binary.hash);\n            prefixedState.set(internalState, WASM_FUNC_HASH_LENGTH);\n            return prefixedState;\n        };\n        const load = (state)=>{\n            if (!(state instanceof Uint8Array)) throw new Error(\"load() expects an Uint8Array generated by save()\");\n            const stateOffset = wasmInstance.exports.Hash_GetState();\n            const stateLength = getStateSize();\n            const overallLength = WASM_FUNC_HASH_LENGTH + stateLength;\n            const memoryBuffer = wasmInstance.exports.memory.buffer;\n            if (state.length !== overallLength) throw new Error(`Bad state length (expected ${overallLength} bytes, got ${state.length})`);\n            if (!hexStringEqualsUInt8(binary.hash, state.subarray(0, WASM_FUNC_HASH_LENGTH))) throw new Error(\"This state was written by an incompatible hash implementation\");\n            const internalState = state.subarray(WASM_FUNC_HASH_LENGTH);\n            new Uint8Array(memoryBuffer, stateOffset, stateLength).set(internalState);\n            initialized = true;\n        };\n        const isDataShort = (data)=>{\n            if (typeof data === \"string\") // worst case is 4 bytes / char\n            return data.length < MAX_HEAP / 4;\n            return data.byteLength < MAX_HEAP;\n        };\n        let canSimplify = isDataShort;\n        switch(binary.name){\n            case \"argon2\":\n            case \"scrypt\":\n                canSimplify = ()=>true;\n                break;\n            case \"blake2b\":\n            case \"blake2s\":\n                // if there is a key at blake2 then cannot simplify\n                canSimplify = (data, initParam)=>initParam <= 512 && isDataShort(data);\n                break;\n            case \"blake3\":\n                // if there is a key at blake3 then cannot simplify\n                canSimplify = (data, initParam)=>initParam === 0 && isDataShort(data);\n                break;\n            case \"xxhash64\":\n            case \"xxhash3\":\n            case \"xxhash128\":\n                canSimplify = ()=>false;\n                break;\n        }\n        // shorthand for (init + update + digest) for better performance\n        const calculate = (data, initParam = null, digestParam = null)=>{\n            if (!canSimplify(data, initParam)) {\n                init(initParam);\n                update(data);\n                return digest(\"hex\", digestParam);\n            }\n            const buffer = getUInt8Buffer(data);\n            memoryView.set(buffer);\n            wasmInstance.exports.Hash_Calculate(buffer.length, initParam, digestParam);\n            return getDigestHex(digestChars, memoryView, hashLength);\n        };\n        yield setupInterface();\n        return {\n            getMemory,\n            writeMemory,\n            getExports,\n            setMemorySize,\n            init,\n            update,\n            digest,\n            save,\n            load,\n            calculate,\n            hashLength\n        };\n    });\n}\nvar name$k = \"adler32\";\nvar data$k = \"AGFzbQEAAAABDANgAAF/YAAAYAF/AAMHBgABAgEAAgUEAQECAgYOAn8BQYCJBQt/AEGACAsHcAgGbWVtb3J5AgAOSGFzaF9HZXRCdWZmZXIAAAlIYXNoX0luaXQAAQtIYXNoX1VwZGF0ZQACCkhhc2hfRmluYWwAAw1IYXNoX0dldFN0YXRlAAQOSGFzaF9DYWxjdWxhdGUABQpTVEFURV9TSVpFAwEK6wkGBQBBgAkLCgBBAEEBNgKECAvjCAEHf0EAKAKECCIBQf//A3EhAiABQRB2IQMCQAJAIABBAUcNACACQQAtAIAJaiIBQY+AfGogASABQfD/A0sbIgEgA2oiBEEQdCIFQYCAPGogBSAEQfD/A0sbIAFyIQEMAQsCQAJAAkACQAJAIABBEEkNAEGACSEGIABBsCtJDQFBgAkhBgNAQQAhBQNAIAYgBWoiASgCACIEQf8BcSACaiICIANqIAIgBEEIdkH/AXFqIgJqIAIgBEEQdkH/AXFqIgJqIAIgBEEYdmoiAmogAiABQQRqKAIAIgRB/wFxaiICaiACIARBCHZB/wFxaiICaiACIARBEHZB/wFxaiICaiACIARBGHZqIgJqIAIgAUEIaigCACIEQf8BcWoiAmogAiAEQQh2Qf8BcWoiAmogAiAEQRB2Qf8BcWoiAmogAiAEQRh2aiIEaiAEIAFBDGooAgAiAUH/AXFqIgRqIAQgAUEIdkH/AXFqIgRqIAQgAUEQdkH/AXFqIgRqIAQgAUEYdmoiAmohAyAFQRBqIgVBsCtHDQALIANB8f8DcCEDIAJB8f8DcCECIAZBsCtqIQYgAEHQVGoiAEGvK0sNAAsgAEUNBCAAQQ9LDQEMAgsCQCAARQ0AAkACQCAAQQNxIgUNAEGACSEBIAAhBAwBCyAAQXxxIQRBACEBA0AgAiABQYAJai0AAGoiAiADaiEDIAUgAUEBaiIBRw0ACyAFQYAJaiEBCyAAQQRJDQADQCACIAEtAABqIgUgAS0AAWoiBiABLQACaiIAIAFBA2otAABqIgIgACAGIAUgA2pqamohAyABQQRqIQEgBEF8aiIEDQALCyACQY+AfGogAiACQfD/A0sbIANB8f8DcEEQdHIhAQwECwNAIAYoAgAiAUH/AXEgAmoiBCADaiAEIAFBCHZB/wFxaiIEaiAEIAFBEHZB/wFxaiIEaiAEIAFBGHZqIgRqIAQgBkEEaigCACIBQf8BcWoiBGogBCABQQh2Qf8BcWoiBGogBCABQRB2Qf8BcWoiBGogBCABQRh2aiIEaiAEIAZBCGooAgAiAUH/AXFqIgRqIAQgAUEIdkH/AXFqIgRqIAQgAUEQdkH/AXFqIgRqIAQgAUEYdmoiBGogBCAGQQxqKAIAIgFB/wFxaiIEaiAEIAFBCHZB/wFxaiIEaiAEIAFBEHZB/wFxaiIEaiAEIAFBGHZqIgJqIQMgBkEQaiEGIABBcGoiAEEPSw0ACyAARQ0BCyAAQX9qIQcCQCAAQQNxIgVFDQAgAEF8cSEAIAUhBCAGIQEDQCACIAEtAABqIgIgA2ohAyABQQFqIQEgBEF/aiIEDQALIAYgBWohBgsgB0EDSQ0AA0AgAiAGLQAAaiIBIAYtAAFqIgQgBi0AAmoiBSAGQQNqLQAAaiICIAUgBCABIANqampqIQMgBkEEaiEGIABBfGoiAA0ACwsgA0Hx/wNwIQMgAkHx/wNwIQILIAIgA0EQdHIhAQtBACABNgKECAsxAQF/QQBBACgChAgiAEEYdCAAQYD+A3FBCHRyIABBCHZBgP4DcSAAQRh2cnI2AoAJCwUAQYQICzsAQQBBATYChAggABACQQBBACgChAgiAEEYdCAAQYD+A3FBCHRyIABBCHZBgP4DcSAAQRh2cnI2AoAJCwsVAgBBgAgLBAQAAAAAQYQICwQBAAAA\";\nvar hash$k = \"02ddbd17\";\nvar wasmJson$k = {\n    name: name$k,\n    data: data$k,\n    hash: hash$k\n};\nfunction lockedCreate(mutex, binary, hashLength) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const unlock = yield mutex.lock();\n        const wasm = yield WASMInterface(binary, hashLength);\n        unlock();\n        return wasm;\n    });\n}\nconst mutex$l = new Mutex();\nlet wasmCache$l = null;\n/**\n * Calculates Adler-32 hash. The resulting 32-bit hash is stored in\n * network byte order (big-endian).\n *\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */ function adler32(data) {\n    if (wasmCache$l === null) return lockedCreate(mutex$l, wasmJson$k, 4).then((wasm)=>{\n        wasmCache$l = wasm;\n        return wasmCache$l.calculate(data);\n    });\n    try {\n        const hash = wasmCache$l.calculate(data);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new Adler-32 hash instance\n */ function createAdler32() {\n    return WASMInterface(wasmJson$k, 4).then((wasm)=>{\n        wasm.init();\n        const obj = {\n            init: ()=>{\n                wasm.init();\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 4,\n            digestSize: 4\n        };\n        return obj;\n    });\n}\nvar name$j = \"blake2b\";\nvar data$j = \"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\";\nvar hash$j = \"656e0f66\";\nvar wasmJson$j = {\n    name: name$j,\n    data: data$j,\n    hash: hash$j\n};\nconst mutex$k = new Mutex();\nlet wasmCache$k = null;\nfunction validateBits$4(bits) {\n    if (!Number.isInteger(bits) || bits < 8 || bits > 512 || bits % 8 !== 0) return new Error(\"Invalid variant! Valid values: 8, 16, ..., 512\");\n    return null;\n}\nfunction getInitParam$1(outputBits, keyBits) {\n    // eslint-disable-next-line no-bitwise\n    return outputBits | keyBits << 16;\n}\n/**\n * Calculates BLAKE2b hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param bits Number of output bits, which has to be a number\n *             divisible by 8, between 8 and 512. Defaults to 512.\n * @param key Optional key (string, Buffer or TypedArray). Maximum length is 64 bytes.\n * @returns Computed hash as a hexadecimal string\n */ function blake2b(data, bits = 512, key = null) {\n    if (validateBits$4(bits)) return Promise.reject(validateBits$4(bits));\n    let keyBuffer = null;\n    let initParam = bits;\n    if (key !== null) {\n        keyBuffer = getUInt8Buffer(key);\n        if (keyBuffer.length > 64) return Promise.reject(new Error(\"Max key length is 64 bytes\"));\n        initParam = getInitParam$1(bits, keyBuffer.length);\n    }\n    const hashLength = bits / 8;\n    if (wasmCache$k === null || wasmCache$k.hashLength !== hashLength) return lockedCreate(mutex$k, wasmJson$j, hashLength).then((wasm)=>{\n        wasmCache$k = wasm;\n        if (initParam > 512) wasmCache$k.writeMemory(keyBuffer);\n        return wasmCache$k.calculate(data, initParam);\n    });\n    try {\n        if (initParam > 512) wasmCache$k.writeMemory(keyBuffer);\n        const hash = wasmCache$k.calculate(data, initParam);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new BLAKE2b hash instance\n * @param bits Number of output bits, which has to be a number\n *             divisible by 8, between 8 and 512. Defaults to 512.\n * @param key Optional key (string, Buffer or TypedArray). Maximum length is 64 bytes.\n */ function createBLAKE2b(bits = 512, key = null) {\n    if (validateBits$4(bits)) return Promise.reject(validateBits$4(bits));\n    let keyBuffer = null;\n    let initParam = bits;\n    if (key !== null) {\n        keyBuffer = getUInt8Buffer(key);\n        if (keyBuffer.length > 64) return Promise.reject(new Error(\"Max key length is 64 bytes\"));\n        initParam = getInitParam$1(bits, keyBuffer.length);\n    }\n    const outputSize = bits / 8;\n    return WASMInterface(wasmJson$j, outputSize).then((wasm)=>{\n        if (initParam > 512) wasm.writeMemory(keyBuffer);\n        wasm.init(initParam);\n        const obj = {\n            init: initParam > 512 ? ()=>{\n                wasm.writeMemory(keyBuffer);\n                wasm.init(initParam);\n                return obj;\n            } : ()=>{\n                wasm.init(initParam);\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 128,\n            digestSize: outputSize\n        };\n        return obj;\n    });\n}\nvar name$i = \"argon2\";\nvar data$i = \"AGFzbQEAAAABKQVgAX8Bf2AAAX9gEH9/f39/f39/f39/f39/f38AYAR/f39/AGACf38AAwYFAAECAwQFBgEBAoCAAgYIAX8BQZCoBAsHQQQGbWVtb3J5AgASSGFzaF9TZXRNZW1vcnlTaXplAAAOSGFzaF9HZXRCdWZmZXIAAQ5IYXNoX0NhbGN1bGF0ZQAECvkyBVgBAn9BACEBAkBBACgCiAgiAiAARg0AAkAgACACayIAQRB2IABBgIB8cSAASWoiAEAAQX9HDQBB/wHADwtBACEBQQBBACkDiAggAEEQdK18NwOICAsgAcALcAECfwJAQQAoAoAIIgANAEEAPwBBEHQiADYCgAhBACgCiAgiAUGAgCBGDQACQEGAgCAgAWsiAEEQdiAAQYCAfHEgAElqIgBAAEF/Rw0AQQAPC0EAQQApA4gIIABBEHStfDcDiAhBACgCgAghAAsgAAvcDgECfiAAIAQpAwAiECAAKQMAIhF8IBFCAYZC/v///x+DIBBC/////w+DfnwiEDcDACAMIBAgDCkDAIVCIIkiEDcDACAIIBAgCCkDACIRfCARQgGGQv7///8fgyAQQv////8Pg358IhA3AwAgBCAQIAQpAwCFQiiJIhA3AwAgACAQIAApAwAiEXwgEEL/////D4MgEUIBhkL+////H4N+fCIQNwMAIAwgECAMKQMAhUIwiSIQNwMAIAggECAIKQMAIhF8IBBC/////w+DIBFCAYZC/v///x+DfnwiEDcDACAEIBAgBCkDAIVCAYk3AwAgASAFKQMAIhAgASkDACIRfCARQgGGQv7///8fgyAQQv////8Pg358IhA3AwAgDSAQIA0pAwCFQiCJIhA3AwAgCSAQIAkpAwAiEXwgEUIBhkL+////H4MgEEL/////D4N+fCIQNwMAIAUgECAFKQMAhUIoiSIQNwMAIAEgECABKQMAIhF8IBBC/////w+DIBFCAYZC/v///x+DfnwiEDcDACANIBAgDSkDAIVCMIkiEDcDACAJIBAgCSkDACIRfCAQQv////8PgyARQgGGQv7///8fg358IhA3AwAgBSAQIAUpAwCFQgGJNwMAIAIgBikDACIQIAIpAwAiEXwgEUIBhkL+////H4MgEEL/////D4N+fCIQNwMAIA4gECAOKQMAhUIgiSIQNwMAIAogECAKKQMAIhF8IBFCAYZC/v///x+DIBBC/////w+DfnwiEDcDACAGIBAgBikDAIVCKIkiEDcDACACIBAgAikDACIRfCAQQv////8PgyARQgGGQv7///8fg358IhA3AwAgDiAQIA4pAwCFQjCJIhA3AwAgCiAQIAopAwAiEXwgEEL/////D4MgEUIBhkL+////H4N+fCIQNwMAIAYgECAGKQMAhUIBiTcDACADIAcpAwAiECADKQMAIhF8IBFCAYZC/v///x+DIBBC/////w+DfnwiEDcDACAPIBAgDykDAIVCIIkiEDcDACALIBAgCykDACIRfCARQgGGQv7///8fgyAQQv////8Pg358IhA3AwAgByAQIAcpAwCFQiiJIhA3AwAgAyAQIAMpAwAiEXwgEEL/////D4MgEUIBhkL+////H4N+fCIQNwMAIA8gECAPKQMAhUIwiSIQNwMAIAsgECALKQMAIhF8IBBC/////w+DIBFCAYZC/v///x+DfnwiEDcDACAHIBAgBykDAIVCAYk3AwAgACAFKQMAIhAgACkDACIRfCARQgGGQv7///8fgyAQQv////8Pg358IhA3AwAgDyAQIA8pAwCFQiCJIhA3AwAgCiAQIAopAwAiEXwgEUIBhkL+////H4MgEEL/////D4N+fCIQNwMAIAUgECAFKQMAhUIoiSIQNwMAIAAgECAAKQMAIhF8IBBC/////w+DIBFCAYZC/v///x+DfnwiEDcDACAPIBAgDykDAIVCMIkiEDcDACAKIBAgCikDACIRfCAQQv////8PgyARQgGGQv7///8fg358IhA3AwAgBSAQIAUpAwCFQgGJNwMAIAEgBikDACIQIAEpAwAiEXwgEUIBhkL+////H4MgEEL/////D4N+fCIQNwMAIAwgECAMKQMAhUIgiSIQNwMAIAsgECALKQMAIhF8IBFCAYZC/v///x+DIBBC/////w+DfnwiEDcDACAGIBAgBikDAIVCKIkiEDcDACABIBAgASkDACIRfCAQQv////8PgyARQgGGQv7///8fg358IhA3AwAgDCAQIAwpAwCFQjCJIhA3AwAgCyAQIAspAwAiEXwgEEL/////D4MgEUIBhkL+////H4N+fCIQNwMAIAYgECAGKQMAhUIBiTcDACACIAcpAwAiECACKQMAIhF8IBFCAYZC/v///x+DIBBC/////w+DfnwiEDcDACANIBAgDSkDAIVCIIkiEDcDACAIIBAgCCkDACIRfCARQgGGQv7///8fgyAQQv////8Pg358IhA3AwAgByAQIAcpAwCFQiiJIhA3AwAgAiAQIAIpAwAiEXwgEEL/////D4MgEUIBhkL+////H4N+fCIQNwMAIA0gECANKQMAhUIwiSIQNwMAIAggECAIKQMAIhF8IBBC/////w+DIBFCAYZC/v///x+DfnwiEDcDACAHIBAgBykDAIVCAYk3AwAgAyAEKQMAIhAgAykDACIRfCARQgGGQv7///8fgyAQQv////8Pg358IhA3AwAgDiAQIA4pAwCFQiCJIhA3AwAgCSAQIAkpAwAiEXwgEUIBhkL+////H4MgEEL/////D4N+fCIQNwMAIAQgECAEKQMAhUIoiSIQNwMAIAMgECADKQMAIhF8IBBC/////w+DIBFCAYZC/v///x+DfnwiEDcDACAOIBAgDikDAIVCMIkiEDcDACAJIBAgCSkDACIRfCAQQv////8PgyARQgGGQv7///8fg358IhA3AwAgBCAQIAQpAwCFQgGJNwMAC98aAQN/QQAhBEEAIAIpAwAgASkDAIU3A5AIQQAgAikDCCABKQMIhTcDmAhBACACKQMQIAEpAxCFNwOgCEEAIAIpAxggASkDGIU3A6gIQQAgAikDICABKQMghTcDsAhBACACKQMoIAEpAyiFNwO4CEEAIAIpAzAgASkDMIU3A8AIQQAgAikDOCABKQM4hTcDyAhBACACKQNAIAEpA0CFNwPQCEEAIAIpA0ggASkDSIU3A9gIQQAgAikDUCABKQNQhTcD4AhBACACKQNYIAEpA1iFNwPoCEEAIAIpA2AgASkDYIU3A/AIQQAgAikDaCABKQNohTcD+AhBACACKQNwIAEpA3CFNwOACUEAIAIpA3ggASkDeIU3A4gJQQAgAikDgAEgASkDgAGFNwOQCUEAIAIpA4gBIAEpA4gBhTcDmAlBACACKQOQASABKQOQAYU3A6AJQQAgAikDmAEgASkDmAGFNwOoCUEAIAIpA6ABIAEpA6ABhTcDsAlBACACKQOoASABKQOoAYU3A7gJQQAgAikDsAEgASkDsAGFNwPACUEAIAIpA7gBIAEpA7gBhTcDyAlBACACKQPAASABKQPAAYU3A9AJQQAgAikDyAEgASkD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\";\nvar hash$i = \"7ab14c91\";\nvar wasmJson$i = {\n    name: name$i,\n    data: data$i,\n    hash: hash$i\n};\nfunction encodeResult(salt, options, res) {\n    const parameters = [\n        `m=${options.memorySize}`,\n        `t=${options.iterations}`,\n        `p=${options.parallelism}`\n    ].join(\",\");\n    return `$argon2${options.hashType}$v=19$${parameters}$${encodeBase64(salt, false)}$${encodeBase64(res, false)}`;\n}\nconst uint32View = new DataView(new ArrayBuffer(4));\nfunction int32LE(x) {\n    uint32View.setInt32(0, x, true);\n    return new Uint8Array(uint32View.buffer);\n}\nfunction hashFunc(blake512, buf, len) {\n    return __awaiter(this, void 0, void 0, function*() {\n        if (len <= 64) {\n            const blake = yield createBLAKE2b(len * 8);\n            blake.update(int32LE(len));\n            blake.update(buf);\n            return blake.digest(\"binary\");\n        }\n        const r = Math.ceil(len / 32) - 2;\n        const ret = new Uint8Array(len);\n        blake512.init();\n        blake512.update(int32LE(len));\n        blake512.update(buf);\n        let vp = blake512.digest(\"binary\");\n        ret.set(vp.subarray(0, 32), 0);\n        for(let i = 1; i < r; i++){\n            blake512.init();\n            blake512.update(vp);\n            vp = blake512.digest(\"binary\");\n            ret.set(vp.subarray(0, 32), i * 32);\n        }\n        const partialBytesNeeded = len - 32 * r;\n        let blakeSmall;\n        if (partialBytesNeeded === 64) {\n            blakeSmall = blake512;\n            blakeSmall.init();\n        } else blakeSmall = yield createBLAKE2b(partialBytesNeeded * 8);\n        blakeSmall.update(vp);\n        vp = blakeSmall.digest(\"binary\");\n        ret.set(vp.subarray(0, partialBytesNeeded), r * 32);\n        return ret;\n    });\n}\nfunction getHashType(type) {\n    switch(type){\n        case \"d\":\n            return 0;\n        case \"i\":\n            return 1;\n        default:\n            return 2;\n    }\n}\nfunction argon2Internal(options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function*() {\n        const { parallelism, iterations, hashLength } = options;\n        const password = getUInt8Buffer(options.password);\n        const salt = getUInt8Buffer(options.salt);\n        const version = 0x13;\n        const hashType = getHashType(options.hashType);\n        const { memorySize } = options; // in KB\n        const secret = getUInt8Buffer((_a = options.secret) !== null && _a !== void 0 ? _a : \"\");\n        const [argon2Interface, blake512] = yield Promise.all([\n            WASMInterface(wasmJson$i, 1024),\n            createBLAKE2b(512)\n        ]);\n        // last block is for storing the init vector\n        argon2Interface.setMemorySize(memorySize * 1024 + 1024);\n        const initVector = new Uint8Array(24);\n        const initVectorView = new DataView(initVector.buffer);\n        initVectorView.setInt32(0, parallelism, true);\n        initVectorView.setInt32(4, hashLength, true);\n        initVectorView.setInt32(8, memorySize, true);\n        initVectorView.setInt32(12, iterations, true);\n        initVectorView.setInt32(16, version, true);\n        initVectorView.setInt32(20, hashType, true);\n        argon2Interface.writeMemory(initVector, memorySize * 1024);\n        blake512.init();\n        blake512.update(initVector);\n        blake512.update(int32LE(password.length));\n        blake512.update(password);\n        blake512.update(int32LE(salt.length));\n        blake512.update(salt);\n        blake512.update(int32LE(secret.length));\n        blake512.update(secret);\n        blake512.update(int32LE(0)); // associatedData length + associatedData\n        const segments = Math.floor(memorySize / (parallelism * 4)); // length of each lane\n        const lanes = segments * 4;\n        const param = new Uint8Array(72);\n        const H0 = blake512.digest(\"binary\");\n        param.set(H0);\n        for(let lane = 0; lane < parallelism; lane++){\n            param.set(int32LE(0), 64);\n            param.set(int32LE(lane), 68);\n            let position = lane * lanes;\n            let chunk = yield hashFunc(blake512, param, 1024);\n            argon2Interface.writeMemory(chunk, position * 1024);\n            position += 1;\n            param.set(int32LE(1), 64);\n            chunk = yield hashFunc(blake512, param, 1024);\n            argon2Interface.writeMemory(chunk, position * 1024);\n        }\n        const C = new Uint8Array(1024);\n        writeHexToUInt8(C, argon2Interface.calculate(new Uint8Array([]), memorySize));\n        const res = yield hashFunc(blake512, C, hashLength);\n        if (options.outputType === \"hex\") {\n            const digestChars = new Uint8Array(hashLength * 2);\n            return getDigestHex(digestChars, res, hashLength);\n        }\n        if (options.outputType === \"encoded\") return encodeResult(salt, options, res);\n        // return binary format\n        return res;\n    });\n}\nconst validateOptions$3 = (options)=>{\n    var _a;\n    if (!options || typeof options !== \"object\") throw new Error(\"Invalid options parameter. It requires an object.\");\n    if (!options.password) throw new Error(\"Password must be specified\");\n    options.password = getUInt8Buffer(options.password);\n    if (options.password.length < 1) throw new Error(\"Password must be specified\");\n    if (!options.salt) throw new Error(\"Salt must be specified\");\n    options.salt = getUInt8Buffer(options.salt);\n    if (options.salt.length < 8) throw new Error(\"Salt should be at least 8 bytes long\");\n    options.secret = getUInt8Buffer((_a = options.secret) !== null && _a !== void 0 ? _a : \"\");\n    if (!Number.isInteger(options.iterations) || options.iterations < 1) throw new Error(\"Iterations should be a positive number\");\n    if (!Number.isInteger(options.parallelism) || options.parallelism < 1) throw new Error(\"Parallelism should be a positive number\");\n    if (!Number.isInteger(options.hashLength) || options.hashLength < 4) throw new Error(\"Hash length should be at least 4 bytes.\");\n    if (!Number.isInteger(options.memorySize)) throw new Error(\"Memory size should be specified.\");\n    if (options.memorySize < 8 * options.parallelism) throw new Error(\"Memory size should be at least 8 * parallelism.\");\n    if (options.outputType === undefined) options.outputType = \"hex\";\n    if (![\n        \"hex\",\n        \"binary\",\n        \"encoded\"\n    ].includes(options.outputType)) throw new Error(`Insupported output type ${options.outputType}. Valid values: ['hex', 'binary', 'encoded']`);\n};\n/**\n * Calculates hash using the argon2i password-hashing function\n * @returns Computed hash\n */ function argon2i(options) {\n    return __awaiter(this, void 0, void 0, function*() {\n        validateOptions$3(options);\n        return argon2Internal(Object.assign(Object.assign({}, options), {\n            hashType: \"i\"\n        }));\n    });\n}\n/**\n * Calculates hash using the argon2id password-hashing function\n * @returns Computed hash\n */ function argon2id(options) {\n    return __awaiter(this, void 0, void 0, function*() {\n        validateOptions$3(options);\n        return argon2Internal(Object.assign(Object.assign({}, options), {\n            hashType: \"id\"\n        }));\n    });\n}\n/**\n * Calculates hash using the argon2d password-hashing function\n * @returns Computed hash\n */ function argon2d(options) {\n    return __awaiter(this, void 0, void 0, function*() {\n        validateOptions$3(options);\n        return argon2Internal(Object.assign(Object.assign({}, options), {\n            hashType: \"d\"\n        }));\n    });\n}\nconst getHashParameters = (password, encoded, secret)=>{\n    const regex = /^\\$argon2(id|i|d)\\$v=([0-9]+)\\$((?:[mtp]=[0-9]+,){2}[mtp]=[0-9]+)\\$([A-Za-z0-9+/]+)\\$([A-Za-z0-9+/]+)$/;\n    const match = encoded.match(regex);\n    if (!match) throw new Error(\"Invalid hash\");\n    const [, hashType, version, parameters, salt, hash] = match;\n    if (version !== \"19\") throw new Error(`Unsupported version: ${version}`);\n    const parsedParameters = {};\n    const paramMap = {\n        m: \"memorySize\",\n        p: \"parallelism\",\n        t: \"iterations\"\n    };\n    parameters.split(\",\").forEach((x)=>{\n        const [n, v] = x.split(\"=\");\n        parsedParameters[paramMap[n]] = parseInt(v, 10);\n    });\n    return Object.assign(Object.assign({}, parsedParameters), {\n        password,\n        secret,\n        hashType: hashType,\n        salt: decodeBase64(salt),\n        hashLength: getDecodeBase64Length(hash),\n        outputType: \"encoded\"\n    });\n};\nconst validateVerifyOptions$1 = (options)=>{\n    if (!options || typeof options !== \"object\") throw new Error(\"Invalid options parameter. It requires an object.\");\n    if (options.hash === undefined || typeof options.hash !== \"string\") throw new Error(\"Hash should be specified\");\n};\n/**\n * Verifies password using the argon2 password-hashing function\n * @returns True if the encoded hash matches the password\n */ function argon2Verify(options) {\n    return __awaiter(this, void 0, void 0, function*() {\n        validateVerifyOptions$1(options);\n        const params = getHashParameters(options.password, options.hash, options.secret);\n        validateOptions$3(params);\n        const hashStart = options.hash.lastIndexOf(\"$\") + 1;\n        const result = yield argon2Internal(params);\n        return result.substring(hashStart) === options.hash.substring(hashStart);\n    });\n}\nvar name$h = \"blake2s\";\nvar data$h = \"\";\nvar hash$h = \"c5c746d4\";\nvar wasmJson$h = {\n    name: name$h,\n    data: data$h,\n    hash: hash$h\n};\nconst mutex$j = new Mutex();\nlet wasmCache$j = null;\nfunction validateBits$3(bits) {\n    if (!Number.isInteger(bits) || bits < 8 || bits > 256 || bits % 8 !== 0) return new Error(\"Invalid variant! Valid values: 8, 16, ..., 256\");\n    return null;\n}\nfunction getInitParam(outputBits, keyBits) {\n    // eslint-disable-next-line no-bitwise\n    return outputBits | keyBits << 16;\n}\n/**\n * Calculates BLAKE2s hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param bits Number of output bits, which has to be a number\n *             divisible by 8, between 8 and 256. Defaults to 256.\n * @param key Optional key (string, Buffer or TypedArray). Maximum length is 32 bytes.\n * @returns Computed hash as a hexadecimal string\n */ function blake2s(data, bits = 256, key = null) {\n    if (validateBits$3(bits)) return Promise.reject(validateBits$3(bits));\n    let keyBuffer = null;\n    let initParam = bits;\n    if (key !== null) {\n        keyBuffer = getUInt8Buffer(key);\n        if (keyBuffer.length > 32) return Promise.reject(new Error(\"Max key length is 32 bytes\"));\n        initParam = getInitParam(bits, keyBuffer.length);\n    }\n    const hashLength = bits / 8;\n    if (wasmCache$j === null || wasmCache$j.hashLength !== hashLength) return lockedCreate(mutex$j, wasmJson$h, hashLength).then((wasm)=>{\n        wasmCache$j = wasm;\n        if (initParam > 512) wasmCache$j.writeMemory(keyBuffer);\n        return wasmCache$j.calculate(data, initParam);\n    });\n    try {\n        if (initParam > 512) wasmCache$j.writeMemory(keyBuffer);\n        const hash = wasmCache$j.calculate(data, initParam);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new BLAKE2s hash instance\n * @param bits Number of output bits, which has to be a number\n *             divisible by 8, between 8 and 256. Defaults to 256.\n * @param key Optional key (string, Buffer or TypedArray). Maximum length is 32 bytes.\n */ function createBLAKE2s(bits = 256, key = null) {\n    if (validateBits$3(bits)) return Promise.reject(validateBits$3(bits));\n    let keyBuffer = null;\n    let initParam = bits;\n    if (key !== null) {\n        keyBuffer = getUInt8Buffer(key);\n        if (keyBuffer.length > 32) return Promise.reject(new Error(\"Max key length is 32 bytes\"));\n        initParam = getInitParam(bits, keyBuffer.length);\n    }\n    const outputSize = bits / 8;\n    return WASMInterface(wasmJson$h, outputSize).then((wasm)=>{\n        if (initParam > 512) wasm.writeMemory(keyBuffer);\n        wasm.init(initParam);\n        const obj = {\n            init: initParam > 512 ? ()=>{\n                wasm.writeMemory(keyBuffer);\n                wasm.init(initParam);\n                return obj;\n            } : ()=>{\n                wasm.init(initParam);\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 64,\n            digestSize: outputSize\n        };\n        return obj;\n    });\n}\nvar name$g = \"blake3\";\nvar data$g = \"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AAsLIAEpAyAhByABKQMoIQwgASkDMCENIAEpAzghDkEAKQPAiQEQBUEAQQAtAJCKASICQQFqOgCQigEgAkEFdCICQamKAWogCjcDACACQaGKAWogBDcDACACQZmKAWogBTcDACACQZGKAWogBjcDAEEAKQPAiQEgE0IBiHwQBUEAQQAtAJCKASICQQFqOgCQigEgAkEFdCICQamKAWogDjcDACACQaGKAWogDTcDACACQZmKAWogDDcDACACQZGKAWogBzcDAAtBAEEAKQPAiQEgE3wiBDcDwIkBIAMgEmohAyAAIBJrIgBBgAhLDQALIABFDQELQaCJASADIAAQBEEAKQPAiQEQBQsgAUHQAmokAAuGBwIJfwF+IwBBwABrIgMkAAJAAkAgAC0AaCIERQ0AAkBBwAAgBGsiBSACIAUgAkkbIgZFDQAgBkEDcSEHQQAhBQJAIAZBBEkNACAAIARqIQggBkF8cSEJQQAhBQNAIAggBWoiCkEoaiABIAVqIgstAAA6AAAgCkEpaiALQQFqLQAAOgAAIApBKmogC0ECai0AADoAACAKQStqIAtBA2otAAA6AAAgCSAFQQRqIgVHDQALCwJAIAdFDQAgASAFaiEKIAUgBGogAGpBKGohBQNAIAUgCi0AADoAACAKQQFqIQogBUEBaiEFIAdBf2oiBw0ACwsgAC0AaCEECyAAIAQgBmoiBzoAaCABIAZqIQECQCACIAZrIgINAEEAIQIMAgsgAyAAIABBKGpBwAAgACkDICAALQBqIABB6QBqIgUtAAAiCkVyEAIgACADKQMgIAMpAwCFNwMAIAAgAykDKCADKQMIhTcDCCAAIAMpAzAgAykDEIU3AxAgACADKQM4IAMpAxiFNwMYIABBADoAaCAFIApBAWo6AAAgAEHgAGpCADcDACAAQdgAakIANwMAIABB0ABqQgA3AwAgAEHIAGpCADcDACAAQcAAakIANwMAIABBOGpCADcDACAAQTBqQgA3AwAgAEIANwMoC0EAIQcgAkHBAEkNACAAQekAaiIKLQAAIQUgAC0AaiELIAApAyAhDANAIAMgACABQcAAIAwgCyAFQf8BcUVyQf8BcRACIAAgAykDICADKQMAhTcDACAAIAMpAyggAykDCIU3AwggACADKQMwIAMpAxCFNwMQIAAgAykDOCADKQMYhTcDGCAK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DkUNACAFIAdBBnRqIQEgBUGIAWogB0ECdGohAANAIAAgATYCACABQcAAaiEBIABBBGohACAOQX9qIg4NAAsLIAhBAmohAAsgBUGIAWogBkEBQgBBACADQQRyQQBBACAEEAEgACAJTw0AIAQgBkEFdGoiASAFIAZBBnRqIgApAwA3AwAgASAAKQMINwMIIAEgACkDEDcDECABIAApAxg3AxggBkEBaiEGCyAFQeACaiQAIAYLrRAIAn8EfgF/AX4EfwR+BH8EfiMAQfABayIBJAACQCAARQ0AAkBBAC0AkIoBIgINACABQTBqQQApA9CJATcDACABQThqQQApA9iJATcDACABQQApA6CJASIDNwMAIAFBACkDqIkBIgQ3AwggAUEAKQOwiQEiBTcDECABQQApA7iJASIGNwMYIAFBACkDyIkBNwMoQQAtAIqKASECQQAtAImKASEHQQApA8CJASEIQQAtAIiKASEJIAFBwABqQQApA+CJATcDACABQcgAakEAKQPoiQE3AwAgAUHQAGpBACkD8IkBNwMAIAFB2ABqQQApA/iJATcDACABQeAAakEAKQOAigE3AwAgASAJOgBoIAEgCDcDICABIAIgB0VyIgJBAnI6AGkgAUEoaiEKQgAhCEGACSELIAJBCnJB/wFxIQwDQCABQbABaiABIAogCUH/AXEgCCAMEAIgASABKQPQASINIAEpA7ABhTcDcCABIAEpA9gBIg4gASkDuAGFNwN4IAEgASkD4AEiDyABKQPAAYU3A4ABIAEgASkD6AEiECAGhTcDqAEgASAPIAWFNwOgASABIA4gBIU3A5gBIAEgDSADhTcDkAEgASAQIAEpA8gBhTcDiAEgAEHAACAAQcAASRsiEUF/aiESAkACQCARQQdxIhMNACABQfAAaiECIAshByARIRQMAQsgEUH4AHEhFCABQfAAaiECIAshBwNAIAcgAi0AADoAACAHQQFqIQcgAkEBaiECIBNBf2oiEw0ACwsCQCASQQdJDQADQCAHIAIpAAA3AAAgB0EIaiEHIAJBCGohAiAUQXhqIhQNAAsLIAhCAXwhCCALIBFqIQsgACARayIADQAMAgsLAkACQAJAQQAtAImKASIHQQZ0QQBBAC0AiIoBIhFrRg0AIAEgEToAaCABQQApA4CKATcDYCABQQApA/iJATcDWCABQQApA/CJATcDUCABQQApA+iJATcDSCABQQApA+CJATcDQCABQQApA9iJATcDOCABQQApA9CJATcDMCABQQApA8iJATcDKCABQQApA8CJASIINwMgIAFBACkDuIkBIgM3AxggAUEAKQOwiQEiBDcDECABQQApA6iJASIFNwMIIAFBACkDoIkBIgY3AwAgAUEALQCKigEiEyAHRXJBAnIiCzoAaSATQQRyIRNBACkDmIkBIQ1BACkDkIkBIQ5BACkDiIkBIQ9BACkDgIkBIRAMAQtBwAAhESABQcAAOgBoQgAhCCABQgA3AyAgAUEAKQOYiQEiDTcDGCABQQApA5CJASIONwMQIAFBACkDiIkBIg83AwggAUEAKQOAiQEiEDcDACABQQAtAIqKAUEEciITOgBpIAEgAkF+aiICQQV0IgdByYoBaikDADcDYCABIAdBwYoBaikDADcDWCABIAdBuYoBaikDADcDUCABIAdBsYoBaikDADcDSCABIAdBqYoBaikDADcDQCABIAdBoYoBaikDADcDOCABIAdBmYoBaikDADcDMCABIAdBkYoBaikDADcDKCATIQsgECEGIA8hBSAOIQQgDSEDIAJFDQELIAJBf2oiB0EFdCIUQZGKAWopAwAhFSAUQZmKAWopAwAhFiAUQaGKAWopAwAhFyAUQamKAWopAwAhGCABIAM3A4gBIAEgBDcDgAEgASAFNwN4IAEgBjcDcCABQbABaiABQfAAaiABQShqIhQgESAIIAtB/wFxEAIgASATOgBpIAFBwAA6AGggASAYNwNAIAEgFzcDOCABIBY3AzAgASAVNwMoIAFCADcDICABIA03AxggASAONwMQIAEgDzcDCCABIBA3AwAgASABKQPoASABKQPIAYU3A2AgASABKQPgASABKQPAAYU3A1ggASABKQPYASABKQO4AYU3A1AgASABKQPQASABKQOwAYU3A0ggB0UNACACQQV0QemJAWohAiATQf8BcSERA0AgAkFoaikDACEIIAJBcGopAwAhAyACQXhqKQMAIQQgAikDACEFIAEgDTcDiAEgASAONwOAASABIA83A3ggASAQNwNwIAFBsAFqIAFB8ABqIBRBwABCACAREAIgASATOgBpIAFBwAA6AGggASAFNwNAIAEgBDcDOCABIAM3AzAgASAINwMoIAFCADcDICABIA03AxggASAONwMQIAEgDzcDCCABIBA3AwAgASABKQPoASABKQPIAYU3A2AgASABKQPgASABKQPAAYU3A1ggASABKQPYASABKQO4AYU3A1AgASABKQPQASABKQOwAYU3A0ggAkFgaiECIAdBf2oiBw0ACwsgAUEoaiEJQgAhCEGACSELIBNBCHJB/wFxIQoDQCABQbABaiABIAlBwAAgCCAKEAIgASABKQPQASIDIAEpA7ABhTcDcCABIAEpA9gBIgQgASkDuAGFNwN4IAEgASkD4AEiBSABKQPAAYU3A4ABIAEgDSABKQPoASIGhTcDqAEgASAOIAWFNwOgASABIA8gBIU3A5gBIAEgECADhTcDkAEgASAGIAEpA8gBhTcDiAEgAEHAACAAQcAASRsiEUF/aiESAkACQCARQQdxIhMNACABQfAAaiECIAshByARIRQMAQsgEUH4AHEhFCABQfAAaiECIAshBwNAIAcgAi0AADoAACAHQQFqIQcgAkEBaiECIBNBf2oiEw0ACwsCQCASQQdJDQADQCAHIAIpAAA3AAAgB0EIaiEHIAJBCGohAiAUQXhqIhQNAAsLIAhCAXwhCCALIBFqIQsgACARayIADQALCyABQfABaiQAC6MCAQR+AkACQCAAQSBGDQBCq7OP/JGjs/DbACEBQv+kuYjFkdqCm38hAkLy5rvjo6f9p6V/IQNC58yn0NbQ67O7fyEEQQAhAAwBC0EAKQOYCSEBQQApA5AJIQJBACkDiAkhA0EAKQOACSEEQRAhAAtBACAAOgCKigFBAEIANwOAigFBAEIANwP4iQFBAEIANwPwiQFBAEIANwPoiQFBAEIANwPgiQFBAEIANwPYiQFBAEIANwPQiQFBAEIANwPIiQFBAEIANwPAiQFBACABNwO4iQFBACACNwOwiQFBACADNwOoiQFBACAENwOgiQFBACABNwOYiQFBACACNwOQiQFBACADNwOIiQFBACAENwOAiQFBAEEAOgCQigFBAEEAOwGIigELBgAgABADCwYAIAAQBwsGAEGAiQELqwIBBH4CQAJAIAFBIEYNAEKrs4/8kaOz8NsAIQNC/6S5iMWR2oKbfyEEQvLmu+Ojp/2npX8hBULnzKfQ1tDrs7t/IQZBACEBDAELQQApA5gJIQNBACkDkAkhBEEAKQOICSEFQQApA4AJIQZBECEBC0EAIAE6AIqKAUEAQgA3A4CKAUEAQgA3A/iJAUEAQgA3A/CJAUEAQgA3A+iJAUEAQgA3A+CJAUEAQgA3A9iJAUEAQgA3A9CJAUEAQgA3A8iJAUEAQgA3A8CJAUEAIAM3A7iJAUEAIAQ3A7CJAUEAIAU3A6iJAUEAIAY3A6CJAUEAIAM3A5iJAUEAIAQ3A5CJAUEAIAU3A4iJAUEAIAY3A4CJAUEAQQA6AJCKAUEAQQA7AYiKASAAEAMgAhAHCwsLAQBBgAgLBHgHAAA=\";\nvar hash$g = \"540e8b8e\";\nvar wasmJson$g = {\n    name: name$g,\n    data: data$g,\n    hash: hash$g\n};\nconst mutex$i = new Mutex();\nlet wasmCache$i = null;\nfunction validateBits$2(bits) {\n    if (!Number.isInteger(bits) || bits < 8 || bits % 8 !== 0) return new Error(\"Invalid variant! Valid values: 8, 16, ...\");\n    return null;\n}\n/**\n * Calculates BLAKE3 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param bits Number of output bits, which has to be a number\n *             divisible by 8. Defaults to 256.\n * @param key Optional key (string, Buffer or TypedArray). Length should be 32 bytes.\n * @returns Computed hash as a hexadecimal string\n */ function blake3(data, bits = 256, key = null) {\n    if (validateBits$2(bits)) return Promise.reject(validateBits$2(bits));\n    let keyBuffer = null;\n    let initParam = 0; // key is empty by default\n    if (key !== null) {\n        keyBuffer = getUInt8Buffer(key);\n        if (keyBuffer.length !== 32) return Promise.reject(new Error(\"Key length must be exactly 32 bytes\"));\n        initParam = 32;\n    }\n    const hashLength = bits / 8;\n    const digestParam = hashLength;\n    if (wasmCache$i === null || wasmCache$i.hashLength !== hashLength) return lockedCreate(mutex$i, wasmJson$g, hashLength).then((wasm)=>{\n        wasmCache$i = wasm;\n        if (initParam === 32) wasmCache$i.writeMemory(keyBuffer);\n        return wasmCache$i.calculate(data, initParam, digestParam);\n    });\n    try {\n        if (initParam === 32) wasmCache$i.writeMemory(keyBuffer);\n        const hash = wasmCache$i.calculate(data, initParam, digestParam);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new BLAKE3 hash instance\n * @param bits Number of output bits, which has to be a number\n *             divisible by 8. Defaults to 256.\n * @param key Optional key (string, Buffer or TypedArray). Length should be 32 bytes.\n */ function createBLAKE3(bits = 256, key = null) {\n    if (validateBits$2(bits)) return Promise.reject(validateBits$2(bits));\n    let keyBuffer = null;\n    let initParam = 0; // key is empty by default\n    if (key !== null) {\n        keyBuffer = getUInt8Buffer(key);\n        if (keyBuffer.length !== 32) return Promise.reject(new Error(\"Key length must be exactly 32 bytes\"));\n        initParam = 32;\n    }\n    const outputSize = bits / 8;\n    const digestParam = outputSize;\n    return WASMInterface(wasmJson$g, outputSize).then((wasm)=>{\n        if (initParam === 32) wasm.writeMemory(keyBuffer);\n        wasm.init(initParam);\n        const obj = {\n            init: initParam === 32 ? ()=>{\n                wasm.writeMemory(keyBuffer);\n                wasm.init(initParam);\n                return obj;\n            } : ()=>{\n                wasm.init(initParam);\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType, digestParam),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 64,\n            digestSize: outputSize\n        };\n        return obj;\n    });\n}\nvar name$f = \"crc32\";\nvar data$f = \"AGFzbQEAAAABEQRgAAF/YAF/AGAAAGACf38AAwgHAAEBAQIAAwUEAQECAgYOAn8BQZDJBQt/AEGACAsHcAgGbWVtb3J5AgAOSGFzaF9HZXRCdWZmZXIAAAlIYXNoX0luaXQAAgtIYXNoX1VwZGF0ZQADCkhhc2hfRmluYWwABA1IYXNoX0dldFN0YXRlAAUOSGFzaF9DYWxjdWxhdGUABgpTVEFURV9TSVpFAwEKkggHBQBBgAkLwwMBA39BgIkBIQFBACECA0AgAUEAQQBBAEEAQQBBAEEAQQAgAkEBcWsgAHEgAkEBdnMiA0EBcWsgAHEgA0EBdnMiA0EBcWsgAHEgA0EBdnMiA0EBcWsgAHEgA0EBdnMiA0EBcWsgAHEgA0EBdnMiA0EBcWsgAHEgA0EBdnMiA0EBcWsgAHEgA0EBdnMiA0EBcWsgAHEgA0EBdnM2AgAgAUEEaiEBIAJBAWoiAkGAAkcNAAtBACEAA0AgAEGEkQFqIABBhIkBaigCACICQf8BcUECdEGAiQFqKAIAIAJBCHZzIgI2AgAgAEGEmQFqIAJB/wFxQQJ0QYCJAWooAgAgAkEIdnMiAjYCACAAQYShAWogAkH/AXFBAnRBgIkBaigCACACQQh2cyICNgIAIABBhKkBaiACQf8BcUECdEGAiQFqKAIAIAJBCHZzIgI2AgAgAEGEsQFqIAJB/wFxQQJ0QYCJAWooAgAgAkEIdnMiAjYCACAAQYS5AWogAkH/AXFBAnRBgIkBaigCACACQQh2cyICNgIAIABBhMEBaiACQf8BcUECdEGAiQFqKAIAIAJBCHZzNgIAIABBBGoiAEH8B0cNAAsLJwACQEEAKAKAyQEgAEYNACAAEAFBACAANgKAyQELQQBBADYChMkBC4gDAQN/QQAoAoTJAUF/cyEBQYAJIQICQCAAQQhJDQBBgAkhAgNAIAJBBGooAgAiA0EOdkH8B3FBgJEBaigCACADQRZ2QfwHcUGAiQFqKAIAcyADQQZ2QfwHcUGAmQFqKAIAcyADQf8BcUECdEGAoQFqKAIAcyACKAIAIAFzIgFBFnZB/AdxQYCpAWooAgBzIAFBDnZB/AdxQYCxAWooAgBzIAFBBnZB/AdxQYC5AWooAgBzIAFB/wFxQQJ0QYDBAWooAgBzIQEgAkEIaiECIABBeGoiAEEHSw0ACwsCQCAARQ0AAkACQCAAQQFxDQAgACEDDAELIAFB/wFxIAItAABzQQJ0QYCJAWooAgAgAUEIdnMhASACQQFqIQIgAEF/aiEDCyAAQQFGDQADQCABQf8BcSACLQAAc0ECdEGAiQFqKAIAIAFBCHZzIgFB/wFxIAJBAWotAABzQQJ0QYCJAWooAgAgAUEIdnMhASACQQJqIQIgA0F+aiIDDQALC0EAIAFBf3M2AoTJAQsyAQF/QQBBACgChMkBIgBBGHQgAEGA/gNxQQh0ciAAQQh2QYD+A3EgAEEYdnJyNgKACQsGAEGEyQELWQACQEEAKAKAyQEgAUYNACABEAFBACABNgKAyQELQQBBADYChMkBIAAQA0EAQQAoAoTJASIBQRh0IAFBgP4DcUEIdHIgAUEIdkGA/gNxIAFBGHZycjYCgAkLCwsBAEGACAsEBAAAAA==\";\nvar hash$f = \"d2eba587\";\nvar wasmJson$f = {\n    name: name$f,\n    data: data$f,\n    hash: hash$f\n};\nconst mutex$h = new Mutex();\nlet wasmCache$h = null;\n/**\n * Calculates CRC-32 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */ function crc32(data) {\n    if (wasmCache$h === null) return lockedCreate(mutex$h, wasmJson$f, 4).then((wasm)=>{\n        wasmCache$h = wasm;\n        return wasmCache$h.calculate(data, 0xEDB88320);\n    });\n    try {\n        const hash = wasmCache$h.calculate(data, 0xEDB88320);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new CRC-32 hash instance\n */ function createCRC32() {\n    return WASMInterface(wasmJson$f, 4).then((wasm)=>{\n        wasm.init(0xEDB88320);\n        const obj = {\n            init: ()=>{\n                wasm.init(0xEDB88320);\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 4,\n            digestSize: 4\n        };\n        return obj;\n    });\n}\nconst mutex$g = new Mutex();\nlet wasmCache$g = null;\n/**\n * Calculates CRC-32C hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */ function crc32c(data) {\n    if (wasmCache$g === null) return lockedCreate(mutex$g, wasmJson$f, 4).then((wasm)=>{\n        wasmCache$g = wasm;\n        return wasmCache$g.calculate(data, 0x82F63B78);\n    });\n    try {\n        const hash = wasmCache$g.calculate(data, 0x82F63B78);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new CRC-32C hash instance\n */ function createCRC32C() {\n    return WASMInterface(wasmJson$f, 4).then((wasm)=>{\n        wasm.init(0x82F63B78);\n        const obj = {\n            init: ()=>{\n                wasm.init(0x82F63B78);\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 4,\n            digestSize: 4\n        };\n        return obj;\n    });\n}\nvar name$e = \"md4\";\nvar data$e = \"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\";\nvar hash$e = \"74909c24\";\nvar wasmJson$e = {\n    name: name$e,\n    data: data$e,\n    hash: hash$e\n};\nconst mutex$f = new Mutex();\nlet wasmCache$f = null;\n/**\n * Calculates MD4 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */ function md4(data) {\n    if (wasmCache$f === null) return lockedCreate(mutex$f, wasmJson$e, 16).then((wasm)=>{\n        wasmCache$f = wasm;\n        return wasmCache$f.calculate(data);\n    });\n    try {\n        const hash = wasmCache$f.calculate(data);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new MD4 hash instance\n */ function createMD4() {\n    return WASMInterface(wasmJson$e, 16).then((wasm)=>{\n        wasm.init();\n        const obj = {\n            init: ()=>{\n                wasm.init();\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 64,\n            digestSize: 16\n        };\n        return obj;\n    });\n}\nvar name$d = \"md5\";\nvar data$d = \"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\";\nvar hash$d = \"42fa4d29\";\nvar wasmJson$d = {\n    name: name$d,\n    data: data$d,\n    hash: hash$d\n};\nconst mutex$e = new Mutex();\nlet wasmCache$e = null;\n/**\n * Calculates MD5 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */ function md5(data) {\n    if (wasmCache$e === null) return lockedCreate(mutex$e, wasmJson$d, 16).then((wasm)=>{\n        wasmCache$e = wasm;\n        return wasmCache$e.calculate(data);\n    });\n    try {\n        const hash = wasmCache$e.calculate(data);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new MD5 hash instance\n */ function createMD5() {\n    return WASMInterface(wasmJson$d, 16).then((wasm)=>{\n        wasm.init();\n        const obj = {\n            init: ()=>{\n                wasm.init();\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 64,\n            digestSize: 16\n        };\n        return obj;\n    });\n}\nvar name$c = \"sha1\";\nvar data$c = \"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\";\nvar hash$c = \"6b530c24\";\nvar wasmJson$c = {\n    name: name$c,\n    data: data$c,\n    hash: hash$c\n};\nconst mutex$d = new Mutex();\nlet wasmCache$d = null;\n/**\n * Calculates SHA-1 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */ function sha1(data) {\n    if (wasmCache$d === null) return lockedCreate(mutex$d, wasmJson$c, 20).then((wasm)=>{\n        wasmCache$d = wasm;\n        return wasmCache$d.calculate(data);\n    });\n    try {\n        const hash = wasmCache$d.calculate(data);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new SHA-1 hash instance\n */ function createSHA1() {\n    return WASMInterface(wasmJson$c, 20).then((wasm)=>{\n        wasm.init();\n        const obj = {\n            init: ()=>{\n                wasm.init();\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 64,\n            digestSize: 20\n        };\n        return obj;\n    });\n}\nvar name$b = \"sha3\";\nvar data$b = \"AGFzbQEAAAABFARgAAF/YAF/AGACf38AYAN/f38AAwgHAAEBAgEAAwUEAQECAgYOAn8BQZCNBQt/AEGACAsHcAgGbWVtb3J5AgAOSGFzaF9HZXRCdWZmZXIAAAlIYXNoX0luaXQAAQtIYXNoX1VwZGF0ZQACCkhhc2hfRmluYWwABA1IYXNoX0dldFN0YXRlAAUOSGFzaF9DYWxjdWxhdGUABgpTVEFURV9TSVpFAwEKqBwHBQBBgAoL1wMAQQBCADcDgI0BQQBCADcD+IwBQQBCADcD8IwBQQBCADcD6IwBQQBCADcD4IwBQQBCADcD2IwBQQBCADcD0IwBQQBCADcDyIwBQQBCADcDwIwBQQBCADcDuIwBQQBCADcDsIwBQQBCADcDqIwBQQBCADcDoIwBQQBCADcDmIwBQQBCADcDkIwBQQBCADcDiIwBQQBCADcDgIwBQQBCADcD+IsBQQBCADcD8IsBQQBCADcD6IsBQQBCADcD4IsBQQBCADcD2IsBQQBCADcD0IsBQQBCADcDyIsBQQBCADcDwIsBQQBCADcDuIsBQQBCADcDsIsBQQBCADcDqIsBQQBCADcDoIsBQQBCADcDmIsBQQBCADcDkIsBQQBCADcDiIsBQQBCADcDgIsBQQBCADcD+IoBQQBCADcD8IoBQQBCADcD6IoBQQBCADcD4IoBQQBCADcD2IoBQQBCADcD0IoBQQBCADcDyIoBQQBCADcDwIoBQQBCADcDuIoBQQBCADcDsIoBQQBCADcDqIoBQQBCADcDoIoBQQBCADcDmIoBQQBCADcDkIoBQQBCADcDiIoBQQBCADcDgIoBQQBBwAwgAEEBdGtBA3Y2AoyNAUEAQQA2AoiNAQuMAwEIfwJAQQAoAoiNASIBQQBIDQBBACABIABqQQAoAoyNASICcDYCiI0BAkACQCABDQBBgAohAwwBCwJAIAIgAWsiBCAAIAQgAEkbIgNFDQAgA0EDcSEFQQAhBgJAIANBBEkNACABQYCKAWohByADQXxxIQhBACEGA0AgByAGaiIDQcgBaiAGQYAKai0AADoAACADQckBaiAGQYEKai0AADoAACADQcoBaiAGQYIKai0AADoAACADQcsBaiAGQYMKai0AADoAACAIIAZBBGoiBkcNAAsLIAVFDQAgAUHIiwFqIQMDQCADIAZqIAZBgApqLQAAOgAAIAZBAWohBiAFQX9qIgUNAAsLIAQgAEsNAUHIiwEgAhADIAAgBGshACAEQYAKaiEDCwJAIAAgAkkNAANAIAMgAhADIAMgAmohAyAAIAJrIgAgAk8NAAsLIABFDQBBACECQcgBIQYDQCAGQYCKAWogAyAGakG4fmotAAA6AAAgBkEBaiEGIAAgAkEBaiICQf8BcUsNAAsLC+QLAS1+IAApA0AhAkEAKQPAigEhAyAAKQM4IQRBACkDuIoBIQUgACkDMCEGQQApA7CKASEHIAApAyghCEEAKQOoigEhCSAAKQMgIQpBACkDoIoBIQsgACkDGCEMQQApA5iKASENIAApAxAhDkEAKQOQigEhDyAAKQMIIRBBACkDiIoBIREgACkDACESQQApA4CKASETQQApA8iKASEUAkACQCABQcgASw0AQQApA9CKASEVQQApA+CKASEWQQApA9iKASEXDAELQQApA+CKASAAKQNghSEWQQApA9iKASAAKQNYhSEXQQApA9CKASAAKQNQhSEVIBQgACkDSIUhFCABQekASQ0AQQBBACkD6IoBIAApA2iFNwPoigFBAEEAKQPwigEgACkDcIU3A/CKAUEAQQApA/iKASAAKQN4hTcD+IoBQQBBACkDgIsBIAApA4ABhTcDgIsBIAFBiQFJDQBBAEEAKQOIiwEgACkDiAGFNwOIiwELIAMgAoUhGCAFIASFIRkgByAGhSEHIAkgCIUhCCALIAqFIRogDSAMhSEJIA8gDoUhCiARIBCFIQsgEyAShSEMQQApA7iLASESQQApA5CLASETQQApA+iKASEbQQApA6CLASEcQQApA/iKASENQQApA7CLASEdQQApA4iLASEOQQApA8CLASEPQQApA5iLASEeQQApA/CKASEQQQApA6iLASERQQApA4CLASEfQcB+IQADQCAaIAcgC4UgF4UgH4UgEYVCAYmFIBSFIBCFIB6FIA+FIQIgDCAZIAqFIBaFIA6FIB2FQgGJhSAIhSAVhSANhSAchSIDIAeFISAgCSAIIAyFIBWFIA2FIByFQgGJhSAYhSAbhSAThSAShSIEIA+FISEgGCAKIBQgGoUgEIUgHoUgD4VCAYmFIBmFIBaFIA6FIB2FIgWFQjeJIiIgCyAYIAmFIBuFIBOFIBKFQgGJhSAHhSAXhSAfhSARhSIGIAqFQj6JIiNCf4WDIAMgEYVCAokiJIUhDyANIAKFQimJIiUgBCAQhUIniSImQn+FgyAihSERIBIgBYVCOIkiEiAGIA6FQg+JIidCf4WDIAMgF4VCCokiKIUhDiAEIBqFQhuJIikgKCAIIAKFQiSJIipCf4WDhSENIAYgGYVCBokiKyADIAuFQgGJIixCf4WDIBwgAoVCEokiLYUhECArIAQgHoVCCIkiLiAbIAWFQhmJIhtCf4WDhSEXIAYgHYVCPYkiGSAEIBSFQhSJIgQgCSAFhUIciSIIQn+Fg4UhFCAIIBlCf4WDIAMgH4VCLYkiA4UhGCAZIANCf4WDIBUgAoVCA4kiCYUhGSAEIAMgCUJ/hYOFIQcgCSAEQn+FgyAIhSEIIAwgAoUiAiAhQg6JIgNCf4WDIBMgBYVCFYkiBIUhCSAGIBaFQiuJIgUgAyAEQn+Fg4UhCiAEIAVCf4WDICBCLIkiBIUhCyAAQdAJaikDACAFIARCf4WDhSAChSEMICcgKEJ/hYMgKoUiBSEfIAMgBCACQn+Fg4UiAiEaICogKUJ/hYMgEoUiAyEeIC0gLkJ/hYMgG4UiBCEWICYgJCAlQn+Fg4UiBiEdIBsgK0J/hYMgLIUiKCEVICMgJiAiQn+Fg4UiIiEcIC4gLCAtQn+Fg4UiJiEbICcgKSASQn+Fg4UiJyETICMgJEJ/hYMgJYUiIyESIABBCGoiAA0AC0EAIBE3A6iLAUEAIAU3A4CLAUEAIBc3A9iKAUEAIAc3A7CKAUEAIAs3A4iKAUEAIA83A8CLAUEAIAM3A5iLAUEAIBA3A/CKAUEAIBQ3A8iKAUEAIAI3A6CKAUEAIAY3A7CLAUEAIA43A4iLAUEAIAQ3A+CKAUEAIBk3A7iKAUEAIAo3A5CKAUEAICI3A6CLAUEAIA03A/iKAUEAICg3A9CKAUEAIAg3A6iKAUEAIAw3A4CKAUEAICM3A7iLAUEAICc3A5CLAUEAICY3A+iKAUEAIBg3A8CKAUEAIAk3A5iKAQv4AgEFf0HkAEEAKAKMjQEiAUEBdmshAgJAQQAoAoiNASIDQQBIDQAgASEEAkAgASADRg0AIANByIsBaiEFQQAhAwNAIAUgA2pBADoAACADQQFqIgMgAUEAKAKIjQEiBGtJDQALCyAEQciLAWoiAyADLQAAIAByOgAAIAFBx4sBaiIDIAMtAABBgAFyOgAAQciLASABEANBAEGAgICAeDYCiI0BCwJAIAJBBEkNACACQQJ2IgNBA3EhBUEAIQQCQCADQX9qQQNJDQAgA0H8////A3EhAUEAIQNBACEEA0AgA0GACmogA0GAigFqKAIANgIAIANBhApqIANBhIoBaigCADYCACADQYgKaiADQYiKAWooAgA2AgAgA0GMCmogA0GMigFqKAIANgIAIANBEGohAyABIARBBGoiBEcNAAsLIAVFDQAgBUECdCEBIARBAnQhAwNAIANBgApqIANBgIoBaigCADYCACADQQRqIQMgAUF8aiIBDQALCwsGAEGAigEL0QYBA39BAEIANwOAjQFBAEIANwP4jAFBAEIANwPwjAFBAEIANwPojAFBAEIANwPgjAFBAEIANwPYjAFBAEIANwPQjAFBAEIANwPIjAFBAEIANwPAjAFBAEIANwO4jAFBAEIANwOwjAFBAEIANwOojAFBAEIANwOgjAFBAEIANwOYjAFBAEIANwOQjAFBAEIANwOIjAFBAEIANwOAjAFBAEIANwP4iwFBAEIANwPwiwFBAEIANwPoiwFBAEIANwPgiwFBAEIANwPYiwFBAEIANwPQiwFBAEIANwPIiwFBAEIANwPAiwFBAEIANwO4iwFBAEIANwOwiwFBAEIANwOoiwFBAEIANwOgiwFBAEIANwOYiwFBAEIANwOQiwFBAEIANwOIiwFBAEIANwOAiwFBAEIANwP4igFBAEIANwPwigFBAEIANwPoigFBAEIANwPgigFBAEIANwPYigFBAEIANwPQigFBAEIANwPIigFBAEIANwPAigFBAEIANwO4igFBAEIANwOwigFBAEIANwOoigFBAEIANwOgigFBAEIANwOYigFBAEIANwOQigFBAEIANwOIigFBAEIANwOAigFBAEHADCABQQF0a0EDdjYCjI0BQQBBADYCiI0BIAAQAkHkAEEAKAKMjQEiAEEBdmshAwJAQQAoAoiNASIBQQBIDQAgACEEAkAgACABRg0AIAFByIsBaiEFQQAhAQNAIAUgAWpBADoAACABQQFqIgEgAEEAKAKIjQEiBGtJDQALCyAEQciLAWoiASABLQAAIAJyOgAAIABBx4sBaiIBIAEtAABBgAFyOgAAQciLASAAEANBAEGAgICAeDYCiI0BCwJAIANBBEkNACADQQJ2IgFBA3EhBUEAIQQCQCABQX9qQQNJDQAgAUH8////A3EhAEEAIQFBACEEA0AgAUGACmogAUGAigFqKAIANgIAIAFBhApqIAFBhIoBaigCADYCACABQYgKaiABQYiKAWooAgA2AgAgAUGMCmogAUGMigFqKAIANgIAIAFBEGohASAAIARBBGoiBEcNAAsLIAVFDQAgBUECdCEAIARBAnQhAQNAIAFBgApqIAFBgIoBaigCADYCACABQQRqIQEgAEF8aiIADQALCwsL2AEBAEGACAvQAZABAAAAAAAAAAAAAAAAAAABAAAAAAAAAIKAAAAAAAAAioAAAAAAAIAAgACAAAAAgIuAAAAAAAAAAQAAgAAAAACBgACAAAAAgAmAAAAAAACAigAAAAAAAACIAAAAAAAAAAmAAIAAAAAACgAAgAAAAACLgACAAAAAAIsAAAAAAACAiYAAAAAAAIADgAAAAAAAgAKAAAAAAACAgAAAAAAAAIAKgAAAAAAAAAoAAIAAAACAgYAAgAAAAICAgAAAAAAAgAEAAIAAAAAACIAAgAAAAIA=\";\nvar hash$b = \"f2f6f5b2\";\nvar wasmJson$b = {\n    name: name$b,\n    data: data$b,\n    hash: hash$b\n};\nconst mutex$c = new Mutex();\nlet wasmCache$c = null;\nfunction validateBits$1(bits) {\n    if (![\n        224,\n        256,\n        384,\n        512\n    ].includes(bits)) return new Error(\"Invalid variant! Valid values: 224, 256, 384, 512\");\n    return null;\n}\n/**\n * Calculates SHA-3 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param bits Number of output bits. Valid values: 224, 256, 384, 512\n * @returns Computed hash as a hexadecimal string\n */ function sha3(data, bits = 512) {\n    if (validateBits$1(bits)) return Promise.reject(validateBits$1(bits));\n    const hashLength = bits / 8;\n    if (wasmCache$c === null || wasmCache$c.hashLength !== hashLength) return lockedCreate(mutex$c, wasmJson$b, hashLength).then((wasm)=>{\n        wasmCache$c = wasm;\n        return wasmCache$c.calculate(data, bits, 0x06);\n    });\n    try {\n        const hash = wasmCache$c.calculate(data, bits, 0x06);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new SHA-3 hash instance\n * @param bits Number of output bits. Valid values: 224, 256, 384, 512\n */ function createSHA3(bits = 512) {\n    if (validateBits$1(bits)) return Promise.reject(validateBits$1(bits));\n    const outputSize = bits / 8;\n    return WASMInterface(wasmJson$b, outputSize).then((wasm)=>{\n        wasm.init(bits);\n        const obj = {\n            init: ()=>{\n                wasm.init(bits);\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType, 0x06),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 200 - 2 * outputSize,\n            digestSize: outputSize\n        };\n        return obj;\n    });\n}\nconst mutex$b = new Mutex();\nlet wasmCache$b = null;\nfunction validateBits(bits) {\n    if (![\n        224,\n        256,\n        384,\n        512\n    ].includes(bits)) return new Error(\"Invalid variant! Valid values: 224, 256, 384, 512\");\n    return null;\n}\n/**\n * Calculates Keccak hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param bits Number of output bits. Valid values: 224, 256, 384, 512\n * @returns Computed hash as a hexadecimal string\n */ function keccak(data, bits = 512) {\n    if (validateBits(bits)) return Promise.reject(validateBits(bits));\n    const hashLength = bits / 8;\n    if (wasmCache$b === null || wasmCache$b.hashLength !== hashLength) return lockedCreate(mutex$b, wasmJson$b, hashLength).then((wasm)=>{\n        wasmCache$b = wasm;\n        return wasmCache$b.calculate(data, bits, 0x01);\n    });\n    try {\n        const hash = wasmCache$b.calculate(data, bits, 0x01);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new Keccak hash instance\n * @param bits Number of output bits. Valid values: 224, 256, 384, 512\n */ function createKeccak(bits = 512) {\n    if (validateBits(bits)) return Promise.reject(validateBits(bits));\n    const outputSize = bits / 8;\n    return WASMInterface(wasmJson$b, outputSize).then((wasm)=>{\n        wasm.init(bits);\n        const obj = {\n            init: ()=>{\n                wasm.init(bits);\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType, 0x01),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 200 - 2 * outputSize,\n            digestSize: outputSize\n        };\n        return obj;\n    });\n}\nvar name$a = \"sha256\";\nvar data$a = \"\";\nvar hash$a = \"64f06674\";\nvar wasmJson$a = {\n    name: name$a,\n    data: data$a,\n    hash: hash$a\n};\nconst mutex$a = new Mutex();\nlet wasmCache$a = null;\n/**\n * Calculates SHA-2 (SHA-224) hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */ function sha224(data) {\n    if (wasmCache$a === null) return lockedCreate(mutex$a, wasmJson$a, 28).then((wasm)=>{\n        wasmCache$a = wasm;\n        return wasmCache$a.calculate(data, 224);\n    });\n    try {\n        const hash = wasmCache$a.calculate(data, 224);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new SHA-2 (SHA-224) hash instance\n */ function createSHA224() {\n    return WASMInterface(wasmJson$a, 28).then((wasm)=>{\n        wasm.init(224);\n        const obj = {\n            init: ()=>{\n                wasm.init(224);\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 64,\n            digestSize: 28\n        };\n        return obj;\n    });\n}\nconst mutex$9 = new Mutex();\nlet wasmCache$9 = null;\n/**\n * Calculates SHA-2 (SHA-256) hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */ function sha256(data) {\n    if (wasmCache$9 === null) return lockedCreate(mutex$9, wasmJson$a, 32).then((wasm)=>{\n        wasmCache$9 = wasm;\n        return wasmCache$9.calculate(data, 256);\n    });\n    try {\n        const hash = wasmCache$9.calculate(data, 256);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new SHA-2 (SHA-256) hash instance\n */ function createSHA256() {\n    return WASMInterface(wasmJson$a, 32).then((wasm)=>{\n        wasm.init(256);\n        const obj = {\n            init: ()=>{\n                wasm.init(256);\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 64,\n            digestSize: 32\n        };\n        return obj;\n    });\n}\nvar name$9 = \"sha512\";\nvar data$9 = \"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\";\nvar hash$9 = \"cdd57f6a\";\nvar wasmJson$9 = {\n    name: name$9,\n    data: data$9,\n    hash: hash$9\n};\nconst mutex$8 = new Mutex();\nlet wasmCache$8 = null;\n/**\n * Calculates SHA-2 (SHA-384) hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */ function sha384(data) {\n    if (wasmCache$8 === null) return lockedCreate(mutex$8, wasmJson$9, 48).then((wasm)=>{\n        wasmCache$8 = wasm;\n        return wasmCache$8.calculate(data, 384);\n    });\n    try {\n        const hash = wasmCache$8.calculate(data, 384);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new SHA-2 (SHA-384) hash instance\n */ function createSHA384() {\n    return WASMInterface(wasmJson$9, 48).then((wasm)=>{\n        wasm.init(384);\n        const obj = {\n            init: ()=>{\n                wasm.init(384);\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 128,\n            digestSize: 48\n        };\n        return obj;\n    });\n}\nconst mutex$7 = new Mutex();\nlet wasmCache$7 = null;\n/**\n * Calculates SHA-2 (SHA-512) hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */ function sha512(data) {\n    if (wasmCache$7 === null) return lockedCreate(mutex$7, wasmJson$9, 64).then((wasm)=>{\n        wasmCache$7 = wasm;\n        return wasmCache$7.calculate(data, 512);\n    });\n    try {\n        const hash = wasmCache$7.calculate(data, 512);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new SHA-2 (SHA-512) hash instance\n */ function createSHA512() {\n    return WASMInterface(wasmJson$9, 64).then((wasm)=>{\n        wasm.init(512);\n        const obj = {\n            init: ()=>{\n                wasm.init(512);\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 128,\n            digestSize: 64\n        };\n        return obj;\n    });\n}\nvar name$8 = \"xxhash32\";\nvar data$8 = \"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\";\nvar hash$8 = \"9e3a00cd\";\nvar wasmJson$8 = {\n    name: name$8,\n    data: data$8,\n    hash: hash$8\n};\nconst mutex$6 = new Mutex();\nlet wasmCache$6 = null;\nfunction validateSeed$3(seed) {\n    if (!Number.isInteger(seed) || seed < 0 || seed > 0xFFFFFFFF) return new Error(\"Seed must be a valid 32-bit long unsigned integer.\");\n    return null;\n}\n/**\n * Calculates xxHash32 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param seed Number used to initialize the internal state of the algorithm (defaults to 0)\n * @returns Computed hash as a hexadecimal string\n */ function xxhash32(data, seed = 0) {\n    if (validateSeed$3(seed)) return Promise.reject(validateSeed$3(seed));\n    if (wasmCache$6 === null) return lockedCreate(mutex$6, wasmJson$8, 4).then((wasm)=>{\n        wasmCache$6 = wasm;\n        return wasmCache$6.calculate(data, seed);\n    });\n    try {\n        const hash = wasmCache$6.calculate(data, seed);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new xxHash32 hash instance\n * @param data Input data (string, Buffer or TypedArray)\n * @param seed Number used to initialize the internal state of the algorithm (defaults to 0)\n */ function createXXHash32(seed = 0) {\n    if (validateSeed$3(seed)) return Promise.reject(validateSeed$3(seed));\n    return WASMInterface(wasmJson$8, 4).then((wasm)=>{\n        wasm.init(seed);\n        const obj = {\n            init: ()=>{\n                wasm.init(seed);\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 16,\n            digestSize: 4\n        };\n        return obj;\n    });\n}\nvar name$7 = \"xxhash64\";\nvar data$7 = \"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\";\nvar hash$7 = \"dc61b4e7\";\nvar wasmJson$7 = {\n    name: name$7,\n    data: data$7,\n    hash: hash$7\n};\nconst mutex$5 = new Mutex();\nlet wasmCache$5 = null;\nconst seedBuffer$2 = new ArrayBuffer(8);\nfunction validateSeed$2(seed) {\n    if (!Number.isInteger(seed) || seed < 0 || seed > 0xFFFFFFFF) return new Error(\"Seed must be given as two valid 32-bit long unsigned integers (lo + high).\");\n    return null;\n}\nfunction writeSeed$2(arr, low, high) {\n    // write in little-endian format\n    const buffer = new DataView(arr);\n    buffer.setUint32(0, low, true);\n    buffer.setUint32(4, high, true);\n}\n/**\n * Calculates xxHash64 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param seedLow Lower 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @param seedHigh Higher 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @returns Computed hash as a hexadecimal string\n */ function xxhash64(data, seedLow = 0, seedHigh = 0) {\n    if (validateSeed$2(seedLow)) return Promise.reject(validateSeed$2(seedLow));\n    if (validateSeed$2(seedHigh)) return Promise.reject(validateSeed$2(seedHigh));\n    if (wasmCache$5 === null) return lockedCreate(mutex$5, wasmJson$7, 8).then((wasm)=>{\n        wasmCache$5 = wasm;\n        writeSeed$2(seedBuffer$2, seedLow, seedHigh);\n        wasmCache$5.writeMemory(new Uint8Array(seedBuffer$2));\n        return wasmCache$5.calculate(data);\n    });\n    try {\n        writeSeed$2(seedBuffer$2, seedLow, seedHigh);\n        wasmCache$5.writeMemory(new Uint8Array(seedBuffer$2));\n        const hash = wasmCache$5.calculate(data);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new xxHash64 hash instance\n * @param seedLow Lower 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @param seedHigh Higher 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n */ function createXXHash64(seedLow = 0, seedHigh = 0) {\n    if (validateSeed$2(seedLow)) return Promise.reject(validateSeed$2(seedLow));\n    if (validateSeed$2(seedHigh)) return Promise.reject(validateSeed$2(seedHigh));\n    return WASMInterface(wasmJson$7, 8).then((wasm)=>{\n        const instanceBuffer = new ArrayBuffer(8);\n        writeSeed$2(instanceBuffer, seedLow, seedHigh);\n        wasm.writeMemory(new Uint8Array(instanceBuffer));\n        wasm.init();\n        const obj = {\n            init: ()=>{\n                wasm.writeMemory(new Uint8Array(instanceBuffer));\n                wasm.init();\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 32,\n            digestSize: 8\n        };\n        return obj;\n    });\n}\nvar name$6 = \"xxhash3\";\nvar data$6 = \"\";\nvar hash$6 = \"0dca92d1\";\nvar wasmJson$6 = {\n    name: name$6,\n    data: data$6,\n    hash: hash$6\n};\nconst mutex$4 = new Mutex();\nlet wasmCache$4 = null;\nconst seedBuffer$1 = new ArrayBuffer(8);\nfunction validateSeed$1(seed) {\n    if (!Number.isInteger(seed) || seed < 0 || seed > 0xFFFFFFFF) return new Error(\"Seed must be given as two valid 32-bit long unsigned integers (lo + high).\");\n    return null;\n}\nfunction writeSeed$1(arr, low, high) {\n    // write in little-endian format\n    const buffer = new DataView(arr);\n    buffer.setUint32(0, low, true);\n    buffer.setUint32(4, high, true);\n}\n/**\n * Calculates xxHash3 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param seedLow Lower 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @param seedHigh Higher 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @returns Computed hash as a hexadecimal string\n */ function xxhash3(data, seedLow = 0, seedHigh = 0) {\n    if (validateSeed$1(seedLow)) return Promise.reject(validateSeed$1(seedLow));\n    if (validateSeed$1(seedHigh)) return Promise.reject(validateSeed$1(seedHigh));\n    if (wasmCache$4 === null) return lockedCreate(mutex$4, wasmJson$6, 8).then((wasm)=>{\n        wasmCache$4 = wasm;\n        writeSeed$1(seedBuffer$1, seedLow, seedHigh);\n        wasmCache$4.writeMemory(new Uint8Array(seedBuffer$1));\n        return wasmCache$4.calculate(data);\n    });\n    try {\n        writeSeed$1(seedBuffer$1, seedLow, seedHigh);\n        wasmCache$4.writeMemory(new Uint8Array(seedBuffer$1));\n        const hash = wasmCache$4.calculate(data);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new xxHash3 hash instance\n * @param seedLow Lower 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @param seedHigh Higher 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n */ function createXXHash3(seedLow = 0, seedHigh = 0) {\n    if (validateSeed$1(seedLow)) return Promise.reject(validateSeed$1(seedLow));\n    if (validateSeed$1(seedHigh)) return Promise.reject(validateSeed$1(seedHigh));\n    return WASMInterface(wasmJson$6, 8).then((wasm)=>{\n        const instanceBuffer = new ArrayBuffer(8);\n        writeSeed$1(instanceBuffer, seedLow, seedHigh);\n        wasm.writeMemory(new Uint8Array(instanceBuffer));\n        wasm.init();\n        const obj = {\n            init: ()=>{\n                wasm.writeMemory(new Uint8Array(instanceBuffer));\n                wasm.init();\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 512,\n            digestSize: 8\n        };\n        return obj;\n    });\n}\nvar name$5 = \"xxhash128\";\nvar data$5 = \"\";\nvar hash$5 = \"1f682d91\";\nvar wasmJson$5 = {\n    name: name$5,\n    data: data$5,\n    hash: hash$5\n};\nconst mutex$3 = new Mutex();\nlet wasmCache$3 = null;\nconst seedBuffer = new ArrayBuffer(8);\nfunction validateSeed(seed) {\n    if (!Number.isInteger(seed) || seed < 0 || seed > 0xFFFFFFFF) return new Error(\"Seed must be given as two valid 32-bit long unsigned integers (lo + high).\");\n    return null;\n}\nfunction writeSeed(arr, low, high) {\n    // write in little-endian format\n    const buffer = new DataView(arr);\n    buffer.setUint32(0, low, true);\n    buffer.setUint32(4, high, true);\n}\n/**\n * Calculates xxHash128 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param seedLow Lower 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @param seedHigh Higher 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @returns Computed hash as a hexadecimal string\n */ function xxhash128(data, seedLow = 0, seedHigh = 0) {\n    if (validateSeed(seedLow)) return Promise.reject(validateSeed(seedLow));\n    if (validateSeed(seedHigh)) return Promise.reject(validateSeed(seedHigh));\n    if (wasmCache$3 === null) return lockedCreate(mutex$3, wasmJson$5, 16).then((wasm)=>{\n        wasmCache$3 = wasm;\n        writeSeed(seedBuffer, seedLow, seedHigh);\n        wasmCache$3.writeMemory(new Uint8Array(seedBuffer));\n        return wasmCache$3.calculate(data);\n    });\n    try {\n        writeSeed(seedBuffer, seedLow, seedHigh);\n        wasmCache$3.writeMemory(new Uint8Array(seedBuffer));\n        const hash = wasmCache$3.calculate(data);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new xxHash128 hash instance\n * @param seedLow Lower 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @param seedHigh Higher 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n */ function createXXHash128(seedLow = 0, seedHigh = 0) {\n    if (validateSeed(seedLow)) return Promise.reject(validateSeed(seedLow));\n    if (validateSeed(seedHigh)) return Promise.reject(validateSeed(seedHigh));\n    return WASMInterface(wasmJson$5, 16).then((wasm)=>{\n        const instanceBuffer = new ArrayBuffer(8);\n        writeSeed(instanceBuffer, seedLow, seedHigh);\n        wasm.writeMemory(new Uint8Array(instanceBuffer));\n        wasm.init();\n        const obj = {\n            init: ()=>{\n                wasm.writeMemory(new Uint8Array(instanceBuffer));\n                wasm.init();\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 512,\n            digestSize: 16\n        };\n        return obj;\n    });\n}\nvar name$4 = \"ripemd160\";\nvar data$4 = \"\";\nvar hash$4 = \"c089a7ca\";\nvar wasmJson$4 = {\n    name: name$4,\n    data: data$4,\n    hash: hash$4\n};\nconst mutex$2 = new Mutex();\nlet wasmCache$2 = null;\n/**\n * Calculates RIPEMD-160 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */ function ripemd160(data) {\n    if (wasmCache$2 === null) return lockedCreate(mutex$2, wasmJson$4, 20).then((wasm)=>{\n        wasmCache$2 = wasm;\n        return wasmCache$2.calculate(data);\n    });\n    try {\n        const hash = wasmCache$2.calculate(data);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new RIPEMD-160 hash instance\n */ function createRIPEMD160() {\n    return WASMInterface(wasmJson$4, 20).then((wasm)=>{\n        wasm.init();\n        const obj = {\n            init: ()=>{\n                wasm.init();\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 64,\n            digestSize: 20\n        };\n        return obj;\n    });\n}\nfunction calculateKeyBuffer(hasher, key) {\n    const { blockSize } = hasher;\n    const buf = getUInt8Buffer(key);\n    if (buf.length > blockSize) {\n        hasher.update(buf);\n        const uintArr = hasher.digest(\"binary\");\n        hasher.init();\n        return uintArr;\n    }\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.length);\n}\nfunction calculateHmac(hasher, key) {\n    hasher.init();\n    const { blockSize } = hasher;\n    const keyBuf = calculateKeyBuffer(hasher, key);\n    const keyBuffer = new Uint8Array(blockSize);\n    keyBuffer.set(keyBuf);\n    const opad = new Uint8Array(blockSize);\n    for(let i = 0; i < blockSize; i++){\n        const v = keyBuffer[i];\n        opad[i] = v ^ 0x5C;\n        keyBuffer[i] = v ^ 0x36;\n    }\n    hasher.update(keyBuffer);\n    const obj = {\n        init: ()=>{\n            hasher.init();\n            hasher.update(keyBuffer);\n            return obj;\n        },\n        update: (data)=>{\n            hasher.update(data);\n            return obj;\n        },\n        digest: (outputType)=>{\n            const uintArr = hasher.digest(\"binary\");\n            hasher.init();\n            hasher.update(opad);\n            hasher.update(uintArr);\n            return hasher.digest(outputType);\n        },\n        save: ()=>{\n            throw new Error(\"save() not supported\");\n        },\n        load: ()=>{\n            throw new Error(\"load() not supported\");\n        },\n        blockSize: hasher.blockSize,\n        digestSize: hasher.digestSize\n    };\n    return obj;\n}\n/**\n * Calculates HMAC hash\n * @param hash Hash algorithm to use. It has to be the return value of a function like createSHA1()\n * @param key Key (string, Buffer or TypedArray)\n */ function createHMAC(hash, key) {\n    if (!hash || !hash.then) throw new Error('Invalid hash function is provided! Usage: createHMAC(createMD5(), \"key\").');\n    return hash.then((hasher)=>calculateHmac(hasher, key));\n}\nfunction calculatePBKDF2(digest, salt, iterations, hashLength, outputType) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const DK = new Uint8Array(hashLength);\n        const block1 = new Uint8Array(salt.length + 4);\n        const block1View = new DataView(block1.buffer);\n        const saltBuffer = getUInt8Buffer(salt);\n        const saltUIntBuffer = new Uint8Array(saltBuffer.buffer, saltBuffer.byteOffset, saltBuffer.length);\n        block1.set(saltUIntBuffer);\n        let destPos = 0;\n        const hLen = digest.digestSize;\n        const l = Math.ceil(hashLength / hLen);\n        let T = null;\n        let U = null;\n        for(let i = 1; i <= l; i++){\n            block1View.setUint32(salt.length, i);\n            digest.init();\n            digest.update(block1);\n            T = digest.digest(\"binary\");\n            U = T.slice();\n            for(let j = 1; j < iterations; j++){\n                digest.init();\n                digest.update(U);\n                U = digest.digest(\"binary\");\n                for(let k = 0; k < hLen; k++)T[k] ^= U[k];\n            }\n            DK.set(T.subarray(0, hashLength - destPos), destPos);\n            destPos += hLen;\n        }\n        if (outputType === \"binary\") return DK;\n        const digestChars = new Uint8Array(hashLength * 2);\n        return getDigestHex(digestChars, DK, hashLength);\n    });\n}\nconst validateOptions$2 = (options)=>{\n    if (!options || typeof options !== \"object\") throw new Error(\"Invalid options parameter. It requires an object.\");\n    if (!options.hashFunction || !options.hashFunction.then) throw new Error('Invalid hash function is provided! Usage: pbkdf2(\"password\", \"salt\", 1000, 32, createSHA1()).');\n    if (!Number.isInteger(options.iterations) || options.iterations < 1) throw new Error(\"Iterations should be a positive number\");\n    if (!Number.isInteger(options.hashLength) || options.hashLength < 1) throw new Error(\"Hash length should be a positive number\");\n    if (options.outputType === undefined) options.outputType = \"hex\";\n    if (![\n        \"hex\",\n        \"binary\"\n    ].includes(options.outputType)) throw new Error(`Insupported output type ${options.outputType}. Valid values: ['hex', 'binary']`);\n};\n/**\n * Generates a new PBKDF2 hash for the supplied password\n */ function pbkdf2(options) {\n    return __awaiter(this, void 0, void 0, function*() {\n        validateOptions$2(options);\n        const hmac = yield createHMAC(options.hashFunction, options.password);\n        return calculatePBKDF2(hmac, options.salt, options.iterations, options.hashLength, options.outputType);\n    });\n}\nvar name$3 = \"scrypt\";\nvar data$3 = \"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\";\nvar hash$3 = \"c51b8bf7\";\nvar wasmJson$3 = {\n    name: name$3,\n    data: data$3,\n    hash: hash$3\n};\nfunction scryptInternal(options) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const { costFactor, blockSize, parallelism, hashLength } = options;\n        const SHA256Hasher = createSHA256();\n        const blockData = yield pbkdf2({\n            password: options.password,\n            salt: options.salt,\n            iterations: 1,\n            hashLength: 128 * blockSize * parallelism,\n            hashFunction: SHA256Hasher,\n            outputType: \"binary\"\n        });\n        const scryptInterface = yield WASMInterface(wasmJson$3, 0);\n        // last block is for storing the temporary vectors\n        const VSize = 128 * blockSize * costFactor;\n        const XYSize = 256 * blockSize;\n        scryptInterface.setMemorySize(blockData.length + VSize + XYSize);\n        scryptInterface.writeMemory(blockData, 0);\n        // mix blocks\n        scryptInterface.getExports().scrypt(blockSize, costFactor, parallelism);\n        const expensiveSalt = scryptInterface.getMemory().subarray(0, 128 * blockSize * parallelism);\n        const outputData = yield pbkdf2({\n            password: options.password,\n            salt: expensiveSalt,\n            iterations: 1,\n            hashLength,\n            hashFunction: SHA256Hasher,\n            outputType: \"binary\"\n        });\n        if (options.outputType === \"hex\") {\n            const digestChars = new Uint8Array(hashLength * 2);\n            return getDigestHex(digestChars, outputData, hashLength);\n        }\n        // return binary format\n        return outputData;\n    });\n}\n// eslint-disable-next-line no-bitwise\nconst isPowerOfTwo = (v)=>v && !(v & v - 1);\nconst validateOptions$1 = (options)=>{\n    if (!options || typeof options !== \"object\") throw new Error(\"Invalid options parameter. It requires an object.\");\n    if (!Number.isInteger(options.blockSize) || options.blockSize < 1) throw new Error(\"Block size should be a positive number\");\n    if (!Number.isInteger(options.costFactor) || options.costFactor < 2 || !isPowerOfTwo(options.costFactor)) throw new Error(\"Cost factor should be a power of 2, greater than 1\");\n    if (!Number.isInteger(options.parallelism) || options.parallelism < 1) throw new Error(\"Parallelism should be a positive number\");\n    if (!Number.isInteger(options.hashLength) || options.hashLength < 1) throw new Error(\"Hash length should be a positive number.\");\n    if (options.outputType === undefined) options.outputType = \"hex\";\n    if (![\n        \"hex\",\n        \"binary\"\n    ].includes(options.outputType)) throw new Error(`Insupported output type ${options.outputType}. Valid values: ['hex', 'binary']`);\n};\n/**\n * Calculates hash using the scrypt password-based key derivation function\n * @returns Computed hash as a hexadecimal string or as\n *          Uint8Array depending on the outputType option\n */ function scrypt(options) {\n    return __awaiter(this, void 0, void 0, function*() {\n        validateOptions$1(options);\n        return scryptInternal(options);\n    });\n}\nvar name$2 = \"bcrypt\";\nvar data$2 = \"\";\nvar hash$2 = \"497b89b2\";\nvar wasmJson$2 = {\n    name: name$2,\n    data: data$2,\n    hash: hash$2\n};\nfunction bcryptInternal(options) {\n    return __awaiter(this, void 0, void 0, function*() {\n        const { costFactor, password, salt } = options;\n        const bcryptInterface = yield WASMInterface(wasmJson$2, 0);\n        bcryptInterface.writeMemory(getUInt8Buffer(salt), 0);\n        const passwordBuffer = getUInt8Buffer(password);\n        bcryptInterface.writeMemory(passwordBuffer, 16);\n        const shouldEncode = options.outputType === \"encoded\" ? 1 : 0;\n        bcryptInterface.getExports().bcrypt(passwordBuffer.length, costFactor, shouldEncode);\n        const memory = bcryptInterface.getMemory();\n        if (options.outputType === \"encoded\") return intArrayToString(memory, 60);\n        if (options.outputType === \"hex\") {\n            const digestChars = new Uint8Array(48);\n            return getDigestHex(digestChars, memory, 24);\n        }\n        // return binary format\n        // the data is copied to allow GC of the original memory buffer\n        return memory.slice(0, 24);\n    });\n}\nconst validateOptions = (options)=>{\n    if (!options || typeof options !== \"object\") throw new Error(\"Invalid options parameter. It requires an object.\");\n    if (!Number.isInteger(options.costFactor) || options.costFactor < 4 || options.costFactor > 31) throw new Error(\"Cost factor should be a number between 4 and 31\");\n    options.password = getUInt8Buffer(options.password);\n    if (options.password.length < 1) throw new Error(\"Password should be at least 1 byte long\");\n    if (options.password.length > 72) throw new Error(\"Password should be at most 72 bytes long\");\n    options.salt = getUInt8Buffer(options.salt);\n    if (options.salt.length !== 16) throw new Error(\"Salt should be 16 bytes long\");\n    if (options.outputType === undefined) options.outputType = \"encoded\";\n    if (![\n        \"hex\",\n        \"binary\",\n        \"encoded\"\n    ].includes(options.outputType)) throw new Error(`Insupported output type ${options.outputType}. Valid values: ['hex', 'binary', 'encoded']`);\n};\n/**\n * Calculates hash using the bcrypt password-hashing function\n * @returns Computed hash\n */ function bcrypt(options) {\n    return __awaiter(this, void 0, void 0, function*() {\n        validateOptions(options);\n        return bcryptInternal(options);\n    });\n}\nconst validateHashCharacters = (hash)=>{\n    if (!/^\\$2[axyb]\\$[0-3][0-9]\\$[./A-Za-z0-9]{53}$/.test(hash)) return false;\n    if (hash[4] === \"0\" && parseInt(hash[5], 10) < 4) return false;\n    if (hash[4] === \"3\" && parseInt(hash[5], 10) > 1) return false;\n    return true;\n};\nconst validateVerifyOptions = (options)=>{\n    if (!options || typeof options !== \"object\") throw new Error(\"Invalid options parameter. It requires an object.\");\n    if (options.hash === undefined || typeof options.hash !== \"string\") throw new Error(\"Hash should be specified\");\n    if (options.hash.length !== 60) throw new Error(\"Hash should be 60 bytes long\");\n    if (!validateHashCharacters(options.hash)) throw new Error(\"Invalid hash\");\n    options.password = getUInt8Buffer(options.password);\n    if (options.password.length < 1) throw new Error(\"Password should be at least 1 byte long\");\n    if (options.password.length > 72) throw new Error(\"Password should be at most 72 bytes long\");\n};\n/**\n * Verifies password using bcrypt password-hashing function\n * @returns True if the encoded hash matches the password\n */ function bcryptVerify(options) {\n    return __awaiter(this, void 0, void 0, function*() {\n        validateVerifyOptions(options);\n        const { hash, password } = options;\n        const bcryptInterface = yield WASMInterface(wasmJson$2, 0);\n        bcryptInterface.writeMemory(getUInt8Buffer(hash), 0);\n        const passwordBuffer = getUInt8Buffer(password);\n        bcryptInterface.writeMemory(passwordBuffer, 60);\n        return !!bcryptInterface.getExports().bcrypt_verify(passwordBuffer.length);\n    });\n}\nvar name$1 = \"whirlpool\";\nvar data$1 = \"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\";\nvar hash$1 = \"dba12019\";\nvar wasmJson$1 = {\n    name: name$1,\n    data: data$1,\n    hash: hash$1\n};\nconst mutex$1 = new Mutex();\nlet wasmCache$1 = null;\n/**\n * Calculates Whirlpool hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */ function whirlpool(data) {\n    if (wasmCache$1 === null) return lockedCreate(mutex$1, wasmJson$1, 64).then((wasm)=>{\n        wasmCache$1 = wasm;\n        return wasmCache$1.calculate(data);\n    });\n    try {\n        const hash = wasmCache$1.calculate(data);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new Whirlpool hash instance\n */ function createWhirlpool() {\n    return WASMInterface(wasmJson$1, 64).then((wasm)=>{\n        wasm.init();\n        const obj = {\n            init: ()=>{\n                wasm.init();\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 64,\n            digestSize: 64\n        };\n        return obj;\n    });\n}\nvar name = \"sm3\";\nvar data = \"AGFzbQEAAAABDANgAAF/YAAAYAF/AAMIBwABAgIBAAIFBAEBAgIGDgJ/AUHwiQULfwBBgAgLB3AIBm1lbW9yeQIADkhhc2hfR2V0QnVmZmVyAAAJSGFzaF9Jbml0AAELSGFzaF9VcGRhdGUAAgpIYXNoX0ZpbmFsAAQNSGFzaF9HZXRTdGF0ZQAFDkhhc2hfQ2FsY3VsYXRlAAYKU1RBVEVfU0laRQMBCtodBwUAQYAJC1EAQQBCzdy3nO7Jw/2wfzcCoIkBQQBCvOG8y6qVzpgWNwKYiQFBAELXhZG5gcCBxVo3ApCJAUEAQu+sgJyX16yKyQA3AoiJAUEAQgA3AoCJAQvvAwEIfwJAIABFDQBBACEBQQBBACgCgIkBIgIgAGoiAzYCgIkBIAJBP3EhBAJAIAMgAk8NAEEAQQAoAoSJAUEBajYChIkBC0GACSECAkAgBEUNAAJAQcAAIARrIgUgAE0NACAEIQEMAQsgBEE/cyEGIARBqIkBaiECQYAJIQMCQAJAIAVBB3EiBw0AIAUhCAwBCyAHIQgDQCACIAMtAAA6AAAgAkEBaiECIANBAWohAyAIQX9qIggNAAtBwAAgByAEamshCAsCQCAGQQdJDQADQCACIAMpAAA3AAAgAkEIaiECIANBCGohAyAIQXhqIggNAAsLQaiJARADIAVBgAlqIQIgACAFayEACwJAIABBwABJDQADQCACEAMgAkHAAGohAiAAQUBqIgBBP0sNAAsLIABFDQAgAUGoiQFqIQMCQAJAIABBB3EiCA0AIAAhBAwBCyAAQThxIQQDQCADIAItAAA6AAAgA0EBaiEDIAJBAWohAiAIQX9qIggNAAsLIABBCEkNAANAIAMgAi0AADoAACADIAItAAE6AAEgAyACLQACOgACIAMgAi0AAzoAAyADIAItAAQ6AAQgAyACLQAFOgAFIAMgAi0ABjoABiADIAItAAc6AAcgA0EIaiEDIAJBCGohAiAEQXhqIgQNAAsLC+wLARl/IwBBkAJrIgEkACABIAAoAhgiAkEYdCACQYD+A3FBCHRyIAJBCHZBgP4DcSACQRh2cnIiAzYCGCABIAAoAhQiAkEYdCACQYD+A3FBCHRyIAJBCHZBgP4DcSACQRh2cnIiBDYCFCABIAAoAggiAkEYdCACQYD+A3FBCHRyIAJBCHZBgP4DcSACQRh2cnIiBTYCCCABIAAoAhAiAkEYdCACQYD+A3FBCHRyIAJBCHZBgP4DcSACQRh2cnIiBjYCECABIAAoAiAiAkEYdCACQYD+A3FBCHRyIAJBCHZBgP4DcSACQRh2cnIiBzYCICABIAAoAgQiAkEYdCACQYD+A3FBCHRyIAJBCHZBgP4DcSACQRh2cnIiCDYCBCABIAAoAgwiAkEYdCACQYD+A3FBCHRyIAJBCHZBgP4DcSACQRh2cnIiCTYCDCABIAAoAhwiAkEYdCACQYD+A3FBCHRyIAJBCHZBgP4DcSACQRh2cnIiCjYCHCABIAAoAgAiAkEYdCACQYD+A3FBCHRyIAJBCHZBgP4DcSACQRh2cnIiCzYCACAAKAIkIQIgASAAKAI0IgxBGHQgDEGA/gNxQQh0ciAMQQh2QYD+A3EgDEEYdnJyIg02AjQgASAAKAIoIgxBGHQgDEGA/gNxQQh0ciAMQQh2QYD+A3EgDEEYdnJyIg42AiggASALIA1BD3dzIApzIgxBF3cgDEEPd3MgCUEHd3MgDnMgDHMiCjYCQCABIAAoAjgiDEEYdCAMQYD+A3FBCHRyIAxBCHZBgP4DcSAMQRh2cnIiCzYCOCABIAAoAiwiDEEYdCAMQYD+A3FBCHRyIAxBCHZBgP4DcSAMQRh2cnIiDzYCLCABIAggC0EPd3MgB3MiDEEXdyAMQQ93cyAGQQd3cyAPcyAMczYCRCABIAAoAjwiDEEYdCAMQYD+A3FBCHRyIAxBCHZBgP4DcSAMQRh2cnIiDDYCPCABIAJBGHQgAkGA/gNxQQh0ciACQQh2QYD+A3EgAkEYdnJyIgI2AiQgASAAKAIwIgBBGHQgAEGA/gNxQQh0ciAAQQh2QYD+A3EgAEEYdnJyIgY2AjAgASAFIAxBD3dzIAJzIgBBF3cgAEEPd3MgBEEHd3MgBnMgAHM2AkggASAOIApBD3dzIAlzIgBBF3cgAEEPd3MgA0EHd3MgDXMgAHM2AkxBACEGQSAhByABIQxBACgCiIkBIhAhCUEAKAKkiQEiESEPQQAoAqCJASISIQ1BACgCnIkBIhMhCEEAKAKYiQEiFCEOQQAoApSJASIVIRZBACgCkIkBIhchA0EAKAKMiQEiGCELA0AgCCAOIgJzIA0iBHMgD2ogCSIAQQx3Ig0gAmpBmYqxzgcgB3ZBmYqxzgcgBnRyakEHdyIPaiAMKAIAIhlqIglBEXcgCUEJd3MgCXMhDiADIgUgC3MgAHMgFmogDyANc2ogDEEQaigCACAZc2ohCSAMQQRqIQwgB0F/aiEHIAhBE3chDSALQQl3IQMgBCEPIAIhCCAFIRYgACELIAZBAWoiBkEQRw0AC0EAIQZBECEHA0AgASAGaiIMQdAAaiAMQThqKAIAIAxBLGooAgAgDEEQaigCAHMgDEHEAGooAgAiFkEPd3MiCEEXd3MgCEEPd3MgDEEcaigCAEEHd3MgCHMiGTYCACANIg8gDiIMQX9zcSACIAxxciAEaiAJIghBDHciDSAMakGKu57UByAHd2pBB3ciBGogCmoiCUERdyAJQQl3cyAJcyEOIAggAyILIABycSALIABxciAFaiAEIA1zaiAZIApzaiEJIAZBBGohBiACQRN3IQ0gAEEJdyEDIBYhCiAPIQQgDCECIAshBSAIIQAgB0EBaiIHQcAARw0AC0EAIA8gEXM2AqSJAUEAIA0gEnM2AqCJAUEAIAwgE3M2ApyJAUEAIA4gFHM2ApiJAUEAIAsgFXM2ApSJAUEAIAMgF3M2ApCJAUEAIAggGHM2AoyJAUEAIAkgEHM2AoiJASABQZACaiQAC4ILAQp/IwBBEGsiACQAIABBACgCgIkBIgFBG3QgAUELdEGAgPwHcXIgAUEFdkGA/gNxIAFBA3RBGHZycjYCDCAAQQAoAoSJASICQQN0IgMgAUEddnIiBEEYdCAEQYD+A3FBCHRyIAJBBXZBgP4DcSADQRh2cnI2AggCQEE4QfgAIAFBP3EiBUE4SRsgBWsiA0UNAEEAIAMgAWoiATYCgIkBAkAgASADTw0AQQAgAkEBajYChIkBC0GQCCEBQQAhBgJAIAVFDQACQCADQcAAIAVrIgdPDQAgBSEGDAELIAVBP3MhCCAFQaiJAWohAUGQCCECAkACQCAHQQdxIgkNACAHIQQMAQsgCSEEA0AgASACLQAAOgAAIAFBAWohASACQQFqIQIgBEF/aiIEDQALQcAAIAkgBWprIQQLAkAgCEEHSQ0AA0AgASACKQAANwAAIAFBCGohASACQQhqIQIgBEF4aiIEDQALC0GoiQEQAyAHQZAIaiEBIAMgB2shAwsCQCADQcAASQ0AA0AgARADIAFBwABqIQEgA0FAaiIDQT9LDQALCyADRQ0AIAZBqIkBaiECAkACQCADQQdxIgQNACADIQUMAQsgA0E4cSEFA0AgAiABLQAAOgAAIAJBAWohAiABQQFqIQEgBEF/aiIEDQALCyADQQhJDQADQCACIAEtAAA6AAAgAiABLQABOgABIAIgAS0AAjoAAiACIAEtAAM6AAMgAiABLQAEOgAEIAIgAS0ABToABSACIAEtAAY6AAYgAiABLQAHOgAHIAJBCGohAiABQQhqIQEgBUF4aiIFDQALC0EAQQAoAoCJASICQQhqNgKAiQEgAkE/cSEBAkAgAkF4SQ0AQQBBACgChIkBQQFqNgKEiQELAkACQAJAAkAgAQ0AQQAhAQwBCyABQThJDQAgAUGoiQFqIAAtAAg6AAACQCABQT9GDQAgAUGpiQFqIAAtAAk6AAAgAUE+Rg0AIAFBqokBaiAALQAKOgAAIAFBPUYNACABQauJAWogAC0ACzoAACABQTxGDQAgAUGsiQFqIAAtAAw6AAAgAUE7Rg0AIAFBrYkBaiAALQANOgAAIAFBOkYNACABQa6JAWogAC0ADjoAACABQTlGDQAgAUGviQFqIAAtAA86AABBqIkBEAMMAwtBqIkBEAMgAkEHcSIERQ0CIAFBR2ohBSAAQQhqQcAAIAFraiECIAFBSGohBkGoiQEhASAEIQMDQCABIAItAAA6AAAgAUEBaiEBIAJBAWohAiADQX9qIgMNAAsgBUEHSQ0CIAYgBGshAwwBCyABQaiJAWohAUEIIQMgAEEIaiECCwNAIAEgAikAADcAACABQQhqIQEgAkEIaiECIANBeGoiAw0ACwtBAEEAKAKIiQEiAUEYdCABQYD+A3FBCHRyIAFBCHZBgP4DcSABQRh2cnI2AoAJQQBBACgCjIkBIgFBGHQgAUGA/gNxQQh0ciABQQh2QYD+A3EgAUEYdnJyNgKECUEAQQAoApCJASIBQRh0IAFBgP4DcUEIdHIgAUEIdkGA/gNxIAFBGHZycjYCiAlBAEEAKAKUiQEiAUEYdCABQYD+A3FBCHRyIAFBCHZBgP4DcSABQRh2cnI2AowJQQBBACgCmIkBIgFBGHQgAUGA/gNxQQh0ciABQQh2QYD+A3EgAUEYdnJyNgKQCUEAQQAoApyJASIBQRh0IAFBgP4DcUEIdHIgAUEIdkGA/gNxIAFBGHZycjYClAlBAEEAKAKgiQEiAUEYdCABQYD+A3FBCHRyIAFBCHZBgP4DcSABQRh2cnI2ApgJQQBBACgCpIkBIgFBGHQgAUGA/gNxQQh0ciABQQh2QYD+A3EgAUEYdnJyNgKcCSAAQRBqJAALBgBBgIkBC5UCAQR/QQBCzdy3nO7Jw/2wfzcCoIkBQQBCvOG8y6qVzpgWNwKYiQFBAELXhZG5gcCBxVo3ApCJAUEAQu+sgJyX16yKyQA3AoiJAUEAQgA3AoCJAQJAIABFDQBBACAANgKAiQFBgAkhAQJAIABBwABJDQBBgAkhAQNAIAEQAyABQcAAaiEBIABBQGoiAEE/Sw0ACyAARQ0BCyAAQX9qIQICQAJAIABBB3EiAw0AQaiJASEEDAELIABBeHEhAEGoiQEhBANAIAQgAS0AADoAACAEQQFqIQQgAUEBaiEBIANBf2oiAw0ACwsgAkEHSQ0AA0AgBCABKQAANwAAIARBCGohBCABQQhqIQEgAEF4aiIADQALCxAECwtRAgBBgAgLBGgAAAAAQZAIC0CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\";\nvar hash = \"56515712\";\nvar wasmJson = {\n    name: name,\n    data: data,\n    hash: hash\n};\nconst mutex = new Mutex();\nlet wasmCache = null;\n/**\n * Calculates SM3 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */ function sm3(data) {\n    if (wasmCache === null) return lockedCreate(mutex, wasmJson, 32).then((wasm)=>{\n        wasmCache = wasm;\n        return wasmCache.calculate(data);\n    });\n    try {\n        const hash = wasmCache.calculate(data);\n        return Promise.resolve(hash);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new SM3 hash instance\n */ function createSM3() {\n    return WASMInterface(wasmJson, 32).then((wasm)=>{\n        wasm.init();\n        const obj = {\n            init: ()=>{\n                wasm.init();\n                return obj;\n            },\n            update: (data)=>{\n                wasm.update(data);\n                return obj;\n            },\n            digest: (outputType)=>wasm.digest(outputType),\n            save: ()=>wasm.save(),\n            load: (data)=>{\n                wasm.load(data);\n                return obj;\n            },\n            blockSize: 64,\n            digestSize: 32\n        };\n        return obj;\n    });\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"jqveO\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"Packr\", ()=>(0, _packJs.Packr));\nparcelHelpers.export(exports, \"Encoder\", ()=>(0, _packJs.Encoder));\nparcelHelpers.export(exports, \"addExtension\", ()=>(0, _packJs.addExtension));\nparcelHelpers.export(exports, \"pack\", ()=>(0, _packJs.pack));\nparcelHelpers.export(exports, \"encode\", ()=>(0, _packJs.encode));\nparcelHelpers.export(exports, \"NEVER\", ()=>(0, _packJs.NEVER));\nparcelHelpers.export(exports, \"ALWAYS\", ()=>(0, _packJs.ALWAYS));\nparcelHelpers.export(exports, \"DECIMAL_ROUND\", ()=>(0, _packJs.DECIMAL_ROUND));\nparcelHelpers.export(exports, \"DECIMAL_FIT\", ()=>(0, _packJs.DECIMAL_FIT));\nparcelHelpers.export(exports, \"REUSE_BUFFER_MODE\", ()=>(0, _packJs.REUSE_BUFFER_MODE));\nparcelHelpers.export(exports, \"Unpackr\", ()=>(0, _unpackJs.Unpackr));\nparcelHelpers.export(exports, \"Decoder\", ()=>(0, _unpackJs.Decoder));\nparcelHelpers.export(exports, \"C1\", ()=>(0, _unpackJs.C1));\nparcelHelpers.export(exports, \"unpack\", ()=>(0, _unpackJs.unpack));\nparcelHelpers.export(exports, \"unpackMultiple\", ()=>(0, _unpackJs.unpackMultiple));\nparcelHelpers.export(exports, \"decode\", ()=>(0, _unpackJs.decode));\nparcelHelpers.export(exports, \"FLOAT32_OPTIONS\", ()=>(0, _unpackJs.FLOAT32_OPTIONS));\nparcelHelpers.export(exports, \"clearSource\", ()=>(0, _unpackJs.clearSource));\nparcelHelpers.export(exports, \"roundFloat32\", ()=>(0, _unpackJs.roundFloat32));\nparcelHelpers.export(exports, \"isNativeAccelerationEnabled\", ()=>(0, _unpackJs.isNativeAccelerationEnabled));\nparcelHelpers.export(exports, \"decodeIter\", ()=>(0, _iteratorsJs.decodeIter));\nparcelHelpers.export(exports, \"encodeIter\", ()=>(0, _iteratorsJs.encodeIter));\nparcelHelpers.export(exports, \"useRecords\", ()=>useRecords);\nparcelHelpers.export(exports, \"mapsAsObjects\", ()=>mapsAsObjects);\nvar _packJs = require(\"./pack.js\");\nvar _unpackJs = require(\"./unpack.js\");\nvar _iteratorsJs = require(\"./iterators.js\");\nconst useRecords = false;\nconst mapsAsObjects = true;\n\n},{\"./pack.js\":\"8kaSs\",\"./unpack.js\":\"5WPTZ\",\"./iterators.js\":\"b1GCL\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"8kaSs\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"FLOAT32_OPTIONS\", ()=>(0, _unpackJs.FLOAT32_OPTIONS));\nparcelHelpers.export(exports, \"RECORD_SYMBOL\", ()=>RECORD_SYMBOL);\nparcelHelpers.export(exports, \"Packr\", ()=>Packr);\nparcelHelpers.export(exports, \"addExtension\", ()=>addExtension);\nparcelHelpers.export(exports, \"setWriteStructSlots\", ()=>setWriteStructSlots);\nparcelHelpers.export(exports, \"pack\", ()=>pack);\nparcelHelpers.export(exports, \"encode\", ()=>encode);\nparcelHelpers.export(exports, \"Encoder\", ()=>Encoder);\nparcelHelpers.export(exports, \"NEVER\", ()=>NEVER);\nparcelHelpers.export(exports, \"ALWAYS\", ()=>ALWAYS);\nparcelHelpers.export(exports, \"DECIMAL_ROUND\", ()=>DECIMAL_ROUND);\nparcelHelpers.export(exports, \"DECIMAL_FIT\", ()=>DECIMAL_FIT);\nparcelHelpers.export(exports, \"REUSE_BUFFER_MODE\", ()=>REUSE_BUFFER_MODE);\nparcelHelpers.export(exports, \"RESET_BUFFER_MODE\", ()=>RESET_BUFFER_MODE);\nparcelHelpers.export(exports, \"RESERVE_START_SPACE\", ()=>RESERVE_START_SPACE);\nvar _unpackJs = require(\"./unpack.js\");\nvar Buffer = require(\"d39b59f28483d155\").Buffer;\nlet textEncoder;\ntry {\n    textEncoder = new TextEncoder();\n} catch (error) {}\nlet extensions, extensionClasses;\nconst hasNodeBuffer = typeof Buffer !== \"undefined\";\nconst ByteArrayAllocate = hasNodeBuffer ? function(length) {\n    return Buffer.allocUnsafeSlow(length);\n} : Uint8Array;\nconst ByteArray = hasNodeBuffer ? Buffer : Uint8Array;\nconst MAX_BUFFER_SIZE = hasNodeBuffer ? 0x100000000 : 0x7fd00000;\nlet target, keysTarget;\nlet targetView;\nlet position = 0;\nlet safeEnd;\nlet bundledStrings = null;\nlet writeStructSlots;\nconst MAX_BUNDLE_SIZE = 0x5500 // maximum characters such that the encoded bytes fits in 16 bits.\n;\nconst hasNonLatin = /[\\u0080-\\uFFFF]/;\nconst RECORD_SYMBOL = Symbol(\"record-id\");\nclass Packr extends (0, _unpackJs.Unpackr) {\n    constructor(options){\n        super(options);\n        this.offset = 0;\n        let typeBuffer;\n        let start;\n        let hasSharedUpdate;\n        let structures;\n        let referenceMap;\n        let encodeUtf8 = ByteArray.prototype.utf8Write ? function(string, position) {\n            return target.utf8Write(string, position, 0xffffffff);\n        } : textEncoder && textEncoder.encodeInto ? function(string, position) {\n            return textEncoder.encodeInto(string, target.subarray(position)).written;\n        } : false;\n        let packr = this;\n        if (!options) options = {};\n        let isSequential = options && options.sequential;\n        let hasSharedStructures = options.structures || options.saveStructures;\n        let maxSharedStructures = options.maxSharedStructures;\n        if (maxSharedStructures == null) maxSharedStructures = hasSharedStructures ? 32 : 0;\n        if (maxSharedStructures > 8160) throw new Error(\"Maximum maxSharedStructure is 8160\");\n        if (options.structuredClone && options.moreTypes == undefined) this.moreTypes = true;\n        let maxOwnStructures = options.maxOwnStructures;\n        if (maxOwnStructures == null) maxOwnStructures = hasSharedStructures ? 32 : 64;\n        if (!this.structures && options.useRecords != false) this.structures = [];\n        // two byte record ids for shared structures\n        let useTwoByteRecords = maxSharedStructures > 32 || maxOwnStructures + maxSharedStructures > 64;\n        let sharedLimitId = maxSharedStructures + 0x40;\n        let maxStructureId = maxSharedStructures + maxOwnStructures + 0x40;\n        if (maxStructureId > 8256) throw new Error(\"Maximum maxSharedStructure + maxOwnStructure is 8192\");\n        let recordIdsToRemove = [];\n        let transitionsCount = 0;\n        let serializationsSinceTransitionRebuild = 0;\n        this.pack = this.encode = function(value, encodeOptions) {\n            if (!target) {\n                target = new ByteArrayAllocate(8192);\n                targetView = target.dataView || (target.dataView = new DataView(target.buffer, 0, 8192));\n                position = 0;\n            }\n            safeEnd = target.length - 10;\n            if (safeEnd - position < 0x800) {\n                // don't start too close to the end, \n                target = new ByteArrayAllocate(target.length);\n                targetView = target.dataView || (target.dataView = new DataView(target.buffer, 0, target.length));\n                safeEnd = target.length - 10;\n                position = 0;\n            } else position = position + 7 & 0x7ffffff8 // Word align to make any future copying of this buffer faster\n            ;\n            start = position;\n            if (encodeOptions & RESERVE_START_SPACE) position += encodeOptions & 0xff;\n            referenceMap = packr.structuredClone ? new Map() : null;\n            if (packr.bundleStrings && typeof value !== \"string\") {\n                bundledStrings = [];\n                bundledStrings.size = Infinity // force a new bundle start on first string\n                ;\n            } else bundledStrings = null;\n            structures = packr.structures;\n            if (structures) {\n                if (structures.uninitialized) structures = packr._mergeStructures(packr.getStructures());\n                let sharedLength = structures.sharedLength || 0;\n                if (sharedLength > maxSharedStructures) //if (maxSharedStructures <= 32 && structures.sharedLength > 32) // TODO: could support this, but would need to update the limit ids\n                throw new Error(\"Shared structures is larger than maximum shared structures, try increasing maxSharedStructures to \" + structures.sharedLength);\n                if (!structures.transitions) {\n                    // rebuild our structure transitions\n                    structures.transitions = Object.create(null);\n                    for(let i = 0; i < sharedLength; i++){\n                        let keys = structures[i];\n                        if (!keys) continue;\n                        let nextTransition, transition = structures.transitions;\n                        for(let j = 0, l = keys.length; j < l; j++){\n                            let key = keys[j];\n                            nextTransition = transition[key];\n                            if (!nextTransition) nextTransition = transition[key] = Object.create(null);\n                            transition = nextTransition;\n                        }\n                        transition[RECORD_SYMBOL] = i + 0x40;\n                    }\n                    this.lastNamedStructuresLength = sharedLength;\n                }\n                if (!isSequential) structures.nextId = sharedLength + 0x40;\n            }\n            if (hasSharedUpdate) hasSharedUpdate = false;\n            let encodingError;\n            try {\n                if (packr.randomAccessStructure && value && value.constructor && value.constructor === Object) writeStruct(value);\n                else pack(value);\n                let lastBundle = bundledStrings;\n                if (bundledStrings) writeBundles(start, pack, 0);\n                if (referenceMap && referenceMap.idsToInsert) {\n                    let idsToInsert = referenceMap.idsToInsert.sort((a, b)=>a.offset > b.offset ? 1 : -1);\n                    let i = idsToInsert.length;\n                    let incrementPosition = -1;\n                    while(lastBundle && i > 0){\n                        let insertionPoint = idsToInsert[--i].offset + start;\n                        if (insertionPoint < lastBundle.stringsPosition + start && incrementPosition === -1) incrementPosition = 0;\n                        if (insertionPoint > lastBundle.position + start) {\n                            if (incrementPosition >= 0) incrementPosition += 6;\n                        } else {\n                            if (incrementPosition >= 0) {\n                                // update the bundle reference now\n                                targetView.setUint32(lastBundle.position + start, targetView.getUint32(lastBundle.position + start) + incrementPosition);\n                                incrementPosition = -1; // reset\n                            }\n                            lastBundle = lastBundle.previous;\n                            i++;\n                        }\n                    }\n                    if (incrementPosition >= 0 && lastBundle) // update the bundle reference now\n                    targetView.setUint32(lastBundle.position + start, targetView.getUint32(lastBundle.position + start) + incrementPosition);\n                    position += idsToInsert.length * 6;\n                    if (position > safeEnd) makeRoom(position);\n                    packr.offset = position;\n                    let serialized = insertIds(target.subarray(start, position), idsToInsert);\n                    referenceMap = null;\n                    return serialized;\n                }\n                packr.offset = position // update the offset so next serialization doesn't write over our buffer, but can continue writing to same buffer sequentially\n                ;\n                if (encodeOptions & REUSE_BUFFER_MODE) {\n                    target.start = start;\n                    target.end = position;\n                    return target;\n                }\n                return target.subarray(start, position) // position can change if we call pack again in saveStructures, so we get the buffer now\n                ;\n            } catch (error) {\n                encodingError = error;\n                throw error;\n            } finally{\n                if (structures) {\n                    resetStructures();\n                    if (hasSharedUpdate && packr.saveStructures) {\n                        let sharedLength = structures.sharedLength || 0;\n                        // we can't rely on start/end with REUSE_BUFFER_MODE since they will (probably) change when we save\n                        let returnBuffer = target.subarray(start, position);\n                        let newSharedData = prepareStructures(structures, packr);\n                        if (!encodingError) {\n                            if (packr.saveStructures(newSharedData, newSharedData.isCompatible) === false) // get updated structures and try again if the update failed\n                            return packr.pack(value, encodeOptions);\n                            packr.lastNamedStructuresLength = sharedLength;\n                            return returnBuffer;\n                        }\n                    }\n                }\n                if (encodeOptions & RESET_BUFFER_MODE) position = start;\n            }\n        };\n        const resetStructures = ()=>{\n            if (serializationsSinceTransitionRebuild < 10) serializationsSinceTransitionRebuild++;\n            let sharedLength = structures.sharedLength || 0;\n            if (structures.length > sharedLength && !isSequential) structures.length = sharedLength;\n            if (transitionsCount > 10000) {\n                // force a rebuild occasionally after a lot of transitions so it can get cleaned up\n                structures.transitions = null;\n                serializationsSinceTransitionRebuild = 0;\n                transitionsCount = 0;\n                if (recordIdsToRemove.length > 0) recordIdsToRemove = [];\n            } else if (recordIdsToRemove.length > 0 && !isSequential) {\n                for(let i = 0, l = recordIdsToRemove.length; i < l; i++)recordIdsToRemove[i][RECORD_SYMBOL] = 0;\n                recordIdsToRemove = [];\n            }\n        };\n        const packArray = (value)=>{\n            var length = value.length;\n            if (length < 0x10) target[position++] = 0x90 | length;\n            else if (length < 0x10000) {\n                target[position++] = 0xdc;\n                target[position++] = length >> 8;\n                target[position++] = length & 0xff;\n            } else {\n                target[position++] = 0xdd;\n                targetView.setUint32(position, length);\n                position += 4;\n            }\n            for(let i = 0; i < length; i++)pack(value[i]);\n        };\n        const pack = (value)=>{\n            if (position > safeEnd) target = makeRoom(position);\n            var type = typeof value;\n            var length;\n            if (type === \"string\") {\n                let strLength = value.length;\n                if (bundledStrings && strLength >= 4 && strLength < 0x1000) {\n                    if ((bundledStrings.size += strLength) > MAX_BUNDLE_SIZE) {\n                        let extStart;\n                        let maxBytes = (bundledStrings[0] ? bundledStrings[0].length * 3 + bundledStrings[1].length : 0) + 10;\n                        if (position + maxBytes > safeEnd) target = makeRoom(position + maxBytes);\n                        let lastBundle;\n                        if (bundledStrings.position) {\n                            lastBundle = bundledStrings;\n                            target[position] = 0xc8 // ext 16\n                            ;\n                            position += 3 // reserve for the writing bundle size\n                            ;\n                            target[position++] = 0x62 // 'b'\n                            ;\n                            extStart = position - start;\n                            position += 4 // reserve for writing bundle reference\n                            ;\n                            writeBundles(start, pack, 0) // write the last bundles\n                            ;\n                            targetView.setUint16(extStart + start - 3, position - start - extStart);\n                        } else {\n                            target[position++] = 0xd6 // fixext 4\n                            ;\n                            target[position++] = 0x62 // 'b'\n                            ;\n                            extStart = position - start;\n                            position += 4 // reserve for writing bundle reference\n                            ;\n                        }\n                        bundledStrings = [\n                            \"\",\n                            \"\"\n                        ] // create new ones\n                        ;\n                        bundledStrings.previous = lastBundle;\n                        bundledStrings.size = 0;\n                        bundledStrings.position = extStart;\n                    }\n                    let twoByte = hasNonLatin.test(value);\n                    bundledStrings[twoByte ? 0 : 1] += value;\n                    target[position++] = 0xc1;\n                    pack(twoByte ? -strLength : strLength);\n                    return;\n                }\n                let headerSize;\n                // first we estimate the header size, so we can write to the correct location\n                if (strLength < 0x20) headerSize = 1;\n                else if (strLength < 0x100) headerSize = 2;\n                else if (strLength < 0x10000) headerSize = 3;\n                else headerSize = 5;\n                let maxBytes = strLength * 3;\n                if (position + maxBytes > safeEnd) target = makeRoom(position + maxBytes);\n                if (strLength < 0x40 || !encodeUtf8) {\n                    let i, c1, c2, strPosition = position + headerSize;\n                    for(i = 0; i < strLength; i++){\n                        c1 = value.charCodeAt(i);\n                        if (c1 < 0x80) target[strPosition++] = c1;\n                        else if (c1 < 0x800) {\n                            target[strPosition++] = c1 >> 6 | 0xc0;\n                            target[strPosition++] = c1 & 0x3f | 0x80;\n                        } else if ((c1 & 0xfc00) === 0xd800 && ((c2 = value.charCodeAt(i + 1)) & 0xfc00) === 0xdc00) {\n                            c1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff);\n                            i++;\n                            target[strPosition++] = c1 >> 18 | 0xf0;\n                            target[strPosition++] = c1 >> 12 & 0x3f | 0x80;\n                            target[strPosition++] = c1 >> 6 & 0x3f | 0x80;\n                            target[strPosition++] = c1 & 0x3f | 0x80;\n                        } else {\n                            target[strPosition++] = c1 >> 12 | 0xe0;\n                            target[strPosition++] = c1 >> 6 & 0x3f | 0x80;\n                            target[strPosition++] = c1 & 0x3f | 0x80;\n                        }\n                    }\n                    length = strPosition - position - headerSize;\n                } else length = encodeUtf8(value, position + headerSize);\n                if (length < 0x20) target[position++] = 0xa0 | length;\n                else if (length < 0x100) {\n                    if (headerSize < 2) target.copyWithin(position + 2, position + 1, position + 1 + length);\n                    target[position++] = 0xd9;\n                    target[position++] = length;\n                } else if (length < 0x10000) {\n                    if (headerSize < 3) target.copyWithin(position + 3, position + 2, position + 2 + length);\n                    target[position++] = 0xda;\n                    target[position++] = length >> 8;\n                    target[position++] = length & 0xff;\n                } else {\n                    if (headerSize < 5) target.copyWithin(position + 5, position + 3, position + 3 + length);\n                    target[position++] = 0xdb;\n                    targetView.setUint32(position, length);\n                    position += 4;\n                }\n                position += length;\n            } else if (type === \"number\") {\n                if (value >>> 0 === value) {\n                    // positive uint\n                    if (value < 0x20 || value < 0x80 && this.useRecords === false || value < 0x40 && !this.randomAccessStructure) target[position++] = value;\n                    else if (value < 0x100) {\n                        target[position++] = 0xcc;\n                        target[position++] = value;\n                    } else if (value < 0x10000) {\n                        target[position++] = 0xcd;\n                        target[position++] = value >> 8;\n                        target[position++] = value & 0xff;\n                    } else {\n                        target[position++] = 0xce;\n                        targetView.setUint32(position, value);\n                        position += 4;\n                    }\n                } else if (value >> 0 === value) {\n                    if (value >= -32) target[position++] = 0x100 + value;\n                    else if (value >= -128) {\n                        target[position++] = 0xd0;\n                        target[position++] = value + 0x100;\n                    } else if (value >= -32768) {\n                        target[position++] = 0xd1;\n                        targetView.setInt16(position, value);\n                        position += 2;\n                    } else {\n                        target[position++] = 0xd2;\n                        targetView.setInt32(position, value);\n                        position += 4;\n                    }\n                } else {\n                    let useFloat32;\n                    if ((useFloat32 = this.useFloat32) > 0 && value < 0x100000000 && value >= -2147483648) {\n                        target[position++] = 0xca;\n                        targetView.setFloat32(position, value);\n                        let xShifted;\n                        if (useFloat32 < 4 || (xShifted = value * (0, _unpackJs.mult10)[(target[position] & 0x7f) << 1 | target[position + 1] >> 7]) >> 0 === xShifted) {\n                            position += 4;\n                            return;\n                        } else position-- // move back into position for writing a double\n                        ;\n                    }\n                    target[position++] = 0xcb;\n                    targetView.setFloat64(position, value);\n                    position += 8;\n                }\n            } else if (type === \"object\" || type === \"function\") {\n                if (!value) target[position++] = 0xc0;\n                else {\n                    if (referenceMap) {\n                        let referee = referenceMap.get(value);\n                        if (referee) {\n                            if (!referee.id) {\n                                let idsToInsert = referenceMap.idsToInsert || (referenceMap.idsToInsert = []);\n                                referee.id = idsToInsert.push(referee);\n                            }\n                            target[position++] = 0xd6 // fixext 4\n                            ;\n                            target[position++] = 0x70 // \"p\" for pointer\n                            ;\n                            targetView.setUint32(position, referee.id);\n                            position += 4;\n                            return;\n                        } else referenceMap.set(value, {\n                            offset: position - start\n                        });\n                    }\n                    let constructor = value.constructor;\n                    if (constructor === Object) writeObject(value, true);\n                    else if (constructor === Array) packArray(value);\n                    else if (constructor === Map) {\n                        if (this.mapAsEmptyObject) target[position++] = 0x80;\n                        else {\n                            length = value.size;\n                            if (length < 0x10) target[position++] = 0x80 | length;\n                            else if (length < 0x10000) {\n                                target[position++] = 0xde;\n                                target[position++] = length >> 8;\n                                target[position++] = length & 0xff;\n                            } else {\n                                target[position++] = 0xdf;\n                                targetView.setUint32(position, length);\n                                position += 4;\n                            }\n                            for (let [key, entryValue] of value){\n                                pack(key);\n                                pack(entryValue);\n                            }\n                        }\n                    } else {\n                        for(let i = 0, l = extensions.length; i < l; i++){\n                            let extensionClass = extensionClasses[i];\n                            if (value instanceof extensionClass) {\n                                let extension = extensions[i];\n                                if (extension.write) {\n                                    if (extension.type) {\n                                        target[position++] = 0xd4 // one byte \"tag\" extension\n                                        ;\n                                        target[position++] = extension.type;\n                                        target[position++] = 0;\n                                    }\n                                    let writeResult = extension.write.call(this, value);\n                                    if (writeResult === value) {\n                                        if (Array.isArray(value)) packArray(value);\n                                        else writeObject(value);\n                                    } else pack(writeResult);\n                                    return;\n                                }\n                                let currentTarget = target;\n                                let currentTargetView = targetView;\n                                let currentPosition = position;\n                                target = null;\n                                let result;\n                                try {\n                                    result = extension.pack.call(this, value, (size)=>{\n                                        // restore target and use it\n                                        target = currentTarget;\n                                        currentTarget = null;\n                                        position += size;\n                                        if (position > safeEnd) makeRoom(position);\n                                        return {\n                                            target,\n                                            targetView,\n                                            position: position - size\n                                        };\n                                    }, pack);\n                                } finally{\n                                    // restore current target information (unless already restored)\n                                    if (currentTarget) {\n                                        target = currentTarget;\n                                        targetView = currentTargetView;\n                                        position = currentPosition;\n                                        safeEnd = target.length - 10;\n                                    }\n                                }\n                                if (result) {\n                                    if (result.length + position > safeEnd) makeRoom(result.length + position);\n                                    position = writeExtensionData(result, target, position, extension.type);\n                                }\n                                return;\n                            }\n                        }\n                        // check isArray after extensions, because extensions can extend Array\n                        if (Array.isArray(value)) packArray(value);\n                        else {\n                            // use this as an alternate mechanism for expressing how to serialize\n                            if (value.toJSON) {\n                                const json = value.toJSON();\n                                // if for some reason value.toJSON returns itself it'll loop forever\n                                if (json !== value) return pack(json);\n                            }\n                            // if there is a writeFunction, use it, otherwise just encode as undefined\n                            if (type === \"function\") return pack(this.writeFunction && this.writeFunction(value));\n                            // no extension found, write as object\n                            writeObject(value, !value.hasOwnProperty) // if it doesn't have hasOwnProperty, don't do hasOwnProperty checks\n                            ;\n                        }\n                    }\n                }\n            } else if (type === \"boolean\") target[position++] = value ? 0xc3 : 0xc2;\n            else if (type === \"bigint\") {\n                if (value < BigInt(1) << BigInt(63) && value >= -(BigInt(1) << BigInt(63))) {\n                    // use a signed int as long as it fits\n                    target[position++] = 0xd3;\n                    targetView.setBigInt64(position, value);\n                } else if (value < BigInt(1) << BigInt(64) && value > 0) {\n                    // if we can fit an unsigned int, use that\n                    target[position++] = 0xcf;\n                    targetView.setBigUint64(position, value);\n                } else {\n                    // overflow\n                    if (this.largeBigIntToFloat) {\n                        target[position++] = 0xcb;\n                        targetView.setFloat64(position, Number(value));\n                    } else if (this.useBigIntExtension && value < 2n ** 1023n && value > -(2n ** 1023n)) {\n                        target[position++] = 0xc7;\n                        position++;\n                        target[position++] = 0x42 // \"B\" for BigInt\n                        ;\n                        let bytes = [];\n                        let alignedSign;\n                        do {\n                            let byte = value & 0xffn;\n                            alignedSign = (byte & 0x80n) === (value < 0n ? 0x80n : 0n);\n                            bytes.push(byte);\n                            value >>= 8n;\n                        }while (!((value === 0n || value === -1n) && alignedSign));\n                        target[position - 2] = bytes.length;\n                        for(let i = bytes.length; i > 0;)target[position++] = Number(bytes[--i]);\n                        return;\n                    } else throw new RangeError(value + \" was too large to fit in MessagePack 64-bit integer format, use\" + \" useBigIntExtension or set largeBigIntToFloat to convert to float-64\");\n                }\n                position += 8;\n            } else if (type === \"undefined\") {\n                if (this.encodeUndefinedAsNil) target[position++] = 0xc0;\n                else {\n                    target[position++] = 0xd4 // a number of implementations use fixext1 with type 0, data 0 to denote undefined, so we follow suite\n                    ;\n                    target[position++] = 0;\n                    target[position++] = 0;\n                }\n            } else throw new Error(\"Unknown type: \" + type);\n        };\n        const writePlainObject = this.variableMapSize || this.coercibleKeyAsNumber ? (object)=>{\n            // this method is slightly slower, but generates \"preferred serialization\" (optimally small for smaller objects)\n            let keys = Object.keys(object);\n            let length = keys.length;\n            if (length < 0x10) target[position++] = 0x80 | length;\n            else if (length < 0x10000) {\n                target[position++] = 0xde;\n                target[position++] = length >> 8;\n                target[position++] = length & 0xff;\n            } else {\n                target[position++] = 0xdf;\n                targetView.setUint32(position, length);\n                position += 4;\n            }\n            let key;\n            if (this.coercibleKeyAsNumber) for(let i = 0; i < length; i++){\n                key = keys[i];\n                let num = Number(key);\n                pack(isNaN(num) ? key : num);\n                pack(object[key]);\n            }\n            else for(let i = 0; i < length; i++){\n                pack(key = keys[i]);\n                pack(object[key]);\n            }\n        } : (object, safePrototype)=>{\n            target[position++] = 0xde // always using map 16, so we can preallocate and set the length afterwards\n            ;\n            let objectOffset = position - start;\n            position += 2;\n            let size = 0;\n            for(let key in object)if (safePrototype || object.hasOwnProperty(key)) {\n                pack(key);\n                pack(object[key]);\n                size++;\n            }\n            target[objectOffset++ + start] = size >> 8;\n            target[objectOffset + start] = size & 0xff;\n        };\n        const writeRecord = this.useRecords === false ? writePlainObject : options.progressiveRecords && !useTwoByteRecords ? (object, safePrototype)=>{\n            let nextTransition, transition = structures.transitions || (structures.transitions = Object.create(null));\n            let objectOffset = position++ - start;\n            let wroteKeys;\n            for(let key in object)if (safePrototype || object.hasOwnProperty(key)) {\n                nextTransition = transition[key];\n                if (nextTransition) transition = nextTransition;\n                else {\n                    // record doesn't exist, create full new record and insert it\n                    let keys = Object.keys(object);\n                    let lastTransition = transition;\n                    transition = structures.transitions;\n                    let newTransitions = 0;\n                    for(let i = 0, l = keys.length; i < l; i++){\n                        let key = keys[i];\n                        nextTransition = transition[key];\n                        if (!nextTransition) {\n                            nextTransition = transition[key] = Object.create(null);\n                            newTransitions++;\n                        }\n                        transition = nextTransition;\n                    }\n                    if (objectOffset + start + 1 == position) {\n                        // first key, so we don't need to insert, we can just write record directly\n                        position--;\n                        newRecord(transition, keys, newTransitions);\n                    } else insertNewRecord(transition, keys, objectOffset, newTransitions);\n                    wroteKeys = true;\n                    transition = lastTransition[key];\n                }\n                pack(object[key]);\n            }\n            if (!wroteKeys) {\n                let recordId = transition[RECORD_SYMBOL];\n                if (recordId) target[objectOffset + start] = recordId;\n                else insertNewRecord(transition, Object.keys(object), objectOffset, 0);\n            }\n        } : (object, safePrototype)=>{\n            let nextTransition, transition = structures.transitions || (structures.transitions = Object.create(null));\n            let newTransitions = 0;\n            for(let key in object)if (safePrototype || object.hasOwnProperty(key)) {\n                nextTransition = transition[key];\n                if (!nextTransition) {\n                    nextTransition = transition[key] = Object.create(null);\n                    newTransitions++;\n                }\n                transition = nextTransition;\n            }\n            let recordId = transition[RECORD_SYMBOL];\n            if (recordId) {\n                if (recordId >= 0x60 && useTwoByteRecords) {\n                    target[position++] = ((recordId -= 0x60) & 0x1f) + 0x60;\n                    target[position++] = recordId >> 5;\n                } else target[position++] = recordId;\n            } else newRecord(transition, transition.__keys__ || Object.keys(object), newTransitions);\n            // now write the values\n            for(let key in object)if (safePrototype || object.hasOwnProperty(key)) pack(object[key]);\n        };\n        // craete reference to useRecords if useRecords is a function\n        const checkUseRecords = typeof this.useRecords == \"function\" && this.useRecords;\n        const writeObject = checkUseRecords ? (object, safePrototype)=>{\n            checkUseRecords(object) ? writeRecord(object, safePrototype) : writePlainObject(object, safePrototype);\n        } : writeRecord;\n        const makeRoom = (end)=>{\n            let newSize;\n            if (end > 0x1000000) {\n                // special handling for really large buffers\n                if (end - start > MAX_BUFFER_SIZE) throw new Error(\"Packed buffer would be larger than maximum buffer size\");\n                newSize = Math.min(MAX_BUFFER_SIZE, Math.round(Math.max((end - start) * (end > 0x4000000 ? 1.25 : 2), 0x400000) / 0x1000) * 0x1000);\n            } else newSize = (Math.max(end - start << 2, target.length - 1) >> 12) + 1 << 12;\n            let newBuffer = new ByteArrayAllocate(newSize);\n            targetView = newBuffer.dataView || (newBuffer.dataView = new DataView(newBuffer.buffer, 0, newSize));\n            end = Math.min(end, target.length);\n            if (target.copy) target.copy(newBuffer, 0, start, end);\n            else newBuffer.set(target.slice(start, end));\n            position -= start;\n            start = 0;\n            safeEnd = newBuffer.length - 10;\n            return target = newBuffer;\n        };\n        const newRecord = (transition, keys, newTransitions)=>{\n            let recordId = structures.nextId;\n            if (!recordId) recordId = 0x40;\n            if (recordId < sharedLimitId && this.shouldShareStructure && !this.shouldShareStructure(keys)) {\n                recordId = structures.nextOwnId;\n                if (!(recordId < maxStructureId)) recordId = sharedLimitId;\n                structures.nextOwnId = recordId + 1;\n            } else {\n                if (recordId >= maxStructureId) recordId = sharedLimitId;\n                structures.nextId = recordId + 1;\n            }\n            let highByte = keys.highByte = recordId >= 0x60 && useTwoByteRecords ? recordId - 0x60 >> 5 : -1;\n            transition[RECORD_SYMBOL] = recordId;\n            transition.__keys__ = keys;\n            structures[recordId - 0x40] = keys;\n            if (recordId < sharedLimitId) {\n                keys.isShared = true;\n                structures.sharedLength = recordId - 0x3f;\n                hasSharedUpdate = true;\n                if (highByte >= 0) {\n                    target[position++] = (recordId & 0x1f) + 0x60;\n                    target[position++] = highByte;\n                } else target[position++] = recordId;\n            } else {\n                if (highByte >= 0) {\n                    target[position++] = 0xd5 // fixext 2\n                    ;\n                    target[position++] = 0x72 // \"r\" record defintion extension type\n                    ;\n                    target[position++] = (recordId & 0x1f) + 0x60;\n                    target[position++] = highByte;\n                } else {\n                    target[position++] = 0xd4 // fixext 1\n                    ;\n                    target[position++] = 0x72 // \"r\" record defintion extension type\n                    ;\n                    target[position++] = recordId;\n                }\n                if (newTransitions) transitionsCount += serializationsSinceTransitionRebuild * newTransitions;\n                // record the removal of the id, we can maintain our shared structure\n                if (recordIdsToRemove.length >= maxOwnStructures) recordIdsToRemove.shift()[RECORD_SYMBOL] = 0 // we are cycling back through, and have to remove old ones\n                ;\n                recordIdsToRemove.push(transition);\n                pack(keys);\n            }\n        };\n        const insertNewRecord = (transition, keys, insertionOffset, newTransitions)=>{\n            let mainTarget = target;\n            let mainPosition = position;\n            let mainSafeEnd = safeEnd;\n            let mainStart = start;\n            target = keysTarget;\n            position = 0;\n            start = 0;\n            if (!target) keysTarget = target = new ByteArrayAllocate(8192);\n            safeEnd = target.length - 10;\n            newRecord(transition, keys, newTransitions);\n            keysTarget = target;\n            let keysPosition = position;\n            target = mainTarget;\n            position = mainPosition;\n            safeEnd = mainSafeEnd;\n            start = mainStart;\n            if (keysPosition > 1) {\n                let newEnd = position + keysPosition - 1;\n                if (newEnd > safeEnd) makeRoom(newEnd);\n                let insertionPosition = insertionOffset + start;\n                target.copyWithin(insertionPosition + keysPosition, insertionPosition + 1, position);\n                target.set(keysTarget.slice(0, keysPosition), insertionPosition);\n                position = newEnd;\n            } else target[insertionOffset + start] = keysTarget[0];\n        };\n        const writeStruct = (object, safePrototype)=>{\n            let newPosition = writeStructSlots(object, target, start, position, structures, makeRoom, (value, newPosition, notifySharedUpdate)=>{\n                if (notifySharedUpdate) return hasSharedUpdate = true;\n                position = newPosition;\n                let startTarget = target;\n                pack(value);\n                resetStructures();\n                if (startTarget !== target) return {\n                    position,\n                    targetView,\n                    target\n                }; // indicate the buffer was re-allocated\n                return position;\n            }, this);\n            if (newPosition === 0) return writeObject(object, true);\n            position = newPosition;\n        };\n    }\n    useBuffer(buffer) {\n        // this means we are finished using our own buffer and we can write over it safely\n        target = buffer;\n        targetView = new DataView(target.buffer, target.byteOffset, target.byteLength);\n        position = 0;\n    }\n    clearSharedData() {\n        if (this.structures) this.structures = [];\n        if (this.typedStructs) this.typedStructs = [];\n    }\n}\nfunction copyBinary(source, target, targetOffset, offset, endOffset) {\n    while(offset < endOffset)target[targetOffset++] = source[offset++];\n}\nextensionClasses = [\n    Date,\n    Set,\n    Error,\n    RegExp,\n    ArrayBuffer,\n    Object.getPrototypeOf(Uint8Array.prototype).constructor /*TypedArray*/ ,\n    (0, _unpackJs.C1Type)\n];\nextensions = [\n    {\n        pack (date, allocateForWrite, pack) {\n            let seconds = date.getTime() / 1000;\n            if ((this.useTimestamp32 || date.getMilliseconds() === 0) && seconds >= 0 && seconds < 0x100000000) {\n                // Timestamp 32\n                let { target, targetView, position } = allocateForWrite(6);\n                target[position++] = 0xd6;\n                target[position++] = 0xff;\n                targetView.setUint32(position, seconds);\n            } else if (seconds > 0 && seconds < 0x100000000) {\n                // Timestamp 64\n                let { target, targetView, position } = allocateForWrite(10);\n                target[position++] = 0xd7;\n                target[position++] = 0xff;\n                targetView.setUint32(position, date.getMilliseconds() * 4000000 + (seconds / 1000 / 0x100000000 >> 0));\n                targetView.setUint32(position + 4, seconds);\n            } else if (isNaN(seconds)) {\n                if (this.onInvalidDate) {\n                    allocateForWrite(0);\n                    return pack(this.onInvalidDate());\n                }\n                // Intentionally invalid timestamp\n                let { target, targetView, position } = allocateForWrite(3);\n                target[position++] = 0xd4;\n                target[position++] = 0xff;\n                target[position++] = 0xff;\n            } else {\n                // Timestamp 96\n                let { target, targetView, position } = allocateForWrite(15);\n                target[position++] = 0xc7;\n                target[position++] = 12;\n                target[position++] = 0xff;\n                targetView.setUint32(position, date.getMilliseconds() * 1000000);\n                targetView.setBigInt64(position + 4, BigInt(Math.floor(seconds)));\n            }\n        }\n    },\n    {\n        pack (set, allocateForWrite, pack) {\n            if (this.setAsEmptyObject) {\n                allocateForWrite(0);\n                return pack({});\n            }\n            let array = Array.from(set);\n            let { target, position } = allocateForWrite(this.moreTypes ? 3 : 0);\n            if (this.moreTypes) {\n                target[position++] = 0xd4;\n                target[position++] = 0x73 // 's' for Set\n                ;\n                target[position++] = 0;\n            }\n            pack(array);\n        }\n    },\n    {\n        pack (error, allocateForWrite, pack) {\n            let { target, position } = allocateForWrite(this.moreTypes ? 3 : 0);\n            if (this.moreTypes) {\n                target[position++] = 0xd4;\n                target[position++] = 0x65 // 'e' for error\n                ;\n                target[position++] = 0;\n            }\n            pack([\n                error.name,\n                error.message\n            ]);\n        }\n    },\n    {\n        pack (regex, allocateForWrite, pack) {\n            let { target, position } = allocateForWrite(this.moreTypes ? 3 : 0);\n            if (this.moreTypes) {\n                target[position++] = 0xd4;\n                target[position++] = 0x78 // 'x' for regeXp\n                ;\n                target[position++] = 0;\n            }\n            pack([\n                regex.source,\n                regex.flags\n            ]);\n        }\n    },\n    {\n        pack (arrayBuffer, allocateForWrite) {\n            if (this.moreTypes) writeExtBuffer(arrayBuffer, 0x10, allocateForWrite);\n            else writeBuffer(hasNodeBuffer ? Buffer.from(arrayBuffer) : new Uint8Array(arrayBuffer), allocateForWrite);\n        }\n    },\n    {\n        pack (typedArray, allocateForWrite) {\n            let constructor = typedArray.constructor;\n            if (constructor !== ByteArray && this.moreTypes) writeExtBuffer(typedArray, (0, _unpackJs.typedArrays).indexOf(constructor.name), allocateForWrite);\n            else writeBuffer(typedArray, allocateForWrite);\n        }\n    },\n    {\n        pack (c1, allocateForWrite) {\n            let { target, position } = allocateForWrite(1);\n            target[position] = 0xc1;\n        }\n    }\n];\nfunction writeExtBuffer(typedArray, type, allocateForWrite, encode) {\n    let length = typedArray.byteLength;\n    if (length + 1 < 0x100) {\n        var { target, position } = allocateForWrite(4 + length);\n        target[position++] = 0xc7;\n        target[position++] = length + 1;\n    } else if (length + 1 < 0x10000) {\n        var { target, position } = allocateForWrite(5 + length);\n        target[position++] = 0xc8;\n        target[position++] = length + 1 >> 8;\n        target[position++] = length + 1 & 0xff;\n    } else {\n        var { target, position, targetView } = allocateForWrite(7 + length);\n        target[position++] = 0xc9;\n        targetView.setUint32(position, length + 1) // plus one for the type byte\n        ;\n        position += 4;\n    }\n    target[position++] = 0x74 // \"t\" for typed array\n    ;\n    target[position++] = type;\n    target.set(new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength), position);\n}\nfunction writeBuffer(buffer, allocateForWrite) {\n    let length = buffer.byteLength;\n    var target, position;\n    if (length < 0x100) {\n        var { target, position } = allocateForWrite(length + 2);\n        target[position++] = 0xc4;\n        target[position++] = length;\n    } else if (length < 0x10000) {\n        var { target, position } = allocateForWrite(length + 3);\n        target[position++] = 0xc5;\n        target[position++] = length >> 8;\n        target[position++] = length & 0xff;\n    } else {\n        var { target, position, targetView } = allocateForWrite(length + 5);\n        target[position++] = 0xc6;\n        targetView.setUint32(position, length);\n        position += 4;\n    }\n    target.set(buffer, position);\n}\nfunction writeExtensionData(result, target, position, type) {\n    let length = result.length;\n    switch(length){\n        case 1:\n            target[position++] = 0xd4;\n            break;\n        case 2:\n            target[position++] = 0xd5;\n            break;\n        case 4:\n            target[position++] = 0xd6;\n            break;\n        case 8:\n            target[position++] = 0xd7;\n            break;\n        case 16:\n            target[position++] = 0xd8;\n            break;\n        default:\n            if (length < 0x100) {\n                target[position++] = 0xc7;\n                target[position++] = length;\n            } else if (length < 0x10000) {\n                target[position++] = 0xc8;\n                target[position++] = length >> 8;\n                target[position++] = length & 0xff;\n            } else {\n                target[position++] = 0xc9;\n                target[position++] = length >> 24;\n                target[position++] = length >> 16 & 0xff;\n                target[position++] = length >> 8 & 0xff;\n                target[position++] = length & 0xff;\n            }\n    }\n    target[position++] = type;\n    target.set(result, position);\n    position += length;\n    return position;\n}\nfunction insertIds(serialized, idsToInsert) {\n    // insert the ids that need to be referenced for structured clones\n    let nextId;\n    let distanceToMove = idsToInsert.length * 6;\n    let lastEnd = serialized.length - distanceToMove;\n    while(nextId = idsToInsert.pop()){\n        let offset = nextId.offset;\n        let id = nextId.id;\n        serialized.copyWithin(offset + distanceToMove, offset, lastEnd);\n        distanceToMove -= 6;\n        let position = offset + distanceToMove;\n        serialized[position++] = 0xd6;\n        serialized[position++] = 0x69 // 'i'\n        ;\n        serialized[position++] = id >> 24;\n        serialized[position++] = id >> 16 & 0xff;\n        serialized[position++] = id >> 8 & 0xff;\n        serialized[position++] = id & 0xff;\n        lastEnd = offset;\n    }\n    return serialized;\n}\nfunction writeBundles(start, pack, incrementPosition) {\n    if (bundledStrings.length > 0) {\n        targetView.setUint32(bundledStrings.position + start, position + incrementPosition - bundledStrings.position - start);\n        bundledStrings.stringsPosition = position - start;\n        let writeStrings = bundledStrings;\n        bundledStrings = null;\n        pack(writeStrings[0]);\n        pack(writeStrings[1]);\n    }\n}\nfunction addExtension(extension) {\n    if (extension.Class) {\n        if (!extension.pack && !extension.write) throw new Error(\"Extension has no pack or write function\");\n        if (extension.pack && !extension.type) throw new Error(\"Extension has no type (numeric code to identify the extension)\");\n        extensionClasses.unshift(extension.Class);\n        extensions.unshift(extension);\n    }\n    (0, _unpackJs.addExtension)(extension);\n}\nfunction prepareStructures(structures, packr) {\n    structures.isCompatible = (existingStructures)=>{\n        let compatible = !existingStructures || (packr.lastNamedStructuresLength || 0) === existingStructures.length;\n        if (!compatible) packr._mergeStructures(existingStructures);\n        return compatible;\n    };\n    return structures;\n}\nfunction setWriteStructSlots(writeSlots, makeStructures) {\n    writeStructSlots = writeSlots;\n    prepareStructures = makeStructures;\n}\nlet defaultPackr = new Packr({\n    useRecords: false\n});\nconst pack = defaultPackr.pack;\nconst encode = defaultPackr.pack;\nconst Encoder = Packr;\nconst { NEVER, ALWAYS, DECIMAL_ROUND, DECIMAL_FIT } = (0, _unpackJs.FLOAT32_OPTIONS);\nconst REUSE_BUFFER_MODE = 512;\nconst RESET_BUFFER_MODE = 1024;\nconst RESERVE_START_SPACE = 2048;\n\n},{\"d39b59f28483d155\":\"1XYH5\",\"./unpack.js\":\"5WPTZ\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"5WPTZ\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"C1Type\", ()=>C1Type);\nparcelHelpers.export(exports, \"C1\", ()=>C1);\nparcelHelpers.export(exports, \"Unpackr\", ()=>Unpackr);\nparcelHelpers.export(exports, \"getPosition\", ()=>getPosition);\nparcelHelpers.export(exports, \"checkedRead\", ()=>checkedRead);\nparcelHelpers.export(exports, \"read\", ()=>read);\nparcelHelpers.export(exports, \"loadStructures\", ()=>loadStructures);\nparcelHelpers.export(exports, \"isNativeAccelerationEnabled\", ()=>isNativeAccelerationEnabled);\nparcelHelpers.export(exports, \"setExtractor\", ()=>setExtractor);\nparcelHelpers.export(exports, \"readString\", ()=>readString);\nparcelHelpers.export(exports, \"typedArrays\", ()=>typedArrays);\nparcelHelpers.export(exports, \"clearSource\", ()=>clearSource);\nparcelHelpers.export(exports, \"addExtension\", ()=>addExtension);\nparcelHelpers.export(exports, \"mult10\", ()=>mult10);\nparcelHelpers.export(exports, \"Decoder\", ()=>Decoder);\nparcelHelpers.export(exports, \"unpack\", ()=>unpack);\nparcelHelpers.export(exports, \"unpackMultiple\", ()=>unpackMultiple);\nparcelHelpers.export(exports, \"decode\", ()=>decode);\nparcelHelpers.export(exports, \"FLOAT32_OPTIONS\", ()=>FLOAT32_OPTIONS);\nparcelHelpers.export(exports, \"roundFloat32\", ()=>roundFloat32);\nparcelHelpers.export(exports, \"setReadStruct\", ()=>setReadStruct);\nvar Buffer = require(\"b5a1b40c14b71778\").Buffer;\nvar decoder;\ntry {\n    decoder = new TextDecoder();\n} catch (error) {}\nvar src;\nvar srcEnd;\nvar position = 0;\nvar alreadySet;\nconst EMPTY_ARRAY = [];\nvar strings = EMPTY_ARRAY;\nvar stringPosition = 0;\nvar currentUnpackr = {};\nvar currentStructures;\nvar srcString;\nvar srcStringStart = 0;\nvar srcStringEnd = 0;\nvar bundledStrings;\nvar referenceMap;\nvar currentExtensions = [];\nvar dataView;\nvar defaultOptions = {\n    useRecords: false,\n    mapsAsObjects: true\n};\nclass C1Type {\n}\nconst C1 = new C1Type();\nC1.name = \"MessagePack 0xC1\";\nvar sequentialMode = false;\nvar inlineObjectReadThreshold = 2;\nvar readStruct, onLoadedStructures, onSaveState;\nvar BlockedFunction // we use search and replace to change the next call to BlockedFunction to avoid CSP issues for\n;\n// no-eval build\ntry {\n    new Function(\"\");\n} catch (error) {\n    // if eval variants are not supported, do not create inline object readers ever\n    inlineObjectReadThreshold = Infinity;\n}\nclass Unpackr {\n    constructor(options){\n        if (options) {\n            if (options.useRecords === false && options.mapsAsObjects === undefined) options.mapsAsObjects = true;\n            if (options.sequential && options.trusted !== false) {\n                options.trusted = true;\n                if (!options.structures && options.useRecords != false) {\n                    options.structures = [];\n                    if (!options.maxSharedStructures) options.maxSharedStructures = 0;\n                }\n            }\n            if (options.structures) options.structures.sharedLength = options.structures.length;\n            else if (options.getStructures) {\n                (options.structures = []).uninitialized = true // this is what we use to denote an uninitialized structures\n                ;\n                options.structures.sharedLength = 0;\n            }\n            if (options.int64AsNumber) options.int64AsType = \"number\";\n        }\n        Object.assign(this, options);\n    }\n    unpack(source, options) {\n        if (src) // re-entrant execution, save the state and restore it after we do this unpack\n        return saveState(()=>{\n            clearSource();\n            return this ? this.unpack(source, options) : Unpackr.prototype.unpack.call(defaultOptions, source, options);\n        });\n        if (!source.buffer && source.constructor === ArrayBuffer) source = typeof Buffer !== \"undefined\" ? Buffer.from(source) : new Uint8Array(source);\n        if (typeof options === \"object\") {\n            srcEnd = options.end || source.length;\n            position = options.start || 0;\n        } else {\n            position = 0;\n            srcEnd = options > -1 ? options : source.length;\n        }\n        stringPosition = 0;\n        srcStringEnd = 0;\n        srcString = null;\n        strings = EMPTY_ARRAY;\n        bundledStrings = null;\n        src = source;\n        // this provides cached access to the data view for a buffer if it is getting reused, which is a recommend\n        // technique for getting data from a database where it can be copied into an existing buffer instead of creating\n        // new ones\n        try {\n            dataView = source.dataView || (source.dataView = new DataView(source.buffer, source.byteOffset, source.byteLength));\n        } catch (error) {\n            // if it doesn't have a buffer, maybe it is the wrong type of object\n            src = null;\n            if (source instanceof Uint8Array) throw error;\n            throw new Error(\"Source must be a Uint8Array or Buffer but was a \" + (source && typeof source == \"object\" ? source.constructor.name : typeof source));\n        }\n        if (this instanceof Unpackr) {\n            currentUnpackr = this;\n            if (this.structures) {\n                currentStructures = this.structures;\n                return checkedRead(options);\n            } else if (!currentStructures || currentStructures.length > 0) currentStructures = [];\n        } else {\n            currentUnpackr = defaultOptions;\n            if (!currentStructures || currentStructures.length > 0) currentStructures = [];\n        }\n        return checkedRead(options);\n    }\n    unpackMultiple(source, forEach) {\n        let values, lastPosition = 0;\n        try {\n            sequentialMode = true;\n            let size = source.length;\n            let value = this ? this.unpack(source, size) : defaultUnpackr.unpack(source, size);\n            if (forEach) {\n                if (forEach(value, lastPosition, position) === false) return;\n                while(position < size){\n                    lastPosition = position;\n                    if (forEach(checkedRead(), lastPosition, position) === false) return;\n                }\n            } else {\n                values = [\n                    value\n                ];\n                while(position < size){\n                    lastPosition = position;\n                    values.push(checkedRead());\n                }\n                return values;\n            }\n        } catch (error) {\n            error.lastPosition = lastPosition;\n            error.values = values;\n            throw error;\n        } finally{\n            sequentialMode = false;\n            clearSource();\n        }\n    }\n    _mergeStructures(loadedStructures, existingStructures) {\n        if (onLoadedStructures) loadedStructures = onLoadedStructures.call(this, loadedStructures);\n        loadedStructures = loadedStructures || [];\n        if (Object.isFrozen(loadedStructures)) loadedStructures = loadedStructures.map((structure)=>structure.slice(0));\n        for(let i = 0, l = loadedStructures.length; i < l; i++){\n            let structure = loadedStructures[i];\n            if (structure) {\n                structure.isShared = true;\n                if (i >= 32) structure.highByte = i - 32 >> 5;\n            }\n        }\n        loadedStructures.sharedLength = loadedStructures.length;\n        for(let id in existingStructures || [])if (id >= 0) {\n            let structure = loadedStructures[id];\n            let existing = existingStructures[id];\n            if (existing) {\n                if (structure) (loadedStructures.restoreStructures || (loadedStructures.restoreStructures = []))[id] = structure;\n                loadedStructures[id] = existing;\n            }\n        }\n        return this.structures = loadedStructures;\n    }\n    decode(source, options) {\n        return this.unpack(source, options);\n    }\n}\nfunction getPosition() {\n    return position;\n}\nfunction checkedRead(options) {\n    try {\n        if (!currentUnpackr.trusted && !sequentialMode) {\n            let sharedLength = currentStructures.sharedLength || 0;\n            if (sharedLength < currentStructures.length) currentStructures.length = sharedLength;\n        }\n        let result;\n        if (currentUnpackr.randomAccessStructure && src[position] < 0x40 && src[position] >= 0x20 && readStruct) {\n            result = readStruct(src, position, srcEnd, currentUnpackr);\n            src = null // dispose of this so that recursive unpack calls don't save state\n            ;\n            if (!(options && options.lazy) && result) result = result.toJSON();\n            position = srcEnd;\n        } else result = read();\n        if (bundledStrings) {\n            position = bundledStrings.postBundlePosition;\n            bundledStrings = null;\n        }\n        if (sequentialMode) // we only need to restore the structures if there was an error, but if we completed a read,\n        // we can clear this out and keep the structures we read\n        currentStructures.restoreStructures = null;\n        if (position == srcEnd) {\n            // finished reading this source, cleanup references\n            if (currentStructures && currentStructures.restoreStructures) restoreStructures();\n            currentStructures = null;\n            src = null;\n            if (referenceMap) referenceMap = null;\n        } else if (position > srcEnd) // over read\n        throw new Error(\"Unexpected end of MessagePack data\");\n        else if (!sequentialMode) {\n            let jsonView;\n            try {\n                jsonView = JSON.stringify(result, (_, value)=>typeof value === \"bigint\" ? `${value}n` : value).slice(0, 100);\n            } catch (error) {\n                jsonView = \"(JSON view not available \" + error + \")\";\n            }\n            throw new Error(\"Data read, but end of buffer not reached \" + jsonView);\n        }\n        // else more to read, but we are reading sequentially, so don't clear source yet\n        return result;\n    } catch (error) {\n        if (currentStructures && currentStructures.restoreStructures) restoreStructures();\n        clearSource();\n        if (error instanceof RangeError || error.message.startsWith(\"Unexpected end of buffer\") || position > srcEnd) error.incomplete = true;\n        throw error;\n    }\n}\nfunction restoreStructures() {\n    for(let id in currentStructures.restoreStructures)currentStructures[id] = currentStructures.restoreStructures[id];\n    currentStructures.restoreStructures = null;\n}\nfunction read() {\n    let token = src[position++];\n    if (token < 0xa0) {\n        if (token < 0x80) {\n            if (token < 0x40) return token;\n            else {\n                let structure = currentStructures[token & 0x3f] || currentUnpackr.getStructures && loadStructures()[token & 0x3f];\n                if (structure) {\n                    if (!structure.read) structure.read = createStructureReader(structure, token & 0x3f);\n                    return structure.read();\n                } else return token;\n            }\n        } else if (token < 0x90) {\n            // map\n            token -= 0x80;\n            if (currentUnpackr.mapsAsObjects) {\n                let object = {};\n                for(let i = 0; i < token; i++){\n                    let key = readKey();\n                    if (key === \"__proto__\") key = \"__proto_\";\n                    object[key] = read();\n                }\n                return object;\n            } else {\n                let map = new Map();\n                for(let i = 0; i < token; i++)map.set(read(), read());\n                return map;\n            }\n        } else {\n            token -= 0x90;\n            let array = new Array(token);\n            for(let i = 0; i < token; i++)array[i] = read();\n            if (currentUnpackr.freezeData) return Object.freeze(array);\n            return array;\n        }\n    } else if (token < 0xc0) {\n        // fixstr\n        let length = token - 0xa0;\n        if (srcStringEnd >= position) return srcString.slice(position - srcStringStart, (position += length) - srcStringStart);\n        if (srcStringEnd == 0 && srcEnd < 140) {\n            // for small blocks, avoiding the overhead of the extract call is helpful\n            let string = length < 16 ? shortStringInJS(length) : longStringInJS(length);\n            if (string != null) return string;\n        }\n        return readFixedString(length);\n    } else {\n        let value;\n        switch(token){\n            case 0xc0:\n                return null;\n            case 0xc1:\n                if (bundledStrings) {\n                    value = read() // followed by the length of the string in characters (not bytes!)\n                    ;\n                    if (value > 0) return bundledStrings[1].slice(bundledStrings.position1, bundledStrings.position1 += value);\n                    else return bundledStrings[0].slice(bundledStrings.position0, bundledStrings.position0 -= value);\n                }\n                return C1; // \"never-used\", return special object to denote that\n            case 0xc2:\n                return false;\n            case 0xc3:\n                return true;\n            case 0xc4:\n                // bin 8\n                value = src[position++];\n                if (value === undefined) throw new Error(\"Unexpected end of buffer\");\n                return readBin(value);\n            case 0xc5:\n                // bin 16\n                value = dataView.getUint16(position);\n                position += 2;\n                return readBin(value);\n            case 0xc6:\n                // bin 32\n                value = dataView.getUint32(position);\n                position += 4;\n                return readBin(value);\n            case 0xc7:\n                // ext 8\n                return readExt(src[position++]);\n            case 0xc8:\n                // ext 16\n                value = dataView.getUint16(position);\n                position += 2;\n                return readExt(value);\n            case 0xc9:\n                // ext 32\n                value = dataView.getUint32(position);\n                position += 4;\n                return readExt(value);\n            case 0xca:\n                value = dataView.getFloat32(position);\n                if (currentUnpackr.useFloat32 > 2) {\n                    // this does rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n                    let multiplier = mult10[(src[position] & 0x7f) << 1 | src[position + 1] >> 7];\n                    position += 4;\n                    return (multiplier * value + (value > 0 ? 0.5 : -0.5) >> 0) / multiplier;\n                }\n                position += 4;\n                return value;\n            case 0xcb:\n                value = dataView.getFloat64(position);\n                position += 8;\n                return value;\n            // uint handlers\n            case 0xcc:\n                return src[position++];\n            case 0xcd:\n                value = dataView.getUint16(position);\n                position += 2;\n                return value;\n            case 0xce:\n                value = dataView.getUint32(position);\n                position += 4;\n                return value;\n            case 0xcf:\n                if (currentUnpackr.int64AsType === \"number\") {\n                    value = dataView.getUint32(position) * 0x100000000;\n                    value += dataView.getUint32(position + 4);\n                } else if (currentUnpackr.int64AsType === \"string\") value = dataView.getBigUint64(position).toString();\n                else if (currentUnpackr.int64AsType === \"auto\") {\n                    value = dataView.getBigUint64(position);\n                    if (value <= BigInt(2) << BigInt(52)) value = Number(value);\n                } else value = dataView.getBigUint64(position);\n                position += 8;\n                return value;\n            // int handlers\n            case 0xd0:\n                return dataView.getInt8(position++);\n            case 0xd1:\n                value = dataView.getInt16(position);\n                position += 2;\n                return value;\n            case 0xd2:\n                value = dataView.getInt32(position);\n                position += 4;\n                return value;\n            case 0xd3:\n                if (currentUnpackr.int64AsType === \"number\") {\n                    value = dataView.getInt32(position) * 0x100000000;\n                    value += dataView.getUint32(position + 4);\n                } else if (currentUnpackr.int64AsType === \"string\") value = dataView.getBigInt64(position).toString();\n                else if (currentUnpackr.int64AsType === \"auto\") {\n                    value = dataView.getBigInt64(position);\n                    if (value >= BigInt(-2) << BigInt(52) && value <= BigInt(2) << BigInt(52)) value = Number(value);\n                } else value = dataView.getBigInt64(position);\n                position += 8;\n                return value;\n            case 0xd4:\n                // fixext 1\n                value = src[position++];\n                if (value == 0x72) return recordDefinition(src[position++] & 0x3f);\n                else {\n                    let extension = currentExtensions[value];\n                    if (extension) {\n                        if (extension.read) {\n                            position++ // skip filler byte\n                            ;\n                            return extension.read(read());\n                        } else if (extension.noBuffer) {\n                            position++ // skip filler byte\n                            ;\n                            return extension();\n                        } else return extension(src.subarray(position, ++position));\n                    } else throw new Error(\"Unknown extension \" + value);\n                }\n            case 0xd5:\n                // fixext 2\n                value = src[position];\n                if (value == 0x72) {\n                    position++;\n                    return recordDefinition(src[position++] & 0x3f, src[position++]);\n                } else return readExt(2);\n            case 0xd6:\n                // fixext 4\n                return readExt(4);\n            case 0xd7:\n                // fixext 8\n                return readExt(8);\n            case 0xd8:\n                // fixext 16\n                return readExt(16);\n            case 0xd9:\n                // str 8\n                value = src[position++];\n                if (srcStringEnd >= position) return srcString.slice(position - srcStringStart, (position += value) - srcStringStart);\n                return readString8(value);\n            case 0xda:\n                // str 16\n                value = dataView.getUint16(position);\n                position += 2;\n                if (srcStringEnd >= position) return srcString.slice(position - srcStringStart, (position += value) - srcStringStart);\n                return readString16(value);\n            case 0xdb:\n                // str 32\n                value = dataView.getUint32(position);\n                position += 4;\n                if (srcStringEnd >= position) return srcString.slice(position - srcStringStart, (position += value) - srcStringStart);\n                return readString32(value);\n            case 0xdc:\n                // array 16\n                value = dataView.getUint16(position);\n                position += 2;\n                return readArray(value);\n            case 0xdd:\n                // array 32\n                value = dataView.getUint32(position);\n                position += 4;\n                return readArray(value);\n            case 0xde:\n                // map 16\n                value = dataView.getUint16(position);\n                position += 2;\n                return readMap(value);\n            case 0xdf:\n                // map 32\n                value = dataView.getUint32(position);\n                position += 4;\n                return readMap(value);\n            default:\n                if (token >= 0xe0) return token - 0x100;\n                if (token === undefined) {\n                    let error = new Error(\"Unexpected end of MessagePack data\");\n                    error.incomplete = true;\n                    throw error;\n                }\n                throw new Error(\"Unknown MessagePack token \" + token);\n        }\n    }\n}\nconst validName = /^[a-zA-Z_$][a-zA-Z\\d_$]*$/;\nfunction createStructureReader(structure, firstId) {\n    function readObject() {\n        // This initial function is quick to instantiate, but runs slower. After several iterations pay the cost to build the faster function\n        if (readObject.count++ > inlineObjectReadThreshold) {\n            let readObject = structure.read = new Function(\"r\", \"return function(){return \" + (currentUnpackr.freezeData ? \"Object.freeze\" : \"\") + \"({\" + structure.map((key)=>key === \"__proto__\" ? \"__proto_:r()\" : validName.test(key) ? key + \":r()\" : \"[\" + JSON.stringify(key) + \"]:r()\").join(\",\") + \"})}\")(read);\n            if (structure.highByte === 0) structure.read = createSecondByteReader(firstId, structure.read);\n            return readObject() // second byte is already read, if there is one so immediately read object\n            ;\n        }\n        let object = {};\n        for(let i = 0, l = structure.length; i < l; i++){\n            let key = structure[i];\n            if (key === \"__proto__\") key = \"__proto_\";\n            object[key] = read();\n        }\n        if (currentUnpackr.freezeData) return Object.freeze(object);\n        return object;\n    }\n    readObject.count = 0;\n    if (structure.highByte === 0) return createSecondByteReader(firstId, readObject);\n    return readObject;\n}\nconst createSecondByteReader = (firstId, read0)=>{\n    return function() {\n        let highByte = src[position++];\n        if (highByte === 0) return read0();\n        let id = firstId < 32 ? -(firstId + (highByte << 5)) : firstId + (highByte << 5);\n        let structure = currentStructures[id] || loadStructures()[id];\n        if (!structure) throw new Error(\"Record id is not defined for \" + id);\n        if (!structure.read) structure.read = createStructureReader(structure, firstId);\n        return structure.read();\n    };\n};\nfunction loadStructures() {\n    let loadedStructures = saveState(()=>{\n        // save the state in case getStructures modifies our buffer\n        src = null;\n        return currentUnpackr.getStructures();\n    });\n    return currentStructures = currentUnpackr._mergeStructures(loadedStructures, currentStructures);\n}\nvar readFixedString = readStringJS;\nvar readString8 = readStringJS;\nvar readString16 = readStringJS;\nvar readString32 = readStringJS;\nlet isNativeAccelerationEnabled = false;\nfunction setExtractor(extractStrings) {\n    isNativeAccelerationEnabled = true;\n    readFixedString = readString(1);\n    readString8 = readString(2);\n    readString16 = readString(3);\n    readString32 = readString(5);\n    function readString(headerLength) {\n        return function readString(length) {\n            let string = strings[stringPosition++];\n            if (string == null) {\n                if (bundledStrings) return readStringJS(length);\n                let byteOffset = src.byteOffset;\n                let extraction = extractStrings(position - headerLength + byteOffset, srcEnd + byteOffset, src.buffer);\n                if (typeof extraction == \"string\") {\n                    string = extraction;\n                    strings = EMPTY_ARRAY;\n                } else {\n                    strings = extraction;\n                    stringPosition = 1;\n                    srcStringEnd = 1 // even if a utf-8 string was decoded, must indicate we are in the midst of extracted strings and can't skip strings\n                    ;\n                    string = strings[0];\n                    if (string === undefined) throw new Error(\"Unexpected end of buffer\");\n                }\n            }\n            let srcStringLength = string.length;\n            if (srcStringLength <= length) {\n                position += length;\n                return string;\n            }\n            srcString = string;\n            srcStringStart = position;\n            srcStringEnd = position + srcStringLength;\n            position += length;\n            return string.slice(0, length) // we know we just want the beginning\n            ;\n        };\n    }\n}\nfunction readStringJS(length) {\n    let result;\n    if (length < 16) {\n        if (result = shortStringInJS(length)) return result;\n    }\n    if (length > 64 && decoder) return decoder.decode(src.subarray(position, position += length));\n    const end = position + length;\n    const units = [];\n    result = \"\";\n    while(position < end){\n        const byte1 = src[position++];\n        if ((byte1 & 0x80) === 0) // 1 byte\n        units.push(byte1);\n        else if ((byte1 & 0xe0) === 0xc0) {\n            // 2 bytes\n            const byte2 = src[position++] & 0x3f;\n            units.push((byte1 & 0x1f) << 6 | byte2);\n        } else if ((byte1 & 0xf0) === 0xe0) {\n            // 3 bytes\n            const byte2 = src[position++] & 0x3f;\n            const byte3 = src[position++] & 0x3f;\n            units.push((byte1 & 0x1f) << 12 | byte2 << 6 | byte3);\n        } else if ((byte1 & 0xf8) === 0xf0) {\n            // 4 bytes\n            const byte2 = src[position++] & 0x3f;\n            const byte3 = src[position++] & 0x3f;\n            const byte4 = src[position++] & 0x3f;\n            let unit = (byte1 & 0x07) << 0x12 | byte2 << 0x0c | byte3 << 0x06 | byte4;\n            if (unit > 0xffff) {\n                unit -= 0x10000;\n                units.push(unit >>> 10 & 0x3ff | 0xd800);\n                unit = 0xdc00 | unit & 0x3ff;\n            }\n            units.push(unit);\n        } else units.push(byte1);\n        if (units.length >= 0x1000) {\n            result += fromCharCode.apply(String, units);\n            units.length = 0;\n        }\n    }\n    if (units.length > 0) result += fromCharCode.apply(String, units);\n    return result;\n}\nfunction readString(source, start, length) {\n    let existingSrc = src;\n    src = source;\n    position = start;\n    try {\n        return readStringJS(length);\n    } finally{\n        src = existingSrc;\n    }\n}\nfunction readArray(length) {\n    let array = new Array(length);\n    for(let i = 0; i < length; i++)array[i] = read();\n    if (currentUnpackr.freezeData) return Object.freeze(array);\n    return array;\n}\nfunction readMap(length) {\n    if (currentUnpackr.mapsAsObjects) {\n        let object = {};\n        for(let i = 0; i < length; i++){\n            let key = readKey();\n            if (key === \"__proto__\") key = \"__proto_\";\n            object[key] = read();\n        }\n        return object;\n    } else {\n        let map = new Map();\n        for(let i = 0; i < length; i++)map.set(read(), read());\n        return map;\n    }\n}\nvar fromCharCode = String.fromCharCode;\nfunction longStringInJS(length) {\n    let start = position;\n    let bytes = new Array(length);\n    for(let i = 0; i < length; i++){\n        const byte = src[position++];\n        if ((byte & 0x80) > 0) {\n            position = start;\n            return;\n        }\n        bytes[i] = byte;\n    }\n    return fromCharCode.apply(String, bytes);\n}\nfunction shortStringInJS(length) {\n    if (length < 4) {\n        if (length < 2) {\n            if (length === 0) return \"\";\n            else {\n                let a = src[position++];\n                if ((a & 0x80) > 1) {\n                    position -= 1;\n                    return;\n                }\n                return fromCharCode(a);\n            }\n        } else {\n            let a = src[position++];\n            let b = src[position++];\n            if ((a & 0x80) > 0 || (b & 0x80) > 0) {\n                position -= 2;\n                return;\n            }\n            if (length < 3) return fromCharCode(a, b);\n            let c = src[position++];\n            if ((c & 0x80) > 0) {\n                position -= 3;\n                return;\n            }\n            return fromCharCode(a, b, c);\n        }\n    } else {\n        let a = src[position++];\n        let b = src[position++];\n        let c = src[position++];\n        let d = src[position++];\n        if ((a & 0x80) > 0 || (b & 0x80) > 0 || (c & 0x80) > 0 || (d & 0x80) > 0) {\n            position -= 4;\n            return;\n        }\n        if (length < 6) {\n            if (length === 4) return fromCharCode(a, b, c, d);\n            else {\n                let e = src[position++];\n                if ((e & 0x80) > 0) {\n                    position -= 5;\n                    return;\n                }\n                return fromCharCode(a, b, c, d, e);\n            }\n        } else if (length < 8) {\n            let e = src[position++];\n            let f = src[position++];\n            if ((e & 0x80) > 0 || (f & 0x80) > 0) {\n                position -= 6;\n                return;\n            }\n            if (length < 7) return fromCharCode(a, b, c, d, e, f);\n            let g = src[position++];\n            if ((g & 0x80) > 0) {\n                position -= 7;\n                return;\n            }\n            return fromCharCode(a, b, c, d, e, f, g);\n        } else {\n            let e = src[position++];\n            let f = src[position++];\n            let g = src[position++];\n            let h = src[position++];\n            if ((e & 0x80) > 0 || (f & 0x80) > 0 || (g & 0x80) > 0 || (h & 0x80) > 0) {\n                position -= 8;\n                return;\n            }\n            if (length < 10) {\n                if (length === 8) return fromCharCode(a, b, c, d, e, f, g, h);\n                else {\n                    let i = src[position++];\n                    if ((i & 0x80) > 0) {\n                        position -= 9;\n                        return;\n                    }\n                    return fromCharCode(a, b, c, d, e, f, g, h, i);\n                }\n            } else if (length < 12) {\n                let i = src[position++];\n                let j = src[position++];\n                if ((i & 0x80) > 0 || (j & 0x80) > 0) {\n                    position -= 10;\n                    return;\n                }\n                if (length < 11) return fromCharCode(a, b, c, d, e, f, g, h, i, j);\n                let k = src[position++];\n                if ((k & 0x80) > 0) {\n                    position -= 11;\n                    return;\n                }\n                return fromCharCode(a, b, c, d, e, f, g, h, i, j, k);\n            } else {\n                let i = src[position++];\n                let j = src[position++];\n                let k = src[position++];\n                let l = src[position++];\n                if ((i & 0x80) > 0 || (j & 0x80) > 0 || (k & 0x80) > 0 || (l & 0x80) > 0) {\n                    position -= 12;\n                    return;\n                }\n                if (length < 14) {\n                    if (length === 12) return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l);\n                    else {\n                        let m = src[position++];\n                        if ((m & 0x80) > 0) {\n                            position -= 13;\n                            return;\n                        }\n                        return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m);\n                    }\n                } else {\n                    let m = src[position++];\n                    let n = src[position++];\n                    if ((m & 0x80) > 0 || (n & 0x80) > 0) {\n                        position -= 14;\n                        return;\n                    }\n                    if (length < 15) return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n);\n                    let o = src[position++];\n                    if ((o & 0x80) > 0) {\n                        position -= 15;\n                        return;\n                    }\n                    return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);\n                }\n            }\n        }\n    }\n}\nfunction readOnlyJSString() {\n    let token = src[position++];\n    let length;\n    if (token < 0xc0) // fixstr\n    length = token - 0xa0;\n    else switch(token){\n        case 0xd9:\n            // str 8\n            length = src[position++];\n            break;\n        case 0xda:\n            // str 16\n            length = dataView.getUint16(position);\n            position += 2;\n            break;\n        case 0xdb:\n            // str 32\n            length = dataView.getUint32(position);\n            position += 4;\n            break;\n        default:\n            throw new Error(\"Expected string\");\n    }\n    return readStringJS(length);\n}\nfunction readBin(length) {\n    return currentUnpackr.copyBuffers ? // specifically use the copying slice (not the node one)\n    Uint8Array.prototype.slice.call(src, position, position += length) : src.subarray(position, position += length);\n}\nfunction readExt(length) {\n    let type = src[position++];\n    if (currentExtensions[type]) {\n        let end;\n        return currentExtensions[type](src.subarray(position, end = position += length), (readPosition)=>{\n            position = readPosition;\n            try {\n                return read();\n            } finally{\n                position = end;\n            }\n        });\n    } else throw new Error(\"Unknown extension type \" + type);\n}\nvar keyCache = new Array(4096);\nfunction readKey() {\n    let length = src[position++];\n    if (length >= 0xa0 && length < 0xc0) {\n        // fixstr, potentially use key cache\n        length = length - 0xa0;\n        if (srcStringEnd >= position) return srcString.slice(position - srcStringStart, (position += length) - srcStringStart);\n        else if (!(srcStringEnd == 0 && srcEnd < 180)) return readFixedString(length);\n    } else {\n        position--;\n        return read().toString();\n    }\n    let key = (length << 5 ^ (length > 1 ? dataView.getUint16(position) : length > 0 ? src[position] : 0)) & 0xfff;\n    let entry = keyCache[key];\n    let checkPosition = position;\n    let end = position + length - 3;\n    let chunk;\n    let i = 0;\n    if (entry && entry.bytes == length) {\n        while(checkPosition < end){\n            chunk = dataView.getUint32(checkPosition);\n            if (chunk != entry[i++]) {\n                checkPosition = 0x70000000;\n                break;\n            }\n            checkPosition += 4;\n        }\n        end += 3;\n        while(checkPosition < end){\n            chunk = src[checkPosition++];\n            if (chunk != entry[i++]) {\n                checkPosition = 0x70000000;\n                break;\n            }\n        }\n        if (checkPosition === end) {\n            position = checkPosition;\n            return entry.string;\n        }\n        end -= 3;\n        checkPosition = position;\n    }\n    entry = [];\n    keyCache[key] = entry;\n    entry.bytes = length;\n    while(checkPosition < end){\n        chunk = dataView.getUint32(checkPosition);\n        entry.push(chunk);\n        checkPosition += 4;\n    }\n    end += 3;\n    while(checkPosition < end){\n        chunk = src[checkPosition++];\n        entry.push(chunk);\n    }\n    // for small blocks, avoiding the overhead of the extract call is helpful\n    let string = length < 16 ? shortStringInJS(length) : longStringInJS(length);\n    if (string != null) return entry.string = string;\n    return entry.string = readFixedString(length);\n}\n// the registration of the record definition extension (as \"r\")\nconst recordDefinition = (id, highByte)=>{\n    let structure = read().map((property)=>property.toString()) // ensure that all keys are strings and that the array is mutable\n    ;\n    let firstByte = id;\n    if (highByte !== undefined) {\n        id = id < 32 ? -((highByte << 5) + id) : (highByte << 5) + id;\n        structure.highByte = highByte;\n    }\n    let existingStructure = currentStructures[id];\n    // If it is a shared structure, we need to restore any changes after reading.\n    // Also in sequential mode, we may get incomplete reads and thus errors, and we need to restore\n    // to the state prior to an incomplete read in order to properly resume.\n    if (existingStructure && (existingStructure.isShared || sequentialMode)) (currentStructures.restoreStructures || (currentStructures.restoreStructures = []))[id] = existingStructure;\n    currentStructures[id] = structure;\n    structure.read = createStructureReader(structure, firstByte);\n    return structure.read();\n};\ncurrentExtensions[0] = ()=>{} // notepack defines extension 0 to mean undefined, so use that as the default here\n;\ncurrentExtensions[0].noBuffer = true;\ncurrentExtensions[0x42] = (data)=>{\n    // decode bigint\n    let length = data.length;\n    let value = BigInt(data[0] & 0x80 ? data[0] - 0x100 : data[0]);\n    for(let i = 1; i < length; i++){\n        value <<= 8n;\n        value += BigInt(data[i]);\n    }\n    return value;\n};\nlet errors = {\n    Error,\n    TypeError,\n    ReferenceError\n};\ncurrentExtensions[0x65] = ()=>{\n    let data = read();\n    return (errors[data[0]] || Error)(data[1]);\n};\ncurrentExtensions[0x69] = (data)=>{\n    // id extension (for structured clones)\n    let id = dataView.getUint32(position - 4);\n    if (!referenceMap) referenceMap = new Map();\n    let token = src[position];\n    let target;\n    // TODO: handle Maps, Sets, and other types that can cycle; this is complicated, because you potentially need to read\n    // ahead past references to record structure definitions\n    if (token >= 0x90 && token < 0xa0 || token == 0xdc || token == 0xdd) target = [];\n    else target = {};\n    let refEntry = {\n        target\n    } // a placeholder object\n    ;\n    referenceMap.set(id, refEntry);\n    let targetProperties = read() // read the next value as the target object to id\n    ;\n    if (refEntry.used) return Object.assign(target, targetProperties);\n    refEntry.target = targetProperties // the placeholder wasn't used, replace with the deserialized one\n    ;\n    return targetProperties // no cycle, can just use the returned read object\n    ;\n};\ncurrentExtensions[0x70] = (data)=>{\n    // pointer extension (for structured clones)\n    let id = dataView.getUint32(position - 4);\n    let refEntry = referenceMap.get(id);\n    refEntry.used = true;\n    return refEntry.target;\n};\ncurrentExtensions[0x73] = ()=>new Set(read());\nconst typedArrays = [\n    \"Int8\",\n    \"Uint8\",\n    \"Uint8Clamped\",\n    \"Int16\",\n    \"Uint16\",\n    \"Int32\",\n    \"Uint32\",\n    \"Float32\",\n    \"Float64\",\n    \"BigInt64\",\n    \"BigUint64\"\n].map((type)=>type + \"Array\");\nlet glbl = typeof globalThis === \"object\" ? globalThis : window;\ncurrentExtensions[0x74] = (data)=>{\n    let typeCode = data[0];\n    let typedArrayName = typedArrays[typeCode];\n    if (!typedArrayName) throw new Error(\"Could not find typed array for code \" + typeCode);\n    // we have to always slice/copy here to get a new ArrayBuffer that is word/byte aligned\n    return new glbl[typedArrayName](Uint8Array.prototype.slice.call(data, 1).buffer);\n};\ncurrentExtensions[0x78] = ()=>{\n    let data = read();\n    return new RegExp(data[0], data[1]);\n};\nconst TEMP_BUNDLE = [];\ncurrentExtensions[0x62] = (data)=>{\n    let dataSize = (data[0] << 24) + (data[1] << 16) + (data[2] << 8) + data[3];\n    let dataPosition = position;\n    position += dataSize - data.length;\n    bundledStrings = TEMP_BUNDLE;\n    bundledStrings = [\n        readOnlyJSString(),\n        readOnlyJSString()\n    ];\n    bundledStrings.position0 = 0;\n    bundledStrings.position1 = 0;\n    bundledStrings.postBundlePosition = position;\n    position = dataPosition;\n    return read();\n};\ncurrentExtensions[0xff] = (data)=>{\n    // 32-bit date extension\n    if (data.length == 4) return new Date((data[0] * 0x1000000 + (data[1] << 16) + (data[2] << 8) + data[3]) * 1000);\n    else if (data.length == 8) return new Date(((data[0] << 22) + (data[1] << 14) + (data[2] << 6) + (data[3] >> 2)) / 1000000 + ((data[3] & 0x3) * 0x100000000 + data[4] * 0x1000000 + (data[5] << 16) + (data[6] << 8) + data[7]) * 1000);\n    else if (data.length == 12) return new Date(((data[0] << 24) + (data[1] << 16) + (data[2] << 8) + data[3]) / 1000000 + ((data[4] & 0x80 ? -281474976710656 : 0) + data[6] * 0x10000000000 + data[7] * 0x100000000 + data[8] * 0x1000000 + (data[9] << 16) + (data[10] << 8) + data[11]) * 1000);\n    else return new Date(\"invalid\");\n} // notepack defines extension 0 to mean undefined, so use that as the default here\n;\n// registration of bulk record definition?\n// currentExtensions[0x52] = () =>\nfunction saveState(callback) {\n    if (onSaveState) onSaveState();\n    let savedSrcEnd = srcEnd;\n    let savedPosition = position;\n    let savedStringPosition = stringPosition;\n    let savedSrcStringStart = srcStringStart;\n    let savedSrcStringEnd = srcStringEnd;\n    let savedSrcString = srcString;\n    let savedStrings = strings;\n    let savedReferenceMap = referenceMap;\n    let savedBundledStrings = bundledStrings;\n    // TODO: We may need to revisit this if we do more external calls to user code (since it could be slow)\n    let savedSrc = new Uint8Array(src.slice(0, srcEnd)) // we copy the data in case it changes while external data is processed\n    ;\n    let savedStructures = currentStructures;\n    let savedStructuresContents = currentStructures.slice(0, currentStructures.length);\n    let savedPackr = currentUnpackr;\n    let savedSequentialMode = sequentialMode;\n    let value = callback();\n    srcEnd = savedSrcEnd;\n    position = savedPosition;\n    stringPosition = savedStringPosition;\n    srcStringStart = savedSrcStringStart;\n    srcStringEnd = savedSrcStringEnd;\n    srcString = savedSrcString;\n    strings = savedStrings;\n    referenceMap = savedReferenceMap;\n    bundledStrings = savedBundledStrings;\n    src = savedSrc;\n    sequentialMode = savedSequentialMode;\n    currentStructures = savedStructures;\n    currentStructures.splice(0, currentStructures.length, ...savedStructuresContents);\n    currentUnpackr = savedPackr;\n    dataView = new DataView(src.buffer, src.byteOffset, src.byteLength);\n    return value;\n}\nfunction clearSource() {\n    src = null;\n    referenceMap = null;\n    currentStructures = null;\n}\nfunction addExtension(extension) {\n    if (extension.unpack) currentExtensions[extension.type] = extension.unpack;\n    else currentExtensions[extension.type] = extension;\n}\nconst mult10 = new Array(147) // this is a table matching binary exponents to the multiplier to determine significant digit rounding\n;\nfor(let i = 0; i < 256; i++)mult10[i] = +(\"1e\" + Math.floor(45.15 - i * 0.30103));\nconst Decoder = Unpackr;\nvar defaultUnpackr = new Unpackr({\n    useRecords: false\n});\nconst unpack = defaultUnpackr.unpack;\nconst unpackMultiple = defaultUnpackr.unpackMultiple;\nconst decode = defaultUnpackr.unpack;\nconst FLOAT32_OPTIONS = {\n    NEVER: 0,\n    ALWAYS: 1,\n    DECIMAL_ROUND: 3,\n    DECIMAL_FIT: 4\n};\nlet f32Array = new Float32Array(1);\nlet u8Array = new Uint8Array(f32Array.buffer, 0, 4);\nfunction roundFloat32(float32Number) {\n    f32Array[0] = float32Number;\n    let multiplier = mult10[(u8Array[3] & 0x7f) << 1 | u8Array[2] >> 7];\n    return (multiplier * float32Number + (float32Number > 0 ? 0.5 : -0.5) >> 0) / multiplier;\n}\nfunction setReadStruct(updatedReadStruct, loadedStructs, saveState) {\n    readStruct = updatedReadStruct;\n    onLoadedStructures = loadedStructs;\n    onSaveState = saveState;\n}\n\n},{\"b5a1b40c14b71778\":\"1XYH5\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"b1GCL\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/**\n * Given an Iterable first argument, returns an Iterable where each value is packed as a Buffer\n * If the argument is only Async Iterable, the return value will be an Async Iterable.\n * @param {Iterable|Iterator|AsyncIterable|AsyncIterator} objectIterator - iterable source, like a Readable object stream, an array, Set, or custom object\n * @param {options} [options] - msgpackr pack options\n * @returns {IterableIterator|Promise.<AsyncIterableIterator>}\n */ parcelHelpers.export(exports, \"packIter\", ()=>packIter);\n/**\n * Given an Iterable/Iterator input which yields buffers, returns an IterableIterator which yields sync decoded objects\n * Or, given an Async Iterable/Iterator which yields promises resolving in buffers, returns an AsyncIterableIterator.\n * @param {Iterable|Iterator|AsyncIterable|AsyncIterableIterator} bufferIterator\n * @param {object} [options] - unpackr options\n * @returns {IterableIterator|Promise.<AsyncIterableIterator}\n */ parcelHelpers.export(exports, \"unpackIter\", ()=>unpackIter);\nparcelHelpers.export(exports, \"decodeIter\", ()=>decodeIter);\nparcelHelpers.export(exports, \"encodeIter\", ()=>encodeIter);\nvar _packJs = require(\"./pack.js\");\nvar _unpackJs = require(\"./unpack.js\");\nvar Buffer = require(\"cf54f4ca76cd8e1c\").Buffer;\nfunction packIter(objectIterator, options = {}) {\n    if (!objectIterator || typeof objectIterator !== \"object\") throw new Error(\"first argument must be an Iterable, Async Iterable, or a Promise for an Async Iterable\");\n    else if (typeof objectIterator[Symbol.iterator] === \"function\") return packIterSync(objectIterator, options);\n    else if (typeof objectIterator.then === \"function\" || typeof objectIterator[Symbol.asyncIterator] === \"function\") return packIterAsync(objectIterator, options);\n    else throw new Error(\"first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a Promise\");\n}\nfunction* packIterSync(objectIterator, options) {\n    const packr = new (0, _packJs.Packr)(options);\n    for (const value of objectIterator)yield packr.pack(value);\n}\nasync function* packIterAsync(objectIterator, options) {\n    const packr = new (0, _packJs.Packr)(options);\n    for await (const value of objectIterator)yield packr.pack(value);\n}\nfunction unpackIter(bufferIterator, options = {}) {\n    if (!bufferIterator || typeof bufferIterator !== \"object\") throw new Error(\"first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a promise\");\n    const unpackr = new (0, _unpackJs.Unpackr)(options);\n    let incomplete;\n    const parser = (chunk)=>{\n        let yields;\n        // if there's incomplete data from previous chunk, concatinate and try again\n        if (incomplete) {\n            chunk = Buffer.concat([\n                incomplete,\n                chunk\n            ]);\n            incomplete = undefined;\n        }\n        try {\n            yields = unpackr.unpackMultiple(chunk);\n        } catch (err) {\n            if (err.incomplete) {\n                incomplete = chunk.slice(err.lastPosition);\n                yields = err.values;\n            } else throw err;\n        }\n        return yields;\n    };\n    if (typeof bufferIterator[Symbol.iterator] === \"function\") return function* iter() {\n        for (const value of bufferIterator)yield* parser(value);\n    }();\n    else if (typeof bufferIterator[Symbol.asyncIterator] === \"function\") return async function* iter() {\n        for await (const value of bufferIterator)yield* parser(value);\n    }();\n}\nconst decodeIter = unpackIter;\nconst encodeIter = packIter;\n\n},{\"cf54f4ca76cd8e1c\":\"1XYH5\",\"./pack.js\":\"8kaSs\",\"./unpack.js\":\"5WPTZ\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"aCIBG\":[function(require,module,exports) {\n\"use strict\";\nconst { hasOwnProperty } = Object.prototype;\nconst stringify = configure();\n// @ts-expect-error\nstringify.configure = configure;\n// @ts-expect-error\nstringify.stringify = stringify;\n// @ts-expect-error\nstringify.default = stringify;\n// @ts-expect-error used for named export\nexports.stringify = stringify;\n// @ts-expect-error used for named export\nexports.configure = configure;\nmodule.exports = stringify;\n// eslint-disable-next-line no-control-regex\nconst strEscapeSequencesRegExp = /[\\u0000-\\u001f\\u0022\\u005c\\ud800-\\udfff]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?:[^\\ud800-\\udbff]|^)[\\udc00-\\udfff]/;\n// Escape C0 control characters, double quotes, the backslash and every code\n// unit with a numeric value in the inclusive range 0xD800 to 0xDFFF.\nfunction strEscape(str) {\n    // Some magic numbers that worked out fine while benchmarking with v8 8.0\n    if (str.length < 5000 && !strEscapeSequencesRegExp.test(str)) return `\"${str}\"`;\n    return JSON.stringify(str);\n}\nfunction insertSort(array) {\n    // Insertion sort is very efficient for small input sizes but it has a bad\n    // worst case complexity. Thus, use native array sort for bigger values.\n    if (array.length > 2e2) return array.sort();\n    for(let i = 1; i < array.length; i++){\n        const currentValue = array[i];\n        let position = i;\n        while(position !== 0 && array[position - 1] > currentValue){\n            array[position] = array[position - 1];\n            position--;\n        }\n        array[position] = currentValue;\n    }\n    return array;\n}\nconst typedArrayPrototypeGetSymbolToStringTag = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Object.getPrototypeOf(new Int8Array())), Symbol.toStringTag).get;\nfunction isTypedArrayWithEntries(value) {\n    return typedArrayPrototypeGetSymbolToStringTag.call(value) !== undefined && value.length !== 0;\n}\nfunction stringifyTypedArray(array, separator, maximumBreadth) {\n    if (array.length < maximumBreadth) maximumBreadth = array.length;\n    const whitespace = separator === \",\" ? \"\" : \" \";\n    let res = `\"0\":${whitespace}${array[0]}`;\n    for(let i = 1; i < maximumBreadth; i++)res += `${separator}\"${i}\":${whitespace}${array[i]}`;\n    return res;\n}\nfunction getCircularValueOption(options) {\n    if (hasOwnProperty.call(options, \"circularValue\")) {\n        const circularValue = options.circularValue;\n        if (typeof circularValue === \"string\") return `\"${circularValue}\"`;\n        if (circularValue == null) return circularValue;\n        if (circularValue === Error || circularValue === TypeError) return {\n            toString () {\n                throw new TypeError(\"Converting circular structure to JSON\");\n            }\n        };\n        throw new TypeError('The \"circularValue\" argument must be of type string or the value null or undefined');\n    }\n    return '\"[Circular]\"';\n}\nfunction getBooleanOption(options, key) {\n    let value;\n    if (hasOwnProperty.call(options, key)) {\n        value = options[key];\n        if (typeof value !== \"boolean\") throw new TypeError(`The \"${key}\" argument must be of type boolean`);\n    }\n    return value === undefined ? true : value;\n}\nfunction getPositiveIntegerOption(options, key) {\n    let value;\n    if (hasOwnProperty.call(options, key)) {\n        value = options[key];\n        if (typeof value !== \"number\") throw new TypeError(`The \"${key}\" argument must be of type number`);\n        if (!Number.isInteger(value)) throw new TypeError(`The \"${key}\" argument must be an integer`);\n        if (value < 1) throw new RangeError(`The \"${key}\" argument must be >= 1`);\n    }\n    return value === undefined ? Infinity : value;\n}\nfunction getItemCount(number) {\n    if (number === 1) return \"1 item\";\n    return `${number} items`;\n}\nfunction getUniqueReplacerSet(replacerArray) {\n    const replacerSet = new Set();\n    for (const value of replacerArray)if (typeof value === \"string\" || typeof value === \"number\") replacerSet.add(String(value));\n    return replacerSet;\n}\nfunction getStrictOption(options) {\n    if (hasOwnProperty.call(options, \"strict\")) {\n        const value = options.strict;\n        if (typeof value !== \"boolean\") throw new TypeError('The \"strict\" argument must be of type boolean');\n        if (value) return (value)=>{\n            let message = `Object can not safely be stringified. Received type ${typeof value}`;\n            if (typeof value !== \"function\") message += ` (${value.toString()})`;\n            throw new Error(message);\n        };\n    }\n}\nfunction configure(options) {\n    options = {\n        ...options\n    };\n    const fail = getStrictOption(options);\n    if (fail) {\n        if (options.bigint === undefined) options.bigint = false;\n        if (!(\"circularValue\" in options)) options.circularValue = Error;\n    }\n    const circularValue = getCircularValueOption(options);\n    const bigint = getBooleanOption(options, \"bigint\");\n    const deterministic = getBooleanOption(options, \"deterministic\");\n    const maximumDepth = getPositiveIntegerOption(options, \"maximumDepth\");\n    const maximumBreadth = getPositiveIntegerOption(options, \"maximumBreadth\");\n    function stringifyFnReplacer(key, parent, stack, replacer, spacer, indentation) {\n        let value = parent[key];\n        if (typeof value === \"object\" && value !== null && typeof value.toJSON === \"function\") value = value.toJSON(key);\n        value = replacer.call(parent, key, value);\n        switch(typeof value){\n            case \"string\":\n                return strEscape(value);\n            case \"object\":\n                {\n                    if (value === null) return \"null\";\n                    if (stack.indexOf(value) !== -1) return circularValue;\n                    let res = \"\";\n                    let join = \",\";\n                    const originalIndentation = indentation;\n                    if (Array.isArray(value)) {\n                        if (value.length === 0) return \"[]\";\n                        if (maximumDepth < stack.length + 1) return '\"[Array]\"';\n                        stack.push(value);\n                        if (spacer !== \"\") {\n                            indentation += spacer;\n                            res += `\\n${indentation}`;\n                            join = `,\\n${indentation}`;\n                        }\n                        const maximumValuesToStringify = Math.min(value.length, maximumBreadth);\n                        let i = 0;\n                        for(; i < maximumValuesToStringify - 1; i++){\n                            const tmp = stringifyFnReplacer(String(i), value, stack, replacer, spacer, indentation);\n                            res += tmp !== undefined ? tmp : \"null\";\n                            res += join;\n                        }\n                        const tmp = stringifyFnReplacer(String(i), value, stack, replacer, spacer, indentation);\n                        res += tmp !== undefined ? tmp : \"null\";\n                        if (value.length - 1 > maximumBreadth) {\n                            const removedKeys = value.length - maximumBreadth - 1;\n                            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`;\n                        }\n                        if (spacer !== \"\") res += `\\n${originalIndentation}`;\n                        stack.pop();\n                        return `[${res}]`;\n                    }\n                    let keys = Object.keys(value);\n                    const keyLength = keys.length;\n                    if (keyLength === 0) return \"{}\";\n                    if (maximumDepth < stack.length + 1) return '\"[Object]\"';\n                    let whitespace = \"\";\n                    let separator = \"\";\n                    if (spacer !== \"\") {\n                        indentation += spacer;\n                        join = `,\\n${indentation}`;\n                        whitespace = \" \";\n                    }\n                    const maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth);\n                    if (deterministic && !isTypedArrayWithEntries(value)) keys = insertSort(keys);\n                    stack.push(value);\n                    for(let i = 0; i < maximumPropertiesToStringify; i++){\n                        const key = keys[i];\n                        const tmp = stringifyFnReplacer(key, value, stack, replacer, spacer, indentation);\n                        if (tmp !== undefined) {\n                            res += `${separator}${strEscape(key)}:${whitespace}${tmp}`;\n                            separator = join;\n                        }\n                    }\n                    if (keyLength > maximumBreadth) {\n                        const removedKeys = keyLength - maximumBreadth;\n                        res += `${separator}\"...\":${whitespace}\"${getItemCount(removedKeys)} not stringified\"`;\n                        separator = join;\n                    }\n                    if (spacer !== \"\" && separator.length > 1) res = `\\n${indentation}${res}\\n${originalIndentation}`;\n                    stack.pop();\n                    return `{${res}}`;\n                }\n            case \"number\":\n                return isFinite(value) ? String(value) : fail ? fail(value) : \"null\";\n            case \"boolean\":\n                return value === true ? \"true\" : \"false\";\n            case \"undefined\":\n                return undefined;\n            case \"bigint\":\n                if (bigint) return String(value);\n            // fallthrough\n            default:\n                return fail ? fail(value) : undefined;\n        }\n    }\n    function stringifyArrayReplacer(key, value, stack, replacer, spacer, indentation) {\n        if (typeof value === \"object\" && value !== null && typeof value.toJSON === \"function\") value = value.toJSON(key);\n        switch(typeof value){\n            case \"string\":\n                return strEscape(value);\n            case \"object\":\n                {\n                    if (value === null) return \"null\";\n                    if (stack.indexOf(value) !== -1) return circularValue;\n                    const originalIndentation = indentation;\n                    let res = \"\";\n                    let join = \",\";\n                    if (Array.isArray(value)) {\n                        if (value.length === 0) return \"[]\";\n                        if (maximumDepth < stack.length + 1) return '\"[Array]\"';\n                        stack.push(value);\n                        if (spacer !== \"\") {\n                            indentation += spacer;\n                            res += `\\n${indentation}`;\n                            join = `,\\n${indentation}`;\n                        }\n                        const maximumValuesToStringify = Math.min(value.length, maximumBreadth);\n                        let i = 0;\n                        for(; i < maximumValuesToStringify - 1; i++){\n                            const tmp = stringifyArrayReplacer(String(i), value[i], stack, replacer, spacer, indentation);\n                            res += tmp !== undefined ? tmp : \"null\";\n                            res += join;\n                        }\n                        const tmp = stringifyArrayReplacer(String(i), value[i], stack, replacer, spacer, indentation);\n                        res += tmp !== undefined ? tmp : \"null\";\n                        if (value.length - 1 > maximumBreadth) {\n                            const removedKeys = value.length - maximumBreadth - 1;\n                            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`;\n                        }\n                        if (spacer !== \"\") res += `\\n${originalIndentation}`;\n                        stack.pop();\n                        return `[${res}]`;\n                    }\n                    stack.push(value);\n                    let whitespace = \"\";\n                    if (spacer !== \"\") {\n                        indentation += spacer;\n                        join = `,\\n${indentation}`;\n                        whitespace = \" \";\n                    }\n                    let separator = \"\";\n                    for (const key of replacer){\n                        const tmp = stringifyArrayReplacer(key, value[key], stack, replacer, spacer, indentation);\n                        if (tmp !== undefined) {\n                            res += `${separator}${strEscape(key)}:${whitespace}${tmp}`;\n                            separator = join;\n                        }\n                    }\n                    if (spacer !== \"\" && separator.length > 1) res = `\\n${indentation}${res}\\n${originalIndentation}`;\n                    stack.pop();\n                    return `{${res}}`;\n                }\n            case \"number\":\n                return isFinite(value) ? String(value) : fail ? fail(value) : \"null\";\n            case \"boolean\":\n                return value === true ? \"true\" : \"false\";\n            case \"undefined\":\n                return undefined;\n            case \"bigint\":\n                if (bigint) return String(value);\n            // fallthrough\n            default:\n                return fail ? fail(value) : undefined;\n        }\n    }\n    function stringifyIndent(key, value, stack, spacer, indentation) {\n        switch(typeof value){\n            case \"string\":\n                return strEscape(value);\n            case \"object\":\n                {\n                    if (value === null) return \"null\";\n                    if (typeof value.toJSON === \"function\") {\n                        value = value.toJSON(key);\n                        // Prevent calling `toJSON` again.\n                        if (typeof value !== \"object\") return stringifyIndent(key, value, stack, spacer, indentation);\n                        if (value === null) return \"null\";\n                    }\n                    if (stack.indexOf(value) !== -1) return circularValue;\n                    const originalIndentation = indentation;\n                    if (Array.isArray(value)) {\n                        if (value.length === 0) return \"[]\";\n                        if (maximumDepth < stack.length + 1) return '\"[Array]\"';\n                        stack.push(value);\n                        indentation += spacer;\n                        let res = `\\n${indentation}`;\n                        const join = `,\\n${indentation}`;\n                        const maximumValuesToStringify = Math.min(value.length, maximumBreadth);\n                        let i = 0;\n                        for(; i < maximumValuesToStringify - 1; i++){\n                            const tmp = stringifyIndent(String(i), value[i], stack, spacer, indentation);\n                            res += tmp !== undefined ? tmp : \"null\";\n                            res += join;\n                        }\n                        const tmp = stringifyIndent(String(i), value[i], stack, spacer, indentation);\n                        res += tmp !== undefined ? tmp : \"null\";\n                        if (value.length - 1 > maximumBreadth) {\n                            const removedKeys = value.length - maximumBreadth - 1;\n                            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`;\n                        }\n                        res += `\\n${originalIndentation}`;\n                        stack.pop();\n                        return `[${res}]`;\n                    }\n                    let keys = Object.keys(value);\n                    const keyLength = keys.length;\n                    if (keyLength === 0) return \"{}\";\n                    if (maximumDepth < stack.length + 1) return '\"[Object]\"';\n                    indentation += spacer;\n                    const join = `,\\n${indentation}`;\n                    let res = \"\";\n                    let separator = \"\";\n                    let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth);\n                    if (isTypedArrayWithEntries(value)) {\n                        res += stringifyTypedArray(value, join, maximumBreadth);\n                        keys = keys.slice(value.length);\n                        maximumPropertiesToStringify -= value.length;\n                        separator = join;\n                    }\n                    if (deterministic) keys = insertSort(keys);\n                    stack.push(value);\n                    for(let i = 0; i < maximumPropertiesToStringify; i++){\n                        const key = keys[i];\n                        const tmp = stringifyIndent(key, value[key], stack, spacer, indentation);\n                        if (tmp !== undefined) {\n                            res += `${separator}${strEscape(key)}: ${tmp}`;\n                            separator = join;\n                        }\n                    }\n                    if (keyLength > maximumBreadth) {\n                        const removedKeys = keyLength - maximumBreadth;\n                        res += `${separator}\"...\": \"${getItemCount(removedKeys)} not stringified\"`;\n                        separator = join;\n                    }\n                    if (separator !== \"\") res = `\\n${indentation}${res}\\n${originalIndentation}`;\n                    stack.pop();\n                    return `{${res}}`;\n                }\n            case \"number\":\n                return isFinite(value) ? String(value) : fail ? fail(value) : \"null\";\n            case \"boolean\":\n                return value === true ? \"true\" : \"false\";\n            case \"undefined\":\n                return undefined;\n            case \"bigint\":\n                if (bigint) return String(value);\n            // fallthrough\n            default:\n                return fail ? fail(value) : undefined;\n        }\n    }\n    function stringifySimple(key, value, stack) {\n        switch(typeof value){\n            case \"string\":\n                return strEscape(value);\n            case \"object\":\n                {\n                    if (value === null) return \"null\";\n                    if (typeof value.toJSON === \"function\") {\n                        value = value.toJSON(key);\n                        // Prevent calling `toJSON` again\n                        if (typeof value !== \"object\") return stringifySimple(key, value, stack);\n                        if (value === null) return \"null\";\n                    }\n                    if (stack.indexOf(value) !== -1) return circularValue;\n                    let res = \"\";\n                    if (Array.isArray(value)) {\n                        if (value.length === 0) return \"[]\";\n                        if (maximumDepth < stack.length + 1) return '\"[Array]\"';\n                        stack.push(value);\n                        const maximumValuesToStringify = Math.min(value.length, maximumBreadth);\n                        let i = 0;\n                        for(; i < maximumValuesToStringify - 1; i++){\n                            const tmp = stringifySimple(String(i), value[i], stack);\n                            res += tmp !== undefined ? tmp : \"null\";\n                            res += \",\";\n                        }\n                        const tmp = stringifySimple(String(i), value[i], stack);\n                        res += tmp !== undefined ? tmp : \"null\";\n                        if (value.length - 1 > maximumBreadth) {\n                            const removedKeys = value.length - maximumBreadth - 1;\n                            res += `,\"... ${getItemCount(removedKeys)} not stringified\"`;\n                        }\n                        stack.pop();\n                        return `[${res}]`;\n                    }\n                    let keys = Object.keys(value);\n                    const keyLength = keys.length;\n                    if (keyLength === 0) return \"{}\";\n                    if (maximumDepth < stack.length + 1) return '\"[Object]\"';\n                    let separator = \"\";\n                    let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth);\n                    if (isTypedArrayWithEntries(value)) {\n                        res += stringifyTypedArray(value, \",\", maximumBreadth);\n                        keys = keys.slice(value.length);\n                        maximumPropertiesToStringify -= value.length;\n                        separator = \",\";\n                    }\n                    if (deterministic) keys = insertSort(keys);\n                    stack.push(value);\n                    for(let i = 0; i < maximumPropertiesToStringify; i++){\n                        const key = keys[i];\n                        const tmp = stringifySimple(key, value[key], stack);\n                        if (tmp !== undefined) {\n                            res += `${separator}${strEscape(key)}:${tmp}`;\n                            separator = \",\";\n                        }\n                    }\n                    if (keyLength > maximumBreadth) {\n                        const removedKeys = keyLength - maximumBreadth;\n                        res += `${separator}\"...\":\"${getItemCount(removedKeys)} not stringified\"`;\n                    }\n                    stack.pop();\n                    return `{${res}}`;\n                }\n            case \"number\":\n                return isFinite(value) ? String(value) : fail ? fail(value) : \"null\";\n            case \"boolean\":\n                return value === true ? \"true\" : \"false\";\n            case \"undefined\":\n                return undefined;\n            case \"bigint\":\n                if (bigint) return String(value);\n            // fallthrough\n            default:\n                return fail ? fail(value) : undefined;\n        }\n    }\n    function stringify(value, replacer, space) {\n        if (arguments.length > 1) {\n            let spacer = \"\";\n            if (typeof space === \"number\") spacer = \" \".repeat(Math.min(space, 10));\n            else if (typeof space === \"string\") spacer = space.slice(0, 10);\n            if (replacer != null) {\n                if (typeof replacer === \"function\") return stringifyFnReplacer(\"\", {\n                    \"\": value\n                }, [], replacer, spacer, \"\");\n                if (Array.isArray(replacer)) return stringifyArrayReplacer(\"\", value, [], getUniqueReplacerSet(replacer), spacer, \"\");\n            }\n            if (spacer.length !== 0) return stringifyIndent(\"\", value, [], spacer, \"\");\n        }\n        return stringifySimple(\"\", value, []);\n    }\n    return stringify;\n}\n\n},{}],\"6Bu6A\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"SyncActionDefinition\", ()=>SyncActionDefinition);\nparcelHelpers.export(exports, \"SyncActionPaths\", ()=>SyncActionPaths);\nconst SyncActionDefinition = {\n    \"site\": {\n        \"list\": \"0\",\n        \"group\": \"1\",\n        \"load\": \"2\",\n        \"update\": \"3\"\n    },\n    \"comp\": {\n        \"new\": \"4\",\n        \"list\": \"5\",\n        \"group\": \"6\",\n        \"load\": \"7\"\n    },\n    \"page\": {\n        \"list\": \"8\",\n        \"load\": \"9\",\n        \"cache\": \"10\"\n    },\n    \"yjs\": {\n        \"um\": \"11\",\n        \"sv_local\": \"12\",\n        \"diff_local\": \"13\",\n        \"sv_remote\": \"14\"\n    },\n    \"client\": {\n        \"info\": \"15\"\n    },\n    \"code\": {\n        \"load\": \"16\",\n        \"edit\": \"17\",\n        \"action\": \"18\"\n    }\n};\nconst SyncActionPaths = {\n    \"0\": \"site.list\",\n    \"1\": \"site.group\",\n    \"2\": \"site.load\",\n    \"3\": \"site.update\",\n    \"4\": \"comp.new\",\n    \"5\": \"comp.list\",\n    \"6\": \"comp.group\",\n    \"7\": \"comp.load\",\n    \"8\": \"page.list\",\n    \"9\": \"page.load\",\n    \"10\": \"page.cache\",\n    \"11\": \"yjs.um\",\n    \"12\": \"yjs.sv_local\",\n    \"13\": \"yjs.diff_local\",\n    \"14\": \"yjs.sv_remote\",\n    \"15\": \"client.info\",\n    \"16\": \"code.load\",\n    \"17\": \"code.edit\",\n    \"18\": \"code.action\"\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"eZNf9\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"SyncType\", ()=>SyncType);\nvar SyncType;\n(function(SyncType) {\n    SyncType[SyncType[\"ClientID\"] = 0] = \"ClientID\";\n    SyncType[SyncType[\"UserID\"] = 1] = \"UserID\";\n    SyncType[SyncType[\"Event\"] = 2] = \"Event\";\n    SyncType[SyncType[\"Action\"] = 3] = \"Action\";\n    SyncType[SyncType[\"ActionResult\"] = 4] = \"ActionResult\";\n})(SyncType || (SyncType = {}));\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}],\"bZFhN\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initIDB\", ()=>initIDB);\nvar _idbKeyval = require(\"idb-keyval\");\nconst initIDB = (user_id)=>{\n    const store = (0, _idbKeyval.createStore)(`prasi-user-${user_id}`, \"default\");\n    return store;\n};\n\n},{\"idb-keyval\":\"8Atof\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"4uUBn\"}]},[], null, \"parcelRequire2d1f\")\n\n//# sourceMappingURL=ed.55787c67.js.map\n","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","let e;function n(){const e={wbg:{}};return e}function t(n,t){return e=n.exports,r.__wbindgen_wasm_module=t,e}async function r(e){void 0===e&&(e=new URL(\"wasm_gzip_bg.wasm\",import.meta.url));const r=n();(\"string\"==typeof e||\"function\"==typeof Request&&e instanceof Request||\"function\"==typeof URL&&e instanceof URL)&&(e=fetch(e));const{instance:o,module:s}=await async function(e,n){if(\"function\"==typeof Response&&e instanceof Response){if(\"function\"==typeof WebAssembly.instantiateStreaming)try{return await WebAssembly.instantiateStreaming(e,n)}catch(n){if(\"application/wasm\"==e.headers.get(\"Content-Type\"))throw n;console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\",n)}const t=await e.arrayBuffer();return await WebAssembly.instantiate(t,n)}{const t=await WebAssembly.instantiate(e,n);return t instanceof WebAssembly.Instance?{instance:t,module:e}:t}}(await e,r);return t(o,s)}let o=null,s=!1;async function i(e){if(s||o)return;s=!0;const n=await r(e);o||(o=n)}function a(e){o||(o=function(e){const r=n();return e instanceof WebAssembly.Module||(e=new WebAssembly.Module(e)),t(new WebAssembly.Instance(e,r),e)}(e))}class c extends Error{constructor(e){super(e),this.name=\"DecompressionError\"}}let f=0,u=null,l=null;function m(e,n,t){let r;if(t){const o=n;r=e.malloc_u8(o);const s=new Uint8Array(e.memory.buffer,r,o);try{t(s)}catch(n){throw e.free_u8(r,o),n}return f=o,r}if(\"string\"==typeof n){const t=f=function(e){let n=0,t=0,r=0;const o=e.length;for(;n<o;)t=e.codePointAt(n),t<=127?(r+=1,n++):t<=2047?(r+=2,n++):t<=65535?(r+=3,n++):(r+=4,n+=2);return r}(n);r=e.malloc_u8(t);const o=new Uint8Array(e.memory.buffer,r,t);return u||(u=new TextEncoder),u.encodeInto(n,o),r}const o=n;return r=e.malloc_u8(f=o.length),l&&l.length||(l=new Uint8Array(e.memory.buffer)),l.set(o,r),r}function y(e,n){p(o);const t=m(o,e,n),r=o.gzip_compress(t,f)>>>0;o.free_u8(t,f);const s=o.buffer()>>>0;return new Uint8Array(o.memory.buffer,s,r)}function w(e,n){p(o);const t=m(o,e,n),r=o.gzip_decompress(t,f)>>>0;if(o.free_u8(t,f),4294967295===r){const e=o.error_message(),n=o.error_message_len(),t=new Uint8Array(o.memory.buffer,e,n),r=(new TextDecoder).decode(t);throw new c(r)}const s=o.buffer()>>>0;return new Uint8Array(o.memory.buffer,s,r)}function b(){p(o),o.deallocate_buffer()}function p(e){if(!e)throw new Error(\"WASM not initialized\")}export{c as DecompressionError,y as compress,w as decompress,i as default,b as freeBuffer,a as initSync};\n//# sourceMappingURL=wasm_gzip.js.map\n","module.exports = require('./helpers/bundle-url').getBundleURL('bRqx6') + \"wasm_gzip_bg.cbb08a7b.wasm\";","\"use strict\";\n\nvar bundleURL = {};\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n  return value;\n}\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n  return '/';\n}\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n  return matches[0];\n}\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","const { createId, init, getConstants, isCuid } = require(\"./src/index\");\n\nmodule.exports.createId = createId;\nmodule.exports.init = init;\nmodule.exports.getConstants = getConstants;\nmodule.exports.isCuid = isCuid;\n","/* global global, window, module */\nconst { sha3_512: sha3 } = require(\"@noble/hashes/sha3\");\n\nconst defaultLength = 24;\nconst bigLength = 32;\n\nconst createEntropy = (length = 4, random = Math.random) => {\n  let entropy = \"\";\n\n  while (entropy.length < length) {\n    entropy = entropy + Math.floor(random() * 36).toString(36);\n  }\n  return entropy;\n};\n\n/*\n * Adapted from https://github.com/juanelas/bigint-conversion\n * MIT License Copyright (c) 2018 Juan Hernández Serrano\n */\nfunction bufToBigInt(buf) {\n  let bits = 8n;\n\n  let value = 0n;\n  for (const i of buf.values()) {\n    const bi = BigInt(i);\n    value = (value << bits) + bi;\n  }\n  return value;\n}\n\nconst hash = (input = \"\") => {\n  // Drop the first character because it will bias the histogram\n  // to the left.\n  return bufToBigInt(sha3(input)).toString(36).slice(1);\n};\n\nconst alphabet = Array.from({ length: 26 }, (x, i) =>\n  String.fromCharCode(i + 97)\n);\n\nconst randomLetter = (random) =>\n  alphabet[Math.floor(random() * alphabet.length)];\n\n/*\nThis is a fingerprint of the host environment. It is used to help\nprevent collisions when generating ids in a distributed system.\nIf no global object is available, you can pass in your own, or fall back\non a random string.\n*/\nconst createFingerprint = ({\n  globalObj = typeof global !== \"undefined\"\n    ? global\n    : typeof window !== \"undefined\"\n    ? window\n    : {},\n  random = Math.random,\n} = {}) => {\n  const globals = Object.keys(globalObj).toString();\n  const sourceString = globals.length\n    ? globals + createEntropy(bigLength, random)\n    : createEntropy(bigLength, random);\n\n  return hash(sourceString).substring(0, bigLength);\n};\n\nconst createCounter = (count) => () => {\n  return count++;\n};\n\n// ~22k hosts before 50% chance of initial counter collision\n// with a remaining counter range of 9.0e+15 in JavaScript.\nconst initialCountMax = 476782367;\n\nconst init = ({\n  // Fallback if the user does not pass in a CSPRNG. This should be OK\n  // because we don't rely solely on the random number generator for entropy.\n  // We also use the host fingerprint, current time, and a session counter.\n  random = Math.random,\n  counter = createCounter(Math.floor(random() * initialCountMax)),\n  length = defaultLength,\n  fingerprint = createFingerprint({ random }),\n} = {}) => {\n  return function cuid2() {\n    const firstLetter = randomLetter(random);\n\n    // If we're lucky, the `.toString(36)` calls may reduce hashing rounds\n    // by shortening the input to the hash function a little.\n    const time = Date.now().toString(36);\n    const count = counter().toString(36);\n\n    // The salt should be long enough to be globally unique across the full\n    // length of the hash. For simplicity, we use the same length as the\n    // intended id output.\n    const salt = createEntropy(length, random);\n    const hashInput = `${time + salt + count + fingerprint}`;\n\n    return `${firstLetter + hash(hashInput).substring(1, length)}`;\n  };\n};\n\nconst createId = init();\n\nconst isCuid = (id, { minLength = 2, maxLength = bigLength } = {}) => {\n  const length = id.length;\n  const regex = /^[0-9a-z]+$/;\n\n  try {\n    if (\n      typeof id === \"string\" &&\n      length >= minLength &&\n      length <= maxLength &&\n      regex.test(id)\n    )\n      return true;\n  } finally {\n  }\n\n  return false;\n};\n\nmodule.exports.getConstants = () => ({ defaultLength, bigLength });\nmodule.exports.init = init;\nmodule.exports.createId = createId;\nmodule.exports.bufToBigInt = bufToBigInt;\nmodule.exports.createCounter = createCounter;\nmodule.exports.createFingerprint = createFingerprint;\nmodule.exports.isCuid = isCuid;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0, _u64_js_1.split)(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBH)(h, l, s) : (0, _u64_js_1.rotlSH)(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBL)(h, l, s) : (0, _u64_js_1.rotlSL)(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        (0, _assert_js_1.number)(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        (0, _assert_js_1.exists)(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        (0, _assert_js_1.exists)(this, false);\n        (0, _assert_js_1.bytes)(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        (0, _assert_js_1.number)(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        (0, _assert_js_1.output)(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\n// copied from utils\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = { number, bool, bytes, hash, exists, output };\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\n// copied from utils\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add5L = exports.add5H = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.add = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nexports.shrSH = shrSH;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.shrSL = shrSL;\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexports.rotrSH = rotrSH;\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.rotrSL = rotrSL;\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexports.rotrBH = rotrBH;\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\nexports.rotrBL = rotrBL;\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nexports.rotr32H = rotr32H;\nconst rotr32L = (h, _l) => h;\nexports.rotr32L = rotr32L;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexports.rotlSH = rotlSH;\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\nexports.rotlSL = rotlSL;\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexports.rotlBH = rotlBH;\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\nexports.rotlBL = rotlBL;\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexports.add3L = add3L;\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexports.add3H = add3H;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexports.add4L = add4L;\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexports.add4H = add4H;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexports.add5L = add5L;\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\nexports.add5H = add5H;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n//# sourceMappingURL=_u64.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapXOFConstructorWithOpts = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\n// Other libraries would silently corrupt the data instead of throwing an error,\n// when they don't support it.\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    if (!isBytes(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexports.utf8ToBytes = utf8ToBytes;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!isBytes(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        if (!isBytes(a))\n            throw new Error('Uint8Array expected');\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\nconst toStr = {}.toString;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\nexports.randomBytes = randomBytes;\n//# sourceMappingURL=utils.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\n// Other libraries would silently corrupt the data instead of throwing an error,\n// when they don't support it.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!isBytes(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    if (!isBytes(a)) throw new Error('Uint8Array expected');\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","import { get, set } from \"idb-keyval\";\nimport { IContent } from \"../../../../utils/types/general\";\nimport { IItem, MItem } from \"../../../../utils/types/item\";\nimport { FMCompDef } from \"../../../../utils/types/meta-fn\";\nimport { initLoadComp } from \"../../../vi/meta/comp/init-comp-load\";\nimport { genMeta } from \"../../../vi/meta/meta\";\nimport { nav } from \"../../../vi/render/script/extract-nav\";\nimport { loadCompSnapshot, loadComponent } from \"../comp/load\";\nimport { IMeta, PG, active } from \"../ed-global\";\nimport { assignMitem } from \"./assign-mitem\";\nimport { pushTreeNode } from \"./build/push-tree\";\n\nexport const treeCacheBuild = async (p: PG, page_id: string) => {\n  const page_cache = p.preview.page_cache[page_id];\n\n  if (page_cache) {\n    const meta_cache = {\n      meta: {} as Record<string, IMeta>,\n      entry: [] as string[],\n      url: page_cache.url,\n    };\n\n    await initLoadComp(\n      {\n        comps: p.comp.loaded,\n        meta: meta_cache.meta,\n        mode: \"page\",\n      },\n      page_cache.root as unknown as IItem,\n      {\n        async load(comp_ids) {\n          if (!p.sync) return;\n\n          const ids = comp_ids.filter((id) => !p.comp.loaded[id]);\n          const comps = await p.sync.comp.load(ids, true);\n          let result = Object.entries(comps);\n\n          for (const [id_comp, comp] of result) {\n            const cached = await get(`comp-${id_comp}`, nav.store);\n            if (cached) {\n              p.comp.loaded[id_comp] = cached;\n            }\n            if (comp && comp.snapshot && !p.comp.list[id_comp]) {\n              if (p.comp.loaded[id_comp]) {\n                loadCompSnapshot(p, id_comp, comp.snapshot).then(() => {\n                  if (p.comp.loaded[id_comp]) {\n                    set(`comp-${id_comp}`, p.comp.loaded[id_comp], nav.store);\n                  }\n                });\n              } else {\n                await loadCompSnapshot(p, id_comp, comp.snapshot);\n                if (p.comp.loaded[id_comp]) {\n                  set(`comp-${id_comp}`, p.comp.loaded[id_comp], nav.store);\n                }\n              }\n            }\n          }\n        },\n      }\n    );\n\n    for (const item of page_cache.root.childs) {\n      meta_cache.entry.push(item.id);\n      genMeta(\n        {\n          note: \"cache-rebuild\",\n          comps: p.comp.loaded,\n          meta: meta_cache.meta,\n          mode: \"page\",\n        },\n        { item: item as IContent }\n      );\n    }\n    p.preview.meta_cache[page_id] = meta_cache;\n    set(`page-${page_id}`, meta_cache, nav.store);\n  }\n};\n\nexport const treeRebuild = async (p: PG, arg?: { note?: string }) => {\n  if (document.activeElement) {\n    const a = document.activeElement;\n    if (a.tagName === \"DIV\" && a.getAttribute(\"contenteditable\") === \"true\") {\n      return;\n    }\n  }\n\n  active.should_render_main = true;\n  const is_layout =\n    p.site.layout &&\n    p.site.layout.id === p.page.cur.id &&\n    arg?.note === \"load-layout page-init\";\n\n  for (const [k, v] of Object.entries(p.comp.list)) {\n    if (!p.comp.loaded[k]) {\n      const mcomp = v.doc.getMap(\"map\").get(\"root\");\n      const icomp = mcomp?.toJSON() as IItem | undefined;\n      if (icomp) {\n        p.comp.loaded[k] = icomp;\n      }\n    }\n  }\n\n  const mroot = p.page.doc?.getMap(\"map\").get(\"root\");\n  const mitems: MItem[] = [];\n  mroot?.get(\"childs\")?.forEach((m) => mitems.push(m));\n\n  const meta: Record<string, IMeta> = {};\n  p.page.tree = [];\n\n  for (const mitem of mitems) {\n    const item = mitem.toJSON() as IItem;\n    if (item) {\n      await initLoadComp({ comps: p.comp.loaded, meta, mode: \"page\" }, item, {\n        async load(comp_ids) {\n          for (const id of comp_ids) {\n            await loadComponent(p, id);\n          }\n        },\n      });\n\n      genMeta(\n        {\n          note: \"tree-rebuild\",\n          comps: p.comp.loaded,\n          meta,\n          mode: \"page\",\n          on: {\n            async visit(m) {\n              if (!is_layout) {\n                if (m.parent?.instance_id !== m.parent?.id || m.jsx_prop) {\n                  pushTreeNode(p, m, meta, p.page.tree);\n                }\n\n                assignMitem({\n                  m,\n                  root: item,\n                  mitem,\n                  meta,\n                  new_prop_jsx(meta, mprops, prop_name, prop_val) {\n                    if (!mprops.get(prop_name)) {\n                      const map = new Y.Map();\n                      syncronize(map, prop_val);\n                      mprops.set(prop_name, map as FMCompDef);\n                    }\n                  },\n                });\n              }\n            },\n          },\n        },\n        { item }\n      );\n    }\n  }\n\n  if (is_layout) {\n    p.site.layout.meta = meta;\n  } else {\n    let root_id = \"root\";\n    if (p.site.layout && p.site.layout.meta) {\n      for (const [_, v] of Object.entries(p.site.layout.meta)) {\n        if (v.item.name === \"content\") {\n          root_id = v.item.id;\n          break;\n        }\n      }\n\n      p.page.root_id = root_id;\n    }\n\n    if (p.site.layout && p.site.layout.id === p.page.cur.id) {\n      p.page.meta = meta;\n    } else {\n      if (root_id !== \"root\") {\n        for (const m of Object.values(meta)) {\n          if (m.parent?.id === \"root\") {\n            m.parent.id = root_id;\n          }\n        }\n        p.page.meta = { ...p.site.layout.meta, ...meta };\n      } else {\n        p.page.meta = meta;\n      }\n    }\n  }\n};\n","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction promisifyRequest(request) {\n  return new Promise(function (resolve, reject) {\n    // @ts-ignore - file size hacks\n    request.oncomplete = request.onsuccess = function () {\n      return resolve(request.result);\n    }; // @ts-ignore - file size hacks\n\n\n    request.onabort = request.onerror = function () {\n      return reject(request.error);\n    };\n  });\n}\n\nfunction createStore(dbName, storeName) {\n  var request = indexedDB.open(dbName);\n\n  request.onupgradeneeded = function () {\n    return request.result.createObjectStore(storeName);\n  };\n\n  var dbp = promisifyRequest(request);\n  return function (txMode, callback) {\n    return dbp.then(function (db) {\n      return callback(db.transaction(storeName, txMode).objectStore(storeName));\n    });\n  };\n}\n\nvar defaultGetStoreFunc;\n\nfunction defaultGetStore() {\n  if (!defaultGetStoreFunc) {\n    defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n  }\n\n  return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction get(key) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readonly', function (store) {\n    return promisifyRequest(store.get(key));\n  });\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction set(key, value) {\n  var customStore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    store.put(value, key);\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction setMany(entries) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    entries.forEach(function (entry) {\n      return store.put(entry[1], entry[0]);\n    });\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction getMany(keys) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readonly', function (store) {\n    return Promise.all(keys.map(function (key) {\n      return promisifyRequest(store.get(key));\n    }));\n  });\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction update(key, updater) {\n  var customStore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    return (// Need to create the promise manually.\n      // If I try to chain promises, the transaction closes in browsers\n      // that use a promise polyfill (IE10/11).\n      new Promise(function (resolve, reject) {\n        store.get(key).onsuccess = function () {\n          try {\n            store.put(updater(this.result), key);\n            resolve(promisifyRequest(store.transaction));\n          } catch (err) {\n            reject(err);\n          }\n        };\n      })\n    );\n  });\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction del(key) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    store.delete(key);\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction delMany(keys) {\n  var customStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    keys.forEach(function (key) {\n      return store.delete(key);\n    });\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction clear() {\n  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n  return customStore('readwrite', function (store) {\n    store.clear();\n    return promisifyRequest(store.transaction);\n  });\n}\n\nfunction eachCursor(store, callback) {\n  store.openCursor().onsuccess = function () {\n    if (!this.result) return;\n    callback(this.result);\n    this.result.continue();\n  };\n\n  return promisifyRequest(store.transaction);\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction keys() {\n  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n  return customStore('readonly', function (store) {\n    // Fast path for modern browsers\n    if (store.getAllKeys) {\n      return promisifyRequest(store.getAllKeys());\n    }\n\n    var items = [];\n    return eachCursor(store, function (cursor) {\n      return items.push(cursor.key);\n    }).then(function () {\n      return items;\n    });\n  });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction values() {\n  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n  return customStore('readonly', function (store) {\n    // Fast path for modern browsers\n    if (store.getAll) {\n      return promisifyRequest(store.getAll());\n    }\n\n    var items = [];\n    return eachCursor(store, function (cursor) {\n      return items.push(cursor.value);\n    }).then(function () {\n      return items;\n    });\n  });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction entries() {\n  var customStore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultGetStore();\n  return customStore('readonly', function (store) {\n    // Fast path for modern browsers\n    // (although, hopefully we'll get a simpler path some day)\n    if (store.getAll && store.getAllKeys) {\n      return Promise.all([promisifyRequest(store.getAllKeys()), promisifyRequest(store.getAll())]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            keys = _ref2[0],\n            values = _ref2[1];\n\n        return keys.map(function (key, i) {\n          return [key, values[i]];\n        });\n      });\n    }\n\n    var items = [];\n    return customStore('readonly', function (store) {\n      return eachCursor(store, function (cursor) {\n        return items.push([cursor.key, cursor.value]);\n      }).then(function () {\n        return items;\n      });\n    });\n  });\n}\n\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\n","import { IItem } from \"../../../../utils/types/item\";\nimport { FNComponent } from \"../../../../utils/types/meta-fn\";\nimport { GenMetaP, IMeta } from \"../../utils/types\";\nimport { genMeta } from \"../meta\";\n\nexport const initLoadComp = async (\n  p: GenMetaP,\n  item: IItem,\n  opt: {\n    load: (comp_ids: string[]) => Promise<void>;\n    visit?: ((meta: IMeta, item: IItem, shared: any) => void) | undefined;\n    done?: (shared: any) => void;\n  },\n  _loaded?: Set<string>\n) => {\n  const comp_ids = new Set<string>();\n  const shared = { root: item } as any;\n  const comps = [] as FNComponent[];\n  genMeta(\n    {\n      ...p,\n      on: {\n        visit_component: ({ component }) => {\n          if (component) {\n            const { id } = component;\n            if (!p.comps[id]) {\n              if (!_loaded || (_loaded && !_loaded.has(id))) {\n                comp_ids.add(id);\n              }\n            }\n            comps.push(component);\n          }\n        },\n        visit(meta, vitem) {\n          if (opt.visit) opt.visit(meta, vitem, shared);\n        },\n      },\n      set_meta: false,\n      note: \"init-load-comp\",\n    },\n    { item, ignore_first_component: true }\n  );\n\n  if (opt.done) opt.done(shared);\n  let loaded = _loaded;\n  if (!loaded) {\n    loaded = new Set<string>();\n  }\n  if (comp_ids.size > 0) {\n    await opt.load([...comp_ids]);\n\n    comp_ids.forEach((id) => {\n      if (loaded) loaded.add(id);\n    });\n\n    for (const id of [...loaded]) {\n      const comp = p.comps[id];\n      if (comp) {\n        await initLoadComp(p, comp, opt, loaded);\n      }\n    }\n  }\n\n  for (const component of comps) {\n    for (const prop of Object.values(component.props)) {\n      if (prop.meta?.type === \"content-element\" && prop.content) {\n        await initLoadComp(p, prop.content, opt, loaded);\n      }\n    }\n  }\n};\n","import { IItem } from \"../../../utils/types/item\";\nimport { GenMetaArg, GenMetaP, IMeta } from \"../utils/types\";\nimport { genComp } from \"./comp\";\nimport { simplifyItemChild } from \"./simplify\";\n\nexport const genMeta = (p: GenMetaP, arg: GenMetaArg) => {\n  const item = arg.item as IItem;\n\n  if (item.type === \"item\" && item.component?.id) {\n    if (arg.ignore_first_component !== true) {\n      genComp(p, arg);\n      return;\n    }\n  }\n\n  const meta: IMeta = {\n    item: simplifyItemChild(item),\n    parent: {\n      id: arg.parent?.item.id || \"root\",\n      instance_id: arg.parent?.instance_id,\n      comp_id: arg.parent?.comp?.component?.id,\n    },\n  };\n\n  if (arg.jsx_prop) {\n    meta.jsx_prop = arg.jsx_prop;\n  }\n\n  if (p.on?.visit) {\n    p.on.visit(meta, item, arg.root || arg.item);\n  }\n\n  if (item.id) {\n    if (p.set_meta !== false) {\n      p.meta[meta.item.id] = meta;\n    }\n  }\n\n  if (item.childs) {\n    for (const [_, v] of Object.entries(item.childs)) {\n      if (v.id) {\n        const carg: GenMetaArg = {\n          item: v,\n          is_root: false,\n          root: arg.root || arg.item,\n          parent: {\n            item: meta.item,\n            instance_id: arg.parent?.instance_id,\n            comp: arg.parent?.comp,\n            root_instances: arg.parent?.root_instances,\n          },\n        };\n        if (arg.jsx_prop) {\n          carg.jsx_prop = {\n            ...arg.jsx_prop,\n            is_root: false,\n          };\n        }\n        genMeta(p, carg);\n      }\n    }\n  }\n};\n","import { GenMetaArg, GenMetaP, IMeta } from \"../utils/types\";\nimport { instantiate } from \"./comp/instantiate\";\nimport { walkProp } from \"./comp/walk-prop\";\nimport { genMeta } from \"./meta\";\nimport { simplifyItemChild } from \"./simplify\";\n\nexport const genComp = (p: GenMetaP, arg: GenMetaArg) => {\n  const { item } = arg;\n\n  if (item.type === \"item\" && item.component?.id && arg.parent?.item.id) {\n    let item_comp = p.comps[item.component.id];\n    if (p.on?.visit_component) {\n      p.on.visit_component(item, arg.root || arg.item);\n    }\n\n    if (!item_comp) {\n      return;\n    }\n\n    if (item_comp) {\n      let instances: undefined | typeof item.component.instances = undefined;\n\n      if (p.mode === \"page\") {\n        if (!item.component.instances) {\n          item.component.instances = {};\n        }\n        instances = item.component.instances;\n      } else {\n        instances = arg.parent?.root_instances;\n      }\n\n      if (instances) {\n        let instance = instances[item.id];\n\n        if (!instances[item.id]) {\n          instances[item.id] = {};\n          instance = instances[item.id];\n        }\n\n        instantiate({\n          item,\n          item_comp: item_comp,\n          ids: instance,\n        });\n      }\n\n      const meta: IMeta = {\n        item: simplifyItemChild(item),\n        jsx_prop: arg.jsx_prop,\n        parent: {\n          id: arg.parent.item.id,\n          comp_id: arg.parent?.comp?.component?.id,\n          instance_id: arg.parent?.instance_id,\n        },\n        instances,\n      };\n\n      if (p.on?.visit) {\n        p.on.visit(meta, item, arg.root || arg.item);\n      }\n\n      if (item.id) {\n        if (p.set_meta !== false) {\n          p.meta[item.id] = meta;\n        }\n      }\n\n      walkProp({\n        item,\n        item_comp: item_comp,\n        instance: instances ? instances[item.id] : {},\n        each(name, prop) {\n          const comp_id = item.component?.id;\n\n          if (prop.meta?.type === \"content-element\" && comp_id) {\n            if (prop.content) {\n              prop.content.name = name;\n\n              genMeta(\n                { ...p },\n                {\n                  item: prop.content,\n                  root: arg.root || prop.content,\n                  is_root: false,\n                  jsx_prop: {\n                    is_root: true,\n                    comp_id,\n                    name,\n                  },\n                  parent: {\n                    item: meta.item,\n                    instance_id: item.id,\n                    comp: item_comp,\n                    root_instances: instances,\n                  },\n                }\n              );\n            }\n          }\n        },\n      });\n\n      for (const child of Object.values(item.childs)) {\n        if (child?.name?.startsWith(\"jsx:\")) continue;\n\n        if (child && Object.keys(child).length > 3) {\n          genMeta(\n            { ...p, mode: \"comp\" },\n            {\n              item: child,\n              is_root: false,\n              root: arg.root || arg.item,\n              parent: {\n                item,\n                instance_id: item.id,\n                root_instances: instances,\n                comp: item_comp,\n              },\n            }\n          );\n        }\n      }\n    }\n  }\n};\n","import { createId } from \"@paralleldrive/cuid2\";\nimport { deepClone } from \"web-utils\";\nimport { IItem } from \"../../../../utils/types/item\";\n\nexport const instantiate = (arg: {\n  item: IItem;\n  item_comp: IItem;\n  ids: Record<string, string>;\n}) => {\n  const { item, item_comp, ids } = arg;\n  const newitem = deepClone(item_comp);\n\n  walkChild(newitem, ids);\n\n  if (item.id) {\n    newitem.id = item.id;\n  }\n  newitem.hidden = item.hidden;\n\n  if (newitem.component) {\n    if (newitem.component.props && item.component) {\n      for (const k of Object.keys(newitem.component.props)) {\n        const cprop = item.component.props[k];\n        const nprop = newitem.component.props[k];\n        if (cprop) {\n          nprop.value = cprop.value;\n          nprop.valueBuilt = cprop.valueBuilt;\n          nprop.jsxCalledBy = cprop.jsxCalledBy;\n          nprop.content = cprop.content;\n        }\n      }\n    }\n    newitem.component.instances = item.component?.instances;\n    newitem.component.style = item.component?.style;\n  }\n\n  for (const key of Object.keys(item)) {\n    delete (item as any)[key];\n  }\n\n  for (const [k, v] of Object.entries(newitem)) {\n    (item as any)[k] = v;\n  }\n};\n\nexport const walkChild = (item: IItem, ids: Record<string, string>) => {\n  item.originalId = item.id;\n\n  if (!ids[item.id]) {\n    ids[item.id] = createId();\n  }\n\n  item.id = ids[item.id];\n\n  if (item.childs) {\n    for (const child of item.childs) {\n      walkChild(child as IItem, ids);\n    }\n  }\n};\n","import { createId } from \"@paralleldrive/cuid2\";\nimport { deepClone } from \"web-utils\";\nimport { IItem } from \"../../../../utils/types/item\";\nimport { FNCompDef } from \"../../../../utils/types/meta-fn\";\n\nexport const walkProp = (arg: {\n  item: IItem;\n  item_comp: IItem;\n  instance: Record<string, string>;\n  each: (name: string, prop: FNCompDef) => void;\n}) => {\n  const props = Object.entries(arg.item_comp.component?.props || {}).sort(\n    (a, b) => {\n      return a[1].idx - b[1].idx;\n    }\n  );\n  for (const [k, v] of props) {\n    let prop = deepClone(v);\n    const props = arg.item.component?.props;\n    if (props && props[k]) {\n      prop.value = props[k].value;\n      prop.valueBuilt = props[k].valueBuilt;\n      if (props[k].content) {\n        prop.content = props[k].content;\n      }\n    }\n\n    if (prop) {\n      arg.each(k, prop);\n    }\n  }\n};\n","import { IItem } from \"../../../utils/types/item\";\nimport { IMeta, ISimpleMeta } from \"../utils/types\";\n\nexport const simplifyItemChild = (item: IItem) => {\n  const newitem = {} as any;\n  for (const [k, v] of Object.entries(item)) {\n    if (k === \"childs\") {\n      newitem.childs = [];\n      if (v && Array.isArray(v)) {\n        for (const child of v) {\n          if (child.type === \"item\" && child.component) {\n            newitem.childs.push(child);\n          } else {\n            newitem.childs.push({\n              name: child.name,\n              id: child.id,\n              originalId: child.originalId,\n            });\n          }\n        }\n      }\n    } else {\n      newitem[k] = v;\n    }\n  }\n\n  return newitem as IItem;\n};\n\nexport const simplifyMeta = (allmeta: Record<string, IMeta>) => {\n  const smeta = {} as Record<string, ISimpleMeta>;\n\n  for (const [k, meta] of Object.entries(allmeta)) {\n    smeta[k] = {\n      id: meta.item.id,\n      parent: meta.parent\n        ? {\n            id: meta.parent.id,\n            comp_id: meta.parent.comp_id,\n            instance_id: meta.parent.instance_id,\n          }\n        : undefined,\n      comp:\n        meta.item.component && meta.instances\n          ? {\n              id: meta.item.component.id,\n              instances: meta.instances,\n            }\n          : undefined,\n    };\n  }\n\n  return smeta;\n};\n","import { createStore } from \"idb-keyval\";\nimport { VG } from \"../global\";\n\nconst store = createStore(`prasi-cache`, `prasi-cache-store`);\nexport const nav = { timeout: null as any, store };\n\nexport const extractNavigate = (\n  vi: { page: VG[\"page\"]; on_nav_loaded?: VG[\"on_preload\"] },\n  str: string\n) => {\n  const found_nav = [\n    ...findBetween(str, `navigate(`, `)`),\n    ...findBetween(str, `href = `, `;`),\n  ];\n\n  const page_id = vi.page.cur.id;\n  if (!vi.page.navs[page_id]) {\n    vi.page.navs[page_id] = new Set();\n  }\n\n  for (const url of found_nav) {\n    vi.page.navs[page_id].add(url);\n  }\n\n  clearTimeout(nav.timeout);\n  nav.timeout = setTimeout(() => {\n    if (vi.on_nav_loaded) {\n      vi.on_nav_loaded({\n        urls: Array.from(vi.page.navs[page_id]),\n      });\n    }\n  }, 100);\n};\n\nconst findBetween = (text: string, opener: string, closer: string) => {\n  let i = 0;\n  let last = 0;\n  const founds: string[] = [];\n  while (true) {\n    const startIndex = text.indexOf(opener, i);\n    last = i;\n    if (startIndex >= 0) {\n      const char = text[startIndex + opener.length];\n      if (char === '\"' || char === \"'\" || char === \"`\") {\n        const end = text.indexOf(\n          `${char}${closer}`,\n          startIndex + opener.length + 1\n        );\n        const found = text.substring(startIndex + opener.length + 1, end);\n        i = end + 2 + closer.length;\n        founds.push(found);\n      }\n    }\n\n    if (last === i) {\n      break;\n    }\n  }\n  return founds;\n};\n","import { NodeModel } from \"@minoru/react-dnd-treeview\";\nimport { createId } from \"@paralleldrive/cuid2\";\nimport { compress, decompress } from \"wasm-gzip\";\nimport { IItem } from \"../../../../utils/types/item\";\nimport { DComp } from \"../../../../utils/types/root\";\nimport { initLoadComp } from \"../../../vi/meta/comp/init-comp-load\";\nimport { genMeta } from \"../../../vi/meta/meta\";\nimport { isTextEditing } from \"../active/is-editing\";\nimport { IMeta, PG } from \"../ed-global\";\nimport { assignMitem } from \"../tree/assign-mitem\";\nimport { treeRebuild } from \"../tree/build\";\nimport { pushTreeNode } from \"../tree/build/push-tree\";\n\nexport const loadcomp = {\n  timeout: 0 as any,\n  pending: new Set<string>(),\n};\n\nexport const loadComponent = async (p: PG, id_comp: string, sync?: boolean) => {\n  return new Promise<boolean>((resolve) => {\n    if (p.comp.list[id_comp]) {\n      resolve(true);\n      return;\n    }\n\n    loadcomp.pending.add(id_comp);\n    clearTimeout(loadcomp.timeout);\n    loadcomp.timeout = setTimeout(async () => {\n      const comps = await p.sync?.comp.load([...loadcomp.pending], sync);\n      if (comps) {\n        let result = Object.entries(comps);\n\n        for (const [id_comp, comp] of result) {\n          if (comp && comp.snapshot) {\n            await loadCompSnapshot(p, id_comp, comp.snapshot);\n          }\n        }\n        loadcomp.pending.clear();\n        resolve(result.length > 0);\n      } else {\n        resolve(false);\n      }\n    }, 150);\n  });\n};\n\nexport const loadCompSnapshot = async (\n  p: PG,\n  comp_id: string,\n  snapshot: Uint8Array\n) => {\n  if (p.comp.list[comp_id]) return;\n\n  const doc = new Y.Doc() as DComp;\n  Y.applyUpdate(doc as any, decompress(snapshot));\n  const mitem = doc.getMap(\"map\").get(\"root\");\n  if (mitem) {\n    p.comp.loaded[comp_id] = mitem.toJSON() as IItem;\n    if (typeof p.comp.list[comp_id]?.on_update === \"function\") {\n      doc.off(\"update\", p.comp.list[comp_id].on_update);\n    }\n\n    const updated = await updateComponentMeta(p, doc, comp_id);\n    if (updated) {\n      const { meta, tree } = updated;\n      if (p.comp.list[comp_id]) {\n        p.comp.list[comp_id].meta = meta;\n        p.comp.list[comp_id].tree = tree;\n      } else {\n        p.comp.list[comp_id] = {\n          comp: { id: comp_id, snapshot },\n          doc,\n          meta,\n          tree,\n          async on_update(bin, origin) {\n            if (origin === \"sv_remote\" || origin === \"local\") {\n              return;\n            }\n\n            const res = await p.sync?.yjs.sv_local(\n              \"comp\",\n              comp_id,\n              Buffer.from(compress(bin))\n            );\n\n            if (res) {\n              const diff_local = Y.encodeStateAsUpdate(\n                doc as any,\n                decompress(res.sv)\n              );\n              Y.applyUpdate(doc as any, decompress(res.diff), \"local\");\n\n              await p.sync?.yjs.diff_local(\n                \"comp\",\n                comp_id,\n                Buffer.from(compress(diff_local))\n              );\n              const updated = await updateComponentMeta(\n                p,\n                p.comp.list[comp_id].doc,\n                comp_id\n              );\n              if (updated) {\n                p.comp.list[comp_id].meta = updated.meta;\n                p.comp.list[comp_id].tree = updated.tree;\n              }\n              p.comp.loaded[comp_id] = doc\n                .getMap(\"map\")\n                .get(\"root\")\n                ?.toJSON() as IItem;\n\n              if (isTextEditing()) {\n                return;\n              }\n              treeRebuild(p);\n              p.render();\n            }\n          },\n        };\n\n        doc.on(\"update\", p.comp.list[comp_id].on_update);\n      }\n    }\n  }\n};\n\nexport const updateComponentMeta = async (\n  p: PG,\n  doc: DComp,\n  comp_id: string\n) => {\n  const mitem = doc.getMap(\"map\").get(\"root\");\n  if (!mitem) return;\n\n  const meta: Record<string, IMeta> = {};\n  const tree: NodeModel<IMeta>[] = [];\n  const item = mitem.toJSON() as IItem;\n\n  p.comp.loaded[comp_id] = item;\n  await initLoadComp(\n    {\n      comps: p.comp.loaded,\n      meta,\n      set_meta: false,\n      mode: \"comp\",\n    },\n    item,\n    {\n      load: async (comp_ids: string[]) => {\n        const ids = comp_ids.filter((id) => !p.comp.loaded[id]);\n        const comps = await p.sync?.comp.load(ids, true);\n        if (comps) {\n          let result = Object.entries(comps);\n\n          for (const [id_comp, comp] of result) {\n            if (comp && comp.snapshot && !p.comp.list[id_comp]) {\n              await loadCompSnapshot(p, id_comp, comp.snapshot);\n            }\n          }\n        }\n      },\n    }\n  );\n\n  genMeta(\n    {\n      comps: p.comp.loaded,\n      meta,\n      mode: \"comp\",\n      on: {\n        async visit(m) {\n          pushTreeNode(p, m, meta, tree);\n\n          assignMitem({\n            m,\n            root: item,\n            mitem,\n            meta,\n            new_prop_jsx(meta, mprops, prop_name, prop_val) {\n              transact.list.push(() => {\n                const map = new Y.Map();\n                if (prop_val.content) prop_val.content.id = createId();\n                syncronize(map, prop_val);\n                mprops.set(prop_name, map as any);\n              });\n            },\n          });\n        },\n      },\n      note: \"load-comp-scan-meta\",\n    },\n    { item, ignore_first_component: true }\n  );\n\n  if (transact.list.length > 0) {\n    p.page.doc?.transact(() => {\n      for (const fn of transact.list) {\n        fn();\n      }\n    });\n  }\n\n  p.comp.loaded[comp_id] = item;\n\n  return { meta, tree, item };\n};\n\nconst transact = {\n  list: [] as (() => void)[],\n};\n","export const isTextEditing = () => {\n  const el = document.activeElement;\n  if (el && el.attributes.getNamedItem(\"contenteditable\")) {\n    return true;\n  }\n  return false;\n};\n","import { createId } from \"@paralleldrive/cuid2\";\nimport { TypedMap } from \"yjs-types\";\nimport { IItem, MItem } from \"../../../../utils/types/item\";\nimport { FMCompDef, FNCompDef } from \"../../../../utils/types/meta-fn\";\nimport { IMeta } from \"../ed-global\";\n\nexport const assignMitem = (arg: {\n  m: IMeta;\n  root: IItem;\n  mitem: MItem;\n  meta: Record<string, IMeta>;\n  new_prop_jsx: (\n    meta: IMeta,\n    mprop: TypedMap<Record<string, FMCompDef>>,\n    prop_name: string,\n    prop_val: FNCompDef\n  ) => void;\n}) => {\n  const { m, root, mitem, meta } = arg;\n\n  if (m.jsx_prop && m.parent?.instance_id) {\n    const instance_meta = meta[m.parent?.instance_id];\n    if (instance_meta) {\n      if (m.jsx_prop.is_root) {\n        const prop = instance_meta.item.component?.props[m.jsx_prop.name];\n        if (prop) {\n          prop.content = m.item;\n        }\n      }\n    }\n  }\n\n  if (m.parent) {\n    if (m.parent.id === \"root\") {\n      if (m.item.id === root.id) {\n        m.mitem = mitem;\n      }\n    } else {\n      let parent = meta[m.parent.id];\n\n      if (!parent.mitem && m.parent.instance_id && meta[m.parent.instance_id]) {\n        parent = meta[m.parent.instance_id];\n      }\n\n      if (parent.mitem) {\n        if (m.jsx_prop?.is_root === true) {\n          const mprops = parent.mitem.get(\"component\")?.get(\"props\");\n          if (mprops) {\n            const mprop = mprops.get(m.jsx_prop.name);\n            if (mprop) {\n              const mcontent = mprop.get(\"content\");\n\n              if (!mcontent) {\n                const map = new Y.Map();\n                syncronize(map, {\n                  id: createId(),\n                  name: m.jsx_prop.name,\n                  type: \"item\",\n                  dim: { w: \"full\", h: \"full\" },\n                  childs: [],\n                  adv: {\n                    css: \"\",\n                  },\n                });\n                mprop.set(\"content\", map as any);\n              }\n\n              if (mcontent) {\n                m.mitem = mcontent;\n              }\n            }\n          }\n        } else {\n          parent.mitem.get(\"childs\")?.forEach((child) => {\n            const id = child && child.get && child.get(\"id\");\n            if (typeof id === \"string\" && id === m.item.id) {\n              m.mitem = child;\n            } \n          });\n        }\n      }\n\n      if (m.item.component?.props) {\n        for (const [prop_name, v] of Object.entries(m.item.component.props)) {\n          let mprop = m.mitem?.get(\"component\")?.get(\"props\")?.get(prop_name);\n          if (!mprop) {\n            const mprops = m.mitem?.get(\"component\")?.get(\"props\");\n            if (mprops) {\n              arg.new_prop_jsx(m, mprops, prop_name, v);\n            }\n          }\n\n          if (v.content) {\n            if (mprop) {\n              const pmeta = meta[v.content.id];\n\n              if (pmeta) {\n                pmeta.mitem = mprop.get(\"content\");\n              }\n            } else {\n              const mprops = m.mitem?.get(\"component\")?.get(\"props\");\n              if (mprops) {\n                arg.new_prop_jsx(m, mprops, prop_name, v);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n","import { NodeModel } from \"@minoru/react-dnd-treeview\";\nimport { IMeta, PG } from \"../../ed-global\";\n\nexport const pushTreeNode = (\n  p: PG,\n  meta: IMeta,\n  metas: Record<string, IMeta>,\n  tree: NodeModel<IMeta>[]\n) => {\n  if (meta.parent?.id === \"root\") {\n    p.page.doc\n      ?.getMap(\"map\")\n      .get(\"root\")\n      ?.get(\"childs\")\n      ?.forEach((mitem) => {\n        if (mitem.get(\"id\") === meta.item.id) {\n          meta.mitem = mitem;\n        }\n      });\n  } else {\n    const parent = metas[meta.parent?.id || \"\"];\n\n    if (parent && parent.mitem) {\n      parent.mitem.get(\"childs\")?.forEach((mitem) => {\n        if (mitem && mitem.get && mitem.get(\"id\") === meta.item.id) {\n          meta.mitem = mitem;\n        }\n      });\n    }\n  }\n\n  if (!meta.item || !meta.item.id) {\n    console.warn(\"Emptry Tree Item \", meta);\n    return null;\n  }\n\n  if (tree.find((t) => t.id === meta.item.id)) {\n    console.warn(\"Double Tree Item: \", meta.item.id, meta.item.name);\n  } else {\n    if (!meta.parent?.comp_id) {\n      tree.push({\n        id: meta.item.id,\n        parent: meta.parent?.id || \"root\",\n        text: meta.item.name,\n        data: meta,\n      });\n    } else {\n      if (meta.jsx_prop) {\n        if (meta.jsx_prop.is_root) {\n          if (meta.jsx_prop.name !== \"child\") {\n            tree.push({\n              id: meta.item.id,\n              parent: meta.parent?.instance_id || \"root\",\n              text: meta.jsx_prop.name,\n              data: meta,\n            });\n          }\n        } else {\n          if (meta.jsx_prop.name === \"child\" && meta.parent.instance_id) {\n            const comp_meta = metas[meta.parent.instance_id] as IMeta;\n            const child_id = comp_meta.item.component?.props?.child?.content?.id;\n            if (child_id && comp_meta.mitem) {\n              const child_meta = metas[child_id];\n              if (child_meta.item.childs.find((e) => meta.item.id === e.id)) {\n                tree.push({\n                  id: meta.item.id,\n                  parent: meta.parent?.instance_id || \"root\",\n                  text: meta.item.name,\n                  data: meta,\n                });\n              }\n            }\n          }\n          if (meta.parent.id !== meta.parent.instance_id) {\n            tree.push({\n              id: meta.item.id,\n              parent: meta.parent?.id || \"root\",\n              text: meta.item.name,\n              data: meta,\n            });\n          }\n        }\n      }\n    }\n  }\n};\n","import { Observable } from 'lib0/observable';\nimport * as array from 'lib0/array';\nimport * as math from 'lib0/math';\nimport * as map from 'lib0/map';\nimport * as encoding from 'lib0/encoding';\nimport * as decoding from 'lib0/decoding';\nimport * as random from 'lib0/random';\nimport * as promise from 'lib0/promise';\nimport * as buffer from 'lib0/buffer';\nimport * as error from 'lib0/error';\nimport * as binary from 'lib0/binary';\nimport * as f from 'lib0/function';\nimport { callAll } from 'lib0/function';\nimport * as set from 'lib0/set';\nimport * as logging from 'lib0/logging';\nimport * as time from 'lib0/time';\nimport * as string from 'lib0/string';\nimport * as iterator from 'lib0/iterator';\nimport * as object from 'lib0/object';\n\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {Observable<any>}\n */\nclass AbstractConnector extends Observable {\n  /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */\n  constructor (ydoc, awareness) {\n    super();\n    this.doc = ydoc;\n    this.awareness = awareness;\n  }\n}\n\nclass DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock;\n    /**\n     * @type {number}\n     */\n    this.len = len;\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nclass DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map();\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid));\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i];\n      iterateStructs(transaction, structs, del.clock, del.len, f);\n    }\n  });\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nconst findIndexDS = (dis, clock) => {\n  let left = 0;\n  let right = dis.length - 1;\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2);\n    const mid = dis[midindex];\n    const midclock = mid.clock;\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1;\n    } else {\n      right = midindex - 1;\n    }\n  }\n  return null\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client);\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n};\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock);\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j;\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1];\n      const right = dels[i];\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock);\n      } else {\n        if (j < i) {\n          dels[j] = right;\n        }\n        j++;\n      }\n    }\n    dels.length = j;\n  });\n};\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nconst mergeDeleteSets = dss => {\n  const merged = new DeleteSet();\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice();\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || []);\n        }\n        merged.clients.set(client, dels);\n      }\n    });\n  }\n  sortAndMergeDeleteSet(merged);\n  return merged\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nconst addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([])).push(new DeleteItem(clock, length));\n};\n\nconst createDeleteSet = () => new DeleteSet();\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nconst createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet();\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = [];\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i];\n      if (struct.deleted) {\n        const clock = struct.id.clock;\n        let len = struct.length;\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length;\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len));\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems);\n    }\n  });\n  return ds\n};\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size);\n\n  // Ensure that the delete set is written in a deterministic order\n  array.from(ds.clients.entries())\n    .sort((a, b) => b[0] - a[0])\n    .forEach(([client, dsitems]) => {\n      encoder.resetDsCurVal();\n      encoding.writeVarUint(encoder.restEncoder, client);\n      const len = dsitems.length;\n      encoding.writeVarUint(encoder.restEncoder, len);\n      for (let i = 0; i < len; i++) {\n        const item = dsitems[i];\n        encoder.writeDsClock(item.clock);\n        encoder.writeDsLen(item.len);\n      }\n    });\n};\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nconst readDeleteSet = decoder => {\n  const ds = new DeleteSet();\n  const numClients = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal();\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([]));\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()));\n      }\n    }\n  }\n  return ds\n};\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nconst readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet();\n  const numClients = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal();\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n    const structs = store.clients.get(client) || [];\n    const state = getState(store, client);\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock();\n      const clockEnd = clock + decoder.readDsLen();\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state);\n        }\n        let index = findIndexSS(structs, clock);\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index];\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n          index++; // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++];\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock));\n              }\n              struct.delete(transaction);\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock);\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2();\n    encoding.writeVarUint(ds.restEncoder, 0); // encode 0 structs\n    writeDeleteSet(ds, unappliedDS);\n    return ds.toUint8Array()\n  }\n  return null\n};\n\n/**\n * @param {DeleteSet} ds1\n * @param {DeleteSet} ds2\n */\nconst equalDeleteSets = (ds1, ds2) => {\n  if (ds1.clients.size !== ds2.clients.size) return false\n  for (const [client, deleteItems1] of ds1.clients.entries()) {\n    const deleteItems2 = /** @type {Array<import('../internals.js').DeleteItem>} */ (ds2.clients.get(client));\n    if (deleteItems2 === undefined || deleteItems1.length !== deleteItems2.length) return false\n    for (let i = 0; i < deleteItems1.length; i++) {\n      const di1 = deleteItems1[i];\n      const di2 = deleteItems2[i];\n      if (di1.clock !== di2.clock || di1.len !== di2.len) {\n        return false\n      }\n    }\n  }\n  return true\n};\n\n/**\n * @module Y\n */\n\nconst generateNewClientId = random.uint32;\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {string | null} [DocOpts.collectionid] Associate this document with a collection. This only plays a role if your provider has a concept of collection.\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n * @property {boolean} [DocOpts.shouldLoad] Whether the document should be synced by the provider now. This is toggled to true when you call ydoc.load()\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nclass Doc extends Observable {\n  /**\n   * @param {DocOpts} opts configuration\n   */\n  constructor ({ guid = random.uuidv4(), collectionid = null, gc = true, gcFilter = () => true, meta = null, autoLoad = false, shouldLoad = true } = {}) {\n    super();\n    this.gc = gc;\n    this.gcFilter = gcFilter;\n    this.clientID = generateNewClientId();\n    this.guid = guid;\n    this.collectionid = collectionid;\n    /**\n     * @type {Map<string, AbstractType<YEvent<any>>>}\n     */\n    this.share = new Map();\n    this.store = new StructStore();\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null;\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = [];\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set();\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null;\n    this.shouldLoad = shouldLoad;\n    this.autoLoad = autoLoad;\n    this.meta = meta;\n    /**\n     * This is set to true when the persistence provider loaded the document from the database or when the `sync` event fires.\n     * Note that not all providers implement this feature. Provider authors are encouraged to fire the `load` event when the doc content is loaded from the database.\n     *\n     * @type {boolean}\n     */\n    this.isLoaded = false;\n    /**\n     * This is set to true when the connection provider has successfully synced with a backend.\n     * Note that when using peer-to-peer providers this event may not provide very useful.\n     * Also note that not all providers implement this feature. Provider authors are encouraged to fire\n     * the `sync` event when the doc has been synced (with `true` as a parameter) or if connection is\n     * lost (with false as a parameter).\n     */\n    this.isSynced = false;\n    /**\n     * Promise that resolves once the document has been loaded from a presistence provider.\n     */\n    this.whenLoaded = promise.create(resolve => {\n      this.on('load', () => {\n        this.isLoaded = true;\n        resolve(this);\n      });\n    });\n    const provideSyncedPromise = () => promise.create(resolve => {\n      /**\n       * @param {boolean} isSynced\n       */\n      const eventHandler = (isSynced) => {\n        if (isSynced === undefined || isSynced === true) {\n          this.off('sync', eventHandler);\n          resolve();\n        }\n      };\n      this.on('sync', eventHandler);\n    });\n    this.on('sync', isSynced => {\n      if (isSynced === false && this.isSynced) {\n        this.whenSynced = provideSyncedPromise();\n      }\n      this.isSynced = isSynced === undefined || isSynced === true;\n      if (this.isSynced && !this.isLoaded) {\n        this.emit('load', []);\n      }\n    });\n    /**\n     * Promise that resolves once the document has been synced with a backend.\n     * This promise is recreated when the connection is lost.\n     * Note the documentation about the `isSynced` property.\n     */\n    this.whenSynced = provideSyncedPromise();\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item;\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this);\n      }, null, true);\n    }\n    this.shouldLoad = true;\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @template T\n   * @param {function(Transaction):T} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   * @return T\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    return transact(this, f, origin)\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor();\n      t._integrate(this, null);\n      return t\n    });\n    const Constr = type.constructor;\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor();\n        t._map = type._map;\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t;\n          }\n        });\n        t._start = type._start;\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t;\n        }\n        t._length = type._length;\n        this.share.set(name, t);\n        t._integrate(this, null);\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YMap<T>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {};\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON();\n    });\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy());\n    const item = this._item;\n    if (item !== null) {\n      this._item = null;\n      const content = /** @type {ContentDoc} */ (item.content);\n      content.doc = new Doc({ guid: this.guid, ...content.opts, shouldLoad: false });\n      content.doc._item = item;\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        const doc = content.doc;\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(doc);\n        }\n        transaction.subdocsRemoved.add(this);\n      }, null, true);\n    }\n    this.emit('destroyed', [true]);\n    this.emit('destroy', [this]);\n    super.destroy();\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f);\n  }\n}\n\nclass DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder;\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nclass UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nclass DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0;\n    this.restDecoder = decoder;\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0;\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder);\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1;\n    this.dsCurrVal += diff;\n    return diff\n  }\n}\n\nclass UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder);\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = [];\n    decoding.readVarUint(decoder); // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder));\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read();\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read();\n      this.keys.push(key);\n      return key\n    }\n  }\n}\n\nclass DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder();\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock);\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len);\n  }\n}\n\nclass UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client);\n    encoding.writeVarUint(this.restEncoder, id.clock);\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client);\n    encoding.writeVarUint(this.restEncoder, id.clock);\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info);\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s);\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info);\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len);\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf);\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed));\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key);\n  }\n}\n\nclass DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder(); // encodes all the rest / non-optimized\n    this.dsCurrVal = 0;\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0;\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal;\n    this.dsCurrVal = clock;\n    encoding.writeVarUint(this.restEncoder, diff);\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase();\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1);\n    this.dsCurrVal += len;\n  }\n}\n\nclass UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super();\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map();\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0;\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.clientEncoder = new encoding.UintOptRleEncoder();\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder();\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n    this.stringEncoder = new encoding.StringEncoder();\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n    this.typeRefEncoder = new encoding.UintOptRleEncoder();\n    this.lenEncoder = new encoding.UintOptRleEncoder();\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder();\n    encoding.writeVarUint(encoder, 0); // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder));\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder));\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array());\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array());\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder));\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client);\n    this.leftClockEncoder.write(id.clock);\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client);\n    this.rightClockEncoder.write(id.clock);\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info);\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s);\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0);\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info);\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len);\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any);\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf);\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed);\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key);\n    if (clock === undefined) {\n      /**\n       * @todo uncomment to introduce this feature finally\n       *\n       * Background. The ContentFormat object was always encoded using writeKey, but the decoder used to use readString.\n       * Furthermore, I forgot to set the keyclock. So everything was working fine.\n       *\n       * However, this feature here is basically useless as it is not being used (it actually only consumes extra memory).\n       *\n       * I don't know yet how to reintroduce this feature..\n       *\n       * Older clients won't be able to read updates when we reintroduce this feature. So this should probably be done using a flag.\n       *\n       */\n      // this.keyMap.set(key, this.keyClock)\n      this.keyClockEncoder.write(this.keyClock++);\n      this.stringEncoder.write(key);\n    } else {\n      this.keyClockEncoder.write(clock);\n    }\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock); // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock);\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs);\n  encoder.writeClient(client);\n  encoding.writeVarUint(encoder.restEncoder, clock);\n  const firstStruct = structs[startNewStructs];\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock);\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0);\n  }\n};\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nconst writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map();\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock);\n    }\n  });\n  getStateVector(store).forEach((_clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0);\n    }\n  });\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size);\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    writeStructs(encoder, /** @type {Array<GC|Item>} */ (store.clients.get(client)), client, clock);\n  });\n};\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nconst readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create();\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs);\n    const client = decoder.readClient();\n    let clock = decoding.readVarUint(decoder.restDecoder);\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs });\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo();\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen();\n          refs[i] = new GC(createID(client, clock), len);\n          clock += len;\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder);\n          refs[i] = new Skip(createID(client, clock), len);\n          clock += len;\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          );\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct;\n          clock += struct.length;\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n};\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = [];\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = array.from(clientsStructRefs.keys()).sort((a, b) => a - b);\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop();\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  };\n  let curStructsTarget = getNextStructTarget();\n  if (curStructsTarget === null) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore();\n  const missingSV = new Map();\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client);\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock);\n    }\n  };\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++];\n  // caching the state because it is used very often\n  const state = new Map();\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client;\n      const unapplicableItems = clientsStructRefs.get(client);\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--;\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i));\n        clientsStructRefs.delete(client);\n        unapplicableItems.i = 0;\n        unapplicableItems.refs = [];\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item]);\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client);\n    }\n    stack.length = 0;\n  };\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client));\n      const offset = localClock - stackHead.id.clock;\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead);\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1);\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS();\n      } else {\n        const missing = stackHead.getMissing(transaction, store);\n        if (missing !== null) {\n          stack.push(stackHead);\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 };\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing));\n            addStackToRestSS();\n          } else {\n            stackHead = structRefs.refs[structRefs.i++];\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset);\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length);\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop());\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++]);\n    } else {\n      curStructsTarget = getNextStructTarget();\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++]);\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2();\n    writeClientsStructs(encoder, restStructs, new Map());\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0); // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n};\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nconst writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState);\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nconst readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false;\n    let retry = false;\n    const doc = transaction.doc;\n    const store = doc.store;\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc);\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss);\n    const pending = store.pendingStructs;\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true;\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client);\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock);\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update]);\n      }\n    } else {\n      store.pendingStructs = restStructs;\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store);\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs));\n      decoding.readVarUint(pendingDSUpdate.restDecoder); // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store);\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2]);\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2;\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest;\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update;\n      store.pendingStructs = null;\n      applyUpdateV2(transaction.doc, update);\n    }\n  }, transactionOrigin, false);\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder));\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nconst applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update);\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder));\n};\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1);\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nconst writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector);\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store));\n};\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector);\n  writeStateAsUpdate(encoder, doc, targetStateVector);\n  const updates = [encoder.toUint8Array()];\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs);\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector));\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n};\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1());\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst readStateVector = decoder => {\n  const ss = new Map();\n  const ssLength = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder);\n    const clock = decoding.readVarUint(decoder.restDecoder);\n    ss.set(client, clock);\n  }\n  return ss\n};\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)));\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nconst writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size);\n  array.from(sv.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    encoding.writeVarUint(encoder.restEncoder, client); // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock);\n  });\n  return encoder\n};\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nconst writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store));\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc);\n  } else {\n    writeDocumentStateVector(encoder, doc);\n  }\n  return encoder.toUint8Array()\n};\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1());\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nclass EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = [];\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nconst createEventHandler = () => new EventHandler();\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nconst addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f);\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nconst removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l;\n  const len = l.length;\n  eventHandler.l = l.filter(g => f !== g);\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.');\n  }\n};\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nconst callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1]);\n\nclass ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client;\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock;\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock);\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nconst createID = (client, clock) => new ID(client, clock);\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nconst writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client);\n  encoding.writeVarUint(encoder, id.clock);\n};\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nconst readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder));\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nconst findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n};\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nconst isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item;\n  }\n  return false\n};\n\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nconst logType = type => {\n  const res = [];\n  let n = type._start;\n  while (n) {\n    res.push(n);\n    n = n.right;\n  }\n  console.log('Children: ', res);\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content));\n};\n\nclass PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map();\n    this.yusers = storeType;\n    this.doc = doc;\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map();\n    this.dss = dss;\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds');\n      const ids = user.get('ids');\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription);\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]));\n            }\n          });\n        });\n      });\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))));\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      );\n      ids.forEach(addClientId);\n    };\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      );\n    });\n    // add intial data\n    storeType.forEach(initUser);\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} conf\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers;\n    let user = users.get(userDescription);\n    if (!user) {\n      user = new YMap();\n      user.set('ids', new YArray());\n      user.set('ds', new YArray());\n      users.set(userDescription, user);\n    }\n    user.get('ids').push([clientid]);\n    users.observe(_event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription);\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite;\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid]);\n            }\n          });\n          const encoder = new DSEncoderV1();\n          const ds = this.dss.get(userDescription);\n          if (ds) {\n            writeDeleteSet(encoder, ds);\n            user.get('ds').push([encoder.toUint8Array()]);\n          }\n        }\n      }, 0);\n    });\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds');\n        const ds = transaction.deleteSet;\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = new DSEncoderV1();\n          writeDeleteSet(encoder, ds);\n          yds.push([encoder.toUint8Array()]);\n        }\n      });\n    });\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss.entries()) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nclass RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type;\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname;\n    /**\n     * @type {ID | null}\n     */\n    this.item = item;\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc;\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nconst relativePositionToJSON = rpos => {\n  const json = {};\n  if (rpos.type) {\n    json.type = rpos.type;\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname;\n  }\n  if (rpos.item) {\n    json.item = rpos.item;\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc;\n  }\n  return json\n};\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc);\n\nclass AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type;\n    /**\n     * @type {number}\n     */\n    this.index = index;\n    this.assoc = assoc;\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nconst createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc);\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nconst createRelativePosition = (type, item, assoc) => {\n  let typeid = null;\n  let tname = null;\n  if (type._item === null) {\n    tname = findRootTypeKey(type);\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock);\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n};\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start;\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--;\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length;\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right;\n  }\n  return createRelativePosition(type, null, assoc)\n};\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nconst writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos;\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0);\n    writeID(encoder, item);\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1);\n    encoding.writeVarString(encoder, tname);\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2);\n    writeID(encoder, type);\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc);\n  return encoder\n};\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nconst encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder();\n  writeRelativePosition(encoder, rpos);\n  return encoding.toUint8Array(encoder)\n};\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nconst readRelativePosition = decoder => {\n  let type = null;\n  let tname = null;\n  let itemID = null;\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder);\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder);\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder);\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0;\n  return new RelativePosition(type, tname, itemID, assoc)\n};\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nconst decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array));\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nconst createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store;\n  const rightID = rpos.item;\n  const typeID = rpos.type;\n  const tname = rpos.tname;\n  const assoc = rpos.assoc;\n  let type = null;\n  let index = 0;\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID);\n    const right = res.item;\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent);\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)); // adjust position based on left association if necessary\n      let n = right.left;\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length;\n        }\n        n = n.left;\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname);\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID);\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type;\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length;\n    } else {\n      index = 0;\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n};\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n);\n\nclass Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds;\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv;\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nconst equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients;\n  const ds2 = snap2.ds.clients;\n  const sv1 = snap1.sv;\n  const sv2 = snap2.sv;\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || [];\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i];\n      const dsitem2 = dsitems2[i];\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n};\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nconst encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds);\n  writeStateVector(encoder, snapshot.sv);\n  return encoder.toUint8Array()\n};\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nconst encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1());\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nconst decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n};\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nconst decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)));\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nconst createSnapshot = (ds, sm) => new Snapshot(ds, sm);\n\nconst emptySnapshot = createSnapshot(createDeleteSet(), new Map());\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nconst snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store));\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nconst isVisible = (item, snapshot) => snapshot === undefined\n  ? !item.deleted\n  : snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id);\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nconst splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create);\n  const store = transaction.doc.store;\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock));\n      }\n    });\n    iterateDeletedStructs(transaction, snapshot.ds, _item => {});\n    meta.add(snapshot);\n  }\n};\n\n/**\n * @example\n *  const ydoc = new Y.Doc({ gc: false })\n *  ydoc.getText().insert(0, 'world!')\n *  const snapshot = Y.snapshot(ydoc)\n *  ydoc.getText().insert(0, 'hello ')\n *  const restored = Y.createDocFromSnapshot(ydoc, snapshot)\n *  assert(restored.getText().toString() === 'world!')\n *\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nconst createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('Garbage-collection must be disabled in `originDoc`!')\n  }\n  const { sv, ds } = snapshot;\n\n  const encoder = new UpdateEncoderV2();\n  originDoc.transact(transaction => {\n    let size = 0;\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++;\n      }\n    });\n    encoding.writeVarUint(encoder.restEncoder, size);\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock));\n      }\n      const structs = originDoc.store.clients.get(client) || [];\n      const lastStructIndex = findIndexSS(structs, clock - 1);\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1);\n      encoder.writeClient(client);\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0);\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0);\n      }\n    }\n    writeDeleteSet(encoder, ds);\n  });\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot');\n  return newDoc\n};\n\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n */\nconst snapshotContainsUpdateV2 = (snapshot, update, YDecoder = UpdateDecoderV2) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    if ((snapshot.sv.get(curr.id.client) || 0) < curr.id.clock + curr.length) {\n      return false\n    }\n  }\n  const mergedDS = mergeDeleteSets([snapshot.ds, readDeleteSet(updateDecoder)]);\n  return equalDeleteSets(snapshot.ds, mergedDS)\n};\n\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n */\nconst snapshotContainsUpdate = (snapshot, update) => snapshotContainsUpdateV2(snapshot, update, UpdateDecoderV1);\n\nclass StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map();\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null;\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null;\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nconst getStateVector = store => {\n  const sm = new Map();\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1];\n    sm.set(client, struct.id.clock + struct.length);\n  });\n  return sm\n};\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nconst getState = (store, client) => {\n  const structs = store.clients.get(client);\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1];\n  return lastStruct.id.clock + lastStruct.length\n};\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nconst addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client);\n  if (structs === undefined) {\n    structs = [];\n    store.clients.set(struct.id.client, structs);\n  } else {\n    const lastStruct = structs[structs.length - 1];\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct);\n};\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nconst findIndexSS = (structs, clock) => {\n  let left = 0;\n  let right = structs.length - 1;\n  let mid = structs[right];\n  let midclock = mid.id.clock;\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right); // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex];\n    midclock = mid.id.clock;\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1;\n    } else {\n      right = midindex - 1;\n    }\n    midindex = math.floor((left + right) / 2);\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nconst find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client);\n  return structs[findIndexSS(structs, id.clock)]\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nconst getItem = /** @type {function(StructStore,ID):Item} */ (find);\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nconst findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock);\n  const struct = structs[index];\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock));\n    return index + 1\n  }\n  return index\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client));\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n};\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client);\n  const index = findIndexSS(structs, id.clock);\n  const struct = structs[index];\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1));\n  }\n  return struct\n};\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nconst replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client));\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct;\n};\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len;\n  let index = findIndexCleanStart(transaction, structs, clockStart);\n  let struct;\n  do {\n    struct = structs[index++];\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd);\n    }\n    f(struct);\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n};\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nclass Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc;\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet();\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store);\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map();\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent<any>>,Set<String|null>>}\n     */\n    this.changed = new Map();\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent<any>>,Array<YEvent<any>>>}\n     */\n    this.changedParentTypes = new Map();\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = [];\n    /**\n     * @type {any}\n     */\n    this.origin = origin;\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map();\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local;\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set();\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set();\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set();\n    /**\n     * @type {boolean}\n     */\n    this._needFormattingCleanup = false;\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nconst writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet);\n  writeStructsFromTransaction(encoder, transaction);\n  writeDeleteSet(encoder, transaction.deleteSet);\n  return true\n};\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent<any>>} type\n * @param {string|null} parentSub\n */\nconst addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item;\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub);\n  }\n};\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n * @return {number} # of merged structs\n */\nconst tryToMergeWithLefts = (structs, pos) => {\n  let right = structs[pos];\n  let left = structs[pos - 1];\n  let i = pos;\n  for (; i > 0; right = left, left = structs[--i - 1]) {\n    if (left.deleted === right.deleted && left.constructor === right.constructor) {\n      if (left.mergeWith(right)) {\n        if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n          /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left));\n        }\n        continue\n      }\n    }\n    break\n  }\n  const merged = pos - i;\n  if (merged) {\n    // remove all merged structs from the array\n    structs.splice(pos + 1 - merged, merged);\n  }\n  return merged\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di];\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len;\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si];\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false);\n        }\n      }\n    }\n  }\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di];\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1));\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[si]\n      ) {\n        si -= 1 + tryToMergeWithLefts(structs, si);\n      }\n    }\n  });\n};\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter);\n  tryMergeDeleteSet(ds, store);\n};\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i];\n    const doc = transaction.doc;\n    const store = doc.store;\n    const ds = transaction.deleteSet;\n    const mergeStructs = transaction._mergeStructs;\n    try {\n      sortAndMergeDeleteSet(ds);\n      transaction.afterState = getStateVector(transaction.doc.store);\n      doc.emit('beforeObserverCalls', [transaction, doc]);\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = [];\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs);\n          }\n        })\n      );\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) => {\n          // We need to think about the possibility that the user transforms the\n          // Y.Doc in the event.\n          if (type._dEH.l.length > 0 && (type._item === null || !type._item.deleted)) {\n            events = events\n              .filter(event =>\n                event.target._item === null || !event.target._item.deleted\n              );\n            events\n              .forEach(event => {\n                event.currentTarget = type;\n                // path is relative to the current target\n                event._path = null;\n              });\n            // sort events by path length so that top-level events are fired first.\n            events\n              .sort((event1, event2) => event1.path.length - event2.path.length);\n            // We don't need to check for events.length\n            // because we know it has at least one element\n            callEventHandlerListeners(type._dEH, events, transaction);\n          }\n        });\n      });\n      fs.push(() => doc.emit('afterTransaction', [transaction, doc]));\n      callAll(fs, []);\n      if (transaction._needFormattingCleanup) {\n        cleanupYTextAfterTransaction(transaction);\n      }\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter);\n      }\n      tryMergeDeleteSet(ds, store);\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0;\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1);\n          for (let i = structs.length - 1; i >= firstChangePos;) {\n            i -= 1 + tryToMergeWithLefts(structs, i);\n          }\n        }\n      });\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = mergeStructs.length - 1; i >= 0; i--) {\n        const { client, clock } = mergeStructs[i].id;\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client));\n        const replacedStructPos = findIndexSS(structs, clock);\n        if (replacedStructPos + 1 < structs.length) {\n          if (tryToMergeWithLefts(structs, replacedStructPos + 1) > 1) {\n            continue // no need to perform next check, both are already merged\n          }\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLefts(structs, replacedStructPos);\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.');\n        doc.clientID = generateNewClientId();\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc]);\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1();\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2();\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction);\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n        }\n      }\n      const { subdocsAdded, subdocsLoaded, subdocsRemoved } = transaction;\n      if (subdocsAdded.size > 0 || subdocsRemoved.size > 0 || subdocsLoaded.size > 0) {\n        subdocsAdded.forEach(subdoc => {\n          subdoc.clientID = doc.clientID;\n          if (subdoc.collectionid == null) {\n            subdoc.collectionid = doc.collectionid;\n          }\n          doc.subdocs.add(subdoc);\n        });\n        subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc));\n        doc.emit('subdocs', [{ loaded: subdocsLoaded, added: subdocsAdded, removed: subdocsRemoved }, doc, transaction]);\n        subdocsRemoved.forEach(subdoc => subdoc.destroy());\n      }\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = [];\n        doc.emit('afterAllTransactions', [doc, transactionCleanups]);\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1);\n      }\n    }\n  }\n};\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @template T\n * @param {Doc} doc\n * @param {function(Transaction):T} f\n * @param {any} [origin=true]\n * @return {T}\n *\n * @function\n */\nconst transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups;\n  let initialCall = false;\n  /**\n   * @type {any}\n   */\n  let result = null;\n  if (doc._transaction === null) {\n    initialCall = true;\n    doc._transaction = new Transaction(doc, origin, local);\n    transactionCleanups.push(doc._transaction);\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc]);\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc]);\n  }\n  try {\n    result = f(doc._transaction);\n  } finally {\n    if (initialCall) {\n      const finishCleanup = doc._transaction === transactionCleanups[0];\n      doc._transaction = null;\n      if (finishCleanup) {\n        // The first transaction ended, now process observer calls.\n        // Observer call may create new transactions for which we need to call the observers and do cleanup.\n        // We don't want to nest these calls, so we execute these calls one after\n        // another.\n        // Also we need to ensure that all cleanups are called, even if the\n        // observes throw errors.\n        // This file is full of hacky try {} finally {} blocks to ensure that an\n        // event can throw errors and also that the cleanup is called.\n        cleanupTransactions(transactionCleanups, 0);\n      }\n    }\n  }\n  return result\n};\n\nclass StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions;\n    this.deletions = deletions;\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map();\n  }\n}\n/**\n * @param {Transaction} tr\n * @param {UndoManager} um\n * @param {StackItem} stackItem\n */\nconst clearUndoManagerStackItem = (tr, um, stackItem) => {\n  iterateDeletedStructs(tr, stackItem.deletions, item => {\n    if (item instanceof Item && um.scope.some(type => isParentOf(type, item))) {\n      keepItem(item, false);\n    }\n  });\n};\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null;\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null;\n  const doc = undoManager.doc;\n  const scope = undoManager.scope;\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store;\n      const stackItem = /** @type {StackItem} */ (stack.pop());\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set();\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = [];\n      let performedChange = false;\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id);\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff));\n            }\n            struct = item;\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct);\n          }\n        }\n      });\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct);\n        }\n      });\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo, stackItem.insertions, undoManager.ignoreRemoteMapChanges, undoManager) !== null || performedChange;\n      });\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i];\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction);\n          performedChange = true;\n        }\n      }\n      result = performedChange ? stackItem : null;\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0;\n      }\n    });\n    _tr = transaction;\n  }, undoManager);\n  if (result != null) {\n    const changedParentTypes = _tr.changedParentTypes;\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager]);\n  }\n  return result\n};\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Transaction):boolean} [UndoManagerOptions.captureTransaction] Do not capture changes of a Transaction if result false.\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter what an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n * @property {boolean} [ignoreRemoteMapChanges] Experimental. By default, the UndoManager will never overwrite remote changes. Enable this property to enable overwriting remote changes on key-value changes (Y.Map, properties on Y.Xml, etc..).\n * @property {Doc} [doc] The document that this UndoManager operates on. Only needed if typeScope is empty.\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'|'stack-cleared'|'stack-item-updated'>}\n */\nclass UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, {\n    captureTimeout = 500,\n    captureTransaction = _tr => true,\n    deleteFilter = () => true,\n    trackedOrigins = new Set([null]),\n    ignoreRemoteMapChanges = false,\n    doc = /** @type {Doc} */ (array.isArray(typeScope) ? typeScope[0].doc : typeScope.doc)\n  } = {}) {\n    super();\n    /**\n     * @type {Array<AbstractType<any>>}\n     */\n    this.scope = [];\n    this.doc = doc;\n    this.addToScope(typeScope);\n    this.deleteFilter = deleteFilter;\n    trackedOrigins.add(this);\n    this.trackedOrigins = trackedOrigins;\n    this.captureTransaction = captureTransaction;\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = [];\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = [];\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false;\n    this.redoing = false;\n    this.lastChange = 0;\n    this.ignoreRemoteMapChanges = ignoreRemoteMapChanges;\n    this.captureTimeout = captureTimeout;\n    /**\n     * @param {Transaction} transaction\n     */\n    this.afterTransactionHandler = transaction => {\n      // Only track certain transactions\n      if (\n        !this.captureTransaction(transaction) ||\n        !this.scope.some(type => transaction.changedParentTypes.has(type)) ||\n        (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))\n      ) {\n        return\n      }\n      const undoing = this.undoing;\n      const redoing = this.redoing;\n      const stack = undoing ? this.redoStack : this.undoStack;\n      if (undoing) {\n        this.stopCapturing(); // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.clear(false, true);\n      }\n      const insertions = new DeleteSet();\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0;\n        const len = endClock - startClock;\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len);\n        }\n      });\n      const now = time.getUnixTime();\n      let didAdd = false;\n      if (this.lastChange > 0 && now - this.lastChange < this.captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1];\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet]);\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions]);\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions));\n        didAdd = true;\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now;\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true);\n        }\n      });\n      const changeEvent = [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this];\n      if (didAdd) {\n        this.emit('stack-item-added', changeEvent);\n      } else {\n        this.emit('stack-item-updated', changeEvent);\n      }\n    };\n    this.doc.on('afterTransaction', this.afterTransactionHandler);\n    this.doc.on('destroy', () => {\n      this.destroy();\n    });\n  }\n\n  /**\n   * @param {Array<AbstractType<any>> | AbstractType<any>} ytypes\n   */\n  addToScope (ytypes) {\n    ytypes = array.isArray(ytypes) ? ytypes : [ytypes];\n    ytypes.forEach(ytype => {\n      if (this.scope.every(yt => yt !== ytype)) {\n        if (ytype.doc !== this.doc) logging.warn('[yjs#509] Not same Y.Doc'); // use MultiDocUndoManager instead. also see https://github.com/yjs/yjs/issues/509\n        this.scope.push(ytype);\n      }\n    });\n  }\n\n  /**\n   * @param {any} origin\n   */\n  addTrackedOrigin (origin) {\n    this.trackedOrigins.add(origin);\n  }\n\n  /**\n   * @param {any} origin\n   */\n  removeTrackedOrigin (origin) {\n    this.trackedOrigins.delete(origin);\n  }\n\n  clear (clearUndoStack = true, clearRedoStack = true) {\n    if ((clearUndoStack && this.canUndo()) || (clearRedoStack && this.canRedo())) {\n      this.doc.transact(tr => {\n        if (clearUndoStack) {\n          this.undoStack.forEach(item => clearUndoManagerStackItem(tr, this, item));\n          this.undoStack = [];\n        }\n        if (clearRedoStack) {\n          this.redoStack.forEach(item => clearUndoManagerStackItem(tr, this, item));\n          this.redoStack = [];\n        }\n        this.emit('stack-cleared', [{ undoStackCleared: clearUndoStack, redoStackCleared: clearRedoStack }]);\n      });\n    }\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0;\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true;\n    let res;\n    try {\n      res = popStackItem(this, this.undoStack, 'undo');\n    } finally {\n      this.undoing = false;\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true;\n    let res;\n    try {\n      res = popStackItem(this, this.redoStack, 'redo');\n    } finally {\n      this.redoing = false;\n    }\n    return res\n  }\n\n  /**\n   * Are undo steps available?\n   *\n   * @return {boolean} `true` if undo is possible\n   */\n  canUndo () {\n    return this.undoStack.length > 0\n  }\n\n  /**\n   * Are redo steps available?\n   *\n   * @return {boolean} `true` if redo is possible\n   */\n  canRedo () {\n    return this.redoStack.length > 0\n  }\n\n  destroy () {\n    this.trackedOrigins.delete(this);\n    this.doc.off('afterTransaction', this.afterTransactionHandler);\n    super.destroy();\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n    const client = decoder.readClient();\n    let clock = decoding.readVarUint(decoder.restDecoder);\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo();\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder);\n        yield new Skip(createID(client, clock), len);\n        clock += len;\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        );\n        yield struct;\n        clock += struct.length;\n      } else {\n        const len = decoder.readLen();\n        yield new GC(createID(client, clock), len);\n        clock += len;\n      }\n    }\n  }\n}\n\nclass LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder);\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null;\n    this.done = false;\n    this.filterSkips = filterSkips;\n    this.next();\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null;\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nconst logUpdate = update => logUpdateV2(update, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nconst logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = [];\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr);\n  }\n  logging.print('Structs: ', structs);\n  const ds = readDeleteSet(updateDecoder);\n  logging.print('DeleteSet: ', ds);\n};\n\n/**\n * @param {Uint8Array} update\n *\n */\nconst decodeUpdate = (update) => decodeUpdateV2(update, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nconst decodeUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = [];\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr);\n  }\n  return {\n    structs,\n    ds: readDeleteSet(updateDecoder)\n  }\n};\n\nclass LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0;\n    this.startClock = 0;\n    this.written = 0;\n    this.encoder = encoder;\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = [];\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nconst mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder();\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n  let curr = updateDecoder.curr;\n  if (curr !== null) {\n    let size = 0;\n    let currClient = curr.id.client;\n    let stopCounting = curr.id.clock !== 0; // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length;\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++;\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient);\n          encoding.writeVarUint(encoder.restEncoder, currClock);\n        }\n        currClient = curr.id.client;\n        currClock = 0;\n        stopCounting = curr.id.clock !== 0;\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true;\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length;\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++;\n      encoding.writeVarUint(encoder.restEncoder, currClient);\n      encoding.writeVarUint(encoder.restEncoder, currClock);\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder();\n    encoding.writeVarUint(enc, size);\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder);\n    encoder.restEncoder = enc;\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0);\n    return encoder.toUint8Array()\n  }\n};\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map();\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map();\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n  let curr = updateDecoder.curr;\n  if (curr !== null) {\n    let currClient = curr.id.client;\n    let currClock = curr.id.clock;\n    // write the beginning to `from`\n    from.set(currClient, currClock);\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock);\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock);\n        // update currClient\n        currClient = curr.id.client;\n      }\n      currClock = curr.id.clock + curr.length;\n    }\n    // write the end to `to`\n    to.set(currClient, currClock);\n  }\n  return { from, to }\n};\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1);\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id;\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id;\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left);\n    const { client, clock } = leftItem.id;\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n};\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nconst mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  if (updates.length === 1) {\n    return updates[0]\n  }\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)));\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true));\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null;\n\n  const updateEncoder = new YEncoder();\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder);\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null);\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock;\n          if (clockDiff === 0) {\n            // @todo remove references to skip since the structDecoders must filter Skips.\n            return dec1.curr.constructor === dec2.curr.constructor\n              ? 0\n              : dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    );\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0];\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client;\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr);\n      let iterated = false;\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next();\n        iterated = true;\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n        currWrite = { struct: curr, offset: 0 };\n        currDecoder.next();\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock;\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length;\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff);\n            currWrite = { struct, offset: 0 };\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock;\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff;\n            } else {\n              curr = sliceStruct(curr, diff);\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            currWrite = { struct: curr, offset: 0 };\n            currDecoder.next();\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 };\n      currDecoder.next();\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n      currWrite = { struct: next, offset: 0 };\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n    currWrite = null;\n  }\n  finishLazyStructWriting(lazyStructEncoder);\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder));\n  const ds = mergeDeleteSets(dss);\n  writeDeleteSet(updateEncoder, ds);\n  return updateEncoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nconst diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv);\n  const encoder = new YEncoder();\n  const lazyStructWriter = new LazyStructWriter(encoder);\n  const decoder = new YDecoder(decoding.createDecoder(update));\n  const reader = new LazyStructReader(decoder, false);\n  while (reader.curr) {\n    const curr = reader.curr;\n    const currClient = curr.id.client;\n    const svClock = state.get(currClient) || 0;\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next();\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0));\n      reader.next();\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0);\n        reader.next();\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next();\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter);\n  // write ds\n  const ds = readDeleteSet(decoder);\n  writeDeleteSet(encoder, ds);\n  return encoder.toUint8Array()\n};\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nconst diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) });\n    lazyWriter.encoder.restEncoder = encoding.createEncoder();\n    lazyWriter.written = 0;\n  }\n};\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter);\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client;\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client);\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset);\n  }\n  struct.write(lazyWriter.encoder, offset);\n  lazyWriter.written++;\n};\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter);\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder;\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length);\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i];\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written);\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder);\n  }\n};\n\n/**\n * @param {Uint8Array} update\n * @param {function(Item|GC|Skip):Item|GC|Skip} blockTransformer\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nconst convertUpdateFormat = (update, blockTransformer, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update));\n  const lazyDecoder = new LazyStructReader(updateDecoder, false);\n  const updateEncoder = new YEncoder();\n  const lazyWriter = new LazyStructWriter(updateEncoder);\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, blockTransformer(curr), 0);\n  }\n  finishLazyStructWriting(lazyWriter);\n  const ds = readDeleteSet(updateDecoder);\n  writeDeleteSet(updateEncoder, ds);\n  return updateEncoder.toUint8Array()\n};\n\n/**\n * @typedef {Object} ObfuscatorOptions\n * @property {boolean} [ObfuscatorOptions.formatting=true]\n * @property {boolean} [ObfuscatorOptions.subdocs=true]\n * @property {boolean} [ObfuscatorOptions.yxml=true] Whether to obfuscate nodeName / hookName\n */\n\n/**\n * @param {ObfuscatorOptions} obfuscator\n */\nconst createObfuscator = ({ formatting = true, subdocs = true, yxml = true } = {}) => {\n  let i = 0;\n  const mapKeyCache = map.create();\n  const nodeNameCache = map.create();\n  const formattingKeyCache = map.create();\n  const formattingValueCache = map.create();\n  formattingValueCache.set(null, null); // end of a formatting range should always be the end of a formatting range\n  /**\n   * @param {Item|GC|Skip} block\n   * @return {Item|GC|Skip}\n   */\n  return block => {\n    switch (block.constructor) {\n      case GC:\n      case Skip:\n        return block\n      case Item: {\n        const item = /** @type {Item} */ (block);\n        const content = item.content;\n        switch (content.constructor) {\n          case ContentDeleted:\n            break\n          case ContentType: {\n            if (yxml) {\n              const type = /** @type {ContentType} */ (content).type;\n              if (type instanceof YXmlElement) {\n                type.nodeName = map.setIfUndefined(nodeNameCache, type.nodeName, () => 'node-' + i);\n              }\n              if (type instanceof YXmlHook) {\n                type.hookName = map.setIfUndefined(nodeNameCache, type.hookName, () => 'hook-' + i);\n              }\n            }\n            break\n          }\n          case ContentAny: {\n            const c = /** @type {ContentAny} */ (content);\n            c.arr = c.arr.map(() => i);\n            break\n          }\n          case ContentBinary: {\n            const c = /** @type {ContentBinary} */ (content);\n            c.content = new Uint8Array([i]);\n            break\n          }\n          case ContentDoc: {\n            const c = /** @type {ContentDoc} */ (content);\n            if (subdocs) {\n              c.opts = {};\n              c.doc.guid = i + '';\n            }\n            break\n          }\n          case ContentEmbed: {\n            const c = /** @type {ContentEmbed} */ (content);\n            c.embed = {};\n            break\n          }\n          case ContentFormat: {\n            const c = /** @type {ContentFormat} */ (content);\n            if (formatting) {\n              c.key = map.setIfUndefined(formattingKeyCache, c.key, () => i + '');\n              c.value = map.setIfUndefined(formattingValueCache, c.value, () => ({ i }));\n            }\n            break\n          }\n          case ContentJSON: {\n            const c = /** @type {ContentJSON} */ (content);\n            c.arr = c.arr.map(() => i);\n            break\n          }\n          case ContentString: {\n            const c = /** @type {ContentString} */ (content);\n            c.str = string.repeat((i % 10) + '', c.str.length);\n            break\n          }\n          default:\n            // unknown content type\n            error.unexpectedCase();\n        }\n        if (item.parentSub) {\n          item.parentSub = map.setIfUndefined(mapKeyCache, item.parentSub, () => i + '');\n        }\n        i++;\n        return block\n      }\n      default:\n        // unknown block-type\n        error.unexpectedCase();\n    }\n  }\n};\n\n/**\n * This function obfuscates the content of a Yjs update. This is useful to share\n * buggy Yjs documents while significantly limiting the possibility that a\n * developer can on the user. Note that it might still be possible to deduce\n * some information by analyzing the \"structure\" of the document or by analyzing\n * the typing behavior using the CRDT-related metadata that is still kept fully\n * intact.\n *\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */\nconst obfuscateUpdate = (update, opts) => convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV1, UpdateEncoderV1);\n\n/**\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */\nconst obfuscateUpdateV2 = (update, opts) => convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV2, UpdateEncoderV2);\n\n/**\n * @param {Uint8Array} update\n */\nconst convertUpdateFormatV1ToV2 = update => convertUpdateFormat(update, f.id, UpdateDecoderV1, UpdateEncoderV2);\n\n/**\n * @param {Uint8Array} update\n */\nconst convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, f.id, UpdateDecoderV2, UpdateEncoderV1);\n\nconst errorComputeChanges = 'You must not compute changes after the event-handler fired.';\n\n/**\n * @template {AbstractType<any>} T\n * YEvent describes the changes on a YType.\n */\nclass YEvent {\n  /**\n   * @param {T} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {T}\n     */\n    this.target = target;\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target;\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction;\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null;\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null;\n    /**\n     * @type {null | Array<{ insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null;\n    /**\n     * @type {Array<string|number>|null}\n     */\n    this._path = null;\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    return this._path || (this._path = getPathTo(this.currentTarget, this.target))\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      if (this.transaction.doc._transactionCleanups.length === 0) {\n        throw error.create(errorComputeChanges)\n      }\n      const keys = new Map();\n      const target = this.target;\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target));\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key));\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action;\n          let oldValue;\n          if (this.adds(item)) {\n            let prev = item.left;\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left;\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete';\n                oldValue = array.last(prev.content.getContent());\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update';\n                oldValue = array.last(prev.content.getContent());\n              } else {\n                action = 'add';\n                oldValue = undefined;\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete';\n              oldValue = array.last(/** @type {Item} */ item.content.getContent());\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue });\n        }\n      });\n      this._keys = keys;\n    }\n    return this._keys\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes;\n    if (changes === null) {\n      if (this.transaction.doc._transactionCleanups.length === 0) {\n        throw error.create(errorComputeChanges)\n      }\n      const target = this.target;\n      const added = set.create();\n      const deleted = set.create();\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = [];\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      };\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target));\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null;\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp);\n          }\n        };\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp();\n                lastOp = { delete: 0 };\n              }\n              lastOp.delete += item.length;\n              deleted.add(item);\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp();\n                lastOp = { insert: [] };\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent());\n              added.add(item);\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp();\n                lastOp = { retain: 0 };\n              }\n              lastOp.retain += item.length;\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp();\n        }\n      }\n      this._changes = changes;\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = [];\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub);\n    } else {\n      // parent is array-ish\n      let i = 0;\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start;\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++;\n        }\n        c = c.right;\n      }\n      path.unshift(i);\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent);\n  }\n  return path\n};\n\nconst maxSearchMarker = 80;\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0;\n\nclass ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true;\n    this.p = p;\n    this.index = index;\n    this.timestamp = globalSearchMarkerTimestamp++;\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++; };\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false;\n  marker.p = p;\n  p.marker = true;\n  marker.index = index;\n  marker.timestamp = globalSearchMarkerTimestamp++;\n};\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b);\n    overwriteMarker(marker, p, index);\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index);\n    searchMarker.push(pm);\n    return pm\n  }\n};\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nconst findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b);\n  let p = yarray._start;\n  let pindex = 0;\n  if (marker !== null) {\n    p = marker.p;\n    pindex = marker.index;\n    refreshMarkerTimestamp(marker); // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length;\n    }\n    p = p.right;\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left;\n    if (!p.deleted && p.countable) {\n      pindex -= p.length;\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left;\n    if (!p.deleted && p.countable) {\n      pindex -= p.length;\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex);\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n};\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nconst updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i];\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p;\n      p.marker = false;\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left;\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length;\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1);\n        continue\n      }\n      m.p = p;\n      p.marker = true;\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len);\n    }\n  }\n};\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nconst getTypeChildren = t => {\n  let s = t._start;\n  const arr = [];\n  while (s) {\n    arr.push(s);\n    s = s.right;\n  }\n  return arr\n};\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nconst callTypeObservers = (type, transaction, event) => {\n  const changedType = type;\n  const changedParentTypes = transaction.changedParentTypes;\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event);\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent);\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction);\n};\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nclass AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null;\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map();\n    /**\n     * @type {Item|null}\n     */\n    this._start = null;\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null;\n    this._length = 0;\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler();\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent<any>>,Transaction>}\n     */\n    this._dEH = createEventHandler();\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null;\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y;\n    this._item = item;\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder\n   */\n  _write (_encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start;\n    while (n !== null && n.deleted) {\n      n = n.right;\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} _parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, _parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0;\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f);\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f);\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f);\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f);\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start;\n  }\n  if (end < 0) {\n    end = type._length + end;\n  }\n  let len = end - start;\n  const cs = [];\n  let n = type._start;\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      if (c.length <= start) {\n        start -= c.length;\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i]);\n          len--;\n        }\n        start = 0;\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListToArray = type => {\n  const cs = [];\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i]);\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nconst typeListToArraySnapshot = (type, snapshot) => {\n  const cs = [];\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i]);\n      }\n    }\n    n = n.right;\n  }\n  return cs\n};\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nconst typeListForEach = (type, f) => {\n  let index = 0;\n  let n = type._start;\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent();\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type);\n      }\n    }\n    n = n.right;\n  }\n};\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nconst typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = [];\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type));\n  });\n  return result\n};\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nconst typeListCreateIterator = type => {\n  let n = type._start;\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null;\n  let currentContentIndex = 0;\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right;\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent();\n        currentContentIndex = 0;\n        n = n.right; // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++];\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null;\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n};\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nconst typeListGet = (type, index) => {\n  const marker = findMarker(type, index);\n  let n = type._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length;\n    }\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem;\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  const store = doc.store;\n  const right = referenceItem === null ? parent._start : referenceItem.right;\n  /**\n   * @type {Array<Object|Array<any>|number|null>}\n   */\n  let jsonContent = [];\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent));\n      left.integrate(transaction, 0);\n      jsonContent = [];\n    }\n  };\n  content.forEach(c => {\n    if (c === null) {\n      jsonContent.push(c);\n    } else {\n      switch (c.constructor) {\n        case Number:\n        case Object:\n        case Boolean:\n        case Array:\n        case String:\n          jsonContent.push(c);\n          break\n        default:\n          packJsonContent();\n          switch (c.constructor) {\n            case Uint8Array:\n            case ArrayBuffer:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))));\n              left.integrate(transaction, 0);\n              break\n            case Doc:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)));\n              left.integrate(transaction, 0);\n              break\n            default:\n              if (c instanceof AbstractType) {\n                left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c));\n                left.integrate(transaction, 0);\n              } else {\n                throw new Error('Unexpected content type in insert operation')\n              }\n          }\n      }\n    }\n  });\n  packJsonContent();\n};\n\nconst lengthExceeded = () => error.create('Length exceeded!');\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded()\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length);\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index;\n  const marker = findMarker(parent, index);\n  let n = parent._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev; // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0;\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n        }\n        break\n      }\n      index -= n.length;\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length);\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n};\n\n/**\n * Pushing content is special as we generally want to push after the last item. So we don't have to update\n * the serach marker.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nconst typeListPushGenerics = (transaction, parent, content) => {\n  // Use the marker with the highest index and iterate to the right.\n  const marker = (parent._searchMarker || []).reduce((maxMarker, currMarker) => currMarker.index > maxMarker.index ? currMarker : maxMarker, { index: 0, p: parent._start });\n  let n = marker.p;\n  if (n) {\n    while (n.right) {\n      n = n.right;\n    }\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nconst typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index;\n  const startLength = length;\n  const marker = findMarker(parent, index);\n  let n = parent._start;\n  if (marker !== null) {\n    n = marker.p;\n    index -= marker.index;\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index));\n      }\n      index -= n.length;\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length));\n      }\n      n.delete(transaction);\n      length -= n.length;\n    }\n    n = n.right;\n  }\n  if (length > 0) {\n    throw lengthExceeded()\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */);\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nconst typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key);\n  if (c !== undefined) {\n    c.delete(transaction);\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nconst typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null;\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  let content;\n  if (value == null) {\n    content = new ContentAny([value]);\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value]);\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value));\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value));\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value);\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0);\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nconst typeMapGet = (parent, key) => {\n  const val = parent._map.get(key);\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nconst typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {};\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1];\n    }\n  });\n  return res\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst typeMapHas = (parent, key) => {\n  const val = parent._map.get(key);\n  return val !== undefined && !val.deleted\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nconst typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null;\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left;\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n};\n\n/**\n * @param {AbstractType<any>} parent\n * @param {Snapshot} snapshot\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nconst typeMapGetAllSnapshot = (parent, snapshot) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {};\n  parent._map.forEach((value, key) => {\n    /**\n     * @type {Item|null}\n     */\n    let v = value;\n    while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n      v = v.left;\n    }\n    if (v !== null && isVisible(v, snapshot)) {\n      res[key] = v.content.getContent()[v.length - 1];\n    }\n  });\n  return res\n};\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nconst createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted);\n\n/**\n * @module YArray\n */\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n * @extends YEvent<YArray<T>>\n */\nclass YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction);\n    this._transaction = transaction;\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nclass YArray extends AbstractType {\n  constructor () {\n    super();\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = [];\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = [];\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template {Object<string,any>|Array<any>|number|null|string|Uint8Array} T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    /**\n     * @type {YArray<T>}\n     */\n    const a = new YArray();\n    a.push(items);\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent));\n    this._prelimContent = null;\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  clone () {\n    /**\n     * @type {YArray<T>}\n     */\n    const arr = new YArray();\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? /** @type {typeof el} */ (el.clone()) : el\n    ));\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs);\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction));\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, /** @type {any} */ (content));\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   *\n   * @todo Use the following implementation in all types.\n   */\n  push (content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListPushGenerics(transaction, this, /** @type {any} */ (content));\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).push(...content);\n    }\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content);\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length);\n      });\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length);\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f);\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nconst readYArray = _decoder => new YArray();\n\n/**\n * @template T\n * @extends YEvent<YMap<T>>\n * Event that describes the changes on a YMap.\n */\nclass YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction);\n    this.keysChanged = subs;\n  }\n}\n\n/**\n * @template MapType\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<MapType>>\n * @implements {Iterable<[string, MapType]>}\n */\nclass YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super();\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null;\n\n    if (entries === undefined) {\n      this._prelimContent = new Map();\n    } else {\n      this._prelimContent = new Map(entries);\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value);\n    });\n    this._prelimContent = null;\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  clone () {\n    /**\n     * @type {YMap<MapType>}\n     */\n    const map = new YMap();\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? /** @type {typeof value} */ (value.clone()) : value);\n    });\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs));\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,MapType>}\n     */\n    const map = {};\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1];\n        map[key] = v instanceof AbstractType ? v.toJSON() : v;\n      }\n    });\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<MapType>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<[string, MapType]>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => /** @type {any} */ ([v[0], v[1].content.getContent()[v[1].length - 1]]))\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this);\n      }\n    });\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<[string, MapType]>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key);\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   * @template {MapType} VAL\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {VAL} value The value of the element to add\n   * @return {VAL}\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, /** @type {any} */ (value));\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value);\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {MapType|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (_value, key, map) {\n          typeMapDelete(transaction, map, key);\n        });\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear();\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nconst readYMap = _decoder => new YMap();\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b));\n\nclass ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left;\n    this.right = right;\n    this.index = index;\n    this.currentAttributes = currentAttributes;\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase();\n    }\n    switch (this.right.content.constructor) {\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content));\n        }\n        break\n      default:\n        if (!this.right.deleted) {\n          this.index += this.right.length;\n        }\n        break\n    }\n    this.left = this.right;\n    this.right = this.right.right;\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content));\n        }\n        break\n      default:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count));\n          }\n          pos.index += pos.right.length;\n          count -= pos.right.length;\n        }\n        break\n    }\n    pos.left = pos.right;\n    pos.right = pos.right.right;\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index) => {\n  const currentAttributes = new Map();\n  const marker = findMarker(parent, index);\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes);\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes);\n    return findNextPosition(transaction, pos, index)\n  }\n};\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key);\n    }\n    currPos.forward();\n  }\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  negatedAttributes.forEach((val, key) => {\n    const left = currPos.left;\n    const right = currPos.right;\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n    nextFormat.integrate(transaction, 0);\n    currPos.right = nextFormat;\n    currPos.forward();\n  });\n};\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format;\n  if (value === null) {\n    currentAttributes.delete(key);\n  } else {\n    currentAttributes.set(key, value);\n  }\n};\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) ; else {\n      break\n    }\n    currPos.forward();\n  }\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  const negatedAttributes = new Map();\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key];\n    const currentVal = currPos.currentAttributes.get(key) || null;\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal);\n      const { left, right } = currPos;\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val));\n      currPos.right.integrate(transaction, 0);\n      currPos.forward();\n    }\n  }\n  return negatedAttributes\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object|AbstractType<any>} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((_val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null;\n    }\n  });\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  minimizeAttributeChanges(currPos, attributes);\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : (text instanceof AbstractType ? new ContentType(text) : new ContentEmbed(text));\n  let { left, right, index } = currPos;\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength());\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content);\n  right.integrate(transaction, 0);\n  currPos.right = right;\n  currPos.index = index;\n  currPos.forward();\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc;\n  const ownClientId = doc.clientID;\n  minimizeAttributeChanges(currPos, attributes);\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  // also check the attributes after the first non-format as we do not want to insert redundant negated attributes there\n  // eslint-disable-next-line no-labels\n  iterationLoop: while (\n    currPos.right !== null &&\n    (length > 0 ||\n      (\n        negatedAttributes.size > 0 &&\n        (currPos.right.deleted || currPos.right.content.constructor === ContentFormat)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content);\n          const attr = attributes[key];\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key);\n            } else {\n              if (length === 0) {\n                // no need to further extend negatedAttributes\n                // eslint-disable-next-line no-labels\n                break iterationLoop\n              }\n              negatedAttributes.set(key, value);\n            }\n            currPos.right.delete(transaction);\n          } else {\n            currPos.currentAttributes.set(key, value);\n          }\n          break\n        }\n        default:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n          }\n          length -= currPos.right.length;\n          break\n      }\n    }\n    currPos.forward();\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = '';\n    for (; length > 0; length--) {\n      newlines += '\\n';\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines));\n    currPos.right.integrate(transaction, 0);\n    currPos.forward();\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} curr exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} currAttributes\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, curr, startAttributes, currAttributes) => {\n  /**\n   * @type {Item|null}\n   */\n  let end = start;\n  /**\n   * @type {Map<string,ContentFormat>}\n   */\n  const endFormats = map.create();\n  while (end && (!end.countable || end.deleted)) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      const cf = /** @type {ContentFormat} */ (end.content);\n      endFormats.set(cf.key, cf);\n    }\n    end = end.right;\n  }\n  let cleanups = 0;\n  let reachedCurr = false;\n  while (start !== end) {\n    if (curr === start) {\n      reachedCurr = true;\n    }\n    if (!start.deleted) {\n      const content = start.content;\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content);\n          const startAttrValue = startAttributes.get(key) || null;\n          if (endFormats.get(key) !== content || startAttrValue === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction);\n            cleanups++;\n            if (!reachedCurr && (currAttributes.get(key) || null) === value && startAttrValue !== value) {\n              if (startAttrValue === null) {\n                currAttributes.delete(key);\n              } else {\n                currAttributes.set(key, startAttrValue);\n              }\n            }\n          }\n          if (!reachedCurr && !start.deleted) {\n            updateCurrentAttributes(currAttributes, /** @type {ContentFormat} */ (content));\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right);\n  }\n  return cleanups\n};\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || !item.right.countable)) {\n    item = item.right;\n  }\n  const attrs = new Set();\n  // iterate back until a content item is found\n  while (item && (item.deleted || !item.countable)) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key;\n      if (attrs.has(key)) {\n        item.delete(transaction);\n      } else {\n        attrs.add(key);\n      }\n    }\n    item = item.left;\n  }\n};\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nconst cleanupYTextFormatting = type => {\n  let res = 0;\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start);\n    let end = type._start;\n    let startAttributes = map.create();\n    const currentAttributes = map.copy(startAttributes);\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content));\n            break\n          default:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes);\n            startAttributes = map.copy(currentAttributes);\n            start = end;\n            break\n        }\n      }\n      end = end.right;\n    }\n  });\n  return res\n};\n\n/**\n * This will be called by the transction once the event handlers are called to potentially cleanup\n * formatting attributes.\n *\n * @param {Transaction} transaction\n */\nconst cleanupYTextAfterTransaction = transaction => {\n  /**\n   * @type {Set<YText>}\n   */\n  const needFullCleanup = new Set();\n  // check if another formatting item was inserted\n  const doc = transaction.doc;\n  for (const [client, afterClock] of transaction.afterState.entries()) {\n    const clock = transaction.beforeState.get(client) || 0;\n    if (afterClock === clock) {\n      continue\n    }\n    iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n      if (\n        !item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat && item.constructor !== GC\n      ) {\n        needFullCleanup.add(/** @type {any} */ (item).parent);\n      }\n    });\n  }\n  // cleanup in a new transaction\n  transact(doc, (t) => {\n    iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n      if (item instanceof GC || !(/** @type {YText} */ (item.parent)._hasFormatting) || needFullCleanup.has(/** @type {YText} */ (item.parent))) {\n        return\n      }\n      const parent = /** @type {YText} */ (item.parent);\n      if (item.content.constructor === ContentFormat) {\n        needFullCleanup.add(parent);\n      } else {\n        // If no formatting attribute was inserted or deleted, we can make due with contextless\n        // formatting cleanups.\n        // Contextless: it is not necessary to compute currentAttributes for the affected position.\n        cleanupContextlessFormattingGap(t, item);\n      }\n    });\n    // If a formatting item was inserted, we simply clean the whole type.\n    // We need to compute currentAttributes for the current position anyway.\n    for (const yText of needFullCleanup) {\n      cleanupYTextFormatting(yText);\n    }\n  });\n};\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length;\n  const startAttrs = map.copy(currPos.currentAttributes);\n  const start = currPos.right;\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentType:\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length));\n          }\n          length -= currPos.right.length;\n          currPos.right.delete(transaction);\n          break\n      }\n    }\n    currPos.forward();\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, currPos.currentAttributes);\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent);\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length);\n  }\n  return currPos\n};\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * @extends YEvent<YText>\n * Event that describes the changes on a YText type.\n */\nclass YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction);\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false;\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set();\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true;\n      } else {\n        this.keysChanged.add(sub);\n      }\n    });\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string|AbstractType<any>|object, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      };\n      this._changes = changes;\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc);\n      /**\n       * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = [];\n      transact(y, transaction => {\n        const currentAttributes = new Map(); // saves all current attributes for insert\n        const oldAttributes = new Map();\n        let item = this.target._start;\n        /**\n         * @type {string?}\n         */\n        let action = null;\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}; // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = '';\n        let retain = 0;\n        let deleteLen = 0;\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op = null;\n            switch (action) {\n              case 'delete':\n                if (deleteLen > 0) {\n                  op = { delete: deleteLen };\n                }\n                deleteLen = 0;\n                break\n              case 'insert':\n                if (typeof insert === 'object' || insert.length > 0) {\n                  op = { insert };\n                  if (currentAttributes.size > 0) {\n                    op.attributes = {};\n                    currentAttributes.forEach((value, key) => {\n                      if (value !== null) {\n                        op.attributes[key] = value;\n                      }\n                    });\n                  }\n                }\n                insert = '';\n                break\n              case 'retain':\n                if (retain > 0) {\n                  op = { retain };\n                  if (!object.isEmpty(attributes)) {\n                    op.attributes = object.assign({}, attributes);\n                  }\n                }\n                retain = 0;\n                break\n            }\n            if (op) delta.push(op);\n            action = null;\n          }\n        };\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentType:\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp();\n                  action = 'insert';\n                  insert = item.content.getContent()[0];\n                  addOp();\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp();\n                  action = 'delete';\n                }\n                deleteLen += 1;\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp();\n                  action = 'retain';\n                }\n                retain += 1;\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp();\n                    action = 'insert';\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str;\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp();\n                  action = 'delete';\n                }\n                deleteLen += item.length;\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp();\n                  action = 'retain';\n                }\n                retain += item.length;\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content);\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null;\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp();\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key];\n                    } else {\n                      attributes[key] = value;\n                    }\n                  } else if (value !== null) {\n                    item.delete(transaction);\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value);\n                const curVal = currentAttributes.get(key) || null;\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp();\n                  }\n                  attributes[key] = curVal;\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value);\n                const attr = attributes[key];\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp();\n                    }\n                    if (value === null) {\n                      delete attributes[key];\n                    } else {\n                      attributes[key] = value;\n                    }\n                  } else if (attr !== null) { // this will be cleaned up automatically by the contextless cleanup function\n                    item.delete(transaction);\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp();\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content));\n              }\n              break\n            }\n          }\n          item = item.right;\n        }\n        addOp();\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1];\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop();\n          } else {\n            break\n          }\n        }\n      });\n      this._delta = delta;\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nclass YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super();\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : [];\n    /**\n     * @type {Array<ArraySearchMarker>|null}\n     */\n    this._searchMarker = [];\n    /**\n     * Whether this YText contains formatting attributes.\n     * This flag is updated when a formatting item is integrated (see ContentFormat.integrate)\n     */\n    this._hasFormatting = false;\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f());\n    } catch (e) {\n      console.error(e);\n    }\n    this._pending = null;\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText();\n    text.applyDelta(this.toDelta());\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs);\n    const event = new YTextEvent(this, transaction, parentSubs);\n    callTypeObservers(this, transaction, event);\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local && this._hasFormatting) {\n      transaction._needFormattingCleanup = true;\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = '';\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start;\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str;\n      }\n      n = n.right;\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  opts\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map());\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i];\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert;\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {});\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {});\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete);\n          }\n        }\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta));\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = [];\n    const currentAttributes = new Map();\n    const doc = /** @type {Doc} */ (this.doc);\n    let str = '';\n    let n = this._start;\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {};\n        let addAttributes = false;\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true;\n          attributes[key] = value;\n        });\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str };\n        if (addAttributes) {\n          op.attributes = attributes;\n        }\n        ops.push(op);\n        str = '';\n      }\n    }\n    const computeDelta = () => {\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange');\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'removed') {\n                  packStr();\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' });\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'added') {\n                  packStr();\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' });\n                }\n              } else if (cur !== undefined) {\n                packStr();\n                currentAttributes.delete('ychange');\n              }\n              str += /** @type {ContentString} */ (n.content).str;\n              break\n            }\n            case ContentType:\n            case ContentEmbed: {\n              packStr();\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: n.content.getContent()[0]\n              };\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({});\n                op.attributes = attrs;\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value;\n                });\n              }\n              ops.push(op);\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr();\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content));\n              }\n              break\n          }\n        }\n        n = n.right;\n      }\n      packStr();\n    };\n    if (snapshot || prevSnapshot) {\n      // snapshots are merged again after the transaction, so we need to keep the\n      // transaction alive until we are done\n      transact(doc, transaction => {\n        if (snapshot) {\n          splitSnapshotAffectedStructs(transaction, snapshot);\n        }\n        if (prevSnapshot) {\n          splitSnapshotAffectedStructs(transaction, prevSnapshot);\n        }\n        computeDelta();\n      }, 'cleanup');\n    } else {\n      computeDelta();\n    }\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        if (!attributes) {\n          attributes = {};\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v; });\n        }\n        insertText(transaction, this, pos, text, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes));\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object | AbstractType<any>} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes = {}) {\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        insertText(transaction, this, pos, embed, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes));\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index), length);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length));\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc;\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index);\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes));\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName));\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue);\n      });\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue));\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes () {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nconst readYText = _decoder => new YText();\n\n/**\n * @module YXml\n */\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nclass YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f;\n    this._root = root;\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start);\n    this._firstCall = true;\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode;\n    let type = n && n.content && /** @type {any} */ (n.content).type;\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type;\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start;\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right;\n              break\n            } else if (n.parent === this._root) {\n              n = null;\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item;\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false;\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n;\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nclass YXmlFragment extends AbstractType {\n  constructor () {\n    super();\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = [];\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first;\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item);\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent));\n    this._prelimContent = null;\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment();\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item));\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase();\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query);\n    const next = iterator.next();\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase();\n    // @ts-ignore\n    return array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction));\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment();\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this);\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null);\n    });\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content);\n      });\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref;\n        typeListInsertGenericsAfter(transaction, this, refItem, content);\n      });\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent);\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1;\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content);\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length);\n      });\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length);\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content);\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content);\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Executes a provided function on once on overy child element.\n   *\n   * @param {function(YXmlElement|YXmlText,number, typeof self):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f);\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nconst readYXmlFragment = _decoder => new YXmlFragment();\n\n/**\n * @typedef {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} ValueTypes\n */\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n *\n * @template {{ [key: string]: ValueTypes }} [KV={ [key: string]: string }]\n */\nclass YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super();\n    this.nodeName = nodeName;\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map();\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value);\n    });\n    this._prelimAttrs = null;\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * @return {YXmlElement<KV>}\n   */\n  clone () {\n    /**\n     * @type {YXmlElement<KV>}\n     */\n    const el = new YXmlElement(this.nodeName);\n    const attrs = this.getAttributes();\n    object.forEach(attrs, (value, key) => {\n      if (typeof value === 'string') {\n        el.setAttribute(key, value);\n      }\n    });\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item));\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes();\n    const stringBuilder = [];\n    const keys = [];\n    for (const key in attrs) {\n      keys.push(key);\n    }\n    keys.sort();\n    const keysLen = keys.length;\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i];\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"');\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase();\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : '';\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {string} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName);\n      });\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName);\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that is to be set.\n   * @param {KV[KEY]} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue);\n      });\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue);\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {KV[KEY]|undefined} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {string} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {{ [Key in Extract<keyof KV,string>]?: KV[Key]}} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return /** @type {any} */ (snapshot ? typeMapGetAllSnapshot(this, snapshot) : typeMapGetAll(this))\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName);\n    const attrs = this.getAttributes();\n    for (const key in attrs) {\n      const value = attrs[key];\n      if (typeof value === 'string') {\n        dom.setAttribute(key, value);\n      }\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding));\n    });\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID);\n    encoder.writeKey(this.nodeName);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nconst readYXmlElement = decoder => new YXmlElement(decoder.readKey());\n\n/**\n * @extends YEvent<YXmlElement|YXmlText|YXmlFragment>\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nclass YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction);\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false;\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set();\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true;\n      } else {\n        this.attributesChanged.add(sub);\n      }\n    });\n  }\n}\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nclass YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super();\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName;\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName);\n    this.forEach((value, key) => {\n      el.set(key, value);\n    });\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName];\n    let dom;\n    if (hook !== undefined) {\n      dom = hook.createDom(this);\n    } else {\n      dom = document.createElement(this.hookName);\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName);\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID);\n    encoder.writeKey(this.hookName);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nconst readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey());\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nclass YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null;\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText();\n    text.applyDelta(this.toDelta());\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString());\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this);\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = [];\n      for (const nodeName in delta.attributes) {\n        const attrs = [];\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] });\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1);\n        nestedNodes.push({ nodeName, attrs });\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1);\n      // now convert to dom string\n      let str = '';\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i];\n        str += `<${node.nodeName}`;\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j];\n          str += ` ${attr.key}=\"${attr.value}\"`;\n        }\n        str += '>';\n      }\n      str += delta.insert;\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`;\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nconst readYXmlText = decoder => new YXmlText();\n\nclass AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id;\n    this.length = length;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n\nconst structGCRefNumber = 0;\n\n/**\n * @private\n */\nclass GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset;\n      this.length -= offset;\n    }\n    addStruct(transaction.doc.store, this);\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber);\n    encoder.writeLen(this.length - offset);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n\nclass ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nconst readContentBinary = decoder => new ContentBinary(decoder.readBuf());\n\nclass ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset);\n    this.len = offset;\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len);\n    item.markDeleted();\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nconst readContentDeleted = decoder => new ContentDeleted(decoder.readLen());\n\n/**\n * @param {string} guid\n * @param {Object<string, any>} opts\n */\nconst createDocFromOpts = (guid, opts) => new Doc({ guid, ...opts, shouldLoad: opts.shouldLoad || opts.autoLoad || false });\n\n/**\n * @private\n */\nclass ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.');\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc;\n    /**\n     * @type {any}\n     */\n    const opts = {};\n    this.opts = opts;\n    if (!doc.gc) {\n      opts.gc = false;\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true;\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta;\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(createDocFromOpts(this.doc.guid, this.opts))\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item;\n    transaction.subdocsAdded.add(this.doc);\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc);\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc);\n    } else {\n      transaction.subdocsRemoved.add(this.doc);\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid);\n    encoder.writeAny(this.opts);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nconst readContentDoc = decoder => new ContentDoc(createDocFromOpts(decoder.readString(), decoder.readAny()));\n\n/**\n * @private\n */\nclass ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nconst readContentEmbed = decoder => new ContentEmbed(decoder.readJSON());\n\n/**\n * @private\n */\nclass ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} _offset\n   * @return {ContentFormat}\n   */\n  splice (_offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} _right\n   * @return {boolean}\n   */\n  mergeWith (_right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   * @param {Item} item\n   */\n  integrate (_transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    const p = /** @type {YText} */ (item.parent);\n    p._searchMarker = null;\n    p._hasFormatting = true;\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key);\n    encoder.writeJSON(this.value);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nconst readContentFormat = decoder => new ContentFormat(decoder.readKey(), decoder.readJSON());\n\n/**\n * @private\n */\nclass ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset));\n    this.arr = this.arr.slice(0, offset);\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr);\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length;\n    encoder.writeLen(len - offset);\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i];\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c));\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nconst readContentJSON = decoder => {\n  const len = decoder.readLen();\n  const cs = [];\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString();\n    if (c === 'undefined') {\n      cs.push(undefined);\n    } else {\n      cs.push(JSON.parse(c));\n    }\n  }\n  return new ContentJSON(cs)\n};\n\nclass ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset));\n    this.arr = this.arr.slice(0, offset);\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr);\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length;\n    encoder.writeLen(len - offset);\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i];\n      encoder.writeAny(c);\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nconst readContentAny = decoder => {\n  const len = decoder.readLen();\n  const cs = [];\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny());\n  }\n  return new ContentAny(cs)\n};\n\n/**\n * @private\n */\nclass ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset));\n    this.str = this.str.slice(0, offset);\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1);\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�';\n      // replace right as well\n      right.str = '�' + right.str.slice(1);\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset));\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nconst readContentString = decoder => new ContentString(decoder.readString());\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nconst typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n];\n\nconst YArrayRefID = 0;\nconst YMapRefID = 1;\nconst YTextRefID = 2;\nconst YXmlElementRefID = 3;\nconst YXmlFragmentRefID = 4;\nconst YXmlHookRefID = 5;\nconst YXmlTextRefID = 6;\n\n/**\n * @private\n */\nclass ContentType {\n  /**\n   * @param {AbstractType<any>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type;\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start;\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction);\n      } else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) {\n        // This will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item);\n      }\n      item = item.right;\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction);\n      } else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) {\n        // same as above\n        transaction._mergeStructs.push(item);\n      }\n    });\n    transaction.changed.delete(this.type);\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start;\n    while (item !== null) {\n      item.gc(store, true);\n      item = item.right;\n    }\n    this.type._start = null;\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true);\n        item = item.left;\n      }\n    });\n    this.type._map = new Map();\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder);\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nconst readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder));\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nconst followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id;\n  let diff = 0;\n  let item;\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff);\n    }\n    item = getItem(store, nextID);\n    diff = nextID.clock - item.id.clock;\n    nextID = item.redone;\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n};\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nconst keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep;\n    item = /** @type {AbstractType<any>} */ (item.parent)._item;\n  }\n};\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nconst splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id;\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  );\n  if (leftItem.deleted) {\n    rightItem.markDeleted();\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true;\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff);\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem;\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem;\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem);\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem);\n  }\n  leftItem.length = diff;\n  return rightItem\n};\n\n/**\n * @param {Array<StackItem>} stack\n * @param {ID} id\n */\nconst isDeletedByUndoStack = (stack, id) => array.some(stack, /** @param {StackItem} s */ s => isDeleted(s.deletions, id));\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n * @param {DeleteSet} itemsToDelete\n * @param {boolean} ignoreRemoteMapChanges\n * @param {import('../utils/UndoManager.js').UndoManager} um\n *\n * @return {Item|null}\n *\n * @private\n */\nconst redoItem = (transaction, item, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) => {\n  const doc = transaction.doc;\n  const store = doc.store;\n  const ownClientID = doc.clientID;\n  const redone = item.redone;\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item;\n  /**\n   * @type {Item|null}\n   */\n  let left = null;\n  /**\n   * @type {Item|null}\n   */\n  let right;\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true) {\n    // try to undo parent if it will be undone anyway\n    if (parentItem.redone === null && (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) === null)) {\n      return null\n    }\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone);\n    }\n  }\n  const parentType = parentItem === null ? /** @type {AbstractType<any>} */ (item.parent) : /** @type {ContentType} */ (parentItem.content).type;\n\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left;\n    right = item;\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left;\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone);\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace;\n        break\n      }\n      left = left.left;\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right;\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone);\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace;\n        break\n      }\n      right = right.right;\n    }\n  } else {\n    right = null;\n    if (item.right && !ignoreRemoteMapChanges) {\n      left = item;\n      // Iterate right while right is in itemsToDelete\n      // If it is intended to delete right while item is redone, we can expect that item should replace right.\n      while (left !== null && left.right !== null && (left.right.redone || isDeleted(itemsToDelete, left.right.id) || isDeletedByUndoStack(um.undoStack, left.right.id) || isDeletedByUndoStack(um.redoStack, left.right.id))) {\n        left = left.right;\n        // follow redone\n        while (left.redone) left = getItemCleanStart(transaction, left.redone);\n      }\n      if (left && left.right !== null) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    } else {\n      left = parentType._map.get(item.parentSub) || null;\n    }\n  }\n  const nextClock = getState(store, ownClientID);\n  const nextId = createID(ownClientID, nextClock);\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentType,\n    item.parentSub,\n    item.content.copy()\n  );\n  item.redone = nextId;\n  keepItem(redoneItem, true);\n  redoneItem.integrate(transaction, 0);\n  return redoneItem\n};\n\n/**\n * Abstract class that represents any content.\n */\nclass Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength());\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin;\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left;\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right;\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin;\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent;\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub;\n    /**\n     * If this type's effect is redone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null;\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content;\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0;\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4;\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1;\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3;\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3;\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin);\n      this.origin = this.left.lastId;\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin);\n      this.rightOrigin = this.right.id;\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null;\n    } else if (!this.parent) {\n      // only set parent if this shouldn't be garbage collected\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent;\n        this.parentSub = this.left.parentSub;\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent;\n        this.parentSub = this.right.parentSub;\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent);\n      if (parentItem.constructor === GC) {\n        this.parent = null;\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type;\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset;\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1));\n      this.origin = this.left.lastId;\n      this.content = this.content.splice(offset);\n      this.length -= offset;\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left;\n\n        /**\n         * @type {Item|null}\n         */\n        let o;\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right;\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null;\n          while (o !== null && o.left !== null) {\n            o = o.left;\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start;\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set();\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set();\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o);\n          conflictingItems.add(o);\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o;\n              conflictingItems.clear();\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o;\n              conflictingItems.clear();\n            }\n          } else {\n            break\n          }\n          o = o.right;\n        }\n        this.left = left;\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right;\n        this.right = right;\n        this.left.right = this;\n      } else {\n        let r;\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null;\n          while (r !== null && r.left !== null) {\n            r = r.left;\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this;\n        }\n        this.right = r;\n      }\n      if (this.right !== null) {\n        this.right.left = this;\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this);\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction);\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length;\n      }\n      addStruct(transaction.doc.store, this);\n      this.content.integrate(transaction, this);\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub);\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction);\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0);\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right;\n    while (n !== null && n.deleted) {\n      n = n.right;\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left;\n    while (n !== null && n.deleted) {\n      n = n.left;\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker;\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this;\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length;\n            }\n          }\n        });\n      }\n      if (right.keep) {\n        this.keep = true;\n      }\n      this.right = right.right;\n      if (this.right !== null) {\n        this.right.left = this;\n      }\n      this.length += right.length;\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent);\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length;\n      }\n      this.markDeleted();\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length);\n      addChangedTypeToTransaction(transaction, parent, this.parentSub);\n      this.content.delete(transaction);\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store);\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length));\n    } else {\n      this.content = new ContentDeleted(this.length);\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin;\n    const rightOrigin = this.rightOrigin;\n    const parentSub = this.parentSub;\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6); // parentSub is non-null\n    encoder.writeInfo(info);\n    if (origin !== null) {\n      encoder.writeLeftID(origin);\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin);\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent);\n      if (parent._item !== undefined) {\n        const parentItem = parent._item;\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent);\n          encoder.writeParentInfo(true); // write parentYKey\n          encoder.writeString(ykey);\n        } else {\n          encoder.writeParentInfo(false); // write parent id\n          encoder.writeLeftID(parentItem.id);\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true); // write parentYKey\n        encoder.writeString(parent);\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false); // write parent id\n        encoder.writeLeftID(parent);\n      } else {\n        error.unexpectedCase();\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub);\n      }\n    }\n    this.content.write(encoder, offset);\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nconst readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder);\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nconst contentRefs = [\n  () => { error.unexpectedCase(); }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase(); } // 10 - Skip is not ItemContent\n];\n\nconst structSkipRefNumber = 10;\n\n/**\n * @private\n */\nclass Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length;\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase();\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber);\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset);\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n\n/** eslint-env browser */\n\nconst glo = /** @type {any} */ (typeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof window !== 'undefined'\n    ? window\n    // @ts-ignore\n    : typeof global !== 'undefined' ? global : {});\n\nconst importIdentifier = '__ $YJS$ __';\n\nif (glo[importIdentifier] === true) {\n  /**\n   * Dear reader of this message. Please take this seriously.\n   *\n   * If you see this message, make sure that you only import one version of Yjs. In many cases,\n   * your package manager installs two versions of Yjs that are used by different packages within your project.\n   * Another reason for this message is that some parts of your project use the commonjs version of Yjs\n   * and others use the EcmaScript version of Yjs.\n   *\n   * This often leads to issues that are hard to debug. We often need to perform constructor checks,\n   * e.g. `struct instanceof GC`. If you imported different versions of Yjs, it is impossible for us to\n   * do the constructor checks anymore - which might break the CRDT algorithm.\n   *\n   * https://github.com/yjs/yjs/issues/438\n   */\n  console.error('Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438');\n}\nglo[importIdentifier] = true;\n\nexport { AbsolutePosition, AbstractConnector, AbstractStruct, AbstractType, YArray as Array, ContentAny, ContentBinary, ContentDeleted, ContentDoc, ContentEmbed, ContentFormat, ContentJSON, ContentString, ContentType, Doc, GC, ID, Item, YMap as Map, PermanentUserData, RelativePosition, Skip, Snapshot, YText as Text, Transaction, UndoManager, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, YXmlElement as XmlElement, YXmlFragment as XmlFragment, YXmlHook as XmlHook, YXmlText as XmlText, YArrayEvent, YEvent, YMapEvent, YTextEvent, YXmlEvent, applyUpdate, applyUpdateV2, cleanupYTextFormatting, compareIDs, compareRelativePositions, convertUpdateFormatV1ToV2, convertUpdateFormatV2ToV1, createAbsolutePositionFromRelativePosition, createDeleteSet, createDeleteSetFromStructStore, createDocFromSnapshot, createID, createRelativePositionFromJSON, createRelativePositionFromTypeIndex, createSnapshot, decodeRelativePosition, decodeSnapshot, decodeSnapshotV2, decodeStateVector, decodeUpdate, decodeUpdateV2, diffUpdate, diffUpdateV2, emptySnapshot, encodeRelativePosition, encodeSnapshot, encodeSnapshotV2, encodeStateAsUpdate, encodeStateAsUpdateV2, encodeStateVector, encodeStateVectorFromUpdate, encodeStateVectorFromUpdateV2, equalDeleteSets, equalSnapshots, findIndexSS, findRootTypeKey, getItem, getState, getTypeChildren, isDeleted, isParentOf, iterateDeletedStructs, logType, logUpdate, logUpdateV2, mergeUpdates, mergeUpdatesV2, obfuscateUpdate, obfuscateUpdateV2, parseUpdateMeta, parseUpdateMetaV2, readUpdate, readUpdateV2, relativePositionToJSON, snapshot, snapshotContainsUpdate, transact, tryGc, typeListToArraySnapshot, typeMapGetAllSnapshot, typeMapGetSnapshot };\n//# sourceMappingURL=yjs.mjs.map\n","\nimport { Observable } from 'lib0/observable'\n\nimport {\n  Doc // eslint-disable-line\n} from '../internals.js'\n\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {Observable<any>}\n */\nexport class AbstractConnector extends Observable {\n  /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */\n  constructor (ydoc, awareness) {\n    super()\n    this.doc = ydoc\n    this.awareness = awareness\n  }\n}\n","\nimport {\n  findIndexSS,\n  getState,\n  splitItem,\n  iterateStructs,\n  UpdateEncoderV2,\n  DSDecoderV1, DSEncoderV1, DSDecoderV2, DSEncoderV2, Item, GC, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nimport * as array from 'lib0/array'\nimport * as math from 'lib0/math'\nimport * as map from 'lib0/map'\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\n\nexport class DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock\n    /**\n     * @type {number}\n     */\n    this.len = len\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nexport class DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map()\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid))\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i]\n      iterateStructs(transaction, structs, del.clock, del.len, f)\n    }\n  })\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nexport const findIndexDS = (dis, clock) => {\n  let left = 0\n  let right = dis.length - 1\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2)\n    const mid = dis[midindex]\n    const midclock = mid.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client)\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n}\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock)\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1]\n      const right = dels[i]\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock)\n      } else {\n        if (j < i) {\n          dels[j] = right\n        }\n        j++\n      }\n    }\n    dels.length = j\n  })\n}\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nexport const mergeDeleteSets = dss => {\n  const merged = new DeleteSet()\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice()\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || [])\n        }\n        merged.clients.set(client, dels)\n      }\n    })\n  }\n  sortAndMergeDeleteSet(merged)\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([])).push(new DeleteItem(clock, length))\n}\n\nexport const createDeleteSet = () => new DeleteSet()\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nexport const createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet()\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = []\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i]\n      if (struct.deleted) {\n        const clock = struct.id.clock\n        let len = struct.length\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len))\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems)\n    }\n  })\n  return ds\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size)\n\n  // Ensure that the delete set is written in a deterministic order\n  array.from(ds.clients.entries())\n    .sort((a, b) => b[0] - a[0])\n    .forEach(([client, dsitems]) => {\n      encoder.resetDsCurVal()\n      encoding.writeVarUint(encoder.restEncoder, client)\n      const len = dsitems.length\n      encoding.writeVarUint(encoder.restEncoder, len)\n      for (let i = 0; i < len; i++) {\n        const item = dsitems[i]\n        encoder.writeDsClock(item.clock)\n        encoder.writeDsLen(item.len)\n      }\n    })\n}\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nexport const readDeleteSet = decoder => {\n  const ds = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([]))\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()))\n      }\n    }\n  }\n  return ds\n}\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nexport const readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    const structs = store.clients.get(client) || []\n    const state = getState(store, client)\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock()\n      const clockEnd = clock + decoder.readDsLen()\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state)\n        }\n        let index = findIndexSS(structs, clock)\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index]\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n          index++ // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++]\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock))\n              }\n              struct.delete(transaction)\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock)\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2()\n    encoding.writeVarUint(ds.restEncoder, 0) // encode 0 structs\n    writeDeleteSet(ds, unappliedDS)\n    return ds.toUint8Array()\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds1\n * @param {DeleteSet} ds2\n */\nexport const equalDeleteSets = (ds1, ds2) => {\n  if (ds1.clients.size !== ds2.clients.size) return false\n  for (const [client, deleteItems1] of ds1.clients.entries()) {\n    const deleteItems2 = /** @type {Array<import('../internals.js').DeleteItem>} */ (ds2.clients.get(client))\n    if (deleteItems2 === undefined || deleteItems1.length !== deleteItems2.length) return false\n    for (let i = 0; i < deleteItems1.length; i++) {\n      const di1 = deleteItems1[i]\n      const di2 = deleteItems2[i]\n      if (di1.clock !== di2.clock || di1.len !== di2.len) {\n        return false\n      }\n    }\n  }\n  return true\n}\n","/**\n * @module Y\n */\n\nimport {\n  StructStore,\n  AbstractType,\n  YArray,\n  YText,\n  YMap,\n  YXmlFragment,\n  transact,\n  ContentDoc, Item, Transaction, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport { Observable } from 'lib0/observable'\nimport * as random from 'lib0/random'\nimport * as map from 'lib0/map'\nimport * as array from 'lib0/array'\nimport * as promise from 'lib0/promise'\n\nexport const generateNewClientId = random.uint32\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {string | null} [DocOpts.collectionid] Associate this document with a collection. This only plays a role if your provider has a concept of collection.\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n * @property {boolean} [DocOpts.shouldLoad] Whether the document should be synced by the provider now. This is toggled to true when you call ydoc.load()\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nexport class Doc extends Observable {\n  /**\n   * @param {DocOpts} opts configuration\n   */\n  constructor ({ guid = random.uuidv4(), collectionid = null, gc = true, gcFilter = () => true, meta = null, autoLoad = false, shouldLoad = true } = {}) {\n    super()\n    this.gc = gc\n    this.gcFilter = gcFilter\n    this.clientID = generateNewClientId()\n    this.guid = guid\n    this.collectionid = collectionid\n    /**\n     * @type {Map<string, AbstractType<YEvent<any>>>}\n     */\n    this.share = new Map()\n    this.store = new StructStore()\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = []\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set()\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null\n    this.shouldLoad = shouldLoad\n    this.autoLoad = autoLoad\n    this.meta = meta\n    /**\n     * This is set to true when the persistence provider loaded the document from the database or when the `sync` event fires.\n     * Note that not all providers implement this feature. Provider authors are encouraged to fire the `load` event when the doc content is loaded from the database.\n     *\n     * @type {boolean}\n     */\n    this.isLoaded = false\n    /**\n     * This is set to true when the connection provider has successfully synced with a backend.\n     * Note that when using peer-to-peer providers this event may not provide very useful.\n     * Also note that not all providers implement this feature. Provider authors are encouraged to fire\n     * the `sync` event when the doc has been synced (with `true` as a parameter) or if connection is\n     * lost (with false as a parameter).\n     */\n    this.isSynced = false\n    /**\n     * Promise that resolves once the document has been loaded from a presistence provider.\n     */\n    this.whenLoaded = promise.create(resolve => {\n      this.on('load', () => {\n        this.isLoaded = true\n        resolve(this)\n      })\n    })\n    const provideSyncedPromise = () => promise.create(resolve => {\n      /**\n       * @param {boolean} isSynced\n       */\n      const eventHandler = (isSynced) => {\n        if (isSynced === undefined || isSynced === true) {\n          this.off('sync', eventHandler)\n          resolve()\n        }\n      }\n      this.on('sync', eventHandler)\n    })\n    this.on('sync', isSynced => {\n      if (isSynced === false && this.isSynced) {\n        this.whenSynced = provideSyncedPromise()\n      }\n      this.isSynced = isSynced === undefined || isSynced === true\n      if (this.isSynced && !this.isLoaded) {\n        this.emit('load', [])\n      }\n    })\n    /**\n     * Promise that resolves once the document has been synced with a backend.\n     * This promise is recreated when the connection is lost.\n     * Note the documentation about the `isSynced` property.\n     */\n    this.whenSynced = provideSyncedPromise()\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this)\n      }, null, true)\n    }\n    this.shouldLoad = true\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @template T\n   * @param {function(Transaction):T} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   * @return T\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    return transact(this, f, origin)\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor()\n      t._integrate(this, null)\n      return t\n    })\n    const Constr = type.constructor\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor()\n        t._map = type._map\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t\n          }\n        })\n        t._start = type._start\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t\n        }\n        t._length = type._length\n        this.share.set(name, t)\n        t._integrate(this, null)\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YMap<T>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {}\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON()\n    })\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy())\n    const item = this._item\n    if (item !== null) {\n      this._item = null\n      const content = /** @type {ContentDoc} */ (item.content)\n      content.doc = new Doc({ guid: this.guid, ...content.opts, shouldLoad: false })\n      content.doc._item = item\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        const doc = content.doc\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(doc)\n        }\n        transaction.subdocsRemoved.add(this)\n      }, null, true)\n    }\n    this.emit('destroyed', [true])\n    this.emit('destroy', [this])\n    super.destroy()\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f)\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f)\n  }\n}\n","import * as buffer from 'lib0/buffer'\nimport * as decoding from 'lib0/decoding'\nimport {\n  ID, createID\n} from '../internals.js'\n\nexport class DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nexport class UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nexport class DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder)\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1\n    this.dsCurrVal += diff\n    return diff\n  }\n}\n\nexport class UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder)\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = []\n    decoding.readVarUint(decoder) // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder))\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read()\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read()\n      this.keys.push(key)\n      return key\n    }\n  }\n}\n","\nimport * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nimport {\n  ID // eslint-disable-line\n} from '../internals.js'\n\nexport class DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder()\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n}\n\nexport class UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed))\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key)\n  }\n}\n\nexport class DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder() // encodes all the rest / non-optimized\n    this.dsCurrVal = 0\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal\n    this.dsCurrVal = clock\n    encoding.writeVarUint(this.restEncoder, diff)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase()\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1)\n    this.dsCurrVal += len\n  }\n}\n\nexport class UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super()\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map()\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.clientEncoder = new encoding.UintOptRleEncoder()\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.stringEncoder = new encoding.StringEncoder()\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.typeRefEncoder = new encoding.UintOptRleEncoder()\n    this.lenEncoder = new encoding.UintOptRleEncoder()\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder()\n    encoding.writeVarUint(encoder, 0) // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder))\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder))\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array())\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder))\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client)\n    this.leftClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client)\n    this.rightClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed)\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key)\n    if (clock === undefined) {\n      /**\n       * @todo uncomment to introduce this feature finally\n       *\n       * Background. The ContentFormat object was always encoded using writeKey, but the decoder used to use readString.\n       * Furthermore, I forgot to set the keyclock. So everything was working fine.\n       *\n       * However, this feature here is basically useless as it is not being used (it actually only consumes extra memory).\n       *\n       * I don't know yet how to reintroduce this feature..\n       *\n       * Older clients won't be able to read updates when we reintroduce this feature. So this should probably be done using a flag.\n       *\n       */\n      // this.keyMap.set(key, this.keyClock)\n      this.keyClockEncoder.write(this.keyClock++)\n      this.stringEncoder.write(key)\n    } else {\n      this.keyClockEncoder.write(clock)\n    }\n  }\n}\n","\n/**\n * @module encoding\n */\n/*\n * We use the first five bits in the info flag for determining the type of the struct.\n *\n * 0: GC\n * 1: Item with Deleted content\n * 2: Item with JSON content\n * 3: Item with Binary content\n * 4: Item with String content\n * 5: Item with Embed content (for richtext content)\n * 6: Item with Format content (a formatting marker for richtext content)\n * 7: Item with Type\n */\n\nimport {\n  findIndexSS,\n  getState,\n  createID,\n  getStateVector,\n  readAndApplyDeleteSet,\n  writeDeleteSet,\n  createDeleteSetFromStructStore,\n  transact,\n  readItemContent,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  DSEncoderV2,\n  DSDecoderV1,\n  DSEncoderV1,\n  mergeUpdates,\n  mergeUpdatesV2,\n  Skip,\n  diffUpdateV2,\n  convertUpdateFormatV2ToV1,\n  DSDecoderV2, Doc, Transaction, GC, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as binary from 'lib0/binary'\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as array from 'lib0/array'\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock) // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock)\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs)\n  encoder.writeClient(client)\n  encoding.writeVarUint(encoder.restEncoder, clock)\n  const firstStruct = structs[startNewStructs]\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock)\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0)\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nexport const writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map()\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock)\n    }\n  })\n  getStateVector(store).forEach((_clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0)\n    }\n  })\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size)\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    writeStructs(encoder, /** @type {Array<GC|Item>} */ (store.clients.get(client)), client, clock)\n  })\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nexport const readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create()\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs })\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen()\n          refs[i] = new GC(createID(client, clock), len)\n          clock += len\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder)\n          refs[i] = new Skip(createID(client, clock), len)\n          clock += len\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct\n          clock += struct.length\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n}\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = []\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = array.from(clientsStructRefs.keys()).sort((a, b) => a - b)\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop()\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  }\n  let curStructsTarget = getNextStructTarget()\n  if (curStructsTarget === null) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore()\n  const missingSV = new Map()\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client)\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock)\n    }\n  }\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++]\n  // caching the state because it is used very often\n  const state = new Map()\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client\n      const unapplicableItems = clientsStructRefs.get(client)\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i))\n        clientsStructRefs.delete(client)\n        unapplicableItems.i = 0\n        unapplicableItems.refs = []\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item])\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client)\n    }\n    stack.length = 0\n  }\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client))\n      const offset = localClock - stackHead.id.clock\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead)\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1)\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS()\n      } else {\n        const missing = stackHead.getMissing(transaction, store)\n        if (missing !== null) {\n          stack.push(stackHead)\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 }\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing))\n            addStackToRestSS()\n          } else {\n            stackHead = structRefs.refs[structRefs.i++]\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset)\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length)\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop())\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n    } else {\n      curStructsTarget = getNextStructTarget()\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2()\n    writeClientsStructs(encoder, restStructs, new Map())\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0) // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nexport const readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false\n    let retry = false\n    const doc = transaction.doc\n    const store = doc.store\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc)\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss)\n    const pending = store.pendingStructs\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client)\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock)\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update])\n      }\n    } else {\n      store.pendingStructs = restStructs\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store)\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs))\n      decoding.readVarUint(pendingDSUpdate.restDecoder) // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store)\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2])\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update\n      store.pendingStructs = null\n      applyUpdateV2(transaction.doc, update)\n    }\n  }, transactionOrigin, false)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder))\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nexport const applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update)\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder))\n}\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1)\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nexport const writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector)\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store))\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector)\n  writeStateAsUpdate(encoder, doc, targetStateVector)\n  const updates = [encoder.toUint8Array()]\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs)\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector))\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1())\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const readStateVector = decoder => {\n  const ss = new Map()\n  const ssLength = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const clock = decoding.readVarUint(decoder.restDecoder)\n    ss.set(client, clock)\n  }\n  return ss\n}\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)))\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nexport const writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size)\n  array.from(sv.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    encoding.writeVarUint(encoder.restEncoder, client) // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock)\n  })\n  return encoder\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nexport const writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store))\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc)\n  } else {\n    writeDocumentStateVector(encoder, doc)\n  }\n  return encoder.toUint8Array()\n}\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1())\n","import * as f from 'lib0/function'\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nexport class EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = []\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nexport const createEventHandler = () => new EventHandler()\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nexport const addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f)\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nexport const removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l\n  const len = l.length\n  eventHandler.l = l.filter(g => f !== g)\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.')\n  }\n}\n\n/**\n * Removes all event listeners.\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n *\n * @private\n * @function\n */\nexport const removeAllEventHandlerListeners = eventHandler => {\n  eventHandler.l.length = 0\n}\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nexport const callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1])\n","\nimport { AbstractType } from '../internals.js' // eslint-disable-line\n\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as error from 'lib0/error'\n\nexport class ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock)\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nexport const createID = (client, clock) => new ID(client, clock)\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nexport const writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client)\n  encoding.writeVarUint(encoder, id.clock)\n}\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nexport const readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder))\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nexport const findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n}\n","\nimport { AbstractType, Item } from '../internals.js' // eslint-disable-line\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nexport const isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item\n  }\n  return false\n}\n","\nimport {\n  AbstractType // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nexport const logType = type => {\n  const res = []\n  let n = type._start\n  while (n) {\n    res.push(n)\n    n = n.right\n  }\n  console.log('Children: ', res)\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content))\n}\n","\nimport {\n  YArray,\n  YMap,\n  readDeleteSet,\n  writeDeleteSet,\n  createDeleteSet,\n  DSEncoderV1, DSDecoderV1, ID, DeleteSet, YArrayEvent, Transaction, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as decoding from 'lib0/decoding'\n\nimport { mergeDeleteSets, isDeleted } from './DeleteSet.js'\n\nexport class PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map()\n    this.yusers = storeType\n    this.doc = doc\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map()\n    this.dss = dss\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds')\n      const ids = user.get('ids')\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription)\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]))\n            }\n          })\n        })\n      })\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))))\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      )\n      ids.forEach(addClientId)\n    }\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      )\n    })\n    // add intial data\n    storeType.forEach(initUser)\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} conf\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers\n    let user = users.get(userDescription)\n    if (!user) {\n      user = new YMap()\n      user.set('ids', new YArray())\n      user.set('ds', new YArray())\n      users.set(userDescription, user)\n    }\n    user.get('ids').push([clientid])\n    users.observe(_event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription)\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid])\n            }\n          })\n          const encoder = new DSEncoderV1()\n          const ds = this.dss.get(userDescription)\n          if (ds) {\n            writeDeleteSet(encoder, ds)\n            user.get('ds').push([encoder.toUint8Array()])\n          }\n        }\n      }, 0)\n    })\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds')\n        const ds = transaction.deleteSet\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = new DSEncoderV1()\n          writeDeleteSet(encoder, ds)\n          yds.push([encoder.toUint8Array()])\n        }\n      })\n    })\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss.entries()) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n","\nimport {\n  writeID,\n  readID,\n  compareIDs,\n  getState,\n  findRootTypeKey,\n  Item,\n  createID,\n  ContentType,\n  followRedone,\n  ID, Doc, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as error from 'lib0/error'\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nexport class RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname\n    /**\n     * @type {ID | null}\n     */\n    this.item = item\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nexport const relativePositionToJSON = rpos => {\n  const json = {}\n  if (rpos.type) {\n    json.type = rpos.type\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname\n  }\n  if (rpos.item) {\n    json.item = rpos.item\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc\n  }\n  return json\n}\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc)\n\nexport class AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n    /**\n     * @type {number}\n     */\n    this.index = index\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc)\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createRelativePosition = (type, item, assoc) => {\n  let typeid = null\n  let tname = null\n  if (type._item === null) {\n    tname = findRootTypeKey(type)\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock)\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n}\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right\n  }\n  return createRelativePosition(type, null, assoc)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nexport const writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0)\n    writeID(encoder, item)\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1)\n    encoding.writeVarString(encoder, tname)\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2)\n    writeID(encoder, type)\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc)\n  return encoder\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nexport const encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder()\n  writeRelativePosition(encoder, rpos)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nexport const readRelativePosition = decoder => {\n  let type = null\n  let tname = null\n  let itemID = null\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder)\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder)\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder)\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0\n  return new RelativePosition(type, tname, itemID, assoc)\n}\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nexport const decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array))\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nexport const createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store\n  const rightID = rpos.item\n  const typeID = rpos.type\n  const tname = rpos.tname\n  const assoc = rpos.assoc\n  let type = null\n  let index = 0\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID)\n    const right = res.item\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent)\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)) // adjust position based on left association if necessary\n      let n = right.left\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length\n        }\n        n = n.left\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname)\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID)\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length\n    } else {\n      index = 0\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n}\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n)\n","\nimport {\n  isDeleted,\n  createDeleteSetFromStructStore,\n  getStateVector,\n  getItemCleanStart,\n  iterateDeletedStructs,\n  writeDeleteSet,\n  writeStateVector,\n  readDeleteSet,\n  readStateVector,\n  createDeleteSet,\n  createID,\n  getState,\n  findIndexSS,\n  UpdateEncoderV2,\n  applyUpdateV2,\n  LazyStructReader,\n  equalDeleteSets,\n  UpdateDecoderV1, UpdateDecoderV2, DSEncoderV1, DSEncoderV2, DSDecoderV1, DSDecoderV2, Transaction, Doc, DeleteSet, Item, // eslint-disable-line\n  mergeDeleteSets\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as set from 'lib0/set'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\n\nexport class Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nexport const equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients\n  const ds2 = snap2.ds.clients\n  const sv1 = snap1.sv\n  const sv2 = snap2.sv\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || []\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i]\n      const dsitem2 = dsitems2[i]\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nexport const encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds)\n  writeStateVector(encoder, snapshot.sv)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nexport const encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1())\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nexport const decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nexport const decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)))\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nexport const createSnapshot = (ds, sm) => new Snapshot(ds, sm)\n\nexport const emptySnapshot = createSnapshot(createDeleteSet(), new Map())\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nexport const snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store))\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nexport const isVisible = (item, snapshot) => snapshot === undefined\n  ? !item.deleted\n  : snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id)\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nexport const splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create)\n  const store = transaction.doc.store\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n    })\n    iterateDeletedStructs(transaction, snapshot.ds, _item => {})\n    meta.add(snapshot)\n  }\n}\n\n/**\n * @example\n *  const ydoc = new Y.Doc({ gc: false })\n *  ydoc.getText().insert(0, 'world!')\n *  const snapshot = Y.snapshot(ydoc)\n *  ydoc.getText().insert(0, 'hello ')\n *  const restored = Y.createDocFromSnapshot(ydoc, snapshot)\n *  assert(restored.getText().toString() === 'world!')\n *\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nexport const createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('Garbage-collection must be disabled in `originDoc`!')\n  }\n  const { sv, ds } = snapshot\n\n  const encoder = new UpdateEncoderV2()\n  originDoc.transact(transaction => {\n    let size = 0\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++\n      }\n    })\n    encoding.writeVarUint(encoder.restEncoder, size)\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n      const structs = originDoc.store.clients.get(client) || []\n      const lastStructIndex = findIndexSS(structs, clock - 1)\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1)\n      encoder.writeClient(client)\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0)\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0)\n      }\n    }\n    writeDeleteSet(encoder, ds)\n  })\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot')\n  return newDoc\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n */\nexport const snapshotContainsUpdateV2 = (snapshot, update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n    if ((snapshot.sv.get(curr.id.client) || 0) < curr.id.clock + curr.length) {\n      return false\n    }\n  }\n  const mergedDS = mergeDeleteSets([snapshot.ds, readDeleteSet(updateDecoder)])\n  return equalDeleteSets(snapshot.ds, mergedDS)\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n */\nexport const snapshotContainsUpdate = (snapshot, update) => snapshotContainsUpdateV2(snapshot, update, UpdateDecoderV1)\n","\nimport {\n  GC,\n  splitItem,\n  Transaction, ID, Item, DSDecoderV2 // eslint-disable-line\n} from '../internals.js'\n\nimport * as math from 'lib0/math'\nimport * as error from 'lib0/error'\n\nexport class StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map()\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nexport const getStateVector = store => {\n  const sm = new Map()\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1]\n    sm.set(client, struct.id.clock + struct.length)\n  })\n  return sm\n}\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nexport const getState = (store, client) => {\n  const structs = store.clients.get(client)\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1]\n  return lastStruct.id.clock + lastStruct.length\n}\n\n/**\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const integretyCheck = store => {\n  store.clients.forEach(structs => {\n    for (let i = 1; i < structs.length; i++) {\n      const l = structs[i - 1]\n      const r = structs[i]\n      if (l.id.clock + l.length !== r.id.clock) {\n        throw new Error('StructStore failed integrety check')\n      }\n    }\n  })\n}\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nexport const addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client)\n  if (structs === undefined) {\n    structs = []\n    store.clients.set(struct.id.client, structs)\n  } else {\n    const lastStruct = structs[structs.length - 1]\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct)\n}\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nexport const findIndexSS = (structs, clock) => {\n  let left = 0\n  let right = structs.length - 1\n  let mid = structs[right]\n  let midclock = mid.id.clock\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right) // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex]\n    midclock = mid.id.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n    midindex = math.floor((left + right) / 2)\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nexport const find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  return structs[findIndexSS(structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nexport const getItem = /** @type {function(StructStore,ID):Item} */ (find)\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nexport const findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock)\n  const struct = structs[index]\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n    return index + 1\n  }\n  return index\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client))\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  const index = findIndexSS(structs, id.clock)\n  const struct = structs[index]\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1))\n  }\n  return struct\n}\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nexport const replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client))\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct\n}\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len\n  let index = findIndexCleanStart(transaction, structs, clockStart)\n  let struct\n  do {\n    struct = structs[index++]\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd)\n    }\n    f(struct)\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n}\n","\nimport {\n  getState,\n  writeStructsFromTransaction,\n  writeDeleteSet,\n  DeleteSet,\n  sortAndMergeDeleteSet,\n  getStateVector,\n  findIndexSS,\n  callEventHandlerListeners,\n  Item,\n  generateNewClientId,\n  createID,\n  cleanupYTextAfterTransaction,\n  UpdateEncoderV1, UpdateEncoderV2, GC, StructStore, AbstractType, AbstractStruct, YEvent, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as set from 'lib0/set'\nimport * as logging from 'lib0/logging'\nimport { callAll } from 'lib0/function'\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nexport class Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet()\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store)\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map()\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent<any>>,Set<String|null>>}\n     */\n    this.changed = new Map()\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent<any>>,Array<YEvent<any>>>}\n     */\n    this.changedParentTypes = new Map()\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = []\n    /**\n     * @type {any}\n     */\n    this.origin = origin\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map()\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set()\n    /**\n     * @type {boolean}\n     */\n    this._needFormattingCleanup = false\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nexport const writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet)\n  writeStructsFromTransaction(encoder, transaction)\n  writeDeleteSet(encoder, transaction.deleteSet)\n  return true\n}\n\n/**\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const nextID = transaction => {\n  const y = transaction.doc\n  return createID(y.clientID, getState(y.store, y.clientID))\n}\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent<any>>} type\n * @param {string|null} parentSub\n */\nexport const addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub)\n  }\n}\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n * @return {number} # of merged structs\n */\nconst tryToMergeWithLefts = (structs, pos) => {\n  let right = structs[pos]\n  let left = structs[pos - 1]\n  let i = pos\n  for (; i > 0; right = left, left = structs[--i - 1]) {\n    if (left.deleted === right.deleted && left.constructor === right.constructor) {\n      if (left.mergeWith(right)) {\n        if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n          /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left))\n        }\n        continue\n      }\n    }\n    break\n  }\n  const merged = pos - i\n  if (merged) {\n    // remove all merged structs from the array\n    structs.splice(pos + 1 - merged, merged)\n  }\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si]\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false)\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1))\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[si]\n      ) {\n        si -= 1 + tryToMergeWithLefts(structs, si)\n      }\n    }\n  })\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nexport const tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter)\n  tryMergeDeleteSet(ds, store)\n}\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i]\n    const doc = transaction.doc\n    const store = doc.store\n    const ds = transaction.deleteSet\n    const mergeStructs = transaction._mergeStructs\n    try {\n      sortAndMergeDeleteSet(ds)\n      transaction.afterState = getStateVector(transaction.doc.store)\n      doc.emit('beforeObserverCalls', [transaction, doc])\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = []\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs)\n          }\n        })\n      )\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) => {\n          // We need to think about the possibility that the user transforms the\n          // Y.Doc in the event.\n          if (type._dEH.l.length > 0 && (type._item === null || !type._item.deleted)) {\n            events = events\n              .filter(event =>\n                event.target._item === null || !event.target._item.deleted\n              )\n            events\n              .forEach(event => {\n                event.currentTarget = type\n                // path is relative to the current target\n                event._path = null\n              })\n            // sort events by path length so that top-level events are fired first.\n            events\n              .sort((event1, event2) => event1.path.length - event2.path.length)\n            // We don't need to check for events.length\n            // because we know it has at least one element\n            callEventHandlerListeners(type._dEH, events, transaction)\n          }\n        })\n      })\n      fs.push(() => doc.emit('afterTransaction', [transaction, doc]))\n      callAll(fs, [])\n      if (transaction._needFormattingCleanup) {\n        cleanupYTextAfterTransaction(transaction)\n      }\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter)\n      }\n      tryMergeDeleteSet(ds, store)\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1)\n          for (let i = structs.length - 1; i >= firstChangePos;) {\n            i -= 1 + tryToMergeWithLefts(structs, i)\n          }\n        }\n      })\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = mergeStructs.length - 1; i >= 0; i--) {\n        const { client, clock } = mergeStructs[i].id\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n        const replacedStructPos = findIndexSS(structs, clock)\n        if (replacedStructPos + 1 < structs.length) {\n          if (tryToMergeWithLefts(structs, replacedStructPos + 1) > 1) {\n            continue // no need to perform next check, both are already merged\n          }\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLefts(structs, replacedStructPos)\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.')\n        doc.clientID = generateNewClientId()\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc])\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      const { subdocsAdded, subdocsLoaded, subdocsRemoved } = transaction\n      if (subdocsAdded.size > 0 || subdocsRemoved.size > 0 || subdocsLoaded.size > 0) {\n        subdocsAdded.forEach(subdoc => {\n          subdoc.clientID = doc.clientID\n          if (subdoc.collectionid == null) {\n            subdoc.collectionid = doc.collectionid\n          }\n          doc.subdocs.add(subdoc)\n        })\n        subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc))\n        doc.emit('subdocs', [{ loaded: subdocsLoaded, added: subdocsAdded, removed: subdocsRemoved }, doc, transaction])\n        subdocsRemoved.forEach(subdoc => subdoc.destroy())\n      }\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = []\n        doc.emit('afterAllTransactions', [doc, transactionCleanups])\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1)\n      }\n    }\n  }\n}\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @template T\n * @param {Doc} doc\n * @param {function(Transaction):T} f\n * @param {any} [origin=true]\n * @return {T}\n *\n * @function\n */\nexport const transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups\n  let initialCall = false\n  /**\n   * @type {any}\n   */\n  let result = null\n  if (doc._transaction === null) {\n    initialCall = true\n    doc._transaction = new Transaction(doc, origin, local)\n    transactionCleanups.push(doc._transaction)\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc])\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc])\n  }\n  try {\n    result = f(doc._transaction)\n  } finally {\n    if (initialCall) {\n      const finishCleanup = doc._transaction === transactionCleanups[0]\n      doc._transaction = null\n      if (finishCleanup) {\n        // The first transaction ended, now process observer calls.\n        // Observer call may create new transactions for which we need to call the observers and do cleanup.\n        // We don't want to nest these calls, so we execute these calls one after\n        // another.\n        // Also we need to ensure that all cleanups are called, even if the\n        // observes throw errors.\n        // This file is full of hacky try {} finally {} blocks to ensure that an\n        // event can throw errors and also that the cleanup is called.\n        cleanupTransactions(transactionCleanups, 0)\n      }\n    }\n  }\n  return result\n}\n","import {\n  mergeDeleteSets,\n  iterateDeletedStructs,\n  keepItem,\n  transact,\n  createID,\n  redoItem,\n  isParentOf,\n  followRedone,\n  getItemCleanStart,\n  isDeleted,\n  addToDeleteSet,\n  Transaction, Doc, Item, GC, DeleteSet, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as time from 'lib0/time'\nimport * as array from 'lib0/array'\nimport * as logging from 'lib0/logging'\nimport { Observable } from 'lib0/observable'\n\nexport class StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions\n    this.deletions = deletions\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map()\n  }\n}\n/**\n * @param {Transaction} tr\n * @param {UndoManager} um\n * @param {StackItem} stackItem\n */\nconst clearUndoManagerStackItem = (tr, um, stackItem) => {\n  iterateDeletedStructs(tr, stackItem.deletions, item => {\n    if (item instanceof Item && um.scope.some(type => isParentOf(type, item))) {\n      keepItem(item, false)\n    }\n  })\n}\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null\n  const doc = undoManager.doc\n  const scope = undoManager.scope\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store\n      const stackItem = /** @type {StackItem} */ (stack.pop())\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set()\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = []\n      let performedChange = false\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id)\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff))\n            }\n            struct = item\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct)\n          }\n        }\n      })\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct)\n        }\n      })\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo, stackItem.insertions, undoManager.ignoreRemoteMapChanges, undoManager) !== null || performedChange\n      })\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i]\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction)\n          performedChange = true\n        }\n      }\n      result = performedChange ? stackItem : null\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0\n      }\n    })\n    _tr = transaction\n  }, undoManager)\n  if (result != null) {\n    const changedParentTypes = _tr.changedParentTypes\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager])\n  }\n  return result\n}\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Transaction):boolean} [UndoManagerOptions.captureTransaction] Do not capture changes of a Transaction if result false.\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter what an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n * @property {boolean} [ignoreRemoteMapChanges] Experimental. By default, the UndoManager will never overwrite remote changes. Enable this property to enable overwriting remote changes on key-value changes (Y.Map, properties on Y.Xml, etc..).\n * @property {Doc} [doc] The document that this UndoManager operates on. Only needed if typeScope is empty.\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'|'stack-cleared'|'stack-item-updated'>}\n */\nexport class UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, {\n    captureTimeout = 500,\n    captureTransaction = _tr => true,\n    deleteFilter = () => true,\n    trackedOrigins = new Set([null]),\n    ignoreRemoteMapChanges = false,\n    doc = /** @type {Doc} */ (array.isArray(typeScope) ? typeScope[0].doc : typeScope.doc)\n  } = {}) {\n    super()\n    /**\n     * @type {Array<AbstractType<any>>}\n     */\n    this.scope = []\n    this.doc = doc\n    this.addToScope(typeScope)\n    this.deleteFilter = deleteFilter\n    trackedOrigins.add(this)\n    this.trackedOrigins = trackedOrigins\n    this.captureTransaction = captureTransaction\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = []\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = []\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false\n    this.redoing = false\n    this.lastChange = 0\n    this.ignoreRemoteMapChanges = ignoreRemoteMapChanges\n    this.captureTimeout = captureTimeout\n    /**\n     * @param {Transaction} transaction\n     */\n    this.afterTransactionHandler = transaction => {\n      // Only track certain transactions\n      if (\n        !this.captureTransaction(transaction) ||\n        !this.scope.some(type => transaction.changedParentTypes.has(type)) ||\n        (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))\n      ) {\n        return\n      }\n      const undoing = this.undoing\n      const redoing = this.redoing\n      const stack = undoing ? this.redoStack : this.undoStack\n      if (undoing) {\n        this.stopCapturing() // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.clear(false, true)\n      }\n      const insertions = new DeleteSet()\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0\n        const len = endClock - startClock\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len)\n        }\n      })\n      const now = time.getUnixTime()\n      let didAdd = false\n      if (this.lastChange > 0 && now - this.lastChange < this.captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1]\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet])\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions])\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions))\n        didAdd = true\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true)\n        }\n      })\n      const changeEvent = [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this]\n      if (didAdd) {\n        this.emit('stack-item-added', changeEvent)\n      } else {\n        this.emit('stack-item-updated', changeEvent)\n      }\n    }\n    this.doc.on('afterTransaction', this.afterTransactionHandler)\n    this.doc.on('destroy', () => {\n      this.destroy()\n    })\n  }\n\n  /**\n   * @param {Array<AbstractType<any>> | AbstractType<any>} ytypes\n   */\n  addToScope (ytypes) {\n    ytypes = array.isArray(ytypes) ? ytypes : [ytypes]\n    ytypes.forEach(ytype => {\n      if (this.scope.every(yt => yt !== ytype)) {\n        if (ytype.doc !== this.doc) logging.warn('[yjs#509] Not same Y.Doc') // use MultiDocUndoManager instead. also see https://github.com/yjs/yjs/issues/509\n        this.scope.push(ytype)\n      }\n    })\n  }\n\n  /**\n   * @param {any} origin\n   */\n  addTrackedOrigin (origin) {\n    this.trackedOrigins.add(origin)\n  }\n\n  /**\n   * @param {any} origin\n   */\n  removeTrackedOrigin (origin) {\n    this.trackedOrigins.delete(origin)\n  }\n\n  clear (clearUndoStack = true, clearRedoStack = true) {\n    if ((clearUndoStack && this.canUndo()) || (clearRedoStack && this.canRedo())) {\n      this.doc.transact(tr => {\n        if (clearUndoStack) {\n          this.undoStack.forEach(item => clearUndoManagerStackItem(tr, this, item))\n          this.undoStack = []\n        }\n        if (clearRedoStack) {\n          this.redoStack.forEach(item => clearUndoManagerStackItem(tr, this, item))\n          this.redoStack = []\n        }\n        this.emit('stack-cleared', [{ undoStackCleared: clearUndoStack, redoStackCleared: clearRedoStack }])\n      })\n    }\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true\n    let res\n    try {\n      res = popStackItem(this, this.undoStack, 'undo')\n    } finally {\n      this.undoing = false\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true\n    let res\n    try {\n      res = popStackItem(this, this.redoStack, 'redo')\n    } finally {\n      this.redoing = false\n    }\n    return res\n  }\n\n  /**\n   * Are undo steps available?\n   *\n   * @return {boolean} `true` if undo is possible\n   */\n  canUndo () {\n    return this.undoStack.length > 0\n  }\n\n  /**\n   * Are redo steps available?\n   *\n   * @return {boolean} `true` if redo is possible\n   */\n  canRedo () {\n    return this.redoStack.length > 0\n  }\n\n  destroy () {\n    this.trackedOrigins.delete(this)\n    this.doc.off('afterTransaction', this.afterTransactionHandler)\n    super.destroy()\n  }\n}\n","\nimport * as binary from 'lib0/binary'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as error from 'lib0/error'\nimport * as f from 'lib0/function'\nimport * as logging from 'lib0/logging'\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as string from 'lib0/string'\n\nimport {\n  ContentAny,\n  ContentBinary,\n  ContentDeleted,\n  ContentDoc,\n  ContentEmbed,\n  ContentFormat,\n  ContentJSON,\n  ContentString,\n  ContentType,\n  createID,\n  decodeStateVector,\n  DSEncoderV1,\n  DSEncoderV2,\n  GC,\n  Item,\n  mergeDeleteSets,\n  readDeleteSet,\n  readItemContent,\n  Skip,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  writeDeleteSet,\n  YXmlElement,\n  YXmlHook\n} from '../internals.js'\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder)\n        yield new Skip(createID(client, clock), len)\n        clock += len\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        )\n        yield struct\n        clock += struct.length\n      } else {\n        const len = decoder.readLen()\n        yield new GC(createID(client, clock), len)\n        clock += len\n      }\n    }\n  }\n}\n\nexport class LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder)\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null\n    this.done = false\n    this.filterSkips = filterSkips\n    this.next()\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const logUpdate = update => logUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  logging.print('Structs: ', structs)\n  const ds = readDeleteSet(updateDecoder)\n  logging.print('DeleteSet: ', ds)\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const decodeUpdate = (update) => decodeUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const decodeUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  return {\n    structs,\n    ds: readDeleteSet(updateDecoder)\n  }\n}\n\nexport class LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0\n    this.startClock = 0\n    this.written = 0\n    this.encoder = encoder\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = []\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nexport const mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let size = 0\n    let currClient = curr.id.client\n    let stopCounting = curr.id.clock !== 0 // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient)\n          encoding.writeVarUint(encoder.restEncoder, currClock)\n        }\n        currClient = curr.id.client\n        currClock = 0\n        stopCounting = curr.id.clock !== 0\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++\n      encoding.writeVarUint(encoder.restEncoder, currClient)\n      encoding.writeVarUint(encoder.restEncoder, currClock)\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder()\n    encoding.writeVarUint(enc, size)\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder)\n    encoder.restEncoder = enc\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0)\n    return encoder.toUint8Array()\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map()\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let currClient = curr.id.client\n    let currClock = curr.id.clock\n    // write the beginning to `from`\n    from.set(currClient, currClock)\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock)\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock)\n        // update currClient\n        currClient = curr.id.client\n      }\n      currClock = curr.id.clock + curr.length\n    }\n    // write the end to `to`\n    to.set(currClient, currClock)\n  }\n  return { from, to }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1)\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left)\n    const { client, clock } = leftItem.id\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n}\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nexport const mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  if (updates.length === 1) {\n    return updates[0]\n  }\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)))\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true))\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null\n\n  const updateEncoder = new YEncoder()\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder)\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null)\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock\n          if (clockDiff === 0) {\n            // @todo remove references to skip since the structDecoders must filter Skips.\n            return dec1.curr.constructor === dec2.curr.constructor\n              ? 0\n              : dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    )\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0]\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr)\n      let iterated = false\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next()\n        iterated = true\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n        currWrite = { struct: curr, offset: 0 }\n        currDecoder.next()\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff)\n            currWrite = { struct, offset: 0 }\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff\n            } else {\n              curr = sliceStruct(curr, diff)\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            currWrite = { struct: curr, offset: 0 }\n            currDecoder.next()\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 }\n      currDecoder.next()\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n      currWrite = { struct: next, offset: 0 }\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n    currWrite = null\n  }\n  finishLazyStructWriting(lazyStructEncoder)\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder))\n  const ds = mergeDeleteSets(dss)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nexport const diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv)\n  const encoder = new YEncoder()\n  const lazyStructWriter = new LazyStructWriter(encoder)\n  const decoder = new YDecoder(decoding.createDecoder(update))\n  const reader = new LazyStructReader(decoder, false)\n  while (reader.curr) {\n    const curr = reader.curr\n    const currClient = curr.id.client\n    const svClock = state.get(currClient) || 0\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next()\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0))\n      reader.next()\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0)\n        reader.next()\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next()\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter)\n  // write ds\n  const ds = readDeleteSet(decoder)\n  writeDeleteSet(encoder, ds)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nexport const diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) })\n    lazyWriter.encoder.restEncoder = encoding.createEncoder()\n    lazyWriter.written = 0\n  }\n}\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter)\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client)\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset)\n  }\n  struct.write(lazyWriter.encoder, offset)\n  lazyWriter.written++\n}\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter)\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length)\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i]\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written)\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder)\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @param {function(Item|GC|Skip):Item|GC|Skip} blockTransformer\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nexport const convertUpdateFormat = (update, blockTransformer, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  const updateEncoder = new YEncoder()\n  const lazyWriter = new LazyStructWriter(updateEncoder)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, blockTransformer(curr), 0)\n  }\n  finishLazyStructWriting(lazyWriter)\n  const ds = readDeleteSet(updateDecoder)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @typedef {Object} ObfuscatorOptions\n * @property {boolean} [ObfuscatorOptions.formatting=true]\n * @property {boolean} [ObfuscatorOptions.subdocs=true]\n * @property {boolean} [ObfuscatorOptions.yxml=true] Whether to obfuscate nodeName / hookName\n */\n\n/**\n * @param {ObfuscatorOptions} obfuscator\n */\nconst createObfuscator = ({ formatting = true, subdocs = true, yxml = true } = {}) => {\n  let i = 0\n  const mapKeyCache = map.create()\n  const nodeNameCache = map.create()\n  const formattingKeyCache = map.create()\n  const formattingValueCache = map.create()\n  formattingValueCache.set(null, null) // end of a formatting range should always be the end of a formatting range\n  /**\n   * @param {Item|GC|Skip} block\n   * @return {Item|GC|Skip}\n   */\n  return block => {\n    switch (block.constructor) {\n      case GC:\n      case Skip:\n        return block\n      case Item: {\n        const item = /** @type {Item} */ (block)\n        const content = item.content\n        switch (content.constructor) {\n          case ContentDeleted:\n            break\n          case ContentType: {\n            if (yxml) {\n              const type = /** @type {ContentType} */ (content).type\n              if (type instanceof YXmlElement) {\n                type.nodeName = map.setIfUndefined(nodeNameCache, type.nodeName, () => 'node-' + i)\n              }\n              if (type instanceof YXmlHook) {\n                type.hookName = map.setIfUndefined(nodeNameCache, type.hookName, () => 'hook-' + i)\n              }\n            }\n            break\n          }\n          case ContentAny: {\n            const c = /** @type {ContentAny} */ (content)\n            c.arr = c.arr.map(() => i)\n            break\n          }\n          case ContentBinary: {\n            const c = /** @type {ContentBinary} */ (content)\n            c.content = new Uint8Array([i])\n            break\n          }\n          case ContentDoc: {\n            const c = /** @type {ContentDoc} */ (content)\n            if (subdocs) {\n              c.opts = {}\n              c.doc.guid = i + ''\n            }\n            break\n          }\n          case ContentEmbed: {\n            const c = /** @type {ContentEmbed} */ (content)\n            c.embed = {}\n            break\n          }\n          case ContentFormat: {\n            const c = /** @type {ContentFormat} */ (content)\n            if (formatting) {\n              c.key = map.setIfUndefined(formattingKeyCache, c.key, () => i + '')\n              c.value = map.setIfUndefined(formattingValueCache, c.value, () => ({ i }))\n            }\n            break\n          }\n          case ContentJSON: {\n            const c = /** @type {ContentJSON} */ (content)\n            c.arr = c.arr.map(() => i)\n            break\n          }\n          case ContentString: {\n            const c = /** @type {ContentString} */ (content)\n            c.str = string.repeat((i % 10) + '', c.str.length)\n            break\n          }\n          default:\n            // unknown content type\n            error.unexpectedCase()\n        }\n        if (item.parentSub) {\n          item.parentSub = map.setIfUndefined(mapKeyCache, item.parentSub, () => i + '')\n        }\n        i++\n        return block\n      }\n      default:\n        // unknown block-type\n        error.unexpectedCase()\n    }\n  }\n}\n\n/**\n * This function obfuscates the content of a Yjs update. This is useful to share\n * buggy Yjs documents while significantly limiting the possibility that a\n * developer can on the user. Note that it might still be possible to deduce\n * some information by analyzing the \"structure\" of the document or by analyzing\n * the typing behavior using the CRDT-related metadata that is still kept fully\n * intact.\n *\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */\nexport const obfuscateUpdate = (update, opts) => convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */\nexport const obfuscateUpdateV2 = (update, opts) => convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV2, UpdateEncoderV2)\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV1ToV2 = update => convertUpdateFormat(update, f.id, UpdateDecoderV1, UpdateEncoderV2)\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, f.id, UpdateDecoderV2, UpdateEncoderV1)\n","\nimport {\n  isDeleted,\n  Item, AbstractType, Transaction, AbstractStruct // eslint-disable-line\n} from '../internals.js'\n\nimport * as set from 'lib0/set'\nimport * as array from 'lib0/array'\nimport * as error from 'lib0/error'\n\nconst errorComputeChanges = 'You must not compute changes after the event-handler fired.'\n\n/**\n * @template {AbstractType<any>} T\n * YEvent describes the changes on a YType.\n */\nexport class YEvent {\n  /**\n   * @param {T} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {T}\n     */\n    this.target = target\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null\n    /**\n     * @type {null | Array<{ insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null\n    /**\n     * @type {Array<string|number>|null}\n     */\n    this._path = null\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    return this._path || (this._path = getPathTo(this.currentTarget, this.target))\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      if (this.transaction.doc._transactionCleanups.length === 0) {\n        throw error.create(errorComputeChanges)\n      }\n      const keys = new Map()\n      const target = this.target\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key))\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action\n          let oldValue\n          if (this.adds(item)) {\n            let prev = item.left\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                action = 'add'\n                oldValue = undefined\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete'\n              oldValue = array.last(/** @type {Item} */ item.content.getContent())\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue })\n        }\n      })\n      this._keys = keys\n    }\n    return this._keys\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes\n    if (changes === null) {\n      if (this.transaction.doc._transactionCleanups.length === 0) {\n        throw error.create(errorComputeChanges)\n      }\n      const target = this.target\n      const added = set.create()\n      const deleted = set.create()\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = []\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      }\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp)\n          }\n        }\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp()\n                lastOp = { delete: 0 }\n              }\n              lastOp.delete += item.length\n              deleted.add(item)\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp()\n                lastOp = { insert: [] }\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent())\n              added.add(item)\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp()\n                lastOp = { retain: 0 }\n              }\n              lastOp.retain += item.length\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp()\n        }\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = []\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub)\n    } else {\n      // parent is array-ish\n      let i = 0\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++\n        }\n        c = c.right\n      }\n      path.unshift(i)\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent)\n  }\n  return path\n}\n","\nimport {\n  removeEventHandlerListener,\n  callEventHandlerListeners,\n  addEventHandlerListener,\n  createEventHandler,\n  getState,\n  isVisible,\n  ContentType,\n  createID,\n  ContentAny,\n  ContentBinary,\n  getItemCleanStart,\n  ContentDoc, YText, YArray, UpdateEncoderV1, UpdateEncoderV2, Doc, Snapshot, Transaction, EventHandler, YEvent, Item, // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as iterator from 'lib0/iterator'\nimport * as error from 'lib0/error'\nimport * as math from 'lib0/math'\n\nconst maxSearchMarker = 80\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0\n\nexport class ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true\n    this.p = p\n    this.index = index\n    this.timestamp = globalSearchMarkerTimestamp++\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++ }\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false\n  marker.p = p\n  p.marker = true\n  marker.index = index\n  marker.timestamp = globalSearchMarkerTimestamp++\n}\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b)\n    overwriteMarker(marker, p, index)\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index)\n    searchMarker.push(pm)\n    return pm\n  }\n}\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nexport const findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b)\n  let p = yarray._start\n  let pindex = 0\n  if (marker !== null) {\n    p = marker.p\n    pindex = marker.index\n    refreshMarkerTimestamp(marker) // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length\n    }\n    p = p.right\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex)\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n}\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nexport const updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i]\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p\n      p.marker = false\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1)\n        continue\n      }\n      m.p = p\n      p.marker = true\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len)\n    }\n  }\n}\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nexport const getTypeChildren = t => {\n  let s = t._start\n  const arr = []\n  while (s) {\n    arr.push(s)\n    s = s.right\n  }\n  return arr\n}\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nexport const callTypeObservers = (type, transaction, event) => {\n  const changedType = type\n  const changedParentTypes = transaction.changedParentTypes\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event)\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent)\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction)\n}\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nexport class AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map()\n    /**\n     * @type {Item|null}\n     */\n    this._start = null\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null\n    this._length = 0\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler()\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent<any>>,Transaction>}\n     */\n    this._dEH = createEventHandler()\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y\n    this._item = item\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder\n   */\n  _write (_encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} _parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, _parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start\n  }\n  if (end < 0) {\n    end = type._length + end\n  }\n  let len = end - start\n  const cs = []\n  let n = type._start\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      if (c.length <= start) {\n        start -= c.length\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i])\n          len--\n        }\n        start = 0\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArray = type => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArraySnapshot = (type, snapshot) => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nexport const typeListForEach = (type, f) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nexport const typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = []\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type))\n  })\n  return result\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nexport const typeListCreateIterator = type => {\n  let n = type._start\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null\n  let currentContentIndex = 0\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent()\n        currentContentIndex = 0\n        n = n.right // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++]\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n * Operates on a snapshotted state of the document.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,AbstractType<any>):void} f A function to execute on every element of this YArray.\n * @param {Snapshot} snapshot\n *\n * @private\n * @function\n */\nexport const typeListForEachSnapshot = (type, f, snapshot) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nexport const typeListGet = (type, index) => {\n  const marker = findMarker(type, index)\n  let n = type._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length\n    }\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const store = doc.store\n  const right = referenceItem === null ? parent._start : referenceItem.right\n  /**\n   * @type {Array<Object|Array<any>|number|null>}\n   */\n  let jsonContent = []\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent))\n      left.integrate(transaction, 0)\n      jsonContent = []\n    }\n  }\n  content.forEach(c => {\n    if (c === null) {\n      jsonContent.push(c)\n    } else {\n      switch (c.constructor) {\n        case Number:\n        case Object:\n        case Boolean:\n        case Array:\n        case String:\n          jsonContent.push(c)\n          break\n        default:\n          packJsonContent()\n          switch (c.constructor) {\n            case Uint8Array:\n            case ArrayBuffer:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))))\n              left.integrate(transaction, 0)\n              break\n            case Doc:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)))\n              left.integrate(transaction, 0)\n              break\n            default:\n              if (c instanceof AbstractType) {\n                left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c))\n                left.integrate(transaction, 0)\n              } else {\n                throw new Error('Unexpected content type in insert operation')\n              }\n          }\n      }\n    }\n  })\n  packJsonContent()\n}\n\nconst lengthExceeded = () => error.create('Length exceeded!')\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded()\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length)\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n        }\n        break\n      }\n      index -= n.length\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length)\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * Pushing content is special as we generally want to push after the last item. So we don't have to update\n * the serach marker.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListPushGenerics = (transaction, parent, content) => {\n  // Use the marker with the highest index and iterate to the right.\n  const marker = (parent._searchMarker || []).reduce((maxMarker, currMarker) => currMarker.index > maxMarker.index ? currMarker : maxMarker, { index: 0, p: parent._start })\n  let n = marker.p\n  if (n) {\n    while (n.right) {\n      n = n.right\n    }\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index\n  const startLength = length\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n      }\n      index -= n.length\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length))\n      }\n      n.delete(transaction)\n      length -= n.length\n    }\n    n = n.right\n  }\n  if (length > 0) {\n    throw lengthExceeded()\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nexport const typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key)\n  if (c !== undefined) {\n    c.delete(transaction)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nexport const typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  let content\n  if (value == null) {\n    content = new ContentAny([value])\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value])\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value))\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value))\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value)\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0)\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGet = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nexport const typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {}\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1]\n    }\n  })\n  return res\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const typeMapHas = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {Snapshot} snapshot\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nexport const typeMapGetAllSnapshot = (parent, snapshot) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {}\n  parent._map.forEach((value, key) => {\n    /**\n     * @type {Item|null}\n     */\n    let v = value\n    while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n      v = v.left\n    }\n    if (v !== null && isVisible(v, snapshot)) {\n      res[key] = v.content.getContent()[v.length - 1]\n    }\n  })\n  return res\n}\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nexport const createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted)\n","/**\n * @module YArray\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeListGet,\n  typeListToArray,\n  typeListForEach,\n  typeListCreateIterator,\n  typeListInsertGenerics,\n  typeListPushGenerics,\n  typeListDelete,\n  typeListMap,\n  YArrayRefID,\n  callTypeObservers,\n  transact,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\nimport { typeListSlice } from './AbstractType.js'\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n * @extends YEvent<YArray<T>>\n */\nexport class YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction)\n    this._transaction = transaction\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nexport class YArray extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = []\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = []\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template {Object<string,any>|Array<any>|number|null|string|Uint8Array} T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    /**\n     * @type {YArray<T>}\n     */\n    const a = new YArray()\n    a.push(items)\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  clone () {\n    /**\n     * @type {YArray<T>}\n     */\n    const arr = new YArray()\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? /** @type {typeof el} */ (el.clone()) : el\n    ))\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction))\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, /** @type {any} */ (content))\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   *\n   * @todo Use the following implementation in all types.\n   */\n  push (content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListPushGenerics(transaction, this, /** @type {any} */ (content))\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).push(...content)\n    }\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length)\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nexport const readYArray = _decoder => new YArray()\n","\n/**\n * @module YMap\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapHas,\n  createMapIterator,\n  YMapRefID,\n  callTypeObservers,\n  transact,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as iterator from 'lib0/iterator'\n\n/**\n * @template T\n * @extends YEvent<YMap<T>>\n * Event that describes the changes on a YMap.\n */\nexport class YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction)\n    this.keysChanged = subs\n  }\n}\n\n/**\n * @template MapType\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<MapType>>\n * @implements {Iterable<[string, MapType]>}\n */\nexport class YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super()\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null\n\n    if (entries === undefined) {\n      this._prelimContent = new Map()\n    } else {\n      this._prelimContent = new Map(entries)\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value)\n    })\n    this._prelimContent = null\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  clone () {\n    /**\n     * @type {YMap<MapType>}\n     */\n    const map = new YMap()\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? /** @type {typeof value} */ (value.clone()) : value)\n    })\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs))\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,MapType>}\n     */\n    const map = {}\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1]\n        map[key] = v instanceof AbstractType ? v.toJSON() : v\n      }\n    })\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<MapType>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<[string, MapType]>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => /** @type {any} */ ([v[0], v[1].content.getContent()[v[1].length - 1]]))\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this)\n      }\n    })\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<[string, MapType]>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key)\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   * @template {MapType} VAL\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {VAL} value The value of the element to add\n   * @return {VAL}\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, /** @type {any} */ (value))\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value)\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {MapType|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (_value, key, map) {\n          typeMapDelete(transaction, map, key)\n        })\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear()\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nexport const readYMap = _decoder => new YMap()\n","\n/**\n * @module YText\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  getItemCleanStart,\n  getState,\n  isVisible,\n  createID,\n  YTextRefID,\n  callTypeObservers,\n  transact,\n  ContentEmbed,\n  GC,\n  ContentFormat,\n  ContentString,\n  splitSnapshotAffectedStructs,\n  iterateDeletedStructs,\n  iterateStructs,\n  findMarker,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  updateMarkerChanges,\n  ContentType,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ID, Doc, Item, Snapshot, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as object from 'lib0/object'\nimport * as map from 'lib0/map'\nimport * as error from 'lib0/error'\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b))\n\nexport class ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left\n    this.right = right\n    this.index = index\n    this.currentAttributes = currentAttributes\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase()\n    }\n    switch (this.right.content.constructor) {\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content))\n        }\n        break\n      default:\n        if (!this.right.deleted) {\n          this.index += this.right.length\n        }\n        break\n    }\n    this.left = this.right\n    this.right = this.right.right\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content))\n        }\n        break\n      default:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count))\n          }\n          pos.index += pos.right.length\n          count -= pos.right.length\n        }\n        break\n    }\n    pos.left = pos.right\n    pos.right = pos.right.right\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index) => {\n  const currentAttributes = new Map()\n  const marker = findMarker(parent, index)\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes)\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes)\n    return findNextPosition(transaction, pos, index)\n  }\n}\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key)\n    }\n    currPos.forward()\n  }\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  negatedAttributes.forEach((val, key) => {\n    const left = currPos.left\n    const right = currPos.right\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n    nextFormat.integrate(transaction, 0)\n    currPos.right = nextFormat\n    currPos.forward()\n  })\n}\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format\n  if (value === null) {\n    currentAttributes.delete(key)\n  } else {\n    currentAttributes.set(key, value)\n  }\n}\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) {\n      //\n    } else {\n      break\n    }\n    currPos.forward()\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const negatedAttributes = new Map()\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key]\n    const currentVal = currPos.currentAttributes.get(key) || null\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal)\n      const { left, right } = currPos\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n      currPos.right.integrate(transaction, 0)\n      currPos.forward()\n    }\n  }\n  return negatedAttributes\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object|AbstractType<any>} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((_val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null\n    }\n  })\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : (text instanceof AbstractType ? new ContentType(text) : new ContentEmbed(text))\n  let { left, right, index } = currPos\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength())\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content)\n  right.integrate(transaction, 0)\n  currPos.right = right\n  currPos.index = index\n  currPos.forward()\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  // also check the attributes after the first non-format as we do not want to insert redundant negated attributes there\n  // eslint-disable-next-line no-labels\n  iterationLoop: while (\n    currPos.right !== null &&\n    (length > 0 ||\n      (\n        negatedAttributes.size > 0 &&\n        (currPos.right.deleted || currPos.right.content.constructor === ContentFormat)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content)\n          const attr = attributes[key]\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key)\n            } else {\n              if (length === 0) {\n                // no need to further extend negatedAttributes\n                // eslint-disable-next-line no-labels\n                break iterationLoop\n              }\n              negatedAttributes.set(key, value)\n            }\n            currPos.right.delete(transaction)\n          } else {\n            currPos.currentAttributes.set(key, value)\n          }\n          break\n        }\n        default:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          break\n      }\n    }\n    currPos.forward()\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = ''\n    for (; length > 0; length--) {\n      newlines += '\\n'\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines))\n    currPos.right.integrate(transaction, 0)\n    currPos.forward()\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} curr exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} currAttributes\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, curr, startAttributes, currAttributes) => {\n  /**\n   * @type {Item|null}\n   */\n  let end = start\n  /**\n   * @type {Map<string,ContentFormat>}\n   */\n  const endFormats = map.create()\n  while (end && (!end.countable || end.deleted)) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      const cf = /** @type {ContentFormat} */ (end.content)\n      endFormats.set(cf.key, cf)\n    }\n    end = end.right\n  }\n  let cleanups = 0\n  let reachedCurr = false\n  while (start !== end) {\n    if (curr === start) {\n      reachedCurr = true\n    }\n    if (!start.deleted) {\n      const content = start.content\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content)\n          const startAttrValue = startAttributes.get(key) || null\n          if (endFormats.get(key) !== content || startAttrValue === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction)\n            cleanups++\n            if (!reachedCurr && (currAttributes.get(key) || null) === value && startAttrValue !== value) {\n              if (startAttrValue === null) {\n                currAttributes.delete(key)\n              } else {\n                currAttributes.set(key, startAttrValue)\n              }\n            }\n          }\n          if (!reachedCurr && !start.deleted) {\n            updateCurrentAttributes(currAttributes, /** @type {ContentFormat} */ (content))\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right)\n  }\n  return cleanups\n}\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || !item.right.countable)) {\n    item = item.right\n  }\n  const attrs = new Set()\n  // iterate back until a content item is found\n  while (item && (item.deleted || !item.countable)) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key\n      if (attrs.has(key)) {\n        item.delete(transaction)\n      } else {\n        attrs.add(key)\n      }\n    }\n    item = item.left\n  }\n}\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nexport const cleanupYTextFormatting = type => {\n  let res = 0\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start)\n    let end = type._start\n    let startAttributes = map.create()\n    const currentAttributes = map.copy(startAttributes)\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content))\n            break\n          default:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes)\n            startAttributes = map.copy(currentAttributes)\n            start = end\n            break\n        }\n      }\n      end = end.right\n    }\n  })\n  return res\n}\n\n/**\n * This will be called by the transction once the event handlers are called to potentially cleanup\n * formatting attributes.\n *\n * @param {Transaction} transaction\n */\nexport const cleanupYTextAfterTransaction = transaction => {\n  /**\n   * @type {Set<YText>}\n   */\n  const needFullCleanup = new Set()\n  // check if another formatting item was inserted\n  const doc = transaction.doc\n  for (const [client, afterClock] of transaction.afterState.entries()) {\n    const clock = transaction.beforeState.get(client) || 0\n    if (afterClock === clock) {\n      continue\n    }\n    iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n      if (\n        !item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat && item.constructor !== GC\n      ) {\n        needFullCleanup.add(/** @type {any} */ (item).parent)\n      }\n    })\n  }\n  // cleanup in a new transaction\n  transact(doc, (t) => {\n    iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n      if (item instanceof GC || !(/** @type {YText} */ (item.parent)._hasFormatting) || needFullCleanup.has(/** @type {YText} */ (item.parent))) {\n        return\n      }\n      const parent = /** @type {YText} */ (item.parent)\n      if (item.content.constructor === ContentFormat) {\n        needFullCleanup.add(parent)\n      } else {\n        // If no formatting attribute was inserted or deleted, we can make due with contextless\n        // formatting cleanups.\n        // Contextless: it is not necessary to compute currentAttributes for the affected position.\n        cleanupContextlessFormattingGap(t, item)\n      }\n    })\n    // If a formatting item was inserted, we simply clean the whole type.\n    // We need to compute currentAttributes for the current position anyway.\n    for (const yText of needFullCleanup) {\n      cleanupYTextFormatting(yText)\n    }\n  })\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length\n  const startAttrs = map.copy(currPos.currentAttributes)\n  const start = currPos.right\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentType:\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          currPos.right.delete(transaction)\n          break\n      }\n    }\n    currPos.forward()\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, currPos.currentAttributes)\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent)\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length)\n  }\n  return currPos\n}\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * @extends YEvent<YText>\n * Event that describes the changes on a YText type.\n */\nexport class YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.keysChanged.add(sub)\n      }\n    })\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string|AbstractType<any>|object, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc)\n      /**\n       * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = []\n      transact(y, transaction => {\n        const currentAttributes = new Map() // saves all current attributes for insert\n        const oldAttributes = new Map()\n        let item = this.target._start\n        /**\n         * @type {string?}\n         */\n        let action = null\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {} // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = ''\n        let retain = 0\n        let deleteLen = 0\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op = null\n            switch (action) {\n              case 'delete':\n                if (deleteLen > 0) {\n                  op = { delete: deleteLen }\n                }\n                deleteLen = 0\n                break\n              case 'insert':\n                if (typeof insert === 'object' || insert.length > 0) {\n                  op = { insert }\n                  if (currentAttributes.size > 0) {\n                    op.attributes = {}\n                    currentAttributes.forEach((value, key) => {\n                      if (value !== null) {\n                        op.attributes[key] = value\n                      }\n                    })\n                  }\n                }\n                insert = ''\n                break\n              case 'retain':\n                if (retain > 0) {\n                  op = { retain }\n                  if (!object.isEmpty(attributes)) {\n                    op.attributes = object.assign({}, attributes)\n                  }\n                }\n                retain = 0\n                break\n            }\n            if (op) delta.push(op)\n            action = null\n          }\n        }\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentType:\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp()\n                  action = 'insert'\n                  insert = item.content.getContent()[0]\n                  addOp()\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += 1\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += 1\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp()\n                    action = 'insert'\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += item.length\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += item.length\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content)\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else if (value !== null) {\n                    item.delete(transaction)\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value)\n                const curVal = currentAttributes.get(key) || null\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp()\n                  }\n                  attributes[key] = curVal\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value)\n                const attr = attributes[key]\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (value === null) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else if (attr !== null) { // this will be cleaned up automatically by the contextless cleanup function\n                    item.delete(transaction)\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp()\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content))\n              }\n              break\n            }\n          }\n          item = item.right\n        }\n        addOp()\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1]\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop()\n          } else {\n            break\n          }\n        }\n      })\n      this._delta = delta\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nexport class YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super()\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : []\n    /**\n     * @type {Array<ArraySearchMarker>|null}\n     */\n    this._searchMarker = []\n    /**\n     * Whether this YText contains formatting attributes.\n     * This flag is updated when a formatting item is integrated (see ContentFormat.integrate)\n     */\n    this._hasFormatting = false\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f())\n    } catch (e) {\n      console.error(e)\n    }\n    this._pending = null\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    const event = new YTextEvent(this, transaction, parentSubs)\n    callTypeObservers(this, transaction, event)\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local && this._hasFormatting) {\n      transaction._needFormattingCleanup = true\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = ''\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str\n      }\n      n = n.right\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  opts\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map())\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i]\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {})\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {})\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete)\n          }\n        }\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta))\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = []\n    const currentAttributes = new Map()\n    const doc = /** @type {Doc} */ (this.doc)\n    let str = ''\n    let n = this._start\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}\n        let addAttributes = false\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true\n          attributes[key] = value\n        })\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str }\n        if (addAttributes) {\n          op.attributes = attributes\n        }\n        ops.push(op)\n        str = ''\n      }\n    }\n    const computeDelta = () => {\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange')\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'removed') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' })\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'added') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' })\n                }\n              } else if (cur !== undefined) {\n                packStr()\n                currentAttributes.delete('ychange')\n              }\n              str += /** @type {ContentString} */ (n.content).str\n              break\n            }\n            case ContentType:\n            case ContentEmbed: {\n              packStr()\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: n.content.getContent()[0]\n              }\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({})\n                op.attributes = attrs\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value\n                })\n              }\n              ops.push(op)\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr()\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content))\n              }\n              break\n          }\n        }\n        n = n.right\n      }\n      packStr()\n    }\n    if (snapshot || prevSnapshot) {\n      // snapshots are merged again after the transaction, so we need to keep the\n      // transaction alive until we are done\n      transact(doc, transaction => {\n        if (snapshot) {\n          splitSnapshotAffectedStructs(transaction, snapshot)\n        }\n        if (prevSnapshot) {\n          splitSnapshotAffectedStructs(transaction, prevSnapshot)\n        }\n        computeDelta()\n      }, 'cleanup')\n    } else {\n      computeDelta()\n    }\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        if (!attributes) {\n          attributes = {}\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v })\n        }\n        insertText(transaction, this, pos, text, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes))\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object | AbstractType<any>} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes = {}) {\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        insertText(transaction, this, pos, embed, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes))\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index), length)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length))\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes))\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName))\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue))\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes () {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nexport const readYText = _decoder => new YText()\n","/**\n * @module YXml\n */\n\nimport {\n  YXmlEvent,\n  YXmlElement,\n  AbstractType,\n  typeListMap,\n  typeListForEach,\n  typeListInsertGenerics,\n  typeListInsertGenericsAfter,\n  typeListDelete,\n  typeListToArray,\n  YXmlFragmentRefID,\n  callTypeObservers,\n  transact,\n  typeListGet,\n  typeListSlice,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, ContentType, Transaction, Item, YXmlText, YXmlHook // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\nimport * as array from 'lib0/array'\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nexport class YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f\n    this._root = root\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start)\n    this._firstCall = true\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode\n    let type = n && n.content && /** @type {any} */ (n.content).type\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right\n              break\n            } else if (n.parent === this._root) {\n              n = null\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nexport class YXmlFragment extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = []\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment()\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query)\n    const next = iterator.next()\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    return array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction))\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment()\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this)\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null)\n    })\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref\n        typeListInsertGenericsAfter(transaction, this, refItem, content)\n      })\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent)\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length)\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content)\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Executes a provided function on once on overy child element.\n   *\n   * @param {function(YXmlElement|YXmlText,number, typeof self):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nexport const readYXmlFragment = _decoder => new YXmlFragment()\n","import * as object from 'lib0/object'\n\nimport {\n  YXmlFragment,\n  transact,\n  typeMapDelete,\n  typeMapHas,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  typeMapGetAllSnapshot,\n  typeListForEach,\n  YXmlElementRefID,\n  Snapshot, YXmlText, ContentType, AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Item // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @typedef {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} ValueTypes\n */\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n *\n * @template {{ [key: string]: ValueTypes }} [KV={ [key: string]: string }]\n */\nexport class YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super()\n    this.nodeName = nodeName\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map()\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value)\n    })\n    this._prelimAttrs = null\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * @return {YXmlElement<KV>}\n   */\n  clone () {\n    /**\n     * @type {YXmlElement<KV>}\n     */\n    const el = new YXmlElement(this.nodeName)\n    const attrs = this.getAttributes()\n    object.forEach(attrs, (value, key) => {\n      if (typeof value === 'string') {\n        el.setAttribute(key, value)\n      }\n    })\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes()\n    const stringBuilder = []\n    const keys = []\n    for (const key in attrs) {\n      keys.push(key)\n    }\n    keys.sort()\n    const keysLen = keys.length\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i]\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"')\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase()\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : ''\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {string} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName)\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that is to be set.\n   * @param {KV[KEY]} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue)\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {KV[KEY]|undefined} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {string} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {{ [Key in Extract<keyof KV,string>]?: KV[Key]}} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return /** @type {any} */ (snapshot ? typeMapGetAllSnapshot(this, snapshot) : typeMapGetAll(this))\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName)\n    const attrs = this.getAttributes()\n    for (const key in attrs) {\n      const value = attrs[key]\n      if (typeof value === 'string') {\n        dom.setAttribute(key, value)\n      }\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding))\n    })\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID)\n    encoder.writeKey(this.nodeName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nexport const readYXmlElement = decoder => new YXmlElement(decoder.readKey())\n","\nimport {\n  YEvent,\n  YXmlText, YXmlElement, YXmlFragment, Transaction // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @extends YEvent<YXmlElement|YXmlText|YXmlFragment>\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nexport class YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.attributesChanged.add(sub)\n      }\n    })\n  }\n}\n","\nimport {\n  YMap,\n  YXmlHookRefID,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2 // eslint-disable-line\n} from '../internals.js'\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nexport class YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super()\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName)\n    this.forEach((value, key) => {\n      el.set(key, value)\n    })\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName]\n    let dom\n    if (hook !== undefined) {\n      dom = hook.createDom(this)\n    } else {\n      dom = document.createElement(this.hookName)\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName)\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID)\n    encoder.writeKey(this.hookName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nexport const readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey())\n","\nimport {\n  YText,\n  YXmlTextRefID,\n  ContentType, YXmlElement, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nexport class YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString())\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = []\n      for (const nodeName in delta.attributes) {\n        const attrs = []\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] })\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1)\n        nestedNodes.push({ nodeName, attrs })\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1)\n      // now convert to dom string\n      let str = ''\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i]\n        str += `<${node.nodeName}`\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j]\n          str += ` ${attr.key}=\"${attr.value}\"`\n        }\n        str += '>'\n      }\n      str += delta.insert\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nexport const readYXmlText = decoder => new YXmlText()\n","\nimport {\n  UpdateEncoderV1, UpdateEncoderV2, ID, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id\n    this.length = length\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n","\nimport {\n  AbstractStruct,\n  addStruct,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nexport const structGCRefNumber = 0\n\n/**\n * @private\n */\nexport class GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.length -= offset\n    }\n    addStruct(transaction.doc.store, this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber)\n    encoder.writeLen(this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nexport const readContentBinary = decoder => new ContentBinary(decoder.readBuf())\n","\nimport {\n  addToDeleteSet,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset)\n    this.len = offset\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len)\n    item.markDeleted()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nexport const readContentDeleted = decoder => new ContentDeleted(decoder.readLen())\n","\nimport {\n  Doc, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @param {string} guid\n * @param {Object<string, any>} opts\n */\nconst createDocFromOpts = (guid, opts) => new Doc({ guid, ...opts, shouldLoad: opts.shouldLoad || opts.autoLoad || false })\n\n/**\n * @private\n */\nexport class ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.')\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * @type {any}\n     */\n    const opts = {}\n    this.opts = opts\n    if (!doc.gc) {\n      opts.gc = false\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(createDocFromOpts(this.doc.guid, this.opts))\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item\n    transaction.subdocsAdded.add(this.doc)\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc)\n    } else {\n      transaction.subdocsRemoved.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid)\n    encoder.writeAny(this.opts)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nexport const readContentDoc = decoder => new ContentDoc(createDocFromOpts(decoder.readString(), decoder.readAny()))\n","\nimport {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nexport const readContentEmbed = decoder => new ContentEmbed(decoder.readJSON())\n","\nimport {\n  YText, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Item, StructStore, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key\n    this.value = value\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} _offset\n   * @return {ContentFormat}\n   */\n  splice (_offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} _right\n   * @return {boolean}\n   */\n  mergeWith (_right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   * @param {Item} item\n   */\n  integrate (_transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    const p = /** @type {YText} */ (item.parent)\n    p._searchMarker = null\n    p._hasFormatting = true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key)\n    encoder.writeJSON(this.value)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nexport const readContentFormat = decoder => new ContentFormat(decoder.readKey(), decoder.readJSON())\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c))\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nexport const readContentJSON = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString()\n    if (c === 'undefined') {\n      cs.push(undefined)\n    } else {\n      cs.push(JSON.parse(c))\n    }\n  }\n  return new ContentJSON(cs)\n}\n","import {\n  UpdateEncoderV1, UpdateEncoderV2, UpdateDecoderV1, UpdateDecoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeAny(c)\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nexport const readContentAny = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny())\n  }\n  return new ContentAny(cs)\n}\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset))\n    this.str = this.str.slice(0, offset)\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1)\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�'\n      // replace right as well\n      right.str = '�' + right.str.slice(1)\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset))\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nexport const readContentString = decoder => new ContentString(decoder.readString())\n","\nimport {\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item, YEvent, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nexport const typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n]\n\nexport const YArrayRefID = 0\nexport const YMapRefID = 1\nexport const YTextRefID = 2\nexport const YXmlElementRefID = 3\nexport const YXmlFragmentRefID = 4\nexport const YXmlHookRefID = 5\nexport const YXmlTextRefID = 6\n\n/**\n * @private\n */\nexport class ContentType {\n  /**\n   * @param {AbstractType<any>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) {\n        // This will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item)\n      }\n      item = item.right\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) {\n        // same as above\n        transaction._mergeStructs.push(item)\n      }\n    })\n    transaction.changed.delete(this.type)\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start\n    while (item !== null) {\n      item.gc(store, true)\n      item = item.right\n    }\n    this.type._start = null\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true)\n        item = item.left\n      }\n    })\n    this.type._map = new Map()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nexport const readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder))\n","\nimport {\n  GC,\n  getState,\n  AbstractStruct,\n  replaceStruct,\n  addStruct,\n  addToDeleteSet,\n  findRootTypeKey,\n  compareIDs,\n  getItem,\n  getItemCleanEnd,\n  getItemCleanStart,\n  readContentDeleted,\n  readContentBinary,\n  readContentJSON,\n  readContentAny,\n  readContentString,\n  readContentEmbed,\n  readContentDoc,\n  createID,\n  readContentFormat,\n  readContentType,\n  addChangedTypeToTransaction,\n  isDeleted,\n  StackItem, DeleteSet, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ContentType, ContentDeleted, StructStore, ID, AbstractType, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\nimport * as binary from 'lib0/binary'\nimport * as array from 'lib0/array'\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nexport const followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id\n  let diff = 0\n  let item\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff)\n    }\n    item = getItem(store, nextID)\n    diff = nextID.clock - item.id.clock\n    nextID = item.redone\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n}\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nexport const keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep\n    item = /** @type {AbstractType<any>} */ (item.parent)._item\n  }\n}\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nexport const splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  )\n  if (leftItem.deleted) {\n    rightItem.markDeleted()\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff)\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem)\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem)\n  }\n  leftItem.length = diff\n  return rightItem\n}\n\n/**\n * @param {Array<StackItem>} stack\n * @param {ID} id\n */\nconst isDeletedByUndoStack = (stack, id) => array.some(stack, /** @param {StackItem} s */ s => isDeleted(s.deletions, id))\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n * @param {DeleteSet} itemsToDelete\n * @param {boolean} ignoreRemoteMapChanges\n * @param {import('../utils/UndoManager.js').UndoManager} um\n *\n * @return {Item|null}\n *\n * @private\n */\nexport const redoItem = (transaction, item, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) => {\n  const doc = transaction.doc\n  const store = doc.store\n  const ownClientID = doc.clientID\n  const redone = item.redone\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item\n  /**\n   * @type {Item|null}\n   */\n  let left = null\n  /**\n   * @type {Item|null}\n   */\n  let right\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true) {\n    // try to undo parent if it will be undone anyway\n    if (parentItem.redone === null && (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) === null)) {\n      return null\n    }\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone)\n    }\n  }\n  const parentType = parentItem === null ? /** @type {AbstractType<any>} */ (item.parent) : /** @type {ContentType} */ (parentItem.content).type\n\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left\n    right = item\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone)\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace\n        break\n      }\n      left = left.left\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone)\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace\n        break\n      }\n      right = right.right\n    }\n  } else {\n    right = null\n    if (item.right && !ignoreRemoteMapChanges) {\n      left = item\n      // Iterate right while right is in itemsToDelete\n      // If it is intended to delete right while item is redone, we can expect that item should replace right.\n      while (left !== null && left.right !== null && (left.right.redone || isDeleted(itemsToDelete, left.right.id) || isDeletedByUndoStack(um.undoStack, left.right.id) || isDeletedByUndoStack(um.redoStack, left.right.id))) {\n        left = left.right\n        // follow redone\n        while (left.redone) left = getItemCleanStart(transaction, left.redone)\n      }\n      if (left && left.right !== null) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    } else {\n      left = parentType._map.get(item.parentSub) || null\n    }\n  }\n  const nextClock = getState(store, ownClientID)\n  const nextId = createID(ownClientID, nextClock)\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentType,\n    item.parentSub,\n    item.content.copy()\n  )\n  item.redone = nextId\n  keepItem(redoneItem, true)\n  redoneItem.integrate(transaction, 0)\n  return redoneItem\n}\n\n/**\n * Abstract class that represents any content.\n */\nexport class Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength())\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub\n    /**\n     * If this type's effect is redone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin)\n      this.origin = this.left.lastId\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin)\n      this.rightOrigin = this.right.id\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null\n    } else if (!this.parent) {\n      // only set parent if this shouldn't be garbage collected\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent\n        this.parentSub = this.left.parentSub\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent\n        this.parentSub = this.right.parentSub\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent)\n      if (parentItem.constructor === GC) {\n        this.parent = null\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1))\n      this.origin = this.left.lastId\n      this.content = this.content.splice(offset)\n      this.length -= offset\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left\n\n        /**\n         * @type {Item|null}\n         */\n        let o\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (o !== null && o.left !== null) {\n            o = o.left\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set()\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set()\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o)\n          conflictingItems.add(o)\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o\n              conflictingItems.clear()\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o\n              conflictingItems.clear()\n            }\n          } else {\n            break\n          }\n          o = o.right\n        }\n        this.left = left\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right\n        this.right = right\n        this.left.right = this\n      } else {\n        let r\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (r !== null && r.left !== null) {\n            r = r.left\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this\n        }\n        this.right = r\n      }\n      if (this.right !== null) {\n        this.right.left = this\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this)\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction)\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length\n      }\n      addStruct(transaction.doc.store, this)\n      this.content.integrate(transaction, this)\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub)\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction)\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0)\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left\n    while (n !== null && n.deleted) {\n      n = n.left\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length\n            }\n          }\n        })\n      }\n      if (right.keep) {\n        this.keep = true\n      }\n      this.right = right.right\n      if (this.right !== null) {\n        this.right.left = this\n      }\n      this.length += right.length\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length\n      }\n      this.markDeleted()\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length)\n      addChangedTypeToTransaction(transaction, parent, this.parentSub)\n      this.content.delete(transaction)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store)\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length))\n    } else {\n      this.content = new ContentDeleted(this.length)\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin\n    const rightOrigin = this.rightOrigin\n    const parentSub = this.parentSub\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6) // parentSub is non-null\n    encoder.writeInfo(info)\n    if (origin !== null) {\n      encoder.writeLeftID(origin)\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin)\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      if (parent._item !== undefined) {\n        const parentItem = parent._item\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent)\n          encoder.writeParentInfo(true) // write parentYKey\n          encoder.writeString(ykey)\n        } else {\n          encoder.writeParentInfo(false) // write parent id\n          encoder.writeLeftID(parentItem.id)\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true) // write parentYKey\n        encoder.writeString(parent)\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false) // write parent id\n        encoder.writeLeftID(parent)\n      } else {\n        error.unexpectedCase()\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub)\n      }\n    }\n    this.content.write(encoder, offset)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nexport const readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder)\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nexport const contentRefs = [\n  () => { error.unexpectedCase() }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase() } // 10 - Skip is not ItemContent\n]\n\n/**\n * Do not implement this class!\n */\nexport class AbstractContent {\n  /**\n   * @return {number}\n   */\n  getLength () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Should return false if this Item is some kind of meta information\n   * (e.g. format information).\n   *\n   * * Whether this Item should be addressable via `yarray.get(i)`\n   * * Whether this Item should be counted when computing yarray.length\n   *\n   * @return {boolean}\n   */\n  isCountable () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractContent}\n   */\n  copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {number} _offset\n   * @return {AbstractContent}\n   */\n  splice (_offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {AbstractContent} _right\n   * @return {boolean}\n   */\n  mergeWith (_right) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   * @param {Item} _item\n   */\n  integrate (_transaction, _item) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   */\n  delete (_transaction) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {StructStore} _store\n   */\n  gc (_store) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder\n   * @param {number} _offset\n   */\n  write (_encoder, _offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    throw error.methodUnimplemented()\n  }\n}\n","\nimport {\n  AbstractStruct,\n  UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\nimport * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nexport const structSkipRefNumber = 10\n\n/**\n * @private\n */\nexport class Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber)\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n","/** eslint-env browser */\n\nexport {\n  Doc,\n  Transaction,\n  YArray as Array,\n  YMap as Map,\n  YText as Text,\n  YXmlText as XmlText,\n  YXmlHook as XmlHook,\n  YXmlElement as XmlElement,\n  YXmlFragment as XmlFragment,\n  YXmlEvent,\n  YMapEvent,\n  YArrayEvent,\n  YTextEvent,\n  YEvent,\n  Item,\n  AbstractStruct,\n  GC,\n  Skip,\n  ContentBinary,\n  ContentDeleted,\n  ContentDoc,\n  ContentEmbed,\n  ContentFormat,\n  ContentJSON,\n  ContentAny,\n  ContentString,\n  ContentType,\n  AbstractType,\n  getTypeChildren,\n  createRelativePositionFromTypeIndex,\n  createRelativePositionFromJSON,\n  createAbsolutePositionFromRelativePosition,\n  compareRelativePositions,\n  AbsolutePosition,\n  RelativePosition,\n  ID,\n  createID,\n  compareIDs,\n  getState,\n  Snapshot,\n  createSnapshot,\n  createDeleteSet,\n  createDeleteSetFromStructStore,\n  cleanupYTextFormatting,\n  snapshot,\n  emptySnapshot,\n  findRootTypeKey,\n  findIndexSS,\n  getItem,\n  typeListToArraySnapshot,\n  typeMapGetSnapshot,\n  typeMapGetAllSnapshot,\n  createDocFromSnapshot,\n  iterateDeletedStructs,\n  applyUpdate,\n  applyUpdateV2,\n  readUpdate,\n  readUpdateV2,\n  encodeStateAsUpdate,\n  encodeStateAsUpdateV2,\n  encodeStateVector,\n  UndoManager,\n  decodeSnapshot,\n  encodeSnapshot,\n  decodeSnapshotV2,\n  encodeSnapshotV2,\n  decodeStateVector,\n  logUpdate,\n  logUpdateV2,\n  decodeUpdate,\n  decodeUpdateV2,\n  relativePositionToJSON,\n  isDeleted,\n  isParentOf,\n  equalSnapshots,\n  PermanentUserData, // @TODO experimental\n  tryGc,\n  transact,\n  AbstractConnector,\n  logType,\n  mergeUpdates,\n  mergeUpdatesV2,\n  parseUpdateMeta,\n  parseUpdateMetaV2,\n  encodeStateVectorFromUpdate,\n  encodeStateVectorFromUpdateV2,\n  encodeRelativePosition,\n  decodeRelativePosition,\n  diffUpdate,\n  diffUpdateV2,\n  convertUpdateFormatV1ToV2,\n  convertUpdateFormatV2ToV1,\n  obfuscateUpdate,\n  obfuscateUpdateV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  equalDeleteSets,\n  snapshotContainsUpdate\n} from './internals.js'\n\nconst glo = /** @type {any} */ (typeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof window !== 'undefined'\n    ? window\n    // @ts-ignore\n    : typeof global !== 'undefined' ? global : {})\n\nconst importIdentifier = '__ $YJS$ __'\n\nif (glo[importIdentifier] === true) {\n  /**\n   * Dear reader of this message. Please take this seriously.\n   *\n   * If you see this message, make sure that you only import one version of Yjs. In many cases,\n   * your package manager installs two versions of Yjs that are used by different packages within your project.\n   * Another reason for this message is that some parts of your project use the commonjs version of Yjs\n   * and others use the EcmaScript version of Yjs.\n   *\n   * This often leads to issues that are hard to debug. We often need to perform constructor checks,\n   * e.g. `struct instanceof GC`. If you imported different versions of Yjs, it is impossible for us to\n   * do the constructor checks anymore - which might break the CRDT algorithm.\n   *\n   * https://github.com/yjs/yjs/issues/438\n   */\n  console.error('Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438')\n}\nglo[importIdentifier] = true\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n * @experimental\n *\n * This is basically a (better typed) duplicate of Observable, which will replace Observable in the\n * next release.\n *\n * @template {{[key in keyof EVENTS]: function(...any):void}} EVENTS\n */\nexport class ObservableV2 {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<string, Set<any>>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, /** @type {string} */ (name), set.create).add(f)\n    return f\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, /** @type {any} */ (_f))\n      f(...args)\n    }\n    this.on(name, /** @type {any} */ (_f))\n  }\n\n  /**\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @template {keyof EVENTS & string} NAME\n   * @param {NAME} name The event name.\n   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n\n/* c8 ignore start */\n/**\n * Handles named events.\n *\n * @deprecated\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n/* c8 ignore end */\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template K,V\n * @param {Map<K,V>} m\n * @return {Map<K,V>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template {Map<any, any>} MAP\n * @template {MAP extends Map<any,infer V> ? function():V : unknown} CF\n * @param {MAP} map\n * @param {MAP extends Map<infer K,any> ? K : unknown} key\n * @param {CF} createT\n * @return {ReturnType<CF>}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set =>\n  set.values().next().value || undefined\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n\n/**\n * @template {ArrayLike<any>} ARR\n * @template {function(ARR extends ArrayLike<infer T> ? T : never, number, ARR):any} MAPPER\n * @param {ARR} arr\n * @param {MAPPER} mapper\n * @return {Array<MAPPER extends function(...any): infer M ? M : never>}\n */\nexport const map = (arr, mapper) => {\n  /**\n   * @type {Array<any>}\n   */\n  const res = Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    res[i] = mapper(/** @type {any} */ (arr[i]), i, /** @type {any} */ (arr))\n  }\n  return /** @type {any} */ (res)\n}\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\nimport * as array from './array.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * @param {function(Encoder):void} f\n */\nexport const encode = (f) => {\n  const encoder = createEncoder()\n  f(encoder)\n  return toUint8Array(encoder)\n}\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */\nexport const hasContent = encoder => encoder.cpos > 0 || encoder.bufs.length > 0\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeTerminatedString = (encoder, str) =>\n  writeTerminatedUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */\nexport const writeTerminatedUint8Array = (encoder, buf) => {\n  for (let i = 0; i < buf.length; i++) {\n    const b = buf[i]\n    if (b === 0 || b === 1) {\n      write(encoder, 1)\n    }\n    write(encoder, buf[i])\n  }\n  write(encoder, 0)\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (array.isArray(data)) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */\nexport const countBits = n => {\n  n &= binary.BITS32\n  let count = 0\n  while (n) {\n    n &= (n - 1)\n    count++\n  }\n  return count\n}\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","import * as array from './array.js'\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */\nexport const MAX_UTF16_CHARACTER = fromCharCode(65535)\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n\n/**\n * @param {string} source\n * @param {number} n\n */\nexport const repeat = (source, n) => array.unfold(n, () => source).join('')\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\nimport * as encoding from './encoding.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = new Uint8Array(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTerminatedUint8Array = decoder => {\n  const encoder = encoding.createEncoder()\n  let b\n  while (true) {\n    b = readUint8(decoder)\n    if (b === 0) {\n      return encoding.toUint8Array(encoder)\n    }\n    if (b === 1) {\n      b = readUint8(decoder)\n    }\n    encoding.write(encoder, b)\n  }\n}\n\n/**\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const readTerminatedString = decoder => string.decodeUtf8(readTerminatedUint8Array(decoder))\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\nimport { getRandomValues } from 'lib0/webcrypto'\n\nexport const rand = Math.random\n\nexport const uint32 = () => getRandomValues(new Uint32Array(1))[0]\n\nexport const uint53 = () => {\n  const arr = getRandomValues(new Uint32Array(8))\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0)\n}\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\n\n/**\n * @return {string}\n */\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n","/* eslint-env browser */\n\nexport const subtle = crypto.subtle\nexport const getRandomValues = crypto.getRandomValues.bind(crypto)\n","/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */\n\nimport * as time from './time.js'\n\n/**\n * @template T\n * @callback PromiseResolve\n * @param {T|PromiseLike<T>} [result]\n */\n\n/**\n * @template T\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\n * @return {Promise<T>}\n */\nexport const create = f => /** @type {Promise<T>} */ (new Promise(f))\n\n/**\n * @param {function(function():void,function(Error):void):void} f\n * @return {Promise<void>}\n */\nexport const createEmpty = f => new Promise(f)\n\n/**\n * `Promise.all` wait for all promises in the array to resolve and return the result\n * @template {unknown[] | []} PS\n *\n * @param {PS} ps\n * @return {Promise<{ -readonly [P in keyof PS]: Awaited<PS[P]> }>}\n */\nexport const all = Promise.all.bind(Promise)\n\n/**\n * @param {Error} [reason]\n * @return {Promise<never>}\n */\nexport const reject = reason => Promise.reject(reason)\n\n/**\n * @template T\n * @param {T|void} res\n * @return {Promise<T|void>}\n */\nexport const resolve = res => Promise.resolve(res)\n\n/**\n * @template T\n * @param {T} res\n * @return {Promise<T>}\n */\nexport const resolveWith = res => Promise.resolve(res)\n\n/**\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n *\n * @param {number} timeout\n * @param {function():boolean} check\n * @param {number} [intervalResolution]\n * @return {Promise<void>}\n */\nexport const until = (timeout, check, intervalResolution = 10) => create((resolve, reject) => {\n  const startTime = time.getUnixTime()\n  const hasTimeout = timeout > 0\n  const untilInterval = () => {\n    if (check()) {\n      clearInterval(intervalHandle)\n      resolve()\n    } else if (hasTimeout) {\n      /* c8 ignore else */\n      if (time.getUnixTime() - startTime > timeout) {\n        clearInterval(intervalHandle)\n        reject(new Error('Timeout'))\n      }\n    }\n  }\n  const intervalHandle = setInterval(untilInterval, intervalResolution)\n})\n\n/**\n * @param {number} timeout\n * @return {Promise<undefined>}\n */\nexport const wait = timeout => create((resolve, reject) => setTimeout(resolve, timeout))\n\n/**\n * Checks if an object is a promise using ducktyping.\n *\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n * library has some insane environment where global Promise objects are overwritten.\n *\n * @param {any} p\n * @return {boolean}\n */\nexport const isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally)\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Utility module to convert metric values.\n *\n * @module metric\n */\n\nimport * as math from './math.js'\n\nexport const yotta = 1e24\nexport const zetta = 1e21\nexport const exa = 1e18\nexport const peta = 1e15\nexport const tera = 1e12\nexport const giga = 1e9\nexport const mega = 1e6\nexport const kilo = 1e3\nexport const hecto = 1e2\nexport const deca = 10\nexport const deci = 0.1\nexport const centi = 0.01\nexport const milli = 1e-3\nexport const micro = 1e-6\nexport const nano = 1e-9\nexport const pico = 1e-12\nexport const femto = 1e-15\nexport const atto = 1e-18\nexport const zepto = 1e-21\nexport const yocto = 1e-24\n\nconst prefixUp = ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']\nconst prefixDown = ['', 'm', 'μ', 'n', 'p', 'f', 'a', 'z', 'y']\n\n/**\n * Calculate the metric prefix for a number. Assumes E.g. `prefix(1000) = { n: 1, prefix: 'k' }`\n *\n * @param {number} n\n * @param {number} [baseMultiplier] Multiplier of the base (10^(3*baseMultiplier)). E.g. `convert(time, -3)` if time is already in milli seconds\n * @return {{n:number,prefix:string}}\n */\nexport const prefix = (n, baseMultiplier = 0) => {\n  const nPow = n === 0 ? 0 : math.log10(n)\n  let mult = 0\n  while (nPow < mult * 3 && baseMultiplier > -8) {\n    baseMultiplier--\n    mult--\n  }\n  while (nPow >= 3 + mult * 3 && baseMultiplier < 8) {\n    baseMultiplier++\n    mult++\n  }\n  const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier]\n  return {\n    n: math.round((mult > 0 ? n / math.exp10(mult * 3) : n * math.exp10(mult * -3)) * 1e12) / 1e12,\n    prefix\n  }\n}\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as array from './array.js'\nimport * as math from './math.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* c8 ignore start */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* c8 ignore start */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return createUint8ArrayViewFromArrayBuffer(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* c8 ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* c8 ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Implements base64url - see https://datatracker.ietf.org/doc/html/rfc4648#section-5\n * @param {Uint8Array} buf\n */\nexport const toBase64UrlEncoded = buf => toBase64(buf).replaceAll('+', '-').replaceAll('/', '_').replaceAll('=', '')\n\n/**\n * @param {string} base64\n */\nexport const fromBase64UrlEncoded = base64 => fromBase64(base64.replaceAll('-', '+').replaceAll('_', '/'))\n\n/**\n * Base64 is always a more efficient choice. This exists for utility purposes only.\n *\n * @param {Uint8Array} buf\n */\nexport const toHexString = buf => array.map(buf, b => b.toString(16).padStart(2, '0')).join('')\n\n/**\n * Note: This function expects that the hex doesn't start with 0x..\n *\n * @param {string} hex\n */\nexport const fromHexString = hex => {\n  const hlen = hex.length\n  const buf = new Uint8Array(math.ceil(hlen / 2))\n  for (let i = 0; i < hlen; i += 2) {\n    buf[buf.length - i / 2 - 1] = Number.parseInt(hex.slice(hlen - i - 2, hlen - i), 16)\n  }\n  return buf\n}\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data =>\n  encoding.encode(encoder => encoding.writeAny(encoder, data))\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n\n/**\n * Shift Byte Array {N} bits to the left. Does not expand byte array.\n *\n * @param {Uint8Array} bs\n * @param {number} N should be in the range of [0-7]\n */\nexport const shiftNBitsLeft = (bs, N) => {\n  if (N === 0) return bs\n  bs = new Uint8Array(bs)\n  bs[0] <<= N\n  for (let i = 1; i < bs.length; i++) {\n    bs[i - 1] |= bs[i] >>> (8 - N)\n    bs[i] <<= N\n  }\n  return bs\n}\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* c8 ignore next 2 */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name) && Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n\n/* c8 ignore next */\nexport const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode\n/* c8 ignore next 3 */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* c8 ignore start */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase()])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* c8 ignore next */\nexport const production = hasConf('production')\n\n/* c8 ignore next 2 */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* c8 ignore start */\nexport const supportsColor = !hasParam('no-colors') &&\n  (!isNode || process.stdout.isTTY || forceColor) && (\n  !isNode || hasParam('color') || forceColor ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n)\n/* c8 ignore stop */\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* c8 ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/* eslint-env browser */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* c8 ignore start */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\n/* c8 ignore start */\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  if (typeof localStorage !== 'undefined' && localStorage) {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n/* c8 ignore stop */\n\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\n/* c8 ignore next */\nexport const varStorage = _localStorage\n\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n\n/**\n * A polyfill for `removeEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const offChange = eventHandler => usePolyfill || removeEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n\nexport const isArray = array.isArray\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = (s) => s && s.constructor === String\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = (T) =>\n  /**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/\n  n => n && n.constructor === T\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|undefined} obj\n */\nexport const isEmpty = obj => {\n  // eslint-disable-next-line\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as set from './set.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as common from './logging.common.js'\n\nexport { BOLD, UNBOLD, BLUE, GREY, GREEN, RED, PURPLE, ORANGE, UNCOLOR } from './logging.common.js'\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [common.BOLD]: pair.create('font-weight', 'bold'),\n  [common.UNBOLD]: pair.create('font-weight', 'normal'),\n  [common.BLUE]: pair.create('color', 'blue'),\n  [common.GREEN]: pair.create('color', 'green'),\n  [common.GREY]: pair.create('color', 'grey'),\n  [common.RED]: pair.create('color', 'red'),\n  [common.PURPLE]: pair.create('color', 'purple'),\n  [common.ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [common.UNCOLOR]: pair.create('color', 'black')\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\n/* c8 ignore start */\nconst computeBrowserLoggingArgs = (args) => {\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\n/* c8 ignore start */\nconst computeLoggingArgs = env.supportsColor\n  ? computeBrowserLoggingArgs\n  : common.computeNoColorLoggingArgs\n/* c8 ignore stop */\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.print(args))\n}\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(common.ORANGE)\n  vconsoles.forEach((vc) => vc.print(args))\n}\n/* c8 ignore stop */\n\n/**\n * @param {Error} err\n */\n/* c8 ignore start */\nexport const printError = (err) => {\n  console.error(err)\n  vconsoles.forEach((vc) => vc.printError(err))\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\n/* c8 ignore start */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log(\n      '%c                      ',\n      `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`\n    )\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach((vc) => vc.printImg(url, height))\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} base64\n * @param {number} height\n */\n/* c8 ignore next 2 */\nexport const printImgBase64 = (base64, height) =>\n  printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.groupEnd())\n}\n\n/**\n * @param {function():Node} createNode\n */\n/* c8 ignore next 2 */\nexport const printDom = (createNode) =>\n  vconsoles.forEach((vc) => vc.printDom(createNode()))\n\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\n/* c8 ignore next 2 */\nexport const printCanvas = (canvas, height) =>\n  printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = set.create()\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\n/* c8 ignore start */\nconst _computeLineSpans = (args) => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [\n          pair.create('style', dom.mapToStyleString(currentStyle))\n        ], [dom.text(arg.toString())])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(\n        dom.element('span', [], [dom.text(/** @type {string} */ (content))])\n      )\n    }\n  }\n  return spans\n}\n/* c8 ignore stop */\n\nconst lineStyle =\n  'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* c8 ignore start */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [\n        pair.create('hidden', collapsed),\n        pair.create('style', 'color:grey;font-size:120%;')\n      ], [dom.text('▼')])\n      const triangleRight = dom.element('span', [\n        pair.create('hidden', !collapsed),\n        pair.create('style', 'color:grey;font-size:125%;')\n      ], [dom.text('▶')])\n      const content = dom.element(\n        'div',\n        [pair.create(\n          'style',\n          `${lineStyle};padding-left:${this.depth * 10}px`\n        )],\n        [triangleDown, triangleRight, dom.text(' ')].concat(\n          _computeLineSpans(args)\n        )\n      )\n      const nextContainer = dom.element('div', [\n        pair.create('hidden', collapsed)\n      ])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', (_event) => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('div', [\n          pair.create(\n            'style',\n            `${lineStyle};padding-left:${this.depth * 10}px`\n          )\n        ], _computeLineSpans(args))\n      ])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([common.RED, common.BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('img', [\n          pair.create('src', url),\n          pair.create('height', `${math.round(height * 1.5)}px`)\n        ])\n      ])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @param {Element} dom\n */\n/* c8 ignore next */\nexport const createVConsole = (dom) => new VConsole(dom)\n\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (moduleName) => common.createModuleLogger(print, moduleName)\n","/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nexport class Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nexport const create = (left, right) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nexport const createReversed = (right, left) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\n","/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* c8 ignore start */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\nexport const createTextNode = text => doc.createTextNode(text)\n\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\nexport const setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\nexport const append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nexport const isParentOf = (parent, child) => {\n  let p = child.parentNode\n  while (p && p !== parent) {\n    p = p.parentNode\n  }\n  return p === parent\n}\n/* c8 ignore stop */\n","/**\n * JSON utility functions.\n *\n * @module json\n */\n\n/**\n * Transform JavaScript object to JSON.\n *\n * @param {any} object\n * @return {string}\n */\nexport const stringify = JSON.stringify\n\n/**\n * Parse JSON object.\n *\n * @param {string} json\n * @return {any}\n */\nexport const parse = JSON.parse\n","/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */\n\n/**\n * Utility module to work with EcmaScript's event loop.\n *\n * @module eventloop\n */\n\n/**\n * @type {Array<function>}\n */\nlet queue = []\n\nconst _runQueue = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]()\n  }\n  queue = []\n}\n\n/**\n * @param {function():void} f\n */\nexport const enqueue = f => {\n  queue.push(f)\n  if (queue.length === 1) {\n    setTimeout(_runQueue, 0)\n  }\n}\n\n/**\n * @typedef {Object} TimeoutObject\n * @property {function} TimeoutObject.destroy\n */\n\n/**\n * @param {function(number):void} clearFunction\n */\nconst createTimeoutClass = clearFunction => class TT {\n  /**\n   * @param {number} timeoutId\n   */\n  constructor (timeoutId) {\n    this._ = timeoutId\n  }\n\n  destroy () {\n    clearFunction(this._)\n  }\n}\n\nconst Timeout = createTimeoutClass(clearTimeout)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const timeout = (timeout, callback) => new Timeout(setTimeout(callback, timeout))\n\nconst Interval = createTimeoutClass(clearInterval)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const interval = (timeout, callback) => new Interval(setInterval(callback, timeout))\n\n/* c8 ignore next */\nexport const Animation = createTimeoutClass(arg => typeof requestAnimationFrame !== 'undefined' && cancelAnimationFrame(arg))\n\n/**\n * @param {function(number):void} cb\n * @return {TimeoutObject}\n */\n/* c8 ignore next */\nexport const animationFrame = cb => typeof requestAnimationFrame === 'undefined' ? timeout(0, cb) : new Animation(requestAnimationFrame(cb))\n\n/* c8 ignore next */\n// @ts-ignore\nconst Idle = createTimeoutClass(arg => typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(arg))\n\n/**\n * Note: this is experimental and is probably only useful in browsers.\n *\n * @param {function} cb\n * @return {TimeoutObject}\n */\n/* c8 ignore next 2 */\n// @ts-ignore\nexport const idleCallback = cb => typeof requestIdleCallback !== 'undefined' ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb)\n\n/**\n * @param {number} timeout Timeout of the debounce action\n * @return {function(function():void):void}\n */\nexport const createDebouncer = timeout => {\n  let timer = -1\n  return f => {\n    clearTimeout(timer)\n    if (f) {\n      timer = /** @type {any} */ (setTimeout(f, timeout))\n    }\n  }\n}\n","import * as symbol from './symbol.js'\nimport * as time from './time.js'\nimport * as env from './environment.js'\nimport * as func from './function.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nexport const computeNoColorLoggingArgs = args => {\n  const strBuilder = []\n  const logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (arg.constructor === String || arg.constructor === Number) {\n      strBuilder.push(arg)\n    } else if (arg.constructor === Object) {\n      logArgs.push(JSON.stringify(arg))\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/* c8 ignore start */\n/**\n * @param {function(...any):void} _print\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (_print, moduleName) => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null &&\n    (debugRegexVar === '*' || debugRegexVar === 'true' ||\n      new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n  return !doLogging\n    ? func.nop\n    : (...args) => {\n        const timeNow = time.getUnixTime()\n        const timeDiff = timeNow - lastLoggingTime\n        lastLoggingTime = timeNow\n        _print(\n          color,\n          moduleName,\n          UNCOLOR,\n          ...args.map((arg) =>\n            (typeof arg === 'string' || typeof arg === 'symbol')\n              ? arg\n              : JSON.stringify(arg)\n          ),\n          color,\n          ' +' + timeDiff + 'ms'\n        )\n      }\n}\n/* c8 ignore stop */\n","/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nexport const create = Symbol\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nexport const isSymbol = s => typeof s === 'symbol'\n","/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n","import { compress, decompress } from \"wasm-gzip\";\nimport { apiProxy } from \"../../../base/load/api/api-proxy\";\nimport { loadApiProxyDef } from \"../../../base/load/api/api-proxy-def\";\nimport { dbProxy } from \"../../../base/load/db/db-proxy\";\nimport { w } from \"../../../utils/types/general\";\nimport { PG } from \"../../ed/logic/ed-global\";\nimport { treeRebuild } from \"../../ed/logic/tree/build\";\nimport { simpleHash } from \"../utils/simple-hash\";\nimport { loadCode } from \"../../ed/logic/code-loader\";\n\nconst encoder = new TextEncoder();\nexport const viLoadSnapshot = async (p: PG) => {\n  let api_url = p.site.config.api_url;\n\n  try {\n    const apiURL = new URL(api_url);\n    if (api_url && apiURL.hostname) {\n      await loadApiProxyDef(api_url, true);\n\n      if (!p.script.db) p.script.db = dbProxy(api_url);\n      if (!p.script.api) p.script.api = apiProxy(api_url);\n    }\n  } catch (e: any) {\n    if (e && !e.message.toLowerCase().includes(\"invalid url\")) {\n      console.warn(\"Failed to load API [Snapshot]:\", api_url);\n    } else {\n    }\n  }\n\n  await applyEnv(p);\n};\n\nexport const applyEnv = async (p: PG) => {\n  const w = window as any;\n\n  if (p.site.config.api_url) {\n    w.db = dbProxy(p.site.config.api_url);\n    w.api = apiProxy(p.site.config.api_url);\n  }\n\n  await loadCode(p, p.site_tstamp);\n};\n","import { PG } from \"./ed-global\";\n\nexport const loadFrontEnd = async (p: PG, ts?: number) => {\n  const id_site = p.site.id;\n  const url = `/prod/${id_site}/_prasi/code/index.js?ts=${ts}`;\n  const fn = new Function(\n    \"callback\",\n    `\nimport(\"${url}\")\n  .catch((e) => console.error(\"Failed to load site code\\\\n\\\\n\", e))\n  .then(callback)`\n  );\n  try {\n    await new Promise<any>((resolve) => {\n      try {\n        fn((exports: any) => {\n          const w = window as any;\n          for (const [k, v] of Object.entries(exports)) {\n            w[k] = v;\n            p.site_exports[k] = v;\n          }\n          resolve(exports);\n        });\n      } catch (e) {\n        console.log(\"Failed to load site code\", e);\n      }\n    });\n  } catch (e) {}\n};\nexport const loadTypings = async (p: PG) => {\n  const id_site = p.site.id;\n  await Promise.all([\n    fetch(`/prod/${id_site}/_prasi/typings.d.ts`)\n      .catch(() => {})\n      .then(async (res) => {\n        if (res) {\n          p.site_dts = await res.text();\n          p.render();\n        }\n      }),\n    fetch(`/prod/${id_site}/_prasi/type_def`)\n      .catch(() => {})\n      .then(async (res) => {\n        if (res) {\n          p.site_dts_entry = await res.json();\n          p.render();\n        }\n      }),\n  ]);\n};\n\nexport const loadCode = async (p: PG, ts?: number) => {\n  try {\n    await Promise.all([loadTypings(p), loadFrontEnd(p, ts)]);\n  } catch (e) {\n    console.log(\"Failed to load site code\", e);\n  }\n};\n","export const responsiveVal = <T>(\n  item: any,\n  key: string,\n  mode: \"desktop\" | \"mobile\" | undefined,\n  defaultVal: T\n): T => {\n  let value = item[key];\n\n  if (mode === \"desktop\" || !mode) {\n    if (!value && item.mobile && item.mobile[key]) {\n      value = item.mobile[key];\n    }\n  } else {\n    if (item.mobile && item.mobile[key]) {\n      value = item.mobile[key];\n    }\n  }\n\n  if (!value) {\n    value = defaultVal;\n  }\n  return value as T;\n};\n","import { compress, decompress } from \"wasm-gzip\";\nimport { isTextEditing } from \"./active/is-editing\";\nimport { loadCompSnapshot } from \"./comp/load\";\nimport { IMeta, PG, active } from \"./ed-global\";\nimport { loadSite } from \"./ed-site\";\nimport { treeCacheBuild, treeRebuild } from \"./tree/build\";\nimport { get, set } from \"idb-keyval\";\nimport { nav } from \"../../vi/render/script/extract-nav\";\n\nexport const edRoute = async (p: PG) => {\n  if (p.sync && (p.status === \"ready\" || p.status === \"init\")) {\n    if (!p.site.domain && !p.site.name) {\n      p.status = \"load-site\";\n      const site = await p.sync.site.load(p.site.id);\n      if (!site) {\n        p.status = \"site-not-found\";\n        p.render();\n        return;\n      }\n\n      await loadSite(p, site, \"from-route\");\n    }\n\n    if (\n      p.page.cur.id !== params.page_id ||\n      !p.page.cur.snapshot ||\n      !p.page.list[p.page.cur.id]\n    ) {\n      const page = p.page.list[params.page_id];\n      if (page && p.page.doc && page.on_update) {\n        p.page.doc.off(\"update\", page.on_update);\n\n        const cur = p.page.list[params.page_id];\n        p.page.cur = cur.page;\n        p.page.doc = cur.doc;\n      }\n\n      await reloadPage(p, params.page_id, \"load-route\");\n    }\n  }\n};\n\nexport const reloadLayout = async (p: PG, layout_id: string, note: string) => {\n  if (!p.sync) return;\n  const remotePage = await p.sync.page.load(layout_id);\n\n  if (remotePage) {\n    if (remotePage.comps) {\n      for (const [id_comp, c] of Object.entries(remotePage.comps)) {\n        if (c && c.snapshot) {\n          await loadCompSnapshot(p, id_comp, c.snapshot);\n        }\n      }\n    }\n    if (remotePage.snapshot) {\n      const doc = new Y.Doc();\n      Y.applyUpdate(doc, decompress(remotePage.snapshot));\n\n      let page = p.page.list[remotePage.id];\n      if (!page) {\n        p.page.list[remotePage.id] = {} as any;\n        page = p.page.list[remotePage.id];\n      }\n\n      if (page.on_update && page.doc) {\n        page.doc.off(\"update\", page.on_update);\n      }\n\n      page.on_update = async (bin: Uint8Array, origin: any) => {\n        if (origin === \"local\" || !p.sync) return;\n\n        const res = await p.sync.yjs.sv_local(\n          \"page\",\n          layout_id,\n          Buffer.from(compress(bin))\n        );\n\n        if (res) {\n          const diff_local = Y.encodeStateAsUpdate(\n            doc as any,\n            decompress(res.sv)\n          );\n          Y.applyUpdate(doc as any, decompress(res.diff), \"local\");\n\n          if (!isTextEditing()) {\n            await treeRebuild(p, { note: note + \" page-on-update\" });\n          }\n\n          await p.sync.yjs.diff_local(\n            \"page\",\n            p.page.cur.id,\n            Buffer.from(compress(diff_local))\n          );\n\n          p.preview.page_cache[layout_id] = {\n            root,\n            url: \"~~@$#%^#@~LAYOUT~~@$#%^#@~\",\n          };\n          await treeCacheBuild(p, layout_id);\n          p.render();\n\n          const meta_cache = p.preview.meta_cache[layout_id];\n          if (meta_cache) {\n            p.site.layout.meta = meta_cache.meta;\n            p.site.layout.entry = meta_cache.entry;\n            savePageMetaCache(p, meta_cache.meta);\n          }\n        }\n      };\n\n      const root = (doc.getMap(\"map\").get(\"root\") as any)?.toJSON();\n      if (root) {\n        p.preview.page_cache[layout_id] = {\n          root,\n          url: \"~~@$#%^#@~LAYOUT~~@$#%^#@~\",\n        };\n        await treeCacheBuild(p, layout_id);\n\n        const meta_cache = p.preview.meta_cache[layout_id];\n\n        if (meta_cache) {\n          p.site.layout.meta = meta_cache.meta;\n          p.site.layout.entry = meta_cache.entry;\n\n          savePageMetaCache(p, meta_cache.meta);\n        }\n        p.render();\n      }\n    }\n  }\n};\n\nexport const reloadPage = async (\n  p: PG,\n  page_id: string,\n  note: string,\n  should_render?: boolean\n) => {\n  if (!p.sync) return;\n  p.status = \"reload\";\n  const remotePage = await p.sync.page.load(page_id);\n\n  if (!remotePage) {\n    p.status = \"page-not-found\";\n    p.render();\n    return;\n  }\n\n  if (remotePage.comps) {\n    for (const [id_comp, c] of Object.entries(remotePage.comps)) {\n      if (c && c.snapshot) {\n        await loadCompSnapshot(p, id_comp, c.snapshot);\n      }\n    }\n  }\n\n  p.page.cur = remotePage;\n  if (remotePage.snapshot) {\n    const doc = new Y.Doc();\n    Y.applyUpdate(doc, decompress(remotePage.snapshot));\n\n    let page = p.page.list[remotePage.id];\n    if (!page) {\n      p.page.list[remotePage.id] = {} as any;\n      page = p.page.list[remotePage.id];\n    }\n\n    if (page.on_update && page.doc) {\n      page.doc.off(\"update\", page.on_update);\n    }\n\n    page.on_update = async (bin: Uint8Array, origin: any) => {\n      if (origin === \"local\" || !p.sync) return;\n\n      if (page.page.id !== remotePage.id) {\n        alert(\"Page ID Mismatch!\\n Refreshing to preventing data loss...\");\n        location.reload();\n        return;\n      }\n\n      const res = await p.sync.yjs.sv_local(\n        \"page\",\n        p.page.cur.id,\n        Buffer.from(compress(bin))\n      );\n\n      if (res) {\n        const diff_local = Y.encodeStateAsUpdate(\n          doc as any,\n          decompress(res.sv)\n        );\n        Y.applyUpdate(doc as any, decompress(res.diff), \"local\");\n\n        if (!isTextEditing()) {\n          await treeRebuild(p, { note: note + \" page-on-update\" });\n        }\n\n        await p.sync.yjs.diff_local(\n          \"page\",\n          p.page.cur.id,\n          Buffer.from(compress(diff_local))\n        );\n        p.ui.syncing = false;\n\n        p.page.entry = (doc as any)\n          .getMap(\"map\")\n          .get(\"root\")\n          ?.get(\"childs\")\n          ?.map((e: any) => e.get(\"id\")) as string[];\n\n        if (active.should_render_main) p.render();\n      }\n    };\n\n    doc.on(\"update\", page.on_update);\n\n    p.page.doc = doc as any;\n    if (p.page.doc) {\n      page.page = p.page.cur;\n      page.doc = p.page.doc;\n\n      p.page.entry = p.page.doc\n        .getMap(\"map\")\n        .get(\"root\")\n        ?.get(\"childs\")\n        ?.map((e) => e.get(\"id\")) as string[];\n\n      if (!Array.isArray(p.page.entry)) {\n        p.sync.code\n          .action({ type: \"flush-page-cache\", page_id: page_id })\n          .then(() => {\n            location.reload();\n          });\n      }\n    }\n\n    if (p.page.doc) {\n      await treeRebuild(p, { note: note + \" page-init\" });\n    }\n  }\n\n  p.status = \"ready\";\n  if (should_render !== false) p.render();\n};\n\nexport const loadPageMetaCache = async (p: PG, page_id: string) => {\n  const idb_cache = await get(`page-${page_id}`, nav.store);\n  if (idb_cache) {\n    p.preview.meta_cache[page_id] = idb_cache;\n    return p.preview.meta_cache[page_id];\n  }\n};\n\nexport const savePageMetaCache = async (p: PG, meta: Record<string, IMeta>) => {\n  const cleaned_meta: Record<string, IMeta> = {};\n  for (const [k, v] of Object.entries(meta)) {\n    cleaned_meta[k] = {\n      item: v.item,\n      instances: v.instances,\n      parent: v.parent,\n      jsx_prop: v.jsx_prop,\n    };\n  }\n  p.preview.meta_cache[params.page_id] = {\n    meta: cleaned_meta,\n    entry: p.page.entry,\n    url: p.page.cur.url,\n  };\n  set(\n    `page-${params.page_id}`,\n    p.preview.meta_cache[params.page_id],\n    nav.store\n  );\n};\n","import { viLoadLegacy } from \"../../vi/load/load-legacy\";\nimport { viLoadSnapshot } from \"../../vi/load/load-snapshot\";\nimport { ESite, PG } from \"./ed-global\";\n\nexport const loadSite = async (p: PG, site: ESite, note: string) => {\n  p.site = site;\n\n  \n\n  if (!p.script.db && !p.script.api) {\n    if (!location.pathname.startsWith(\"/ed/\")) {\n      await viLoadLegacy({\n        mode: p.mode,\n        site: {\n          api_url: p.site.config.api_url,\n          id: p.site.id,\n          api: {\n            get() {\n              return p.script.api;\n            },\n            set(val) {\n              p.script.api = val;\n            },\n          },\n          db: {\n            get() {\n              return p.script.db;\n            },\n            set(val) {\n              p.script.db = val;\n            },\n          },\n        },\n        render: () => {},\n      });\n    } else {\n      await viLoadSnapshot(p);\n    }\n  }\n};\n","import { apiProxy } from \"../../../base/load/api/api-proxy\";\nimport { loadApiProxyDef } from \"../../../base/load/api/api-proxy-def\";\nimport { dbProxy } from \"../../../base/load/db/db-proxy\";\nimport importModule from \"../../ed/panel/side/style/tools/dynamic-import\";\nimport { VG } from \"../render/global\";\nimport { viScriptArg } from \"../render/script/arg\";\n\nexport const viLoadLegacy = async (vi: {\n  mode: VG[\"mode\"];\n  site: {\n    id: string;\n    api_url: string;\n    api: {\n      get: () => any;\n      set: (val: any) => void;\n    };\n    db: {\n      get: () => any;\n      set: (val: any) => void;\n    };\n  };\n  render: any;\n}) => {\n  const w = window as any;\n\n  if (!w.exports) {\n    w.exports = {};\n  }\n\n  const site = await _db.site.findFirst({\n    where: { id: vi.site.id },\n    include: { component_site: true },\n  });\n\n  if (site) {\n    if (site.component_site) {\n      for (const cg of site.component_site) {\n        const path = `/npm/site/${cg.id_site}/site.js`;\n        await importModule(path);\n      }\n    }\n\n    let api_url = vi.site.api_url;\n    if (!api_url) api_url = ((site.config as any) || {}).api_url || \"\";\n    if (!api_url) return;\n\n    try {\n      const apiURL = new URL(api_url);\n      if (api_url && apiURL.hostname) {\n        try {\n          await loadApiProxyDef(api_url, true);\n        } catch (e) {\n          console.warn(\"Failed to load API [Legacy]:\", api_url);\n        }\n      }\n    } catch (e) {}\n\n    const path = `/npm/site/${vi.site.id}/site.js`;\n    await importModule(path);\n    if (!vi.site.db.get()) {\n      vi.site.db.set(dbProxy(api_url));\n    }\n\n    if (!vi.site.api.get()) {\n      vi.site.api.set(apiProxy(api_url));\n    }\n\n    const w = window as any;\n    if (site.js_compiled) {\n      const config = site.config as any;\n      const exec = (fn: string, scopes: any) => {\n        if (config.api_url && !scopes[\"api\"]) {\n          scopes[\"api\"] = vi.site.api.get();\n          scopes[\"db\"] = vi.site.db.get();\n        }\n        scopes.params = w.params;\n        scopes.module = {};\n        const f = new Function(...Object.keys(scopes), fn);\n        const res = f(...Object.values(scopes));\n        return res;\n      };\n      const scope = {\n        ...viScriptArg({ site: vi.site, mode: vi.mode }),\n        types: {},\n        exports: w.exports,\n        load: importModule,\n        render: vi.render,\n        module: {\n          exports: {} as any,\n        },\n      };\n      await exec(site.js_compiled, scope);\n      if (scope.module.exports) {\n        for (const [k, v] of Object.entries(scope.module.exports)) {\n          w.exports[k] = v;\n        }\n      }\n    }\n  }\n};\n","import { w } from \"../../../../../../utils/types/general\";\n\nfunction toAbsoluteURL(url: string) {\n  const a = document.createElement(\"a\");\n  a.setAttribute(\"href\", url); // <a href=\"hoge.html\">\n  return (a.cloneNode(false) as any).href; // -> \"http://example.com/hoge.html\"\n}\n\nexport function importModule(url: string) {\n  if (!url) return \"\";\n\n  return new Promise((resolve, reject) => {\n    const vector = \"$importModule$\" + Math.random().toString(32).slice(2);\n    const script = document.createElement(\"script\");\n    const destructor = () => {\n      delete (window as any)[vector];\n      script.onerror = null;\n      script.onload = null;\n      script.remove();\n      URL.revokeObjectURL(script.src);\n      script.src = \"\";\n    };\n    script.defer = true;\n    script.type = \"module\";\n    script.onerror = () => {\n      reject(new Error(`Failed to import: ${url}`));\n      destructor();\n    };\n    script.onload = () => {\n      resolve((window as any)[vector]);\n      destructor();\n    };\n    const absURL = w.basehost ? w.basehost + url : toAbsoluteURL(url);\n    const loader = `import * as m from \"${absURL}\"; window.${vector} = m;`; // export Module\n    const blob = new Blob([loader], { type: \"text/javascript\" });\n    script.src = URL.createObjectURL(blob);\n\n    document.head.appendChild(script);\n  });\n}\n\nexport default importModule;\n","export const viScriptArg = (vi: {\n  mode: \"mobile\" | \"desktop\";\n  site: { db: any; api: any };\n}) => ({\n  isMobile: vi.mode === \"mobile\",\n  isDesktop: vi.mode === \"desktop\",\n  isEditor: location.pathname.startsWith(\"/ed/\"),\n});\n","import { FC, Suspense, useEffect } from \"react\";\nimport { useGlobal } from \"web-utils\";\nimport { IMeta } from \"../ed/logic/ed-global\";\nimport { viLoad } from \"./load/load\";\nimport { VG, ViGlobal } from \"./render/global\";\nimport { render_stat } from \"./render/render\";\nimport { nav } from \"./render/script/extract-nav\";\nimport { ViRoot } from \"./root\";\nimport { ErrorBox } from \"./utils/error-box\";\nimport { IItem } from \"../../utils/types/item\";\n\ntype PRELOAD = Exclude<VG[\"on_preload\"], undefined>;\ntype PRELOAD_ARGS = Parameters<PRELOAD>[0];\n\nconst w = window as any;\n\nexport const Vi: FC<{\n  meta: Record<string, IMeta>;\n  mode: \"mobile\" | \"desktop\";\n  comp_load: (comp_id: string) => Promise<IItem>;\n  entry: string[];\n  api_url: string;\n  site_id: string;\n  page_id: string;\n  api?: any;\n  db?: any;\n  layout?: VG[\"layout\"];\n  script: { init_local_effect: Record<string, boolean> };\n  visit?: VG[\"visit\"];\n  render_stat?: \"enabled\" | \"disabled\";\n  on_status_changed?: (status: VG[\"status\"]) => void;\n  on_preload?: VG[\"on_preload\"];\n}> = ({\n  meta,\n  entry,\n  api_url,\n  site_id,\n  api,\n  mode,\n  db,\n  visit,\n  script,\n  page_id,\n  render_stat: rs,\n  on_status_changed,\n  on_preload,\n  layout,\n  comp_load,\n}) => {\n  const vi = useGlobal(ViGlobal, \"VI\");\n  vi.mode = mode;\n  vi.entry = entry;\n  vi.on_preload = on_preload;\n  vi.comp.load = comp_load;\n\n  w.siteurl = (pathname: string, forceOriginal?: boolean) => {\n    if (pathname.startsWith(\"http://\") || pathname.startsWith(\"https://\"))\n      return pathname;\n\n    try {\n      if ([\"prasi.avolut.com\", \"localhost\"].includes(location.hostname)) {\n        if (vi.site.api_url) {\n          if (!vi.site_url) {\n            vi.site_url = new URL(vi.site.api_url);\n          }\n        }\n      } else {\n        if (!vi.site_url) {\n          if (forceOriginal && vi.site.api_url) {\n            vi.site_url = new URL(vi.site.api_url);\n          } else {\n            vi.site_url = new URL(location.href);\n          }\n          vi.site_url.pathname = \"\";\n        }\n      }\n    } catch (e) {}\n\n    if (vi.site_url) {\n      const u = vi.site_url;\n      let path = pathname;\n      if (!path.startsWith(\"/\")) {\n        path = \"/\" + path;\n      }\n      if (w.prasiContext.siteUrl) {\n        path = w.prasiContext.siteUrl(path);\n      }\n\n      return `${u.protocol}//${u.host}${path}`;\n    }\n\n    return pathname;\n  };\n  w.isMobile = mode === \"mobile\";\n  w.isDesktop = mode === \"desktop\";\n  w.preload = (_urls: PRELOAD_ARGS[\"urls\"], opt: PRELOAD_ARGS[\"opt\"]) => {\n    if (!vi.page.navs[page_id]) vi.page.navs[page_id] = new Set();\n    const urls = typeof _urls === \"string\" ? [_urls] : _urls;\n    for (const url of urls) {\n      vi.page.navs[page_id].add(url);\n    }\n    clearTimeout(nav.timeout);\n    nav.timeout = setTimeout(() => {\n      if (vi.on_preload) {\n        vi.on_preload({\n          urls: Array.from(vi.page.navs[page_id]),\n          opt: {\n            on_load: opt?.on_load,\n          },\n        });\n      }\n    }, 100);\n\n    return \"\";\n  };\n\n  vi.layout = layout;\n  vi.page.cur.id = page_id;\n  vi.on_status_changes = on_status_changed;\n\n  if (rs === \"disabled\") {\n    render_stat.enabled = false;\n  }\n\n  if (vi.meta !== meta) {\n    vi.meta = meta;\n  }\n  if (script) {\n    vi.script.init_local_effect = script.init_local_effect;\n  }\n  vi.visit = visit;\n\n  if (vi.status === \"init\") {\n    vi.site.db = db;\n    vi.site.api = api;\n    viLoad(vi, { api_url, site_id });\n  }\n\n  if (on_preload) {\n    useEffect(() => {\n      setTimeout(() => {\n        const nav = vi.page.navs[vi.page.cur.id];\n        if (nav) {\n          on_preload({\n            urls: Array.from(nav),\n            opt: {\n              on_load(pages) {},\n            },\n          });\n        }\n      }, 500);\n    }, [vi.page.cur.id]);\n  }\n\n  return (\n    <ErrorBox>\n      <Suspense>\n        <ViRoot />\n      </Suspense>\n    </ErrorBox>\n  );\n};\n","import { VG } from \"../render/global\";\n\nexport const viLoad = (vi: VG, arg: { site_id: string; api_url: string }) => {\n  vi.status = \"loading\";\n  if (vi.on_status_changes) {\n    vi.on_status_changes(vi.status);\n  }\n  vi.site.id = arg.site_id;\n  vi.site.api_url = arg.api_url;\n\n  vi.status = \"ready\";\n  if (vi.on_status_changes) {\n    vi.on_status_changes(vi.status);\n  }\n};\n","import { IContent } from \"../../../utils/types/general\";\nimport { IItem } from \"../../../utils/types/item\";\nimport { IRoot } from \"../../../utils/types/root\";\nimport { IMeta } from \"../../ed/logic/ed-global\";\nimport { viParts } from \"./parts\";\n\ntype ViStatus = \"init\" | \"loading\" | \"ready\";\nexport const ViGlobal = {\n  ts: 0,\n  status: \"init\" as ViStatus,\n  meta: {} as Record<string, IMeta>,\n  entry: [] as string[],\n  tick: 0,\n  mode: \"desktop\" as \"mobile\" | \"desktop\",\n  site: {\n    id: \"\",\n    api_url: \"\",\n    api: null as any,\n    db: null as any,\n  },\n  site_url: null as unknown as URL,\n  script: {\n    init_local_effect: undefined as undefined | Record<string, boolean>,\n  },\n  visit: undefined as\n    | undefined\n    | ((meta: IMeta, parts: ReturnType<typeof viParts>) => void),\n  on_status_changes: undefined as void | ((status: ViStatus) => void),\n  layout: undefined as\n    | {\n        id: string;\n        meta: Record<string, IMeta>;\n        entry: string[];\n      }\n    | undefined,\n  page: {\n    cur: { id: \"\" },\n    navs: {} as Record<string, Set<string>>,\n  },\n  comp: {\n    load: (async () => {\n      return null as any;\n    }) as (comp_id: string) => Promise<null | IItem>,\n  },\n  on_preload: undefined as\n    | undefined\n    | ((arg: {\n        urls: string[];\n        opt: {\n          on_load?: (\n            pages: {\n              id: string;\n              url: string;\n              root: IRoot;\n            }[],\n            walk: (\n              root: { root: IRoot }[],\n              visit: (item: IContent) => void | Promise<void>\n            ) => void\n          ) => void;\n        };\n      }) => Promise<void>),\n};\n\nexport type VG = typeof ViGlobal & { render: () => void };\n","import { FC, Fragment, ReactNode } from \"react\";\nimport { useGlobal } from \"web-utils\";\nimport { IMeta } from \"../../ed/logic/ed-global\";\nimport { ErrorBox } from \"../utils/error-box\";\nimport { ViGlobal } from \"./global\";\nimport { viParts } from \"./parts\";\nimport { ViScript } from \"./script\";\n\nconst MAX_RENDER_IN_SECOND = 70;\n\nconst JS_CONFIG = {\n  debug: !!localStorage.getItem(\"prasi-js-debug\"),\n};\n\nexport const render_stat = {\n  enabled: false,\n  meta: {} as Record<string, { last_render: number; count: number }>,\n};\nexport const ViRender: FC<{\n  meta: IMeta;\n  children?: ReactNode;\n  passprop?: any;\n  is_layout: boolean;\n  parent_key?: any;\n  depth: number;\n}> = ({ meta, passprop, is_layout, parent_key, depth }) => {\n  if (render_stat.enabled) {\n    const rstat_meta = render_stat.meta;\n\n    if (!rstat_meta[meta.item.id]) {\n      rstat_meta[meta.item.id] = {\n        last_render: Math.floor(Date.now() / 1000),\n        count: 1,\n      };\n    } else {\n      if (\n        rstat_meta[meta.item.id].last_render === Math.floor(Date.now() / 1000)\n      ) {\n        rstat_meta[meta.item.id].count++;\n      } else {\n        rstat_meta[meta.item.id] = {\n          last_render: Math.floor(Date.now() / 1000),\n          count: 1,\n        };\n      }\n    }\n\n    if (rstat_meta[meta.item.id]?.count > MAX_RENDER_IN_SECOND) {\n      return (\n        <div className=\"bg-orange-100 border border-orange-300 rounded-sm text-xs flex flex-col items-center\">\n          <div className=\"text-[10px] font-bold text-red-900 self-stretch px-1\">\n            WARNING: Render loop detected in [{meta.item.name}]\n          </div>\n          <p className=\"border-b border-orange-300 px-1 pb-1 min-w-[100px]\">\n            Rendered {rstat_meta[meta.item.id]?.count} times in less than 1\n            second.\n          </p>\n        </div>\n      );\n    }\n  }\n\n  if (!meta) return null;\n  if (meta.item.hidden) return null;\n\n  if (JS_CONFIG.debug) {\n    let spaces = \"\";\n    for (let i = 0; i < depth; i++) spaces += \".\";\n    console.log(spaces + meta.item.id, meta.item.name);\n  }\n\n  if (meta.item.adv?.js || meta.item.component?.id) {\n    return (\n      <ErrorBox meta={meta}>\n        <ViScript\n          meta={meta}\n          depth={depth}\n          is_layout={is_layout}\n          passprop={{ ...passprop }}\n          parent_key={parent_key}\n        ></ViScript>\n      </ErrorBox>\n    );\n  }\n  return (\n    <ErrorBox meta={meta}>\n      <ViChild\n        meta={meta}\n        passprop={{ ...passprop }}\n        depth={depth}\n        is_layout={is_layout}\n        parent_key={parent_key}\n      ></ViChild>\n    </ErrorBox>\n  );\n};\n\nexport const ViChild: FC<{\n  meta: IMeta;\n  is_layout: boolean;\n  passprop?: any;\n  parent_key?: any;\n  depth: number;\n}> = ({ meta, passprop, is_layout, parent_key, depth }) => {\n  const vi = useGlobal(ViGlobal, \"VI\");\n\n  if (is_layout && meta.item.name === \"children\") {\n    const childs: ReactNode[] = [];\n    for (const item_id of vi.entry) {\n      const meta = vi.meta[item_id];\n\n      if (meta.item.adv?.js || meta.item.component?.id) {\n        childs.push(\n          <ErrorBox meta={meta}>\n            <ViScript\n              meta={meta}\n              is_layout={false}\n              passprop={{ ...passprop }}\n              parent_key={parent_key}\n              depth={depth + 1}\n            ></ViScript>\n          </ErrorBox>\n        );\n      } else {\n        const parts = viParts(vi, meta, false, passprop, depth);\n        if (vi.visit) vi.visit(meta, parts);\n        childs.push(<div {...parts.props} />);\n      }\n    }\n\n    return (\n      <>\n        {childs.map((e, idx) => (\n          <Fragment key={idx}>{e}</Fragment>\n        ))}\n      </>\n    );\n  }\n\n  const parts = viParts(vi, meta, is_layout, passprop, depth);\n  if (vi.visit) vi.visit(meta, parts);\n\n  return <div {...parts.props} />;\n};\n","import { useErrorBoundary, withErrorBoundary } from \"react-use-error-boundary\";\nimport { useLocal } from \"web-utils\";\nimport { IMeta } from \"../../ed/logic/ed-global\";\n\nexport const ErrorBox = withErrorBoundary(\n  ({\n    children,\n    meta,\n    id,\n    silent = true,\n  }: {\n    children: any;\n    meta?: IMeta;\n    id?: string;\n    silent?: boolean;\n  }) => {\n    const local = useLocal({ retrying: false, meta });\n    const [error, resetError] = useErrorBoundary((error, errorInfo) => {\n      if (silent !== true) console.warn(error);\n    });\n\n    if (meta && local.meta !== meta) {\n      local.meta = meta;\n      setTimeout(resetError);\n    }\n\n    let _meta = meta;\n\n    if (error) {\n      return (\n        <div className=\"bg-red-100 border border-red-300 rounded-sm text-xs flex flex-col items-center\">\n          <div className=\"text-[10px] font-bold text-red-900 self-stretch px-1\">\n            ERROR {_meta?.item.name ? \"[\" + _meta.item.name + \"]:\" : \"\"}\n          </div>\n          <p className=\"border-b border-red-300 px-1 pb-1 min-w-[100px]\">\n            {!local.retrying ? <>{(error as any).message}</> : <>Retrying...</>}\n          </p>\n          <div className=\"p-1\">\n            <button\n              onClick={() => {\n                local.retrying = true;\n                local.render();\n\n                setTimeout(() => {\n                  local.retrying = false;\n                  local.render();\n                  resetError();\n                }, 100);\n              }}\n              className=\"bg-white border border-white hover:border-red-400 hover:bg-red-50 rounded px-2\"\n            >\n              Try again\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return children;\n  }\n);\n","import React, { Component, useState, useCallback, createContext, useContext, useMemo, useRef, } from \"react\";\nclass ErrorBoundary extends Component {\n    displayName = \"ReactUseErrorBoundary\";\n    componentDidCatch(...args) {\n        this.setState({});\n        this.props.onError(...args);\n    }\n    render() {\n        return this.props.children;\n    }\n}\nconst noop = () => false;\nconst errorBoundaryContext = createContext({\n    componentDidCatch: { current: undefined },\n    error: undefined,\n    setError: noop,\n});\nexport function ErrorBoundaryContext({ children, }) {\n    const [error, setError] = useState();\n    const componentDidCatch = useRef();\n    const ctx = useMemo(() => ({\n        componentDidCatch,\n        error,\n        setError,\n    }), [error]);\n    return (React.createElement(errorBoundaryContext.Provider, { value: ctx },\n        React.createElement(ErrorBoundary, { error: error, onError: (error, errorInfo) => {\n                setError(error);\n                componentDidCatch.current?.(error, errorInfo);\n            } }, children)));\n}\nErrorBoundaryContext.displayName = \"ReactUseErrorBoundaryContext\";\nexport function withErrorBoundary(WrappedComponent) {\n    function WithErrorBoundary(props) {\n        return (React.createElement(ErrorBoundaryContext, null,\n            React.createElement(WrappedComponent, { key: \"WrappedComponent\", ...props })));\n    }\n    WithErrorBoundary.displayName = `WithErrorBoundary(${WrappedComponent.displayName ?? WrappedComponent.name ?? \"Component\"})`;\n    return WithErrorBoundary;\n}\nexport function useErrorBoundary(componentDidCatch) {\n    const ctx = useContext(errorBoundaryContext);\n    ctx.componentDidCatch.current = componentDidCatch;\n    const resetError = useCallback(() => {\n        ctx.setError(undefined);\n    }, []);\n    return [ctx.error, resetError];\n}\n","import { produceCSS } from \"../../../utils/css/gen\";\nimport { IContent } from \"../../../utils/types/general\";\nimport { IItem } from \"../../../utils/types/item\";\nimport { IMeta } from \"../../ed/logic/ed-global\";\nimport { ViRender } from \"./render\";\n\nexport type ViParts = {\n  mode: \"mobile\" | \"desktop\";\n  hover?: boolean;\n  active?: boolean;\n};\n\ntype PROPS = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n>;\n\nexport const viParts = (\n  vi: {\n    mode: \"desktop\" | \"mobile\";\n    meta: Record<string, IMeta>;\n    layout?: {\n      id: string;\n      meta: Record<string, IMeta>;\n      entry: string[];\n    };\n  },\n  meta: IMeta,\n  is_layout: boolean,\n  passprop: any,\n  depth: number\n) => {\n  const item = meta.item;\n\n  let inherit = undefined;\n  if (item.component?.style) {\n    inherit = {\n      style: item.component.style,\n      className: produceCSS(item.component.style, { mode: vi.mode }),\n    };\n  }\n\n  const props: PROPS & { inherit?: { style: IItem; className: string } } = {\n    className: produceCSS(item, {\n      mode: vi.mode,\n    }),\n    inherit,\n  };\n\n  let text_props: PROPS = {};\n\n  const childs = meta.item.childs;\n  let children = undefined;\n\n  if ((meta.item as IContent).type === \"text\") {\n    children = null;\n    props.dangerouslySetInnerHTML = { __html: meta.item.html || \"\" };\n  } else {\n    children =\n      Array.isArray(childs) &&\n      childs?.map((item) => {\n        if (!item) return null;\n        const { id } = item;\n\n        const meta = is_layout ? vi.layout?.meta[id] : vi.meta[id];\n        if (!meta) return null;\n\n        return (\n          <ViRender\n            key={id}\n            meta={meta}\n            is_layout={is_layout}\n            passprop={{ ...passprop }}\n            depth={depth + 1}\n          />\n        );\n      });\n  }\n\n  props.children = children;\n\n  if (meta.item.adv?.html) {\n    delete props.children;\n    props.dangerouslySetInnerHTML = { __html: meta.item.adv?.html };\n  } else if (meta.item.adv?.js && !meta.item.adv.js.includes(\"children\")) {\n    delete props.children;\n    delete props.dangerouslySetInnerHTML;\n  }\n\n  return {\n    props,\n    text_props,\n  };\n};\n","import { IItem } from \"../types/item\";\nimport { ISection } from \"../types/section\";\nimport { IText } from \"../types/text\";\nimport { cssAdv } from \"./advanced\";\nimport { cssBackground } from \"./background\";\nimport { cssBorder } from \"./border\";\nimport { cssDimension } from \"./dimension\";\nimport { cssEditor } from \"./editor\";\nimport { cssFont } from \"./font\";\nimport { cssLayout } from \"./layout\";\nimport { cssPadding } from \"./padding\";\n\nexport const produceCSS = (\n  item: ISection | IItem | IText,\n  arg: {\n    mode: \"mobile\" | \"desktop\";\n    hover?: boolean;\n    active?: boolean;\n    editor?: boolean;\n  }\n): string => {\n  try {\n    return cx([\n      item.id ? `s-${item.id}` : \"\",\n      css`\n        display: flex;\n        position: relative;\n        user-select: none;\n        ${cssLayout(item, arg.mode)}\n        ${cssPadding(item, arg.mode)}\n        ${cssDimension(item, arg.mode, arg?.editor)}\n        ${cssBorder(item, arg.mode)}\n        ${cssBackground(item, arg.mode)}\n        ${cssFont(item, arg.mode)}\n      `,\n      (arg?.hover || arg?.active) &&\n        cssEditor({ item, hover: arg?.hover, active: arg?.active }),\n      cssAdv(item, arg.mode),\n    ]);\n  } catch (e) {\n    console.log(e);\n  }\n  return cx([]);\n};\n","import { responsiveVal } from \"../../nova/ed/panel/side/style/tools/responsive-val\";\nimport { MetaItem } from \"../types/meta\";\nimport { FNAdv } from \"../types/meta-fn\";\n\nexport const cssAdv = (\n  cur: { adv?: FNAdv; type: MetaItem[\"type\"] },\n  mode: \"mobile\" | \"desktop\"\n) => {\n  const adv = responsiveVal<FNAdv>(cur, \"adv\", mode, {});\n\n  if (typeof adv.css === \"string\") {\n    const hasCSS = adv.css.trim();\n    if (hasCSS) {\n      return cx(\n        css`\n          ${adv.css}\n        `,\n        mode\n      );\n    }\n  }\n  return \"\";\n};\n","import { responsiveVal } from \"../../nova/ed/panel/side/style/tools/responsive-val\";\nimport { MetaItem } from \"../types/meta\";\nimport { FNBackground } from \"../types/meta-fn\";\n\nexport const cssBackground = (\n  cur: { bg?: FNBackground; type: MetaItem[\"type\"] },\n  mode?: \"mobile\" | \"desktop\"\n) => {\n  const bg = responsiveVal<FNBackground>(cur, \"bg\", mode, {\n    size: \"contain\",\n    pos: \"center\",\n  });\n\n  let bgurl = `${serverurl}${bg.url}`;\n  if (bg && bg.url && bg.url.startsWith(\"http\")) {\n    bgurl = bg.url;\n  }\n\n  return cx(\n    `\n      background-repeat: no-repeat;\n    `,\n    bg.color &&\n      `\n        background-color: ${bg.color};\n      `,\n    bg.size &&\n      `\n        background-size: ${bg.size};\n      `,\n    bg.pos &&\n      `\n        background-position: ${bg.pos};\n      `\n  );\n};\n","import get from \"lodash.get\";\nimport { FNBorder } from \"../types/meta-fn\";\nimport { responsiveVal } from \"../../nova/ed/panel/side/style/tools/responsive-val\";\n\nexport const cssBorder = (\n  cur: { border?: FNBorder },\n  mode?: \"mobile\" | \"desktop\"\n) => {\n  const border = responsiveVal<FNBorder>(cur, \"border\", mode, {\n    style: \"solid\",\n    stroke: {},\n    rounded: {\n      tr: 0,\n      tl: 0,\n      bl: 0,\n      br: 0,\n    },\n    color: \"transparent\",\n  });\n  return cx(\n    pick(border, \"stroke.l\", \"border-left-width\"),\n    pick(border, \"stroke.r\", \"border-right-width\"),\n    pick(border, \"stroke.b\", \"border-bottom-width\"),\n    pick(border, \"stroke.t\", \"border-top-width\"),\n    pick(border, \"color\", \"border-color\", \"transparent\"),\n    pick(border, \"style\", \"border-style\", \"dashed\"),\n    pick(border, \"rounded.tl\", \"border-top-left-radius\"),\n    pick(border, \"rounded.tr\", \"border-top-right-radius\"),\n    pick(border, \"rounded.bl\", \"border-bottom-left-radius\"),\n    pick(border, \"rounded.br\", \"border-bottom-right-radius\")\n  );\n};\n\nconst pick = (obj: any, key: string, attr: string, notpx?: string) => {\n  const val = get(obj, key);\n  if (notpx) {\n    if (val) return `${attr}: ${val};`;\n    else return `${attr}: ${notpx};`;\n  } else if (val) return `${attr}: ${val}px;`;\n};\n","import { responsiveVal } from \"../../nova/ed/panel/side/style/tools/responsive-val\";\nimport { MetaItem } from \"../types/meta\";\nimport { FNDimension } from \"../types/meta-fn\";\n\nexport const cssDimension = (\n  cur: { dim?: FNDimension; type: MetaItem[\"type\"] },\n  mode?: \"mobile\" | \"desktop\",\n  editor?: boolean\n) => {\n  const dim = responsiveVal<FNDimension>(cur, \"dim\", mode, {\n    h: \"fit\",\n    w: \"fit\",\n  });\n\n  if (dim.w === \"full\" && dim.h === \"full\") {\n    return `\n      width:100%;\n      height:100%;\n      flex:1;\n    `;\n  }\n\n  return cx(\n    dim.w === \"fit\" &&\n      `\n        & > .txt-box > * {\n          white-space: nowrap !important;\n        }\n      `,\n    dim.w === \"full\" &&\n      `\n        width: 100%;\n      `,\n    dim.w &&\n      typeof dim.w === \"number\" &&\n      dim.w >= 0 &&\n      `\n        width: ${dim.w}${dim.wUnit || \"px\"};\n        overflow-x: clip;\n      `,\n    dim.h === \"full\" &&\n      `\n        height: ${\n          editor\n            ? \"100%\"\n            : \"100\" +\n              (cur.type === \"section\" ? (mode === \"mobile\" ? \"vh\" : \"vh\") : \"%\")\n        };\n        margin-bottom: auto;\n      `,\n\n    dim.h &&\n      typeof dim.h === \"number\" &&\n      dim.h >= 0 &&\n      `\n        height: ${dim.h}${dim.hUnit || \"px\"};\n        overflow-y: clip;\n      `\n  );\n};\n","import { IContent } from \"../types/general\";\n\nexport const cssEditor = ({\n  item,\n  hover,\n  active,\n}: {\n  item: IContent;\n  hover?: boolean;\n  active?: boolean;\n}) => {\n  return cx(\n    hover &&\n      css`\n        & {\n          box-shadow: inset 0 0 0px 3px #bae3fd;\n          > img {\n            opacity: 0.6;\n          }\n        }\n      `,\n    active &&\n      css`\n        box-shadow: inset 0 0 0px 2px #009cff !important;\n        > img {\n          opacity: 0.6;\n        }\n      `\n  );\n};\n","import { responsiveVal } from \"../../nova/ed/panel/side/style/tools/responsive-val\";\nimport { MetaItem } from \"../types/meta\";\nimport { FNFont } from \"../types/meta-fn\";\n\nexport const glbFont = window as unknown as {\n  defaultFont: string;\n  loadedFonts: string[];\n};\n\nexport const cssFont = (\n  cur: { font?: FNFont; type: MetaItem[\"type\"] },\n  mode?: \"mobile\" | \"desktop\"\n) => {\n  const font = responsiveVal<FNFont>(cur, \"font\", mode, {});\n\n  if (font.family) {\n    if (!glbFont.loadedFonts) glbFont.loadedFonts = [];\n    const weight = `:wght@${[300, 400, 500, 600].join(\";\")}`;\n    const fontName = font.family.replace(/ /g, \"+\");\n\n    if (glbFont.loadedFonts.indexOf(font.family) < 0) {\n      glbFont.loadedFonts.push(font.family);\n      const doc = document;\n      const _href = `/_font/css2?family=${fontName}${weight}`;\n      if (!doc.querySelector(`link[href=\"${_href}]`)) {\n        const link = doc.createElement(\"link\");\n        link.type = \"text/css\";\n        link.rel = \"stylesheet\";\n        link.href = _href;\n        doc.head.appendChild(link);\n      }\n    }\n  }\n\n  if (!font.family && glbFont.defaultFont) {\n    font.family = glbFont.defaultFont;\n  }\n\n  const res = cx(\n    font.color &&\n      `\n        color: ${font.color};\n      `,\n    font.whitespace === \"whitespace-normal\" &&\n      `\n      word-break: break-word;\n    `,\n    font.whitespace === \"whitespace-nowrap\" &&\n      `\n        white-space: nowrap;\n      `,\n    font.color &&\n      `\n        color: ${font.color};\n      `,\n    `\n      text-align: ${font.align ? font.align : \"left\"};\n    `,\n    font.size &&\n      `\n        font-size: ${font.size || 15}px;\n      `,\n    font.height &&\n      `\n        line-height: ${font.height === \"auto\" ? \"normal\" : `${font.height}%`};\n      `,\n    font.family &&\n      `\n        font-family: ${font.family};\n      `\n  );\n\n  return res;\n};\n","import { responsiveVal } from \"../../nova/ed/panel/side/style/tools/responsive-val\";\nimport { FNLayout } from \"../types/meta-fn\";\n\nexport const cssLayout = (\n  cur: { layout?: FNLayout },\n  mode?: \"mobile\" | \"desktop\"\n) => {\n  const result: string[] = [];\n  let layout = responsiveVal<FNLayout>(cur, \"layout\", mode, {\n    dir: \"col\",\n    align: \"top-left\",\n    gap: 0,\n    wrap: undefined,\n  });\n\n  if (layout) {\n    if (layout.wrap) {\n      result.push(\n        layout.wrap === \"flex-wrap\" ? \"flex-wrap: wrap;\" : \"flex-wrap: nowrap;\"\n      );\n    }\n    if (layout.dir.startsWith(\"col\")) {\n      if (layout.dir === \"col\") {\n        result.push(\"flex-direction: column;\");\n      } else if (layout.dir === \"col-reverse\") {\n        result.push(\"flex-direction: column-reverse;\");\n      }\n      if (layout.gap === \"auto\") {\n        if (layout.align === \"left\")\n          result.push(\"align-items:start; justify-content: space-between;\");\n        if (layout.align === \"center\")\n          result.push(\"align-items:center; justify-content: space-between;\");\n        if (layout.align === \"right\")\n          result.push(\"align-items:end; justify-content: space-between;\");\n      } else {\n        result.push(`gap: ${layout.gap}px;`);\n\n        if (layout.align === \"top-left\")\n          result.push(\"align-items:start; justify-content: start;\");\n        if (layout.align === \"top-center\")\n          result.push(\"align-items:center; justify-content: start;\");\n        if (layout.align === \"top-right\")\n          result.push(\"align-items:end; justify-content: start;\");\n\n        if (layout.align === \"left\")\n          result.push(\"align-items:start; justify-content: center;\");\n        if (layout.align === \"center\")\n          result.push(\"align-items:center; justify-content: center;\");\n        if (layout.align === \"right\")\n          result.push(\"align-items:end; justify-content: center;\");\n\n        if (layout.align === \"bottom-left\")\n          result.push(\"align-items:start; justify-content: end;\");\n        if (layout.align === \"bottom-center\")\n          result.push(\"align-items:center; justify-content: end;\");\n        if (layout.align === \"bottom-right\")\n          result.push(\"align-items:end; justify-content: end;\");\n      }\n    } else {\n      if (layout.dir === \"row\") {\n        result.push(\"flex-direction: row;\");\n      } else if (layout.dir === \"row-reverse\") {\n        result.push(\"flex-direction: row-reverse;\");\n      }\n\n      if (layout.gap === \"auto\") {\n        if (layout.align === \"top\")\n          result.push(\"align-items:start; justify-content: space-between;\");\n        if (layout.align === \"center\")\n          result.push(\"align-items:center; justify-content: space-between;\");\n        if (layout.align === \"bottom\")\n          result.push(\"align-items:end; justify-content: space-between;\");\n      } else {\n        result.push(\n          `\n            gap: ${layout.gap}px;\n          `\n        );\n\n        if (layout.align === \"top-left\")\n          result.push(\"align-items:start; justify-content: start;\");\n        if (layout.align === \"top-center\")\n          result.push(\"align-items:start; justify-content: center;\");\n        if (layout.align === \"top-right\")\n          result.push(\"align-items:start; justify-content: end;\");\n\n        if (layout.align === \"left\")\n          result.push(\"align-items:center; justify-content: start;\");\n        if (layout.align === \"center\")\n          result.push(\"align-items:center; justify-content: center;\");\n        if (layout.align === \"right\")\n          result.push(\"align-items:center; justify-content: end;\");\n\n        if (layout.align === \"bottom-left\")\n          result.push(\"align-items:end; justify-content: start;\");\n        if (layout.align === \"bottom-center\")\n          result.push(\"align-items:end; justify-content: center;\");\n        if (layout.align === \"bottom-right\")\n          result.push(\"align-items:end; justify-content: end;\");\n      }\n    }\n  } else {\n    return \"flex-direction:column; align-items:start; justify-content: start;\";\n  }\n  return result.join(\"\\n\\t\").trim();\n};\n","import { responsiveVal } from \"../../nova/ed/panel/side/style/tools/responsive-val\";\nimport { FNPadding } from \"../types/meta-fn\";\n\nexport const cssPadding = (\n  cur: { padding?: FNPadding },\n  mode?: \"mobile\" | \"desktop\"\n) => {\n  const padding = responsiveVal<FNPadding>(cur, \"padding\", mode, {\n    l: 0,\n    b: 0,\n    t: 0,\n    r: 0,\n  });\n\n  return cx(\n    padding.l !== undefined &&\n      `\n        padding-left: ${padding.l}px;\n      `,\n    padding.r !== undefined &&\n      `\n        padding-right: ${padding.r}px;\n      `,\n    padding.b !== undefined &&\n      `\n        padding-bottom: ${padding.b}px;\n      `,\n    padding.t !== undefined &&\n      `\n        padding-top: ${padding.t}px; \n      `\n  );\n};\n","import { FC, ReactNode, useState } from \"react\";\nimport { useGlobal } from \"web-utils\";\nimport { IMeta } from \"../../ed/logic/ed-global\";\nimport { ViGlobal } from \"./global\";\nimport { ViChild } from \"./render\";\nimport { viEvalProps } from \"./script/eval-prop\";\nimport { viEvalScript } from \"./script/eval-script\";\n\nexport const ViScript: FC<{\n  meta: IMeta;\n  is_layout: boolean;\n  depth: number;\n  passprop?: any;\n  parent_key?: any;\n}> = ({ meta, passprop, is_layout, parent_key, depth }) => {\n  const vi = useGlobal(ViGlobal, \"VI\");\n  const [_, _set] = useState({});\n  meta.render = () => {\n    _set({});\n  };\n\n  let _pass = passprop;\n  if (meta.item.component?.id) {\n    if (!_pass) _pass = {};\n    viEvalProps(vi, meta, is_layout, _pass, depth, parent_key);\n  }\n\n  if (meta.item.adv?.html) {\n    return (\n      <ViChild\n        meta={meta}\n        passprop={_pass}\n        is_layout={is_layout}\n        depth={depth}\n      />\n    );\n  }\n\n  if (meta.item.adv?.js) {\n    viEvalScript(vi, meta, is_layout, _pass, depth, parent_key);\n    if (meta.script) return meta.script.result;\n  }\n\n  return (\n    <ViChild meta={meta} passprop={_pass} is_layout={is_layout} depth={depth} />\n  );\n};\n","import { createId } from \"@paralleldrive/cuid2\";\nimport type { Doc } from \"yjs\";\nimport { FMCompDef } from \"../../../../utils/types/meta-fn\";\nimport { IMeta, active } from \"../../../ed/logic/ed-global\";\nimport { VG } from \"../global\";\nimport { ViRender } from \"../render\";\nimport { viScriptArg } from \"./arg\";\nimport { replaceWithObject, replacement } from \"./eval-script\";\nimport { extractNavigate } from \"./extract-nav\";\n\nexport const w = window as any;\n\nexport const viEvalProps = (\n  vi: {\n    layout: VG[\"layout\"];\n    mode: VG[\"mode\"];\n    meta: VG[\"meta\"];\n    site: { db: any; api: any };\n    page: VG[\"page\"];\n    on_nav_loaded?: VG[\"on_preload\"];\n  },\n  meta: IMeta,\n  is_layout: boolean,\n  passprop: any,\n  depth: number,\n  parent_key?: any\n) => {\n  if (meta.item.component?.id) {\n    let script = meta.item.script;\n\n    if (parent_key) {\n      if (!meta.item.script_keyed) meta.item.script_keyed = {};\n      if (!meta.item.script_keyed[parent_key])\n        meta.item.script_keyed[parent_key] = {};\n      script = meta.item.script_keyed[parent_key];\n    } else {\n      if (!meta.item.script) {\n        meta.item.script = {};\n      }\n      script = meta.item.script;\n    }\n\n    if (!script) return;\n\n    const exports = (window as any).exports;\n    const arg = {\n      ...exports,\n      db: vi.site.db,\n      api: vi.site.api,\n      ...viScriptArg(vi),\n      ...passprop,\n      params,\n    };\n\n    script.props = {};\n    let fails = new Set<string>();\n    if (!!meta.item.component.props) {\n      const _props: any = {};\n      for (const [name, prop] of Object.entries(meta.item.component.props)) {\n        try {\n          if (prop.meta?.type === \"content-element\") {\n            let val = {\n              _jsx: true,\n              fn: (arg: { passprop: any; meta: IMeta; prop_name: string }) => {\n                const id = prop.content?.id;\n                if (id) {\n                  const m = is_layout ? vi.layout?.meta[id] : vi.meta[id];\n\n                  if (!m) return null;\n\n                  const instances = meta.instances;\n                  if (!arg.meta.item.originalId || !instances) {\n                    return null;\n                  }\n\n                  const instance = instances[meta.item.id];\n                  if (!instance) return null;\n                  const original_id = arg.meta.item.originalId;\n                  if (\n                    m.mitem &&\n                    ((prop.jsxCalledBy &&\n                      (!prop.jsxCalledBy.includes(original_id) ||\n                        prop.jsxCalledBy.length !== 2)) ||\n                      !prop.jsxCalledBy)\n                  ) {\n                    const mprop = meta.mitem\n                      ?.get(\"component\")\n                      ?.get(\"props\")\n                      ?.get(name);\n                    if (mprop) {\n                      let mjby = mprop.get(\"jsxCalledBy\");\n                      if (!mjby || typeof mjby !== \"object\") {\n                        mprop.set(\"jsxCalledBy\", [meta.item.id, original_id]);\n                      } else {\n                        if (\n                          Array.isArray(mjby) &&\n                          (!mjby.includes(original_id) ||\n                            mjby.length !== 2 ||\n                            mjby[0] !== meta.item.id ||\n                            mjby[1] !== original_id)\n                        ) {\n                          mprop.set(\"jsxCalledBy\", [meta.item.id, original_id]);\n                        }\n                      }\n                    }\n                  }\n\n                  return (\n                    <ViRender\n                      meta={m}\n                      passprop={arg.passprop}\n                      is_layout={is_layout}\n                      depth={depth + 1}\n                    />\n                  );\n                }\n                return null;\n              },\n            };\n\n            arg[name] = val;\n\n            if (passprop) {\n              passprop[name] = val;\n            }\n            continue;\n          }\n\n          if (prop.value) {\n            extractNavigate(vi, prop.value);\n          }\n\n          if (!prop.valueBuilt && prop.value && meta.mitem) {\n            const mprop = meta.mitem?.get(\"component\")?.get(\"props\")?.get(name);\n            if (mprop) {\n              updatePropValueBuilt(mprop, prop.value);\n              return;\n            }\n          }\n\n          const js = prop.valueBuilt || \"\";\n          const src = replaceWithObject(js, replacement) || \"\";\n          const fn = new Function(\n            ...Object.keys(arg),\n            `// [${meta.item.name}] ${name}: ${meta.item.id} \n  return ${src}\n    `\n          );\n\n          script.props[name] = { value: src };\n          let val = fn(...Object.values(arg));\n\n          if (typeof val === \"function\") {\n            script.props[name].fn = val;\n            val = (...args: any[]) => {\n              if (script) return script.props?.[name].fn(...args);\n            };\n          }\n\n          arg[name] = val;\n          _props[name] = val;\n\n          if (passprop) {\n            passprop[name] = val;\n          }\n        } catch (e) {\n          fails.add(name);\n        }\n      }\n\n      if (location.pathname.startsWith(\"/ed/\") && active.item_id) {\n        if (meta.item.id === active.item_id) {\n          active.scope = {};\n          for (const [k, v] of Object.entries(passprop)) {\n            active.scope[k] = v;\n          }\n\n          active.scope.self_props = _props;\n        }\n      }\n    }\n  }\n};\n\nconst conf = {\n  timeout: null as any,\n  set: new WeakSet<FMCompDef>(),\n  map: {} as Record<string, { mprop: FMCompDef }>,\n  src: {} as Record<string, string>,\n};\nconst updatePropValueBuilt = (mprop: FMCompDef, src: string) => {\n  if (!conf.set.has(mprop)) {\n    conf.set.add(mprop);\n    const id = createId();\n    conf.map[id] = { mprop };\n    conf.src[id] = src;\n  }\n  clearTimeout(conf.timeout);\n  conf.timeout = setTimeout(async () => {\n    const result = await _api.code_build(conf.src);\n\n    let doc = null as unknown as Doc;\n    for (const [k, v] of Object.entries(result)) {\n      const mprop = conf.map[k].mprop;\n      if (!doc && mprop.doc) {\n        doc = mprop.doc;\n        break;\n      }\n    }\n    if (doc) {\n      doc.transact(() => {\n        for (const [k, v] of Object.entries(result)) {\n          const mprop = conf.map[k].mprop;\n          mprop.set(\"valueBuilt\", v);\n        }\n      });\n\n      conf.set = new WeakSet();\n      conf.map = {};\n      conf.src = {};\n    }\n  }, 300);\n};\n\nexport const updatePropScope = (\n  vi: { site: { db: any; api: any } },\n  meta: IMeta,\n  scope: any,\n  parent_key?: any\n) => {\n  const script = parent_key\n    ? meta.item.script_keyed?.[parent_key]\n    : meta.item.script;\n\n  if (!script) return;\n\n  if (script.props) {\n    const scopes = { ...scope, api: vi.site.api, db: vi.site.db };\n    for (const [name, prop] of Object.entries(script.props)) {\n      if (prop.fn) {\n        const fn = new Function(\n          ...Object.keys(scopes),\n          `// [${meta.item.name}] ${name}: ${meta.item.id} \n  return ${prop.value || \"\"}\n    `\n        );\n        prop.fn = fn(...Object.values(scopes));\n      }\n    }\n  }\n};\n","import {\n  FC,\n  ReactElement,\n  ReactNode,\n  Suspense,\n  isValidElement,\n  useEffect,\n} from \"react\";\nimport { w } from \"../../../../utils/types/general\";\nimport { IMeta } from \"../../../ed/logic/ed-global\";\nimport { ErrorBox } from \"../../utils/error-box\";\nimport { VG } from \"../global\";\nimport { viParts } from \"../parts\";\nimport { viScriptArg } from \"./arg\";\nimport { updatePropScope } from \"./eval-prop\";\nimport { extractNavigate } from \"./extract-nav\";\nimport { createViLocal } from \"./local\";\nimport { createViPassProp } from \"./passprop\";\nexport const viEvalScript = (\n  vi: {\n    page: VG[\"page\"];\n    mode: VG[\"mode\"];\n    layout: VG[\"layout\"];\n    site: { db: any; api: any };\n    comp: VG[\"comp\"];\n    meta: VG[\"meta\"];\n    visit?: VG[\"visit\"];\n    script?: { init_local_effect: any };\n    on_nav_loaded?: VG[\"on_preload\"];\n  },\n  meta: IMeta,\n  is_layout: boolean,\n  passprop: any,\n  depth: number,\n  parent_key?: any\n) => {\n  const parts = viParts(vi, meta, is_layout, passprop, depth);\n\n  if (vi.visit) vi.visit(meta, parts);\n  if (!meta.script) {\n    meta.script = {\n      scope: passprop,\n      result: null,\n      Local: createViLocal(vi, is_layout, meta),\n      PassProp: createViPassProp(vi, is_layout, meta, passprop),\n    };\n  } else {\n    meta.script.scope = passprop;\n  }\n\n  const script = meta.script;\n  const exports = (window as any).exports;\n  const arg = {\n    useEffect,\n    children: parts.props.children,\n    props: parts.props,\n    Local: script?.Local,\n    db: vi.site.db,\n    api: vi.site.api,\n    PassProp: script?.PassProp,\n    ErrorBox: ErrorBox,\n    newElement: () => {},\n    render: (jsx: ReactNode) => {\n      let result = jsx;\n      if (isValidElement(jsx) && jsx.props.children) {\n        const override_children = (\n          el: ReactElement<{ children: any }>\n        ): {\n          should_replace: boolean;\n          el: ReactElement;\n        } => {\n          let should_replace = false;\n          const new_childs = [];\n\n          if (isValidElement(el)) {\n            if (el.type === meta.script?.PassProp) {\n              return {\n                should_replace: true,\n                el: {\n                  ...el,\n                  props: { ...el.props, internal_key: el.key },\n                },\n              };\n            }\n            if (Array.isArray(el.props?.children)) {\n              for (const child of el.props?.children) {\n                if (Array.isArray(child)) {\n                  const sub_child = [];\n                  let sub_replace = false;\n                  for (const c of child) {\n                    let nc = override_children(c);\n                    if (nc.should_replace) {\n                      sub_child.push(nc.el);\n                      sub_replace = true;\n                    } else {\n                      sub_child.push(c);\n                    }\n                  }\n                  if (sub_replace) {\n                    should_replace = true;\n                    new_childs.push(sub_child);\n                  } else {\n                    new_childs.push(child);\n                  }\n                } else if (typeof child === \"object\") {\n                  if (child.type === meta.script?.PassProp) {\n                    should_replace = true;\n                    new_childs.push({\n                      ...child,\n                      props: { ...child.props, internal_key: child.props.key },\n                    });\n                  }\n                } else {\n                  new_childs.push(child);\n                }\n              }\n            }\n          }\n\n          return {\n            should_replace,\n            el: { ...el, props: { ...el.props, children: new_childs } },\n          };\n        };\n        const res = override_children(jsx as any);\n\n        if (res.should_replace) {\n          result = res.el;\n        }\n      }\n      if (script) script.result = <Suspense>{result}</Suspense>;\n    },\n    params,\n    ...viScriptArg(vi),\n    ...exports,\n    ...passprop,\n    _meta: vi.meta,\n    _item: meta.item,\n    _syncm: typeof syncronize !== \"undefined\" ? syncronize : undefined,\n  };\n\n  if (typeof passprop === \"object\") {\n    for (const [k, v] of Object.entries(passprop)) {\n      if (typeof v === \"object\" && v && (v as any)._jsx) {\n        const jprop = v as unknown as {\n          _jsx: true;\n          fn: (arg: { passprop: any; meta: IMeta }) => ReactNode;\n        };\n        arg[k] = (\n          <JsxProp fn={jprop.fn} passprop={{ ...passprop }} meta={meta} />\n        );\n      }\n    }\n  }\n\n  if (!w.isEditor && meta.item.adv?.js) {\n    extractNavigate(vi, meta.item.adv.js);\n  }\n\n  const js = meta.item.adv?.jsBuilt || \"\";\n  const src = replaceWithObject(js, replacement) || \"\";\n\n  try {\n    const fn = new Function(\n      ...Object.keys(arg),\n      \"___js\",\n      `// ${meta.item.name}: ${meta.item.id} \ntry {\n${src}\n} catch(e) {\n  console.warn(\"Error at item ${meta.item.name}:\", ___js);\n  console.error(e);\n}\n  `\n    );\n    fn(...Object.values(arg), meta.item.adv?.js);\n  } catch (e) {\n    console.warn(`Error at item ${meta.item.name}:`, meta.item.adv?.js);\n    console.error(e);\n  }\n\n  updatePropScope(vi, meta, passprop, parent_key);\n};\n\nconst JsxProp: FC<{\n  fn: (arg: { passprop: any; meta: IMeta }) => ReactNode;\n  meta: IMeta;\n  passprop: any;\n}> = ({ fn, meta, passprop }) => {\n  return fn({ passprop, meta });\n};\n\nexport const replacement = {\n  \"stroke-width\": \"strokeWidth\",\n  \"fill-rule\": \"fillRule\",\n  \"clip-rule\": \"clipRule\",\n  \"stroke-linejoin\": \"strokeLinejoin\",\n  \"stroke-linecap\": \"strokeLinecap\",\n  \"clip-path\": \"clipPath\",\n};\n\nexport const replaceWithObject = (tpl: string, data: any) => {\n  let res = tpl;\n  for (const [k, v] of Object.entries(data)) {\n    res = res.replaceAll(k, v as string);\n  }\n  return res;\n};\n","import { ReactNode, useEffect, useRef, useState } from \"react\";\nimport { IMeta } from \"../../../ed/logic/ed-global\";\nimport { updatePropScope } from \"./eval-prop\";\nimport { modifyChild } from \"./passprop\";\nimport { VG } from \"../global\";\n\nexport const editorLocalValue = {} as Record<string, any>;\n\nexport const createViLocal = (\n  vi: {\n    layout: VG[\"layout\"];\n    site: { db: any; api: any };\n    meta: Record<string, IMeta>;\n    script?: {\n      init_local_effect: any;\n    };\n  },\n  is_layout: boolean,\n  meta: IMeta\n) => {\n  return <T extends Record<string, any>>(arg: {\n    children: ReactNode;\n    name: string;\n    value: T;\n    hook?: (local: T) => void;\n    effect?: (local: T) => void | Promise<void>;\n    parent_key?: any;\n    deps?: any[];\n  }) => {\n    const isEditor =\n      [\"localhost\", \"prasi.avolut.com\"].includes(location.hostname) &&\n      location.pathname.startsWith(\"/ed/\");\n    let id = meta.item.id;\n\n    const { children, parent_key } = arg;\n    const init_local_effect = vi.script?.init_local_effect;\n    const metas = is_layout ? vi.layout?.meta : vi.meta;\n    const ref = useRef<any>(\n      editorLocalValue[id] ? editorLocalValue[id] : arg.value\n    );\n    const [_, set] = useState({});\n    const local = ref.current;\n    local.render = () => {\n      if ((window as any).prasiContext.render) {\n        (window as any).prasiContext.render();\n      } else {\n        set({});\n      }\n    };\n\n    updatePropScope(vi, meta, meta.script?.scope, parent_key);\n\n    if (arg.hook) {\n      arg.hook(local);\n    }\n\n    useEffect(() => {\n      if (meta.parent?.instance_id && metas) {\n        const parent_meta = metas[meta.parent?.instance_id];\n        if (parent_meta && parent_meta.instances) {\n          for (const [k, v] of Object.entries(\n            parent_meta.instances[meta.parent.instance_id]\n          )) {\n            if (v === meta.item.id) {\n              id = k;\n              break;\n            }\n          }\n        }\n      }\n\n      let should_run = !init_local_effect[id];\n      if (should_run) {\n        if (typeof init_local_effect === \"object\") {\n          init_local_effect[id] = true;\n        }\n        const fn = async () => {\n          if (arg.effect) {\n            await arg.effect(local);\n            if (isEditor) {\n              editorLocalValue[id] = local;\n            }\n          }\n        };\n\n        fn();\n      }\n\n      return () => {};\n    }, [...(arg.deps || []), location.pathname]);\n\n    useEffect(() => {\n      if (isEditor) {\n        if (editorLocalValue[id] === null) {\n          const fn = async () => {\n            if (arg.effect) {\n              await arg.effect(local);\n              if (isEditor) {\n                editorLocalValue[id] = local;\n              }\n            }\n          };\n          fn();\n        }\n      }\n    }, [editorLocalValue[id]]);\n\n    return modifyChild(children, {\n      ...meta.script?.scope,\n      [arg.name]: local,\n    });\n  };\n};\n","import get from \"lodash.get\";\nimport { ReactNode, isValidElement, useState } from \"react\";\nimport { IMeta } from \"../../../ed/logic/ed-global\";\nimport { VG } from \"../global\";\nimport { ViRender } from \"../render\";\n\nexport const createViPassProp = (\n  vi: { meta: VG[\"meta\"]; render?: () => void; comp: VG[\"comp\"] },\n  is_layout: boolean,\n  meta: IMeta,\n  passprop: any\n) => {\n  return (\n    arg: Record<string, any> & { children: ReactNode; internal_key: any }\n  ) => {\n    const [_, render] = useState({});\n    const internal_key = arg.internal_key;\n\n    if (!meta.item.script) {\n      meta.item.script = {};\n    }\n\n    let script = meta.item.script;\n    if (internal_key) {\n      if (!meta.item.script_keyed) {\n        meta.item.script_keyed = {};\n      }\n\n      if (!meta.item.script_keyed[internal_key]) {\n        meta.item.script_keyed[internal_key] = {};\n      }\n      script = meta.item.script_keyed[internal_key] as any;\n    }\n\n    if (!script.passprop) {\n      script.passprop = {};\n    }\n\n    const script_pass: any = {};\n    if (script.passprop) {\n      let is_changed = false;\n      for (const [k, v] of Object.entries(arg)) {\n        if (![\"children\", \"key\"].includes(k)) {\n          is_changed = true;\n          script_pass[k] = v;\n          script.passprop[k] = { end: 0, start: 0, value: v };\n        }\n      }\n    }\n\n    const _pass = { ...passprop, ...script_pass };\n\n    if (\n      !Array.isArray(arg.children) &&\n      isValidElement(arg.children) &&\n      typeof arg.children === \"object\"\n    ) {\n      const children = get(\n        arg.children,\n        \"props.meta.item.component.props.child.content.childs\"\n      ) as unknown as any[];\n\n      if (Array.isArray(children)) {\n        let is_meta = true;\n        for (const c of children) {\n          if (!(!isValidElement(c) && typeof c === \"object\")) {\n            is_meta = false;\n          }\n        }\n\n        if (is_meta) {\n          return children.map((item) => {\n            let cmeta = vi.meta[item.id];\n\n            if (!cmeta) {\n              vi.meta[item.id] = { item };\n              cmeta = vi.meta[item.id];\n            }\n\n            if (cmeta) {\n              if (Object.keys(cmeta.item).length <= 3) {\n                if (cmeta.mitem) {\n                  const citem = { ...cmeta.item };\n                  const ref_item = cmeta.mitem.toJSON() as any;\n                  cmeta.item = { ...ref_item, ...citem };\n                }\n              }\n\n              return (\n                <ViRender\n                  key={item.id}\n                  is_layout={is_layout}\n                  meta={cmeta}\n                  passprop={_pass}\n                  parent_key={arg.internal_key}\n                />\n              );\n            }\n            return null;\n          });\n        }\n      }\n    }\n\n    if (\n      !Array.isArray(arg.children) &&\n      !isValidElement(arg.children) &&\n      typeof arg.children === \"object\"\n    ) {\n      const child_id = (arg.children as any).id;\n      if (child_id) {\n        let meta = vi.meta[child_id];\n\n        if (!meta) {\n          vi.meta[child_id] = { item: arg.children as any };\n          meta = vi.meta[child_id];\n\n          const comp_id = meta.item.component?.id;\n          if (comp_id) {\n            vi.comp.load(comp_id).then((comp) => {\n              if (comp) {\n                for (const [k, v] of Object.entries(comp)) {\n                  const item = meta.item as any;\n                  if (!item[k]) item[k] = v;\n                }\n                const props = meta.item.component?.props as any;\n                for (const [k, v] of Object.entries(\n                  comp.component?.props || {}\n                )) {\n                  if (!props[k]) props[k] = v;\n                }\n                render({});\n              }\n            });\n          }\n        }\n\n        return (\n          <ViRender\n            is_layout={is_layout}\n            meta={meta}\n            passprop={_pass}\n            parent_key={arg.internal_key}\n          />\n        );\n      }\n    }\n\n    const result = modifyChild(\n      arg,\n      _pass,\n      internal_key ? { parent_key: internal_key } : undefined\n    );\n    return result;\n  };\n};\n\nexport const modifyChild = (arg: any, passprop?: any, add_props?: any) => {\n  let prop: any = {};\n  if (Array.isArray(arg)) {\n    prop.children = arg;\n  } else {\n    prop = arg;\n  }\n\n  if (Array.isArray(prop.children)) {\n    const childs = [];\n    for (const child of prop.children) {\n      childs.push(modify(child, prop, passprop, add_props));\n    }\n    return childs;\n  }\n\n  return modify(prop.children, prop, passprop, add_props);\n};\n\nconst modify = (el: ReactNode, arg: any, passprop?: any, add_props?: any) => {\n  if (isValidElement(el)) {\n    const passarg = { ...arg };\n    delete passarg.children;\n\n    return {\n      ...el,\n      props: {\n        ...el.props,\n        ...add_props,\n        passprop: { ...passprop, ...passarg },\n      },\n    };\n  }\n  return el;\n};\n","import { FC } from \"react\";\nimport { useGlobal, useLocal } from \"web-utils\";\nimport { Loading } from \"../../utils/ui/loading\";\nimport { ViGlobal } from \"./render/global\";\nimport { ViRender } from \"./render/render\";\nimport { ErrorBox } from \"./utils/error-box\";\n\nexport const ViRoot: FC<{}> = ({}) => {\n  const vi = useGlobal(ViGlobal, \"VI\");\n  const local = useLocal({ tick: Date.now() });\n\n  vi.tick = local.tick;\n\n  if (vi.status !== \"ready\") {\n    return (\n      <div className=\"flex flex-1 flex-col relative\">\n        <Loading backdrop={false} />\n      </div>\n    );\n  }\n\n  const is_layout = !!vi.layout?.entry && vi.layout.entry.length > 0;\n  let entry = vi.entry;\n  if (is_layout && vi.layout?.entry) {\n    entry = vi.layout?.entry;\n  }\n\n  return (\n    <div className=\"flex flex-1 flex-col relative\">\n      {Array.isArray(entry) &&\n        entry.map((id) => {\n          const meta = is_layout ? vi.layout?.meta[id] : vi.meta[id];\n          if (meta) {\n            if (Element) {\n              return (\n                <ErrorBox key={meta.item.id}>\n                  <ViRender meta={meta} is_layout={is_layout} depth={0} />\n                </ErrorBox>\n              );\n            }\n          }\n          return null;\n        })}\n    </div>\n  );\n};\n","/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.37\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.37',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 500;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SHARP   = 'Sharp',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK    = 'Facebook',\n        CHROMIUM_OS = 'Chromium OS',\n        MAC_OS  = 'Mac OS';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    if (!regex[j]) { break; }\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i            // Baidu\n            ], [VERSION, [NAME, 'Baidu']], [\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,      // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n            // Trident based\n            /(avant|iemobile|slim)\\s?(?:browser)?[\\/ ]?([\\w\\.]*)/i,             // Avant/IEMobile/SlimBrowser\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n            /(heytap|ovi)browser\\/([\\d\\.]+)/i,                                  // Heytap/Ovi\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /microm.+\\bqbcore\\/([\\w\\.]+)/i,                                     // WeChat Desktop for Windows Built-in Browser\n            /\\bqbcore\\/([\\w\\.]+).+microm/i,\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /ya(?:search)?browser\\/([\\w\\.]+)/i                                  // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /slbrowser\\/([\\w\\.]+)/i                                             // Smart Lenovo Browser\n            ], [VERSION, [NAME, 'Smart Lenovo '+BROWSER]], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI '+BROWSER]], [\n            /fxios\\/([-\\w\\.]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihu|(qi?ho?o?|360)browser/i                                     // 360\n            ], [[NAME, '360 ' + BROWSER]], [\n            /(oculus|sailfish|huawei|vivo)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1 ' + BROWSER], VERSION], [                    // Oculus/Sailfish/HuaweiBrowser/VivoBrowser\n            /samsungbrowser\\/([\\w\\.]+)/i                                        // Samsung Internet\n            ], [VERSION, [NAME, SAMSUNG + ' Internet']], [\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n            /metasr[\\/ ]?([\\d\\.]+)/i                                            // Sogou Explorer\n            ], [VERSION, [NAME, 'Sogou Explorer']], [\n            /(sogou)mo\\w+\\/([\\d\\.]+)/i                                          // Sogou Mobile\n            ], [[NAME, 'Sogou Mobile'], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|2345Explorer)[\\/ ]?([\\w\\.]+)/i                        // QQBrowser/2345 Browser\n            ], [NAME, VERSION], [\n            /(lbbrowser)/i,                                                     // LieBao Browser\n            /\\[(linkedin)app\\]/i                                                // LinkedIn App for iOS & Android\n            ], [NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /(Klarna)\\/([\\w\\.]+)/i,                                             // Klarna Shopping Browser for iOS & Android\n            /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,                             // Kakao App\n            /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,                                  // Naver InApp\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(alipay)client\\/([\\w\\.]+)/i,                                       // Alipay\n            /(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i                     // Chromium/Instagram/Snapchat\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n            /musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i                        // TikTok\n            ], [VERSION, [NAME, 'TikTok']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i                // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror/Klar\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i,                                             // Links\n            /panasonic;(viera)/i                                                // Panasonic Viera\n            ], [NAME, VERSION], [\n            \n            /(cobalt)\\/([\\w\\.]+)/i                                              // Cobalt\n            ], [NAME, [VERSION, /master.|lts./, \"\"]]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,\n            /samsung[- ]([-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i                          // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n            /(macintosh);/i\n            ], [MODEL, [VENDOR, APPLE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei|honor)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,                  // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,        // Xiaomi Redmi 'numeric' models\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,                     // Redmi Pad\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\\))/i,                             // Kindle Fire without Silk / Echo Show\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n                \n            // Ulefone\n            /; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Ulefone'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(kobo)\\s(ereader|touch)/i,                                         // Kobo\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w+)( bui|\\))/i                                         // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i,\n            /(aquos-tv[\\w ]+)\\)/i                                               // Sharp\n            ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],[\n            /(bravia[\\w ]+)( bui|\\))/i                                              // Sony\n            ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [\n            /(mitv-\\w{5}) bui/i                                                 // Xiaomi\n            ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [\n            /Hbbtv.*(technisat) (.*);/i                                         // TechniSAT\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i         // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i                              // Apple Watch\n            ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n            /(quest( 2| pro)?)/i                                                // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n            /(aeobc)\\b/i                                                        // Echo Dot\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i    // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i    // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,                                      // iCab\n            /\\b(libweb)/i\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i             // Windows Phone\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /windows nt 6\\.2; (arm)/i,                                        // Windows RT\n            /windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,\n            /(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[VERSION, strMapper, windowsVersionMap], [NAME, 'Windows']], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, MAC_OS], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i                    // Android-x86/HarmonyOS\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n            /watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i                              // watchOS\n            ], [VERSION, [NAME, 'watchOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i                                  // Chromium OS\n            ], [[NAME, CHROMIUM_OS], VERSION],[\n\n            // Smart TVs\n            /panasonic;(viera)/i,                                               // Panasonic Viera\n            /(netrange)mmh/i,                                                   // Netrange\n            /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,                                         // NetTV\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _navigator = (typeof window !== UNDEF_TYPE && window.navigator) ? window.navigator : undefined;\n        var _ua = ua || ((_navigator && _navigator.userAgent) ? _navigator.userAgent : EMPTY);\n        var _uach = (_navigator && _navigator.userAgentData) ? _navigator.userAgentData : undefined;\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n        var _isSelfNav = _navigator && _navigator.userAgent == _ua;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser[MAJOR] = majorize(_browser[VERSION]);\n            // Brave-specific detection\n            if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {\n                _browser[NAME] = 'Brave';\n            }\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {\n                _device[TYPE] = MOBILE;\n            }\n            // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n            if (_isSelfNav && _device[MODEL] == 'Macintosh' && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {\n                _device[MODEL] = 'iPad';\n                _device[TYPE] = TABLET;\n            }\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            if (_isSelfNav && !_os[NAME] && _uach && _uach.platform != 'Unknown') {\n                _os[NAME] = _uach.platform  \n                                    .replace(/chrome os/i, CHROMIUM_OS)\n                                    .replace(/macos/i, MAC_OS);           // backward compatibility\n            }\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === FUNC_TYPE && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","import type { OnMount } from \"@monaco-editor/react\";\nimport { w } from \"../types/general\";\nimport { prismaExtendType } from \"./prisma-extend\";\nimport { baseTypings } from \"./types/base\";\nimport { extractProp } from \"./types/prop\";\nexport type MonacoEditor = Parameters<OnMount>[0];\ntype Monaco = Parameters<OnMount>[1];\n\nconst map = new WeakMap<any>();\n\nexport const registerSiteTypings = (\n  monaco: Monaco,\n  p: {\n    site_dts: string;\n    site_dts_entry: any;\n  }\n) => {\n  if (p.site_dts) {\n    register(monaco, p.site_dts, \"ts:site.d.ts\");\n    register(\n      monaco,\n      `\n  declare global {\n    import * as _ from \"index\"\n    ${Object.entries(p.site_dts_entry)\n      .map(([name, type]) => {\n        return `\n    ${type} ${name} = _.${name};`;\n      })\n      .join(\"\\n\")}\n  }\n  export {}\n    `,\n      \"ts:active_global.d.ts\"\n    );\n  }\n};\n\nexport const monacoTypings = async (\n  p: {\n    site_dts: string;\n    site_dts_entry: any;\n    site: { api_url: string };\n    site_exports: Record<string, any>;\n    script: { siteTypes: Record<string, string> };\n  },\n  monaco: Monaco,\n  prop: { values: Record<string, any>; types: Record<string, string> }\n) => {\n  registerSiteTypings(monaco, p);\n  if (!map.has(prop.values)) {\n    map.set(prop.values, true);\n  } else {\n    return;\n  }\n\n  const prasi_api = w.prasiApi[p.site.api_url];\n  if (prasi_api) {\n    if (prasi_api && prasi_api.prismaTypes) {\n      const prisma = prasi_api.prismaTypes;\n\n      if (prisma) {\n        register(\n          monaco,\n          `\\\ndeclare module \"ts:runtime/index\" {\n  ${prisma[\"runtime/index.d.ts\"]}\n}`,\n          `ts:runtime/index.d.ts`\n        );\n\n        register(\n          monaco,\n          `\\\ndeclare module \"ts:runtime/library\" {\n  ${prisma[\"runtime/library.d.ts\"]}\n}`,\n          `ts:runtime/library.d.ts`\n        );\n\n        register(\n          monaco,\n          `\\\ndeclare module \"ts:prisma\" {\n  ${prisma[\"prisma.d.ts\"]\n    .replace(\n      `import * as runtime from './runtime/library.js';`,\n      `import * as runtime from 'ts:runtime/library';`\n    )\n    .replace(\n      `import * as runtime from './runtime/library';`,\n      `import * as runtime from 'ts:runtime/library';`\n    )}\n}`,\n          `ts:prisma.d.ts`\n        );\n      }\n      const api_types = prasi_api.apiTypes;\n      if (api_types) register(monaco, api_types, \"ts:api.d.ts\");\n    }\n  }\n\n  monaco.languages.typescript.typescriptDefaults.setExtraLibs([\n    {\n      filePath: \"react.d.ts\",\n      content: `declare module \"react\" {\n${await loadText(\"https://cdn.jsdelivr.net/npm/@types/react@18.3.1/index.d.ts\")}\n}`,\n    },\n    {\n      filePath: \"jsx-runtime.d.ts\",\n      content: `declare module \"react/jsx-runtime\" {\n${(\n  await loadText(\n    \"https://cdn.jsdelivr.net/npm/@types/react@18.3.1/jsx-runtime.d.ts\"\n  )\n).replaceAll('from \"./\"', 'from \"react\"')}\n}`,\n    },\n  ]);\n\n  const propText = extractProp({\n    values: prop.values,\n    types: { ...prop.types, ...p.script.siteTypes },\n  });\n\n  const apiTypes = w.prasiApi[p.site.api_url]\n    ? w.prasiApi[p.site.api_url].apiTypes\n    : \"\";\n\n  let apiPath = \"app/gen/srv/api/srv\";\n  if (apiTypes && apiTypes.includes(`export * as srv from \"gen/srv/api/srv\"`)) {\n    apiPath = \"gen/srv/api/srv\";\n  }\n\n  register(\n    monaco,\n    `\\\nimport React from \"react\";\nimport {\n  FC as ReactFC,\n  ReactNode as RNode,\n  ReactElement as RElement,\n} from \"react\";\nimport prisma from 'ts:prisma';\n\n${iftext(\n  apiTypes,\n  `\\\nimport \"./api\"\nimport type * as SRVAPI from \"${apiPath}\";`\n)}\n\ndeclare global {\n  const db: prisma.PrismaClient & ${prismaExtendType};\n  \n  ${baseTypings}\n\n  ${iftext(\n    apiTypes,\n    `\n  type Api = typeof SRVAPI;\n  type ApiName = keyof Api;\n  const api: { [k in ApiName]: Awaited<Api[k][\"handler\"]>[\"_\"][\"api\"] } & { _raw: any };\n  `\n  )}\n}\n\n  `,\n    \"ts:global.d.ts\"\n  );\n\n  register(monaco, propText.join(\"\\n\"), \"ts:typings.d.ts\");\n};\n\nconst loadText = async (url: string) => {\n  try {\n    const res = await fetch(url);\n    return await res.text();\n  } catch (e) {\n    return \"\";\n  }\n};\n\nexport const iftext = (condition: any, text: string) => {\n  if (condition) {\n    return text;\n  }\n  return \"\";\n};\n\nexport const register = (monaco: Monaco, source: string, uri: string) => {\n  const model = monaco.editor.getModels().find((e) => {\n    return e.uri.toString() === uri;\n  });\n  if (model) {\n    model.setValue(source);\n  } else {\n    monaco.editor.createModel(source, \"typescript\", monaco.Uri.parse(uri));\n  }\n};\n","export const prismaExtendType = `\\\n{\n  _batch: {\n    update: (\n      batch: { \n        table: string, \n        data: any, \n        where: any \n      }[]\n    ) => Promise<void>;\n  };\n  _schema: {\n    tables: () => Promise<string[]>;\n    columns: (table: string) => Promise<\n      Record<\n        string,\n        {\n          is_pk: boolean;\n          type: string;\n          optional: boolean;\n          db_type: string;\n          default?: any\n        } \n      >\n    >;\n    rels: (table: string) => Promise<Record<string, {\n      type: 'has-many' | 'has-one';\n      to: {\n        table: string, \n        fields: string[]\n      };\n      from: { \n        table: string, \n        fields: string[]\n      }\n    }>>;\n  }\n}`;\n\nconst rel_types = `\\\n{\n  \n}`;\n","export const baseTypings = `\n  type FC<T> = ReactFC<T>;\n  const Fragment: typeof React.Fragment;\n  const ReactNode: RNode;\n  const useCallback: typeof React.useCallback;\n  const useMemo: typeof React.useMemo;\n  const ReactElement: RElement;\n  const isValidElement: typeof React.isValidElement;\n  const useEffect: typeof React.useEffect;\n  const useState: typeof React.useState;\n\n  const _meta: Record<string, any>;\n  const _item: IContent;\n  const _syncm: (mitem:any, item:any) => void;\n  const pathname: string;\n  const isEditor: boolean;\n  const isLayout: boolean;\n  const isMobile: boolean;\n  const isDesktop: boolean;\n  const siteurl: (path:string) => string;\n  const preload: (urls: string | string[], opt?: {\n    on_load?: (\n      pages: {\n        id: string;\n        url: string;\n        root: IRoot;\n      }[],\n      walk: (\n        root: { root: IRoot }[],\n        visit: (item: IContent) => void | Promise<void>\n      ) => void\n    ) => void;}) => ReactNode;\n  const apiHeaders: Record<string, any>;\n  const navigate: (url: string) => void;\n  const params: any;\n  const cx: (...classNames: any[]) => string;\n  const css: (\n    tag: TemplateStringsArray | string,\n    ...props: Array<string | number | boolean | undefined | null>\n  ) => string;\n\n  const props: {\n    className: string;\n    onPointerDown?: () => void;\n    onPointerMove?: () => void;\n    onPointerLeave?: () => void;\n    inherit?: {\n      style: any, \n      className: string\n    }\n  };\n  const children: RNode;\n\n  const PassProp: FC<Record<string, any> & { children: React.ReactNode }>;\n  const Preload: FC<{ url: string[] }>;\n  const apiurl: string;\n  const pageid: string;\n  type ITEM = {\n    id: string;\n    name: string;\n    type: \"item\" | \"text\";\n    adv?: {\n      js?: string;\n      jsBuilt?: string;\n      css?: string;\n      html?: string;\n    };\n    text: string;\n    html: string;\n    component?: {\n      id: string;\n      props: Record<\n        string,\n        {\n          value: string;\n          valueBuilt: string;\n          meta: { type: string };\n        }\n      >;\n    };\n    childs: ITEM[];\n  };\n  const newElement: (gen?: (item: ITEM) => ITEM | ITEM[]) => React.ReactNode;\n  const mobile: {\n    notif: {\n      register: (user_id: string) => void;\n      send: (data: {\n        user_id: string;\n        title: string;\n        body: string;\n        data: any;\n      }) => void;\n      onTap: (\n        data: null | {\n          user_id: string;\n          title: string;\n          body: string;\n          data: any;\n        }\n      ) => void | Promise<void>;\n      onReceive: (data: {\n        user_id: string;\n        title: string;\n        body: string;\n        data: any;\n      }) => void | Promise<void>;\n    };\n  };\n  const Local: <T extends Record<string, any>>(arg: {\n    name: string;\n    idx?: any;\n    value: T;\n    children: ReactNode;\n    deps?: any[];\n    effect?: (\n      local: T & { render: () => void }\n    ) => void | (() => void) | Promise<void | (() => void)>;\n    hook?: (\n      local: T & { render: () => void }\n    ) => void | (() => void) | Promise<void | (() => void)>;\n    cache?: boolean;\n  }) => RNode\n`;\n","import trim from \"lodash.trim\";\nimport { isValidElement } from \"react\";\n\nexport const extractProp = (prop: {\n  values: Record<string, any>;\n  types: Record<string, string>;\n}) => {\n  const propTypes: string[] = [];\n  const props: Record<string, { val?: any; type?: string }> = {};\n\n  if (prop) {\n    if (prop.values) {\n      for (const [k, v] of Object.entries(prop.values)) {\n        if (!props[k]) {\n          props[k] = {};\n        }\n\n        if (typeof v === \"function\") {\n          if (isFunctionalComponent(v)) {\n            props[k].type = \"React.FC\";\n          } else if (isClassComponent(v)) {\n            props[k].type = \"React.Component\";\n          } else {\n            props[k].type = \"any\";\n          }\n        } else if (v) {\n          if (typeof v === \"object\" && v._jsx) {\n            props[k].type = \"React.ReactElement;\";\n          } else if (!!v.render && typeof v.$$typeof === \"symbol\") {\n            props[k].type = \"React.FC<Record<string,any> & {ref?:any}>\";\n          } else {\n            props[k].val = v;\n          }\n        }\n      }\n    }\n  }\n\n  if (prop.types) {\n    for (const [k, v] of Object.entries(prop.types)) {\n      if (!props[k]) {\n        props[k] = {};\n      }\n      props[k].type = v;\n    }\n  }\n\n  for (const [k, v] of Object.entries(props)) {\n    if (v.type) {\n      if (k === \"_raw\") {\n        propTypes.push(v.type);\n      } else {\n        let const_or_type = \"const\";\n        let str = v.type;\n        if (v.type.startsWith(\"type:\")) {\n          str = v.type.substring(\"type:\".length);\n          const_or_type = \"type\";\n        }\n        propTypes.push(`${const_or_type} ${k}: ${trim(str, \"; \\n\")};`);\n      }\n    } else if (v.val) {\n      if (typeof v.val === \"object\" && isValidElement(v.val)) {\n        propTypes.push(`const ${k}: ReactElement;`);\n      } else {\n        try {\n          let val = v.val;\n\n          if (typeof val === \"object\") {\n            if (typeof val.render === \"function\") {\n              val = { ...val, render: () => {} };\n            }\n\n            propTypes.push(`const ${k}: ${recurseTypes(val)};`);\n          } else {\n            propTypes.push(`const ${k}: string;`);\n          }\n        } catch (e) {}\n      }\n    }\n  }\n\n  return propTypes;\n};\n\nfunction recurseTypes(object: any) {\n  const result: string[] = [];\n  if (typeof object === \"object\") {\n    if (object === null) return \"null\";\n    if (Array.isArray(object)) {\n      return `any[]`;\n    }\n\n    for (const [k, v] of Object.entries(object)) {\n      result.push(\n        `${k}: ${typeof v === \"object\" && v ? recurseTypes(v) : typeof v}`\n      );\n    }\n\n    return `{\n  ${result.join(\";\\n  \")}\n}`;\n  }\n  return typeof object;\n}\n\nfunction isFunctionalComponent(Component: any) {\n  return (\n    typeof Component === \"function\" && // can be various things\n    !(\n      (\n        Component.prototype && // native arrows don't have prototypes\n        Component.prototype.isReactComponent\n      ) // special property\n    )\n  );\n}\n\nfunction isClassComponent(Component: any) {\n  return !!(\n    typeof Component === \"function\" &&\n    Component.prototype &&\n    Component.prototype.isReactComponent\n  );\n}\n","import { compress, decompress } from \"wasm-gzip\";\nimport { deepClone } from \"web-utils\";\nimport * as Y from \"yjs\";\nimport { clientStartSync } from \"../../../utils/sync/ws-client\";\nimport { w } from \"../../../utils/types/general\";\nimport { Loading } from \"../../../utils/ui/loading\";\nimport { EmptySite, PG } from \"./ed-global\";\nimport { treeRebuild } from \"./tree/build\";\nimport { reloadPage } from \"./ed-route\";\nimport { loadSite } from \"./ed-site\";\nimport { updateComponentMeta } from \"./comp/load\";\nimport { createRouter, RadixRouter } from \"radix3\";\nimport { loadCode, loadFrontEnd, loadTypings } from \"./code-loader\";\nimport { registerSiteTypings } from \"../../../utils/script/typings\";\n\nconst decoder = new TextDecoder();\n\nconst page = {\n  list: [] as { id: string; url: string }[],\n  route: null as null | RadixRouter<{ id: string; url: string }>,\n};\n\nexport const loadSession = (p: PG) => {\n  const session = JSON.parse(\n    localStorage.getItem(\"prasi-session\") || \"null\"\n  ) as { data: { user: { id: string; username: string } } };\n  if (!session && location.pathname.startsWith(\"/ed/\")) {\n    location.href = \"/login\";\n    return <Loading note=\"logging in\" />;\n  }\n\n  if (session?.data?.user) {\n    p.user.id = session.data.user.id;\n    p.user.username = session.data.user.username;\n  } else {\n    p.user.id = \"ab1390f5-40d5-448e-a8c3-84b0fb600930\";\n    p.user.username = \"anonymous\";\n  }\n};\n\nexport const edInitSync = (p: PG) => {\n  loadSession(p);\n  if (location.pathname.startsWith(\"/vi/\")) {\n    if (page.list.length === 0) {\n      _db.page\n        .findMany({\n          where: {\n            id_site: params.site_id,\n            is_deleted: false,\n            is_default_layout: false,\n          },\n          select: {\n            id: true,\n            url: true,\n          },\n        })\n        .then((list) => {\n          page.list = list;\n          edInitSync(p);\n        });\n\n      return;\n    }\n    if (!page.route) {\n      page.route = createRouter();\n      for (const e of page.list) {\n        page.route.insert(e.url, e);\n      }\n    }\n\n    const arrpath = location.pathname.split(\"/\");\n    const pathname = \"/\" + arrpath.slice(3).join(\"/\");\n\n    if (!params.page_id) {\n      const res = page.route.lookup(pathname);\n      if (res) {\n        params.page_id = res.id;\n        if (res.params) {\n          for (const [k, v] of Object.entries(res.params)) {\n            if (![\"site_id\", \"page_id\"].includes(k)) {\n              params[k] = v;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  if (p.sync) {\n    if (p.site.id === \"--loading--\") return false;\n    if (params.site_id !== p.site.id) {\n      p.site = deepClone(EmptySite);\n      p.site.id = \"--loading--\";\n      p.ui.popup.code.init = false;\n      p.sync.site.load(params.site_id).then(async (site) => {\n        if (site) {\n          await loadSite(p, site, \"from-sync\");\n          p.render();\n        } else {\n          alert(\"Site not found. redirecting...\");\n          location.href = `/ed/`;\n        }\n        return;\n      });\n      return false;\n    }\n\n    if (\n      !p.page.cur.id &&\n      !params.page_id &&\n      params.site_id &&\n      location.pathname.startsWith(\"/ed/\")\n    ) {\n      _db.page\n        .findFirst({\n          where: {\n            is_deleted: false,\n            is_default_layout: false,\n            id_site: params.site_id,\n          },\n          select: { id: true },\n        })\n        .then((e) => {\n          if (params.site_id === \"_\") {\n            alert(\"asdsa\");\n            return;\n          }\n          if (e) location.href = `/ed/${params.site_id}/${e.id}`;\n        });\n      return false;\n    }\n  }\n  if (!p.sync && !p.sync_assigned) {\n    p.sync_assigned = true;\n    clientStartSync({\n      user_id: p.user.id,\n      site_id: params.site_id,\n      page_id: params.page_id,\n      events: {\n        opened() {\n          if (w.offline) {\n            console.log(\"reconnected!\");\n            w.offline = false;\n            p.ui.syncing = true;\n            p.render();\n          } else {\n            w.offline = false;\n            p.render();\n          }\n        },\n        shakehand(client_id) {\n          p.user.client_id = client_id;\n        },\n        disconnected() {\n          console.log(\"offline, reconnecting...\");\n          w.offline = true;\n          p.render();\n          return {\n            reconnect: true,\n          };\n        },\n        async editor_start(e) {\n          if (params.site_id !== e.site_id || params.page_id !== e.page_id) {\n            if (!p.page.cur.id) {\n              p.site.id = e.site_id;\n              p.page.cur.id = e.page_id;\n              if (location.pathname.startsWith(\"/ed/\")) {\n                location.href = `/ed/${e.site_id}/${e.page_id}`;\n              }\n            }\n          } else {\n            p.site.id = e.site_id;\n            p.page.cur.id = e.page_id;\n            p.render();\n          }\n        },\n        site_updated(site) {\n          for (const [k, v] of Object.entries(site)) {\n            if (k === \"js\" || k === \"js_compiled\") {\n              p.site[k] = decoder.decode(decompress(v as any));\n            } else {\n              (p.site as any)[k] = v;\n            }\n          }\n          p.render();\n        },\n        async code_changes({ ts, mode }) {\n          if (mode === \"frontend\") {\n            await loadFrontEnd(p, ts);\n          } else {\n            console.log(\"Code updated\");\n            await loadTypings(p);\n            if (p.ui.monaco) {\n              registerSiteTypings(p.ui.monaco, p);\n            }\n          }\n          await treeRebuild(p);\n          p.render();\n        },\n        async remote_svlocal(data) {\n          let doc = null as any;\n          if (data.type === \"page\" && p.page.cur.id === data.id) {\n            doc = p.page.doc as Y.Doc;\n          } else if (data.type === \"comp\" && p.comp.list[data.id]) {\n            doc = p.comp.list[data.id].doc;\n          }\n\n          if (doc && p.sync) {\n            const diff_remote = Y.encodeStateAsUpdate(\n              doc,\n              decompress(data.sv_local)\n            );\n            const sv_remote = Y.encodeStateVector(doc);\n            const sv = Buffer.from(compress(sv_remote));\n            const diff = Buffer.from(compress(diff_remote));\n            const res = await p.sync.yjs.sv_remote(\n              data.type,\n              data.id,\n              sv,\n              diff\n            );\n\n            if (res) {\n              Y.applyUpdate(doc, decompress(res.diff), \"sv_remote\");\n              if (data.type === \"page\") {\n                delete p.preview.meta_cache[data.id];\n                await treeRebuild(p, { note: \"sv_remote\" });\n              } else if (data.type === \"comp\") {\n                const updated = await updateComponentMeta(p, doc, data.id);\n                if (updated) {\n                  p.comp.list[data.id].meta = updated.meta;\n                  p.comp.list[data.id].tree = updated.tree;\n                }\n                await treeRebuild(p, { note: \"sv_remote\" });\n              }\n              p.render();\n            }\n          }\n        },\n      },\n    }).then((e) => {\n      p.sync = e;\n    });\n\n    return false;\n  } else {\n    if (\n      params.page_id !== p.page.cur.id &&\n      location.pathname.startsWith(\"/ed\")\n    ) {\n      reloadPage(p, params.page_id, \"change page\");\n      return false;\n    }\n  }\n  return true;\n};\n","import { DeepProxy } from \"@qiwi/deep-proxy\";\nimport { xxhash32 } from \"hash-wasm\";\nimport { UseStore, get, set } from \"idb-keyval\";\nimport { Packr } from \"msgpackr\";\nimport { stringify } from \"safe-stable-stringify\";\nimport type { SyncActions } from \"../../../../srv/ws/sync/actions\";\nimport {\n  SyncActionDefinition,\n  SyncActionPaths,\n} from \"../../../../srv/ws/sync/actions-def\";\nimport { UserConf } from \"../../../../srv/ws/sync/entity/user\";\nimport { SyncType } from \"../../../../srv/ws/sync/type\";\nimport { ESite } from \"../../nova/ed/logic/ed-global\";\nimport { w } from \"../types/general\";\nimport { initIDB } from \"./idb\";\nconst packr = new Packr({ structuredClone: true });\n\n/** CONSTANT */\nconst WS_CONFIG = {\n  debug: !!localStorage.getItem(\"prasi-ws-debug\"),\n  reconnectTimeout: 1000,\n};\n\nw.debug = new Proxy(\n  {},\n  {\n    get(target, p, receiver) {\n      if (p === \"off\") {\n        WS_CONFIG.debug = false;\n        localStorage.removeItem(\"prasi-js-debug\");\n        localStorage.removeItem(\"prasi-ws-debug\");\n        console.clear();\n        return [\"WS DEBUG: Deactivated\"];\n      }\n      if (p === \"on\") {\n        WS_CONFIG.debug = true;\n        localStorage.setItem(\"prasi-ws-debug\", \"1\");\n        console.clear();\n        return [\"WS DEBUG: Activated\"];\n      }\n      if (p === \"js\") {\n        localStorage.setItem(\"prasi-js-debug\", \"1\");\n        console.clear();\n        return [\"JS DEBUG: Activated\"];\n      }\n    },\n  }\n) as any;\n\nconst conf = {\n  ws: null as null | WebSocket,\n  client_id: \"\",\n  idb: null as null | UseStore,\n  event: null as null | ClientEventObject,\n};\n\nconst runtime = {\n  action: {\n    pending: {} as Record<\n      string,\n      { ts: number; resolve: (value: any) => void }\n    >,\n  },\n};\n\ntype User = {\n  id: string;\n  name: string;\n};\n\nexport type ClientEventObject = Parameters<typeof clientStartSync>[0][\"events\"];\nexport type ClientEvent = keyof ClientEventObject;\n\nconst sendWs = (ws: WebSocket, msg: any) => {\n  const raw = packr.pack(msg);\n  if (WS_CONFIG.debug)\n    console.log(`%c⬆`, \"color:blue\", formatBytes(raw.length, 0), msg);\n  ws.send(raw);\n};\n\nexport const clientStartSync = async (arg: {\n  user_id: string;\n  site_id?: string;\n  page_id?: string;\n  events: {\n    editor_start: (arg: UserConf) => void;\n    remote_svlocal: (arg: {\n      type: \"page\" | \"comp\";\n      id: string;\n      sv_local: Uint8Array;\n    }) => void;\n    site_updated: (\n      arg: Partial<\n        Omit<ESite, \"js\" | \"js_compiled\"> & {\n          js: Uint8Array;\n          js_compiled: Uint8Array;\n        }\n      >\n    ) => void;\n    code_changes: (arg: { ts: number; mode: \"frontend\" | \"typings\" }) => void;\n    disconnected: () => { reconnect: boolean };\n    opened: () => void;\n    shakehand: (client_id: string) => void;\n  };\n}) => {\n  const { user_id, site_id, page_id, events } = arg;\n  conf.idb = initIDB(user_id);\n  await connect({ user_id, site_id, page_id }, events);\n  return new DeepProxy(\n    SyncActionDefinition,\n    ({ target, trapName, value, key, DEFAULT, PROXY }) => {\n      if (trapName === \"set\") {\n        throw new TypeError(\"target is immutable\");\n      }\n\n      if (typeof value === \"string\") {\n        return (...args: any[]) => {\n          return new Promise((resolve) => {\n            doAction({\n              code: value,\n              resolve,\n              args,\n            });\n          });\n        };\n      }\n\n      if (trapName === \"get\") {\n        if (typeof value === \"object\" && value !== null) {\n          return PROXY;\n        }\n      }\n\n      return DEFAULT;\n    }\n  ) as unknown as typeof SyncActions;\n};\n\nconst connect = (\n  opt: { user_id: string; page_id?: string; site_id?: string },\n  event: ClientEventObject\n) => {\n  const { user_id, page_id, site_id } = opt;\n  conf.event = event;\n  if (w.offline) {\n    return new Promise<void>(async (resolve) => {\n      resolve();\n      const eventName = \"editor_start\";\n      const data = await loadEventOffline(eventName);\n\n      if (event[eventName]) {\n        event[eventName](data);\n      }\n    });\n  } else {\n    return new Promise<void>((resolve, reject) => {\n      if (!conf.ws) {\n        let reconnect = 0;\n        const retry = () => {\n          const url = new URL(w.basehost || location.href);\n          url.pathname = \"/sync\";\n          url.protocol = url.protocol === \"http:\" ? \"ws:\" : \"wss:\";\n\n          const ws = new WebSocket(\n            `${url.protocol}//${url.host}${url.pathname}`\n          );\n\n          ws.onopen = () => {\n            sendWs(ws, { type: SyncType.UserID, user_id, site_id, page_id });\n            conf.ws = ws;\n            event.opened();\n          };\n          ws.onclose = async () => {\n            const res = event.disconnected();\n            if (res.reconnect) {\n              setTimeout(async () => {\n                reconnect++;\n                retry();\n              }, reconnect * WS_CONFIG.reconnectTimeout);\n            } else {\n              reject();\n            }\n          };\n          ws.onmessage = async (e) => {\n            const raw = e.data as Blob;\n            const msg = packr.unpack(Buffer.from(await raw.arrayBuffer()));\n            if (WS_CONFIG.debug)\n              console.log(`%c⬇`, `color:red`, formatBytes(raw.size, 0), msg);\n\n            if (msg.type === SyncType.ClientID) {\n              conf.client_id = msg.client_id;\n              event.shakehand(msg.client_id);\n\n              resolve();\n            } else if (msg.type === SyncType.Event) {\n              const eventName = msg.event as ClientEvent;\n              if (event[eventName]) {\n                if (offlineEvents.includes(eventName)) {\n                  saveEventOffline(eventName, msg.data);\n                }\n                event[eventName](msg.data);\n              }\n            } else if (msg.type === SyncType.ActionResult) {\n              const pending = runtime.action.pending[msg.argid];\n              if (pending) {\n                pending.resolve(msg.val);\n                delete runtime.action.pending[msg.argid];\n                const idb = conf.idb;\n                if (idb) {\n                  await set(msg.argid, msg.val, idb);\n                }\n              }\n            }\n          };\n        };\n        retry();\n      }\n    });\n  }\n};\n\nconst offlineEvents: ClientEvent[] = [\"editor_start\"];\nconst saveEventOffline = async (name: ClientEvent, data: any) => {\n  const idb = conf.idb;\n  if (idb) {\n    const hargs = await xxhash32(`ev-${name}`);\n    await set(hargs, data, idb);\n  }\n};\n\nconst loadEventOffline = async (name: ClientEvent) => {\n  const idb = conf.idb;\n  if (idb) {\n    const hargs = await xxhash32(`ev-${name}`);\n    return await get(hargs, idb);\n  }\n};\n\nconst doAction = async <T>(arg: {\n  code: string;\n  resolve: (value: any) => void;\n  args: any[];\n}) => {\n  const { args, code, resolve } = arg;\n  const ws = conf.ws;\n  const idb = conf.idb;\n  if (idb) {\n    const sargs = stringify(args);\n    const path = (SyncActionPaths as any)[code];\n    const argid = await xxhash32(`op-${path}-${sargs}`);\n\n    if (ws && ws.readyState === ws.OPEN) {\n      // online\n      runtime.action.pending[argid] = {\n        ts: Date.now(),\n        resolve,\n      };\n\n      sendWs(ws, { type: SyncType.Action, code, args, argid });\n    } else {\n      // offline\n      const cache = await get(argid, idb);\n      resolve(cache as T);\n    }\n  }\n};\n\nfunction formatBytes(bytes: number, decimals: number) {\n  if (bytes == 0) return \"0 Bytes\";\n  var k = 1024,\n    dm = decimals || 2,\n    sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"],\n    i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n}\n","function e(){return e=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e},e.apply(this,arguments)}var t={proxies:new WeakMap,traps:new WeakMap},r=function(e,t,r){return e.get(t)||e.set(t,new r).get(t)},a=function(e){return e.join()},n=function(e,r,n){var o,p;return t.proxies.get(null==(o=t.traps.get(e))||null==(p=o.get(r))?void 0:p.get(a(n)))},o=Symbol(\"default\"),p=Object.keys(Object.getOwnPropertyDescriptors(Reflect)),s=[\"get\",\"has\",\"set\",\"defineProperty\",\"deleteProperty\",\"getOwnPropertyDescriptor\"],c=function(e,t){var r=e.trapName,a=e.handler,p=e.traps,c=e.root,i=e.path,u=function(e,t){var r,a,n,o,p,s,c,i;switch(e){case\"get\":r=t[0],a=t[1],o=t[2];break;case\"set\":r=t[0],a=t[1],n=t[2],o=t[3];break;case\"deleteProperty\":case\"defineProperty\":r=t[0],s=t[1];break;case\"has\":case\"getOwnPropertyDescriptor\":r=t[0],a=t[1];break;case\"apply\":r=t[0],c=t[1],p=t[2];break;case\"construct\":r=t[0],p=t[1];break;case\"setPrototypeOf\":r=t[0],i=t[1];break;default:r=t[0]}return{target:r,name:a,receiver:o,val:n,args:p,descriptor:s,thisValue:c,prototype:i}}(r,t),l=u.target,y=u.name,d=u.val,h=u.receiver,g=u.args,v=u.descriptor,b=u.thisValue,k=u.prototype,w=s.includes(r)?y:void 0;return{parameters:t,target:l,name:y,val:d,args:g,descriptor:v,receiver:h,thisValue:b,prototype:k,trapName:r,traps:p,path:i,handler:a,key:w,newValue:\"set\"===r?d:void 0,root:c,get proxy(){return n(c,l,i)},get value(){return w&&l[w]},DEFAULT:o,PROXY:f.bind({root:c,handler:a,path:[].concat(i,[w])})}},i=function(){var e=[].slice.call(arguments),t=this.trapName,r=this.handler,a=c(this,e),n=a.PROXY,o=a.DEFAULT,p=r(a);return p===n?n(a.value):p===o?Reflect[t].apply(Reflect,e):p},u=function(e,t,r){return p.reduce(function(a,n){return a[n]=i.bind({trapName:n,handler:e,traps:a,root:t,path:r}),a},{})},l=function(e){return e.DEFAULT},f=function(o,p,s,c){!function(e){if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)throw new TypeError(\"Deep proxy could be applied to objects and functions only\")}(o);var i=e({},this),f=p||i.handler||l,y=s||i.path||[],d=i.root||c||o,h=n(d,o,y);if(h)return h;var g=u(f,d,y),v=new Proxy(o,g);return function(e,n,o,p,s){r(r(t.traps,e,WeakMap),n,Map).set(a(o),p),t.proxies.set(p,s)}(d,o,y,g,v),v},y=function(e,t,r,a){return f(e,t,r,a)};export{o as DEFAULT,y as DeepProxy,f as createDeepProxy,l as defaultProxyHandler};\n//# sourceMappingURL=deep-proxy.mjs.map\n","import type { TProxy, TProxyCache, TTarget, TTraps } from './interface'\n\nconst cache: TProxyCache = {\n  proxies: new WeakMap(),\n  traps: new WeakMap(),\n}\n\nconst getCache = <M extends WeakMap<any, any>, K>(\n  map: M,\n  key: K,\n  Constructor: any,\n) => map.get(key) || map.set(key, new Constructor()).get(key)\n\n// prettier-ignore\nconst getKey = (path: string[]): string => path.join(​) // eslint-disable-line no-irregular-whitespace\n\nexport const addToCache = <T extends TTarget>(\n  root: TTarget,\n  target: T,\n  path: string[],\n  traps: TTraps,\n  proxy: TProxy<T>,\n): void => {\n  getCache(getCache(cache.traps, root, WeakMap), target, Map).set(\n    getKey(path),\n    traps,\n  )\n  cache.proxies.set(traps, proxy)\n}\n\nexport const getFromCache = <T extends TTarget>(\n  root: T,\n  target: T,\n  path: string[],\n): TProxy<T> | undefined =>\n  cache.proxies.get(\n    cache.traps.get(root)?.get(target)?.get(getKey(path)) as TTraps,\n  ) as unknown as TProxy<T> | undefined\n","// eslint-disable-next-line\nimport type {\n  TTarget,\n  TProxy,\n  TProxyFactory,\n  TTrapName,\n  TTraps,\n  THandlerContext,\n  TProxyHandler,\n  TTrapContext,\n  TProxyFactoryThis,\n  DeepProxyConstructor,\n} from './interface'\n\nimport { addToCache, getFromCache } from './cache'\n\nexport const DEFAULT = Symbol('default')\n\nconst trapNames = Object.keys(\n  Object.getOwnPropertyDescriptors(Reflect),\n) as Array<TTrapName>\n\nconst trapsWithKey = [\n  'get',\n  'has',\n  'set',\n  'defineProperty',\n  'deleteProperty',\n  'getOwnPropertyDescriptor',\n]\n\nconst parseParameters = <T extends TTarget>(trapName: TTrapName, parameters: [T, ...any[]]): {\n  target: T,\n  name: keyof T,\n  val: any,\n  receiver: any,\n  args: any[],\n  descriptor: PropertyDescriptor,\n  thisValue: any,\n  prototype: any,\n\n} => {\n  // https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Proxy\n  let target, name, val, receiver, args, descriptor, thisValue, prototype\n\n  // prettier-ignore\n  switch (trapName) {\n    case 'get':\n      [target, name, receiver] = parameters\n      break\n    case 'set':\n      [target, name, val, receiver] = parameters\n      break\n    case 'deleteProperty':\n    case 'defineProperty':\n      [target, descriptor] = parameters\n      break\n    case 'has':\n    case 'getOwnPropertyDescriptor':\n      [target, name] = parameters\n      break\n    case 'apply':\n      [target, thisValue, args] = parameters\n      break\n     case 'construct':\n      [target, args] = parameters\n      break\n    case 'setPrototypeOf':\n      [target, prototype] = parameters\n       break\n    case 'preventExtensions':\n    case 'isExtensible':\n    case 'ownKeys':\n    case 'getPrototypeOf':\n    default:\n      [target] = parameters\n  }\n  return {\n    target,\n    name,\n    receiver,\n    val,\n    args,\n    descriptor,\n    thisValue,\n    prototype\n  }\n}\n\nconst createHandlerContext = <T extends TTarget>(\n  trapContext: TTrapContext,\n  parameters: [T, ...any[]],\n): THandlerContext<T> => {\n  const { trapName, handler, traps, root, path } = trapContext\n  const {target, name, val, receiver, args, descriptor, thisValue, prototype} = parseParameters(trapName, parameters)\n  const key = trapsWithKey.includes(trapName) ? name : undefined\n  const newValue = trapName === 'set' ? val : undefined\n\n  // prettier-ignore\n  return {\n    parameters,\n    target,\n    name,\n    val,\n    args,\n    descriptor,\n    receiver,\n    thisValue,\n    prototype,\n\n    trapName,\n    traps,\n    path,\n    handler,\n    key,\n    newValue,\n    root,\n    get proxy() { return getFromCache(root, target, path) as TProxy<T>  },\n    get value() { return key && target[key] },\n    DEFAULT,\n    PROXY: createDeepProxy.bind({ root, handler, path: [...path, key as string] }),\n  }\n}\n\nconst trap = function <T extends TTarget>(\n  this: TTrapContext,\n  ...parameters: [T, ...any[]]\n) {\n  const { trapName, handler } = this\n  const handlerContext = createHandlerContext(this, parameters)\n  const { PROXY, DEFAULT } = handlerContext\n  const result = handler(handlerContext)\n\n  if (result === PROXY) {\n    return PROXY(handlerContext.value)\n  }\n\n  if (result === DEFAULT) {\n    // eslint-disable-next-line\n    // @ts-ignore\n    return Reflect[trapName](...parameters)\n  }\n\n  return result\n}\n\nconst createTraps = (handler: TProxyHandler, root: TTarget, path: string[]) =>\n  trapNames.reduce<TTraps>((traps, trapName) => {\n    traps[trapName] = trap.bind({\n      trapName,\n      handler,\n      traps,\n      root,\n      path,\n    })\n    return traps\n  }, {})\n\nconst checkTarget = (target: any): void => {\n  if (\n    target === null ||\n    (typeof target !== 'object' && typeof target !== 'function')\n  ) {\n    throw new TypeError(\n      'Deep proxy could be applied to objects and functions only',\n    )\n  }\n}\n\nexport const defaultProxyHandler: TProxyHandler = ({ DEFAULT }) => DEFAULT\n\nexport const createDeepProxy: TProxyFactory = function <T extends TTarget>(\n  this: TProxyFactoryThis | void,\n  target: T,\n  handler?: TProxyHandler,\n  path?: string[],\n  root?: TTarget,\n): T {\n  checkTarget(target)\n\n  const _this: TProxyFactoryThis = { ...this }\n  const _handler = handler || _this.handler || defaultProxyHandler\n  const _path = path || _this.path || []\n  const _root = _this.root || root || target\n  const _proxy = getFromCache(_root, target, _path)\n\n  if (_proxy) {\n    return _proxy as T\n  }\n\n  const traps = createTraps(_handler, _root, _path)\n  const proxy = new Proxy<T>(target, traps)\n\n  addToCache(_root, target, _path, traps, proxy)\n\n  return proxy\n}\n\nexport const DeepProxy = class<T extends TTarget> {\n  constructor(\n    target: T,\n    handler?: TProxyHandler,\n    path?: string[],\n    root?: TTarget,\n  ) {\n    return createDeepProxy(target, handler, path, root)\n  }\n} as DeepProxyConstructor\n","/*!\n * hash-wasm (https://www.npmjs.com/package/hash-wasm)\n * (c) Dani Biro\n * @license MIT\n */\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nclass Mutex {\n    constructor() {\n        this.mutex = Promise.resolve();\n    }\n    lock() {\n        let begin = () => { };\n        this.mutex = this.mutex.then(() => new Promise(begin));\n        return new Promise((res) => {\n            begin = res;\n        });\n    }\n    dispatch(fn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const unlock = yield this.lock();\n            try {\n                return yield Promise.resolve(fn());\n            }\n            finally {\n                unlock();\n            }\n        });\n    }\n}\n\n/* eslint-disable import/prefer-default-export */\n/* eslint-disable no-bitwise */\nvar _a;\nfunction getGlobal() {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    return global;\n}\nconst globalObject = getGlobal();\nconst nodeBuffer = (_a = globalObject.Buffer) !== null && _a !== void 0 ? _a : null;\nconst textEncoder = globalObject.TextEncoder ? new globalObject.TextEncoder() : null;\nfunction intArrayToString(arr, len) {\n    return String.fromCharCode(...arr.subarray(0, len));\n}\nfunction hexCharCodesToInt(a, b) {\n    return (((a & 0xF) + ((a >> 6) | ((a >> 3) & 0x8))) << 4) | ((b & 0xF) + ((b >> 6) | ((b >> 3) & 0x8)));\n}\nfunction writeHexToUInt8(buf, str) {\n    const size = str.length >> 1;\n    for (let i = 0; i < size; i++) {\n        const index = i << 1;\n        buf[i] = hexCharCodesToInt(str.charCodeAt(index), str.charCodeAt(index + 1));\n    }\n}\nfunction hexStringEqualsUInt8(str, buf) {\n    if (str.length !== buf.length * 2) {\n        return false;\n    }\n    for (let i = 0; i < buf.length; i++) {\n        const strIndex = i << 1;\n        if (buf[i] !== hexCharCodesToInt(str.charCodeAt(strIndex), str.charCodeAt(strIndex + 1))) {\n            return false;\n        }\n    }\n    return true;\n}\nconst alpha = 'a'.charCodeAt(0) - 10;\nconst digit = '0'.charCodeAt(0);\nfunction getDigestHex(tmpBuffer, input, hashLength) {\n    let p = 0;\n    /* eslint-disable no-plusplus */\n    for (let i = 0; i < hashLength; i++) {\n        let nibble = input[i] >>> 4;\n        tmpBuffer[p++] = nibble > 9 ? nibble + alpha : nibble + digit;\n        nibble = input[i] & 0xF;\n        tmpBuffer[p++] = nibble > 9 ? nibble + alpha : nibble + digit;\n    }\n    /* eslint-enable no-plusplus */\n    return String.fromCharCode.apply(null, tmpBuffer);\n}\nconst getUInt8Buffer = nodeBuffer !== null\n    ? (data) => {\n        if (typeof data === 'string') {\n            const buf = nodeBuffer.from(data, 'utf8');\n            return new Uint8Array(buf.buffer, buf.byteOffset, buf.length);\n        }\n        if (nodeBuffer.isBuffer(data)) {\n            return new Uint8Array(data.buffer, data.byteOffset, data.length);\n        }\n        if (ArrayBuffer.isView(data)) {\n            return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n        }\n        throw new Error('Invalid data type!');\n    }\n    : (data) => {\n        if (typeof data === 'string') {\n            return textEncoder.encode(data);\n        }\n        if (ArrayBuffer.isView(data)) {\n            return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n        }\n        throw new Error('Invalid data type!');\n    };\nconst base64Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64Lookup = new Uint8Array(256);\nfor (let i = 0; i < base64Chars.length; i++) {\n    base64Lookup[base64Chars.charCodeAt(i)] = i;\n}\nfunction encodeBase64(data, pad = true) {\n    const len = data.length;\n    const extraBytes = len % 3;\n    const parts = [];\n    const len2 = len - extraBytes;\n    for (let i = 0; i < len2; i += 3) {\n        const tmp = ((data[i] << 16) & 0xFF0000)\n            + ((data[i + 1] << 8) & 0xFF00)\n            + (data[i + 2] & 0xFF);\n        const triplet = base64Chars.charAt((tmp >> 18) & 0x3F)\n            + base64Chars.charAt((tmp >> 12) & 0x3F)\n            + base64Chars.charAt((tmp >> 6) & 0x3F)\n            + base64Chars.charAt(tmp & 0x3F);\n        parts.push(triplet);\n    }\n    if (extraBytes === 1) {\n        const tmp = data[len - 1];\n        const a = base64Chars.charAt(tmp >> 2);\n        const b = base64Chars.charAt((tmp << 4) & 0x3F);\n        parts.push(`${a}${b}`);\n        if (pad) {\n            parts.push('==');\n        }\n    }\n    else if (extraBytes === 2) {\n        const tmp = (data[len - 2] << 8) + data[len - 1];\n        const a = base64Chars.charAt(tmp >> 10);\n        const b = base64Chars.charAt((tmp >> 4) & 0x3F);\n        const c = base64Chars.charAt((tmp << 2) & 0x3F);\n        parts.push(`${a}${b}${c}`);\n        if (pad) {\n            parts.push('=');\n        }\n    }\n    return parts.join('');\n}\nfunction getDecodeBase64Length(data) {\n    let bufferLength = Math.floor(data.length * 0.75);\n    const len = data.length;\n    if (data[len - 1] === '=') {\n        bufferLength -= 1;\n        if (data[len - 2] === '=') {\n            bufferLength -= 1;\n        }\n    }\n    return bufferLength;\n}\nfunction decodeBase64(data) {\n    const bufferLength = getDecodeBase64Length(data);\n    const len = data.length;\n    const bytes = new Uint8Array(bufferLength);\n    let p = 0;\n    for (let i = 0; i < len; i += 4) {\n        const encoded1 = base64Lookup[data.charCodeAt(i)];\n        const encoded2 = base64Lookup[data.charCodeAt(i + 1)];\n        const encoded3 = base64Lookup[data.charCodeAt(i + 2)];\n        const encoded4 = base64Lookup[data.charCodeAt(i + 3)];\n        bytes[p] = (encoded1 << 2) | (encoded2 >> 4);\n        p += 1;\n        bytes[p] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        p += 1;\n        bytes[p] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n        p += 1;\n    }\n    return bytes;\n}\n\nconst MAX_HEAP = 16 * 1024;\nconst WASM_FUNC_HASH_LENGTH = 4;\nconst wasmMutex = new Mutex();\nconst wasmModuleCache = new Map();\nfunction WASMInterface(binary, hashLength) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let wasmInstance = null;\n        let memoryView = null;\n        let initialized = false;\n        if (typeof WebAssembly === 'undefined') {\n            throw new Error('WebAssembly is not supported in this environment!');\n        }\n        const writeMemory = (data, offset = 0) => {\n            memoryView.set(data, offset);\n        };\n        const getMemory = () => memoryView;\n        const getExports = () => wasmInstance.exports;\n        const setMemorySize = (totalSize) => {\n            wasmInstance.exports.Hash_SetMemorySize(totalSize);\n            const arrayOffset = wasmInstance.exports.Hash_GetBuffer();\n            const memoryBuffer = wasmInstance.exports.memory.buffer;\n            memoryView = new Uint8Array(memoryBuffer, arrayOffset, totalSize);\n        };\n        const getStateSize = () => {\n            const view = new DataView(wasmInstance.exports.memory.buffer);\n            const stateSize = view.getUint32(wasmInstance.exports.STATE_SIZE, true);\n            return stateSize;\n        };\n        const loadWASMPromise = wasmMutex.dispatch(() => __awaiter(this, void 0, void 0, function* () {\n            if (!wasmModuleCache.has(binary.name)) {\n                const asm = decodeBase64(binary.data);\n                const promise = WebAssembly.compile(asm);\n                wasmModuleCache.set(binary.name, promise);\n            }\n            const module = yield wasmModuleCache.get(binary.name);\n            wasmInstance = yield WebAssembly.instantiate(module, {\n            // env: {\n            //   emscripten_memcpy_big: (dest, src, num) => {\n            //     const memoryBuffer = wasmInstance.exports.memory.buffer;\n            //     const memView = new Uint8Array(memoryBuffer, 0);\n            //     memView.set(memView.subarray(src, src + num), dest);\n            //   },\n            //   print_memory: (offset, len) => {\n            //     const memoryBuffer = wasmInstance.exports.memory.buffer;\n            //     const memView = new Uint8Array(memoryBuffer, 0);\n            //     console.log('print_int32', memView.subarray(offset, offset + len));\n            //   },\n            // },\n            });\n            // wasmInstance.exports._start();\n        }));\n        const setupInterface = () => __awaiter(this, void 0, void 0, function* () {\n            if (!wasmInstance) {\n                yield loadWASMPromise;\n            }\n            const arrayOffset = wasmInstance.exports.Hash_GetBuffer();\n            const memoryBuffer = wasmInstance.exports.memory.buffer;\n            memoryView = new Uint8Array(memoryBuffer, arrayOffset, MAX_HEAP);\n        });\n        const init = (bits = null) => {\n            initialized = true;\n            wasmInstance.exports.Hash_Init(bits);\n        };\n        const updateUInt8Array = (data) => {\n            let read = 0;\n            while (read < data.length) {\n                const chunk = data.subarray(read, read + MAX_HEAP);\n                read += chunk.length;\n                memoryView.set(chunk);\n                wasmInstance.exports.Hash_Update(chunk.length);\n            }\n        };\n        const update = (data) => {\n            if (!initialized) {\n                throw new Error('update() called before init()');\n            }\n            const Uint8Buffer = getUInt8Buffer(data);\n            updateUInt8Array(Uint8Buffer);\n        };\n        const digestChars = new Uint8Array(hashLength * 2);\n        const digest = (outputType, padding = null) => {\n            if (!initialized) {\n                throw new Error('digest() called before init()');\n            }\n            initialized = false;\n            wasmInstance.exports.Hash_Final(padding);\n            if (outputType === 'binary') {\n                // the data is copied to allow GC of the original memory object\n                return memoryView.slice(0, hashLength);\n            }\n            return getDigestHex(digestChars, memoryView, hashLength);\n        };\n        const save = () => {\n            if (!initialized) {\n                throw new Error('save() can only be called after init() and before digest()');\n            }\n            const stateOffset = wasmInstance.exports.Hash_GetState();\n            const stateLength = getStateSize();\n            const memoryBuffer = wasmInstance.exports.memory.buffer;\n            const internalState = new Uint8Array(memoryBuffer, stateOffset, stateLength);\n            // prefix is 4 bytes from SHA1 hash of the WASM binary\n            // it is used to detect incompatible internal states between different versions of hash-wasm\n            const prefixedState = new Uint8Array(WASM_FUNC_HASH_LENGTH + stateLength);\n            writeHexToUInt8(prefixedState, binary.hash);\n            prefixedState.set(internalState, WASM_FUNC_HASH_LENGTH);\n            return prefixedState;\n        };\n        const load = (state) => {\n            if (!(state instanceof Uint8Array)) {\n                throw new Error('load() expects an Uint8Array generated by save()');\n            }\n            const stateOffset = wasmInstance.exports.Hash_GetState();\n            const stateLength = getStateSize();\n            const overallLength = WASM_FUNC_HASH_LENGTH + stateLength;\n            const memoryBuffer = wasmInstance.exports.memory.buffer;\n            if (state.length !== overallLength) {\n                throw new Error(`Bad state length (expected ${overallLength} bytes, got ${state.length})`);\n            }\n            if (!hexStringEqualsUInt8(binary.hash, state.subarray(0, WASM_FUNC_HASH_LENGTH))) {\n                throw new Error('This state was written by an incompatible hash implementation');\n            }\n            const internalState = state.subarray(WASM_FUNC_HASH_LENGTH);\n            new Uint8Array(memoryBuffer, stateOffset, stateLength).set(internalState);\n            initialized = true;\n        };\n        const isDataShort = (data) => {\n            if (typeof data === 'string') {\n                // worst case is 4 bytes / char\n                return data.length < MAX_HEAP / 4;\n            }\n            return data.byteLength < MAX_HEAP;\n        };\n        let canSimplify = isDataShort;\n        switch (binary.name) {\n            case 'argon2':\n            case 'scrypt':\n                canSimplify = () => true;\n                break;\n            case 'blake2b':\n            case 'blake2s':\n                // if there is a key at blake2 then cannot simplify\n                canSimplify = (data, initParam) => initParam <= 512 && isDataShort(data);\n                break;\n            case 'blake3':\n                // if there is a key at blake3 then cannot simplify\n                canSimplify = (data, initParam) => initParam === 0 && isDataShort(data);\n                break;\n            case 'xxhash64': // cannot simplify\n            case 'xxhash3':\n            case 'xxhash128':\n                canSimplify = () => false;\n                break;\n        }\n        // shorthand for (init + update + digest) for better performance\n        const calculate = (data, initParam = null, digestParam = null) => {\n            if (!canSimplify(data, initParam)) {\n                init(initParam);\n                update(data);\n                return digest('hex', digestParam);\n            }\n            const buffer = getUInt8Buffer(data);\n            memoryView.set(buffer);\n            wasmInstance.exports.Hash_Calculate(buffer.length, initParam, digestParam);\n            return getDigestHex(digestChars, memoryView, hashLength);\n        };\n        yield setupInterface();\n        return {\n            getMemory,\n            writeMemory,\n            getExports,\n            setMemorySize,\n            init,\n            update,\n            digest,\n            save,\n            load,\n            calculate,\n            hashLength,\n        };\n    });\n}\n\nvar name$k = \"adler32\";\nvar data$k = \"AGFzbQEAAAABDANgAAF/YAAAYAF/AAMHBgABAgEAAgUEAQECAgYOAn8BQYCJBQt/AEGACAsHcAgGbWVtb3J5AgAOSGFzaF9HZXRCdWZmZXIAAAlIYXNoX0luaXQAAQtIYXNoX1VwZGF0ZQACCkhhc2hfRmluYWwAAw1IYXNoX0dldFN0YXRlAAQOSGFzaF9DYWxjdWxhdGUABQpTVEFURV9TSVpFAwEK6wkGBQBBgAkLCgBBAEEBNgKECAvjCAEHf0EAKAKECCIBQf//A3EhAiABQRB2IQMCQAJAIABBAUcNACACQQAtAIAJaiIBQY+AfGogASABQfD/A0sbIgEgA2oiBEEQdCIFQYCAPGogBSAEQfD/A0sbIAFyIQEMAQsCQAJAAkACQAJAIABBEEkNAEGACSEGIABBsCtJDQFBgAkhBgNAQQAhBQNAIAYgBWoiASgCACIEQf8BcSACaiICIANqIAIgBEEIdkH/AXFqIgJqIAIgBEEQdkH/AXFqIgJqIAIgBEEYdmoiAmogAiABQQRqKAIAIgRB/wFxaiICaiACIARBCHZB/wFxaiICaiACIARBEHZB/wFxaiICaiACIARBGHZqIgJqIAIgAUEIaigCACIEQf8BcWoiAmogAiAEQQh2Qf8BcWoiAmogAiAEQRB2Qf8BcWoiAmogAiAEQRh2aiIEaiAEIAFBDGooAgAiAUH/AXFqIgRqIAQgAUEIdkH/AXFqIgRqIAQgAUEQdkH/AXFqIgRqIAQgAUEYdmoiAmohAyAFQRBqIgVBsCtHDQALIANB8f8DcCEDIAJB8f8DcCECIAZBsCtqIQYgAEHQVGoiAEGvK0sNAAsgAEUNBCAAQQ9LDQEMAgsCQCAARQ0AAkACQCAAQQNxIgUNAEGACSEBIAAhBAwBCyAAQXxxIQRBACEBA0AgAiABQYAJai0AAGoiAiADaiEDIAUgAUEBaiIBRw0ACyAFQYAJaiEBCyAAQQRJDQADQCACIAEtAABqIgUgAS0AAWoiBiABLQACaiIAIAFBA2otAABqIgIgACAGIAUgA2pqamohAyABQQRqIQEgBEF8aiIEDQALCyACQY+AfGogAiACQfD/A0sbIANB8f8DcEEQdHIhAQwECwNAIAYoAgAiAUH/AXEgAmoiBCADaiAEIAFBCHZB/wFxaiIEaiAEIAFBEHZB/wFxaiIEaiAEIAFBGHZqIgRqIAQgBkEEaigCACIBQf8BcWoiBGogBCABQQh2Qf8BcWoiBGogBCABQRB2Qf8BcWoiBGogBCABQRh2aiIEaiAEIAZBCGooAgAiAUH/AXFqIgRqIAQgAUEIdkH/AXFqIgRqIAQgAUEQdkH/AXFqIgRqIAQgAUEYdmoiBGogBCAGQQxqKAIAIgFB/wFxaiIEaiAEIAFBCHZB/wFxaiIEaiAEIAFBEHZB/wFxaiIEaiAEIAFBGHZqIgJqIQMgBkEQaiEGIABBcGoiAEEPSw0ACyAARQ0BCyAAQX9qIQcCQCAAQQNxIgVFDQAgAEF8cSEAIAUhBCAGIQEDQCACIAEtAABqIgIgA2ohAyABQQFqIQEgBEF/aiIEDQALIAYgBWohBgsgB0EDSQ0AA0AgAiAGLQAAaiIBIAYtAAFqIgQgBi0AAmoiBSAGQQNqLQAAaiICIAUgBCABIANqampqIQMgBkEEaiEGIABBfGoiAA0ACwsgA0Hx/wNwIQMgAkHx/wNwIQILIAIgA0EQdHIhAQtBACABNgKECAsxAQF/QQBBACgChAgiAEEYdCAAQYD+A3FBCHRyIABBCHZBgP4DcSAAQRh2cnI2AoAJCwUAQYQICzsAQQBBATYChAggABACQQBBACgChAgiAEEYdCAAQYD+A3FBCHRyIABBCHZBgP4DcSAAQRh2cnI2AoAJCwsVAgBBgAgLBAQAAAAAQYQICwQBAAAA\";\nvar hash$k = \"02ddbd17\";\nvar wasmJson$k = {\n\tname: name$k,\n\tdata: data$k,\n\thash: hash$k\n};\n\nfunction lockedCreate(mutex, binary, hashLength) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const unlock = yield mutex.lock();\n        const wasm = yield WASMInterface(binary, hashLength);\n        unlock();\n        return wasm;\n    });\n}\n\nconst mutex$l = new Mutex();\nlet wasmCache$l = null;\n/**\n * Calculates Adler-32 hash. The resulting 32-bit hash is stored in\n * network byte order (big-endian).\n *\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */\nfunction adler32(data) {\n    if (wasmCache$l === null) {\n        return lockedCreate(mutex$l, wasmJson$k, 4)\n            .then((wasm) => {\n            wasmCache$l = wasm;\n            return wasmCache$l.calculate(data);\n        });\n    }\n    try {\n        const hash = wasmCache$l.calculate(data);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new Adler-32 hash instance\n */\nfunction createAdler32() {\n    return WASMInterface(wasmJson$k, 4).then((wasm) => {\n        wasm.init();\n        const obj = {\n            init: () => { wasm.init(); return obj; },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 4,\n            digestSize: 4,\n        };\n        return obj;\n    });\n}\n\nvar name$j = \"blake2b\";\nvar data$j = \"\";\nvar hash$j = \"656e0f66\";\nvar wasmJson$j = {\n\tname: name$j,\n\tdata: data$j,\n\thash: hash$j\n};\n\nconst mutex$k = new Mutex();\nlet wasmCache$k = null;\nfunction validateBits$4(bits) {\n    if (!Number.isInteger(bits) || bits < 8 || bits > 512 || bits % 8 !== 0) {\n        return new Error('Invalid variant! Valid values: 8, 16, ..., 512');\n    }\n    return null;\n}\nfunction getInitParam$1(outputBits, keyBits) {\n    // eslint-disable-next-line no-bitwise\n    return outputBits | (keyBits << 16);\n}\n/**\n * Calculates BLAKE2b hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param bits Number of output bits, which has to be a number\n *             divisible by 8, between 8 and 512. Defaults to 512.\n * @param key Optional key (string, Buffer or TypedArray). Maximum length is 64 bytes.\n * @returns Computed hash as a hexadecimal string\n */\nfunction blake2b(data, bits = 512, key = null) {\n    if (validateBits$4(bits)) {\n        return Promise.reject(validateBits$4(bits));\n    }\n    let keyBuffer = null;\n    let initParam = bits;\n    if (key !== null) {\n        keyBuffer = getUInt8Buffer(key);\n        if (keyBuffer.length > 64) {\n            return Promise.reject(new Error('Max key length is 64 bytes'));\n        }\n        initParam = getInitParam$1(bits, keyBuffer.length);\n    }\n    const hashLength = bits / 8;\n    if (wasmCache$k === null || wasmCache$k.hashLength !== hashLength) {\n        return lockedCreate(mutex$k, wasmJson$j, hashLength)\n            .then((wasm) => {\n            wasmCache$k = wasm;\n            if (initParam > 512) {\n                wasmCache$k.writeMemory(keyBuffer);\n            }\n            return wasmCache$k.calculate(data, initParam);\n        });\n    }\n    try {\n        if (initParam > 512) {\n            wasmCache$k.writeMemory(keyBuffer);\n        }\n        const hash = wasmCache$k.calculate(data, initParam);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new BLAKE2b hash instance\n * @param bits Number of output bits, which has to be a number\n *             divisible by 8, between 8 and 512. Defaults to 512.\n * @param key Optional key (string, Buffer or TypedArray). Maximum length is 64 bytes.\n */\nfunction createBLAKE2b(bits = 512, key = null) {\n    if (validateBits$4(bits)) {\n        return Promise.reject(validateBits$4(bits));\n    }\n    let keyBuffer = null;\n    let initParam = bits;\n    if (key !== null) {\n        keyBuffer = getUInt8Buffer(key);\n        if (keyBuffer.length > 64) {\n            return Promise.reject(new Error('Max key length is 64 bytes'));\n        }\n        initParam = getInitParam$1(bits, keyBuffer.length);\n    }\n    const outputSize = bits / 8;\n    return WASMInterface(wasmJson$j, outputSize).then((wasm) => {\n        if (initParam > 512) {\n            wasm.writeMemory(keyBuffer);\n        }\n        wasm.init(initParam);\n        const obj = {\n            init: initParam > 512\n                ? () => {\n                    wasm.writeMemory(keyBuffer);\n                    wasm.init(initParam);\n                    return obj;\n                }\n                : () => {\n                    wasm.init(initParam);\n                    return obj;\n                },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 128,\n            digestSize: outputSize,\n        };\n        return obj;\n    });\n}\n\nvar name$i = \"argon2\";\nvar data$i = \"\";\nvar hash$i = \"7ab14c91\";\nvar wasmJson$i = {\n\tname: name$i,\n\tdata: data$i,\n\thash: hash$i\n};\n\nfunction encodeResult(salt, options, res) {\n    const parameters = [\n        `m=${options.memorySize}`,\n        `t=${options.iterations}`,\n        `p=${options.parallelism}`,\n    ].join(',');\n    return `$argon2${options.hashType}$v=19$${parameters}$${encodeBase64(salt, false)}$${encodeBase64(res, false)}`;\n}\nconst uint32View = new DataView(new ArrayBuffer(4));\nfunction int32LE(x) {\n    uint32View.setInt32(0, x, true);\n    return new Uint8Array(uint32View.buffer);\n}\nfunction hashFunc(blake512, buf, len) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (len <= 64) {\n            const blake = yield createBLAKE2b(len * 8);\n            blake.update(int32LE(len));\n            blake.update(buf);\n            return blake.digest('binary');\n        }\n        const r = Math.ceil(len / 32) - 2;\n        const ret = new Uint8Array(len);\n        blake512.init();\n        blake512.update(int32LE(len));\n        blake512.update(buf);\n        let vp = blake512.digest('binary');\n        ret.set(vp.subarray(0, 32), 0);\n        for (let i = 1; i < r; i++) {\n            blake512.init();\n            blake512.update(vp);\n            vp = blake512.digest('binary');\n            ret.set(vp.subarray(0, 32), i * 32);\n        }\n        const partialBytesNeeded = len - 32 * r;\n        let blakeSmall;\n        if (partialBytesNeeded === 64) {\n            blakeSmall = blake512;\n            blakeSmall.init();\n        }\n        else {\n            blakeSmall = yield createBLAKE2b(partialBytesNeeded * 8);\n        }\n        blakeSmall.update(vp);\n        vp = blakeSmall.digest('binary');\n        ret.set(vp.subarray(0, partialBytesNeeded), r * 32);\n        return ret;\n    });\n}\nfunction getHashType(type) {\n    switch (type) {\n        case 'd':\n            return 0;\n        case 'i':\n            return 1;\n        default:\n            return 2;\n    }\n}\nfunction argon2Internal(options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const { parallelism, iterations, hashLength } = options;\n        const password = getUInt8Buffer(options.password);\n        const salt = getUInt8Buffer(options.salt);\n        const version = 0x13;\n        const hashType = getHashType(options.hashType);\n        const { memorySize } = options; // in KB\n        const secret = getUInt8Buffer((_a = options.secret) !== null && _a !== void 0 ? _a : '');\n        const [argon2Interface, blake512] = yield Promise.all([\n            WASMInterface(wasmJson$i, 1024),\n            createBLAKE2b(512),\n        ]);\n        // last block is for storing the init vector\n        argon2Interface.setMemorySize(memorySize * 1024 + 1024);\n        const initVector = new Uint8Array(24);\n        const initVectorView = new DataView(initVector.buffer);\n        initVectorView.setInt32(0, parallelism, true);\n        initVectorView.setInt32(4, hashLength, true);\n        initVectorView.setInt32(8, memorySize, true);\n        initVectorView.setInt32(12, iterations, true);\n        initVectorView.setInt32(16, version, true);\n        initVectorView.setInt32(20, hashType, true);\n        argon2Interface.writeMemory(initVector, memorySize * 1024);\n        blake512.init();\n        blake512.update(initVector);\n        blake512.update(int32LE(password.length));\n        blake512.update(password);\n        blake512.update(int32LE(salt.length));\n        blake512.update(salt);\n        blake512.update(int32LE(secret.length));\n        blake512.update(secret);\n        blake512.update(int32LE(0)); // associatedData length + associatedData\n        const segments = Math.floor(memorySize / (parallelism * 4)); // length of each lane\n        const lanes = segments * 4;\n        const param = new Uint8Array(72);\n        const H0 = blake512.digest('binary');\n        param.set(H0);\n        for (let lane = 0; lane < parallelism; lane++) {\n            param.set(int32LE(0), 64);\n            param.set(int32LE(lane), 68);\n            let position = lane * lanes;\n            let chunk = yield hashFunc(blake512, param, 1024);\n            argon2Interface.writeMemory(chunk, position * 1024);\n            position += 1;\n            param.set(int32LE(1), 64);\n            chunk = yield hashFunc(blake512, param, 1024);\n            argon2Interface.writeMemory(chunk, position * 1024);\n        }\n        const C = new Uint8Array(1024);\n        writeHexToUInt8(C, argon2Interface.calculate(new Uint8Array([]), memorySize));\n        const res = yield hashFunc(blake512, C, hashLength);\n        if (options.outputType === 'hex') {\n            const digestChars = new Uint8Array(hashLength * 2);\n            return getDigestHex(digestChars, res, hashLength);\n        }\n        if (options.outputType === 'encoded') {\n            return encodeResult(salt, options, res);\n        }\n        // return binary format\n        return res;\n    });\n}\nconst validateOptions$3 = (options) => {\n    var _a;\n    if (!options || typeof options !== 'object') {\n        throw new Error('Invalid options parameter. It requires an object.');\n    }\n    if (!options.password) {\n        throw new Error('Password must be specified');\n    }\n    options.password = getUInt8Buffer(options.password);\n    if (options.password.length < 1) {\n        throw new Error('Password must be specified');\n    }\n    if (!options.salt) {\n        throw new Error('Salt must be specified');\n    }\n    options.salt = getUInt8Buffer(options.salt);\n    if (options.salt.length < 8) {\n        throw new Error('Salt should be at least 8 bytes long');\n    }\n    options.secret = getUInt8Buffer((_a = options.secret) !== null && _a !== void 0 ? _a : '');\n    if (!Number.isInteger(options.iterations) || options.iterations < 1) {\n        throw new Error('Iterations should be a positive number');\n    }\n    if (!Number.isInteger(options.parallelism) || options.parallelism < 1) {\n        throw new Error('Parallelism should be a positive number');\n    }\n    if (!Number.isInteger(options.hashLength) || options.hashLength < 4) {\n        throw new Error('Hash length should be at least 4 bytes.');\n    }\n    if (!Number.isInteger(options.memorySize)) {\n        throw new Error('Memory size should be specified.');\n    }\n    if (options.memorySize < 8 * options.parallelism) {\n        throw new Error('Memory size should be at least 8 * parallelism.');\n    }\n    if (options.outputType === undefined) {\n        options.outputType = 'hex';\n    }\n    if (!['hex', 'binary', 'encoded'].includes(options.outputType)) {\n        throw new Error(`Insupported output type ${options.outputType}. Valid values: ['hex', 'binary', 'encoded']`);\n    }\n};\n/**\n * Calculates hash using the argon2i password-hashing function\n * @returns Computed hash\n */\nfunction argon2i(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validateOptions$3(options);\n        return argon2Internal(Object.assign(Object.assign({}, options), { hashType: 'i' }));\n    });\n}\n/**\n * Calculates hash using the argon2id password-hashing function\n * @returns Computed hash\n */\nfunction argon2id(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validateOptions$3(options);\n        return argon2Internal(Object.assign(Object.assign({}, options), { hashType: 'id' }));\n    });\n}\n/**\n * Calculates hash using the argon2d password-hashing function\n * @returns Computed hash\n */\nfunction argon2d(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validateOptions$3(options);\n        return argon2Internal(Object.assign(Object.assign({}, options), { hashType: 'd' }));\n    });\n}\nconst getHashParameters = (password, encoded, secret) => {\n    const regex = /^\\$argon2(id|i|d)\\$v=([0-9]+)\\$((?:[mtp]=[0-9]+,){2}[mtp]=[0-9]+)\\$([A-Za-z0-9+/]+)\\$([A-Za-z0-9+/]+)$/;\n    const match = encoded.match(regex);\n    if (!match) {\n        throw new Error('Invalid hash');\n    }\n    const [, hashType, version, parameters, salt, hash] = match;\n    if (version !== '19') {\n        throw new Error(`Unsupported version: ${version}`);\n    }\n    const parsedParameters = {};\n    const paramMap = { m: 'memorySize', p: 'parallelism', t: 'iterations' };\n    parameters.split(',').forEach((x) => {\n        const [n, v] = x.split('=');\n        parsedParameters[paramMap[n]] = parseInt(v, 10);\n    });\n    return Object.assign(Object.assign({}, parsedParameters), { password,\n        secret, hashType: hashType, salt: decodeBase64(salt), hashLength: getDecodeBase64Length(hash), outputType: 'encoded' });\n};\nconst validateVerifyOptions$1 = (options) => {\n    if (!options || typeof options !== 'object') {\n        throw new Error('Invalid options parameter. It requires an object.');\n    }\n    if (options.hash === undefined || typeof options.hash !== 'string') {\n        throw new Error('Hash should be specified');\n    }\n};\n/**\n * Verifies password using the argon2 password-hashing function\n * @returns True if the encoded hash matches the password\n */\nfunction argon2Verify(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validateVerifyOptions$1(options);\n        const params = getHashParameters(options.password, options.hash, options.secret);\n        validateOptions$3(params);\n        const hashStart = options.hash.lastIndexOf('$') + 1;\n        const result = yield argon2Internal(params);\n        return result.substring(hashStart) === options.hash.substring(hashStart);\n    });\n}\n\nvar name$h = \"blake2s\";\nvar data$h = \"\";\nvar hash$h = \"c5c746d4\";\nvar wasmJson$h = {\n\tname: name$h,\n\tdata: data$h,\n\thash: hash$h\n};\n\nconst mutex$j = new Mutex();\nlet wasmCache$j = null;\nfunction validateBits$3(bits) {\n    if (!Number.isInteger(bits) || bits < 8 || bits > 256 || bits % 8 !== 0) {\n        return new Error('Invalid variant! Valid values: 8, 16, ..., 256');\n    }\n    return null;\n}\nfunction getInitParam(outputBits, keyBits) {\n    // eslint-disable-next-line no-bitwise\n    return outputBits | (keyBits << 16);\n}\n/**\n * Calculates BLAKE2s hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param bits Number of output bits, which has to be a number\n *             divisible by 8, between 8 and 256. Defaults to 256.\n * @param key Optional key (string, Buffer or TypedArray). Maximum length is 32 bytes.\n * @returns Computed hash as a hexadecimal string\n */\nfunction blake2s(data, bits = 256, key = null) {\n    if (validateBits$3(bits)) {\n        return Promise.reject(validateBits$3(bits));\n    }\n    let keyBuffer = null;\n    let initParam = bits;\n    if (key !== null) {\n        keyBuffer = getUInt8Buffer(key);\n        if (keyBuffer.length > 32) {\n            return Promise.reject(new Error('Max key length is 32 bytes'));\n        }\n        initParam = getInitParam(bits, keyBuffer.length);\n    }\n    const hashLength = bits / 8;\n    if (wasmCache$j === null || wasmCache$j.hashLength !== hashLength) {\n        return lockedCreate(mutex$j, wasmJson$h, hashLength)\n            .then((wasm) => {\n            wasmCache$j = wasm;\n            if (initParam > 512) {\n                wasmCache$j.writeMemory(keyBuffer);\n            }\n            return wasmCache$j.calculate(data, initParam);\n        });\n    }\n    try {\n        if (initParam > 512) {\n            wasmCache$j.writeMemory(keyBuffer);\n        }\n        const hash = wasmCache$j.calculate(data, initParam);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new BLAKE2s hash instance\n * @param bits Number of output bits, which has to be a number\n *             divisible by 8, between 8 and 256. Defaults to 256.\n * @param key Optional key (string, Buffer or TypedArray). Maximum length is 32 bytes.\n */\nfunction createBLAKE2s(bits = 256, key = null) {\n    if (validateBits$3(bits)) {\n        return Promise.reject(validateBits$3(bits));\n    }\n    let keyBuffer = null;\n    let initParam = bits;\n    if (key !== null) {\n        keyBuffer = getUInt8Buffer(key);\n        if (keyBuffer.length > 32) {\n            return Promise.reject(new Error('Max key length is 32 bytes'));\n        }\n        initParam = getInitParam(bits, keyBuffer.length);\n    }\n    const outputSize = bits / 8;\n    return WASMInterface(wasmJson$h, outputSize).then((wasm) => {\n        if (initParam > 512) {\n            wasm.writeMemory(keyBuffer);\n        }\n        wasm.init(initParam);\n        const obj = {\n            init: initParam > 512\n                ? () => {\n                    wasm.writeMemory(keyBuffer);\n                    wasm.init(initParam);\n                    return obj;\n                }\n                : () => {\n                    wasm.init(initParam);\n                    return obj;\n                },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 64,\n            digestSize: outputSize,\n        };\n        return obj;\n    });\n}\n\nvar name$g = \"blake3\";\nvar data$g = \"\";\nvar hash$g = \"540e8b8e\";\nvar wasmJson$g = {\n\tname: name$g,\n\tdata: data$g,\n\thash: hash$g\n};\n\nconst mutex$i = new Mutex();\nlet wasmCache$i = null;\nfunction validateBits$2(bits) {\n    if (!Number.isInteger(bits) || bits < 8 || bits % 8 !== 0) {\n        return new Error('Invalid variant! Valid values: 8, 16, ...');\n    }\n    return null;\n}\n/**\n * Calculates BLAKE3 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param bits Number of output bits, which has to be a number\n *             divisible by 8. Defaults to 256.\n * @param key Optional key (string, Buffer or TypedArray). Length should be 32 bytes.\n * @returns Computed hash as a hexadecimal string\n */\nfunction blake3(data, bits = 256, key = null) {\n    if (validateBits$2(bits)) {\n        return Promise.reject(validateBits$2(bits));\n    }\n    let keyBuffer = null;\n    let initParam = 0; // key is empty by default\n    if (key !== null) {\n        keyBuffer = getUInt8Buffer(key);\n        if (keyBuffer.length !== 32) {\n            return Promise.reject(new Error('Key length must be exactly 32 bytes'));\n        }\n        initParam = 32;\n    }\n    const hashLength = bits / 8;\n    const digestParam = hashLength;\n    if (wasmCache$i === null || wasmCache$i.hashLength !== hashLength) {\n        return lockedCreate(mutex$i, wasmJson$g, hashLength)\n            .then((wasm) => {\n            wasmCache$i = wasm;\n            if (initParam === 32) {\n                wasmCache$i.writeMemory(keyBuffer);\n            }\n            return wasmCache$i.calculate(data, initParam, digestParam);\n        });\n    }\n    try {\n        if (initParam === 32) {\n            wasmCache$i.writeMemory(keyBuffer);\n        }\n        const hash = wasmCache$i.calculate(data, initParam, digestParam);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new BLAKE3 hash instance\n * @param bits Number of output bits, which has to be a number\n *             divisible by 8. Defaults to 256.\n * @param key Optional key (string, Buffer or TypedArray). Length should be 32 bytes.\n */\nfunction createBLAKE3(bits = 256, key = null) {\n    if (validateBits$2(bits)) {\n        return Promise.reject(validateBits$2(bits));\n    }\n    let keyBuffer = null;\n    let initParam = 0; // key is empty by default\n    if (key !== null) {\n        keyBuffer = getUInt8Buffer(key);\n        if (keyBuffer.length !== 32) {\n            return Promise.reject(new Error('Key length must be exactly 32 bytes'));\n        }\n        initParam = 32;\n    }\n    const outputSize = bits / 8;\n    const digestParam = outputSize;\n    return WASMInterface(wasmJson$g, outputSize).then((wasm) => {\n        if (initParam === 32) {\n            wasm.writeMemory(keyBuffer);\n        }\n        wasm.init(initParam);\n        const obj = {\n            init: initParam === 32\n                ? () => {\n                    wasm.writeMemory(keyBuffer);\n                    wasm.init(initParam);\n                    return obj;\n                }\n                : () => {\n                    wasm.init(initParam);\n                    return obj;\n                },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType, digestParam),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 64,\n            digestSize: outputSize,\n        };\n        return obj;\n    });\n}\n\nvar name$f = \"crc32\";\nvar data$f = \"AGFzbQEAAAABEQRgAAF/YAF/AGAAAGACf38AAwgHAAEBAQIAAwUEAQECAgYOAn8BQZDJBQt/AEGACAsHcAgGbWVtb3J5AgAOSGFzaF9HZXRCdWZmZXIAAAlIYXNoX0luaXQAAgtIYXNoX1VwZGF0ZQADCkhhc2hfRmluYWwABA1IYXNoX0dldFN0YXRlAAUOSGFzaF9DYWxjdWxhdGUABgpTVEFURV9TSVpFAwEKkggHBQBBgAkLwwMBA39BgIkBIQFBACECA0AgAUEAQQBBAEEAQQBBAEEAQQAgAkEBcWsgAHEgAkEBdnMiA0EBcWsgAHEgA0EBdnMiA0EBcWsgAHEgA0EBdnMiA0EBcWsgAHEgA0EBdnMiA0EBcWsgAHEgA0EBdnMiA0EBcWsgAHEgA0EBdnMiA0EBcWsgAHEgA0EBdnMiA0EBcWsgAHEgA0EBdnM2AgAgAUEEaiEBIAJBAWoiAkGAAkcNAAtBACEAA0AgAEGEkQFqIABBhIkBaigCACICQf8BcUECdEGAiQFqKAIAIAJBCHZzIgI2AgAgAEGEmQFqIAJB/wFxQQJ0QYCJAWooAgAgAkEIdnMiAjYCACAAQYShAWogAkH/AXFBAnRBgIkBaigCACACQQh2cyICNgIAIABBhKkBaiACQf8BcUECdEGAiQFqKAIAIAJBCHZzIgI2AgAgAEGEsQFqIAJB/wFxQQJ0QYCJAWooAgAgAkEIdnMiAjYCACAAQYS5AWogAkH/AXFBAnRBgIkBaigCACACQQh2cyICNgIAIABBhMEBaiACQf8BcUECdEGAiQFqKAIAIAJBCHZzNgIAIABBBGoiAEH8B0cNAAsLJwACQEEAKAKAyQEgAEYNACAAEAFBACAANgKAyQELQQBBADYChMkBC4gDAQN/QQAoAoTJAUF/cyEBQYAJIQICQCAAQQhJDQBBgAkhAgNAIAJBBGooAgAiA0EOdkH8B3FBgJEBaigCACADQRZ2QfwHcUGAiQFqKAIAcyADQQZ2QfwHcUGAmQFqKAIAcyADQf8BcUECdEGAoQFqKAIAcyACKAIAIAFzIgFBFnZB/AdxQYCpAWooAgBzIAFBDnZB/AdxQYCxAWooAgBzIAFBBnZB/AdxQYC5AWooAgBzIAFB/wFxQQJ0QYDBAWooAgBzIQEgAkEIaiECIABBeGoiAEEHSw0ACwsCQCAARQ0AAkACQCAAQQFxDQAgACEDDAELIAFB/wFxIAItAABzQQJ0QYCJAWooAgAgAUEIdnMhASACQQFqIQIgAEF/aiEDCyAAQQFGDQADQCABQf8BcSACLQAAc0ECdEGAiQFqKAIAIAFBCHZzIgFB/wFxIAJBAWotAABzQQJ0QYCJAWooAgAgAUEIdnMhASACQQJqIQIgA0F+aiIDDQALC0EAIAFBf3M2AoTJAQsyAQF/QQBBACgChMkBIgBBGHQgAEGA/gNxQQh0ciAAQQh2QYD+A3EgAEEYdnJyNgKACQsGAEGEyQELWQACQEEAKAKAyQEgAUYNACABEAFBACABNgKAyQELQQBBADYChMkBIAAQA0EAQQAoAoTJASIBQRh0IAFBgP4DcUEIdHIgAUEIdkGA/gNxIAFBGHZycjYCgAkLCwsBAEGACAsEBAAAAA==\";\nvar hash$f = \"d2eba587\";\nvar wasmJson$f = {\n\tname: name$f,\n\tdata: data$f,\n\thash: hash$f\n};\n\nconst mutex$h = new Mutex();\nlet wasmCache$h = null;\n/**\n * Calculates CRC-32 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */\nfunction crc32(data) {\n    if (wasmCache$h === null) {\n        return lockedCreate(mutex$h, wasmJson$f, 4)\n            .then((wasm) => {\n            wasmCache$h = wasm;\n            return wasmCache$h.calculate(data, 0xEDB88320);\n        });\n    }\n    try {\n        const hash = wasmCache$h.calculate(data, 0xEDB88320);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new CRC-32 hash instance\n */\nfunction createCRC32() {\n    return WASMInterface(wasmJson$f, 4).then((wasm) => {\n        wasm.init(0xEDB88320);\n        const obj = {\n            init: () => { wasm.init(0xEDB88320); return obj; },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 4,\n            digestSize: 4,\n        };\n        return obj;\n    });\n}\n\nconst mutex$g = new Mutex();\nlet wasmCache$g = null;\n/**\n * Calculates CRC-32C hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */\nfunction crc32c(data) {\n    if (wasmCache$g === null) {\n        return lockedCreate(mutex$g, wasmJson$f, 4)\n            .then((wasm) => {\n            wasmCache$g = wasm;\n            return wasmCache$g.calculate(data, 0x82F63B78);\n        });\n    }\n    try {\n        const hash = wasmCache$g.calculate(data, 0x82F63B78);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new CRC-32C hash instance\n */\nfunction createCRC32C() {\n    return WASMInterface(wasmJson$f, 4).then((wasm) => {\n        wasm.init(0x82F63B78);\n        const obj = {\n            init: () => { wasm.init(0x82F63B78); return obj; },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 4,\n            digestSize: 4,\n        };\n        return obj;\n    });\n}\n\nvar name$e = \"md4\";\nvar data$e = \"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\";\nvar hash$e = \"74909c24\";\nvar wasmJson$e = {\n\tname: name$e,\n\tdata: data$e,\n\thash: hash$e\n};\n\nconst mutex$f = new Mutex();\nlet wasmCache$f = null;\n/**\n * Calculates MD4 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */\nfunction md4(data) {\n    if (wasmCache$f === null) {\n        return lockedCreate(mutex$f, wasmJson$e, 16)\n            .then((wasm) => {\n            wasmCache$f = wasm;\n            return wasmCache$f.calculate(data);\n        });\n    }\n    try {\n        const hash = wasmCache$f.calculate(data);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new MD4 hash instance\n */\nfunction createMD4() {\n    return WASMInterface(wasmJson$e, 16).then((wasm) => {\n        wasm.init();\n        const obj = {\n            init: () => { wasm.init(); return obj; },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 64,\n            digestSize: 16,\n        };\n        return obj;\n    });\n}\n\nvar name$d = \"md5\";\nvar data$d = \"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\";\nvar hash$d = \"42fa4d29\";\nvar wasmJson$d = {\n\tname: name$d,\n\tdata: data$d,\n\thash: hash$d\n};\n\nconst mutex$e = new Mutex();\nlet wasmCache$e = null;\n/**\n * Calculates MD5 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */\nfunction md5(data) {\n    if (wasmCache$e === null) {\n        return lockedCreate(mutex$e, wasmJson$d, 16)\n            .then((wasm) => {\n            wasmCache$e = wasm;\n            return wasmCache$e.calculate(data);\n        });\n    }\n    try {\n        const hash = wasmCache$e.calculate(data);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new MD5 hash instance\n */\nfunction createMD5() {\n    return WASMInterface(wasmJson$d, 16).then((wasm) => {\n        wasm.init();\n        const obj = {\n            init: () => { wasm.init(); return obj; },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 64,\n            digestSize: 16,\n        };\n        return obj;\n    });\n}\n\nvar name$c = \"sha1\";\nvar data$c = \"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\";\nvar hash$c = \"6b530c24\";\nvar wasmJson$c = {\n\tname: name$c,\n\tdata: data$c,\n\thash: hash$c\n};\n\nconst mutex$d = new Mutex();\nlet wasmCache$d = null;\n/**\n * Calculates SHA-1 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */\nfunction sha1(data) {\n    if (wasmCache$d === null) {\n        return lockedCreate(mutex$d, wasmJson$c, 20)\n            .then((wasm) => {\n            wasmCache$d = wasm;\n            return wasmCache$d.calculate(data);\n        });\n    }\n    try {\n        const hash = wasmCache$d.calculate(data);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new SHA-1 hash instance\n */\nfunction createSHA1() {\n    return WASMInterface(wasmJson$c, 20).then((wasm) => {\n        wasm.init();\n        const obj = {\n            init: () => { wasm.init(); return obj; },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 64,\n            digestSize: 20,\n        };\n        return obj;\n    });\n}\n\nvar name$b = \"sha3\";\nvar data$b = \"AGFzbQEAAAABFARgAAF/YAF/AGACf38AYAN/f38AAwgHAAEBAgEAAwUEAQECAgYOAn8BQZCNBQt/AEGACAsHcAgGbWVtb3J5AgAOSGFzaF9HZXRCdWZmZXIAAAlIYXNoX0luaXQAAQtIYXNoX1VwZGF0ZQACCkhhc2hfRmluYWwABA1IYXNoX0dldFN0YXRlAAUOSGFzaF9DYWxjdWxhdGUABgpTVEFURV9TSVpFAwEKqBwHBQBBgAoL1wMAQQBCADcDgI0BQQBCADcD+IwBQQBCADcD8IwBQQBCADcD6IwBQQBCADcD4IwBQQBCADcD2IwBQQBCADcD0IwBQQBCADcDyIwBQQBCADcDwIwBQQBCADcDuIwBQQBCADcDsIwBQQBCADcDqIwBQQBCADcDoIwBQQBCADcDmIwBQQBCADcDkIwBQQBCADcDiIwBQQBCADcDgIwBQQBCADcD+IsBQQBCADcD8IsBQQBCADcD6IsBQQBCADcD4IsBQQBCADcD2IsBQQBCADcD0IsBQQBCADcDyIsBQQBCADcDwIsBQQBCADcDuIsBQQBCADcDsIsBQQBCADcDqIsBQQBCADcDoIsBQQBCADcDmIsBQQBCADcDkIsBQQBCADcDiIsBQQBCADcDgIsBQQBCADcD+IoBQQBCADcD8IoBQQBCADcD6IoBQQBCADcD4IoBQQBCADcD2IoBQQBCADcD0IoBQQBCADcDyIoBQQBCADcDwIoBQQBCADcDuIoBQQBCADcDsIoBQQBCADcDqIoBQQBCADcDoIoBQQBCADcDmIoBQQBCADcDkIoBQQBCADcDiIoBQQBCADcDgIoBQQBBwAwgAEEBdGtBA3Y2AoyNAUEAQQA2AoiNAQuMAwEIfwJAQQAoAoiNASIBQQBIDQBBACABIABqQQAoAoyNASICcDYCiI0BAkACQCABDQBBgAohAwwBCwJAIAIgAWsiBCAAIAQgAEkbIgNFDQAgA0EDcSEFQQAhBgJAIANBBEkNACABQYCKAWohByADQXxxIQhBACEGA0AgByAGaiIDQcgBaiAGQYAKai0AADoAACADQckBaiAGQYEKai0AADoAACADQcoBaiAGQYIKai0AADoAACADQcsBaiAGQYMKai0AADoAACAIIAZBBGoiBkcNAAsLIAVFDQAgAUHIiwFqIQMDQCADIAZqIAZBgApqLQAAOgAAIAZBAWohBiAFQX9qIgUNAAsLIAQgAEsNAUHIiwEgAhADIAAgBGshACAEQYAKaiEDCwJAIAAgAkkNAANAIAMgAhADIAMgAmohAyAAIAJrIgAgAk8NAAsLIABFDQBBACECQcgBIQYDQCAGQYCKAWogAyAGakG4fmotAAA6AAAgBkEBaiEGIAAgAkEBaiICQf8BcUsNAAsLC+QLAS1+IAApA0AhAkEAKQPAigEhAyAAKQM4IQRBACkDuIoBIQUgACkDMCEGQQApA7CKASEHIAApAyghCEEAKQOoigEhCSAAKQMgIQpBACkDoIoBIQsgACkDGCEMQQApA5iKASENIAApAxAhDkEAKQOQigEhDyAAKQMIIRBBACkDiIoBIREgACkDACESQQApA4CKASETQQApA8iKASEUAkACQCABQcgASw0AQQApA9CKASEVQQApA+CKASEWQQApA9iKASEXDAELQQApA+CKASAAKQNghSEWQQApA9iKASAAKQNYhSEXQQApA9CKASAAKQNQhSEVIBQgACkDSIUhFCABQekASQ0AQQBBACkD6IoBIAApA2iFNwPoigFBAEEAKQPwigEgACkDcIU3A/CKAUEAQQApA/iKASAAKQN4hTcD+IoBQQBBACkDgIsBIAApA4ABhTcDgIsBIAFBiQFJDQBBAEEAKQOIiwEgACkDiAGFNwOIiwELIAMgAoUhGCAFIASFIRkgByAGhSEHIAkgCIUhCCALIAqFIRogDSAMhSEJIA8gDoUhCiARIBCFIQsgEyAShSEMQQApA7iLASESQQApA5CLASETQQApA+iKASEbQQApA6CLASEcQQApA/iKASENQQApA7CLASEdQQApA4iLASEOQQApA8CLASEPQQApA5iLASEeQQApA/CKASEQQQApA6iLASERQQApA4CLASEfQcB+IQADQCAaIAcgC4UgF4UgH4UgEYVCAYmFIBSFIBCFIB6FIA+FIQIgDCAZIAqFIBaFIA6FIB2FQgGJhSAIhSAVhSANhSAchSIDIAeFISAgCSAIIAyFIBWFIA2FIByFQgGJhSAYhSAbhSAThSAShSIEIA+FISEgGCAKIBQgGoUgEIUgHoUgD4VCAYmFIBmFIBaFIA6FIB2FIgWFQjeJIiIgCyAYIAmFIBuFIBOFIBKFQgGJhSAHhSAXhSAfhSARhSIGIAqFQj6JIiNCf4WDIAMgEYVCAokiJIUhDyANIAKFQimJIiUgBCAQhUIniSImQn+FgyAihSERIBIgBYVCOIkiEiAGIA6FQg+JIidCf4WDIAMgF4VCCokiKIUhDiAEIBqFQhuJIikgKCAIIAKFQiSJIipCf4WDhSENIAYgGYVCBokiKyADIAuFQgGJIixCf4WDIBwgAoVCEokiLYUhECArIAQgHoVCCIkiLiAbIAWFQhmJIhtCf4WDhSEXIAYgHYVCPYkiGSAEIBSFQhSJIgQgCSAFhUIciSIIQn+Fg4UhFCAIIBlCf4WDIAMgH4VCLYkiA4UhGCAZIANCf4WDIBUgAoVCA4kiCYUhGSAEIAMgCUJ/hYOFIQcgCSAEQn+FgyAIhSEIIAwgAoUiAiAhQg6JIgNCf4WDIBMgBYVCFYkiBIUhCSAGIBaFQiuJIgUgAyAEQn+Fg4UhCiAEIAVCf4WDICBCLIkiBIUhCyAAQdAJaikDACAFIARCf4WDhSAChSEMICcgKEJ/hYMgKoUiBSEfIAMgBCACQn+Fg4UiAiEaICogKUJ/hYMgEoUiAyEeIC0gLkJ/hYMgG4UiBCEWICYgJCAlQn+Fg4UiBiEdIBsgK0J/hYMgLIUiKCEVICMgJiAiQn+Fg4UiIiEcIC4gLCAtQn+Fg4UiJiEbICcgKSASQn+Fg4UiJyETICMgJEJ/hYMgJYUiIyESIABBCGoiAA0AC0EAIBE3A6iLAUEAIAU3A4CLAUEAIBc3A9iKAUEAIAc3A7CKAUEAIAs3A4iKAUEAIA83A8CLAUEAIAM3A5iLAUEAIBA3A/CKAUEAIBQ3A8iKAUEAIAI3A6CKAUEAIAY3A7CLAUEAIA43A4iLAUEAIAQ3A+CKAUEAIBk3A7iKAUEAIAo3A5CKAUEAICI3A6CLAUEAIA03A/iKAUEAICg3A9CKAUEAIAg3A6iKAUEAIAw3A4CKAUEAICM3A7iLAUEAICc3A5CLAUEAICY3A+iKAUEAIBg3A8CKAUEAIAk3A5iKAQv4AgEFf0HkAEEAKAKMjQEiAUEBdmshAgJAQQAoAoiNASIDQQBIDQAgASEEAkAgASADRg0AIANByIsBaiEFQQAhAwNAIAUgA2pBADoAACADQQFqIgMgAUEAKAKIjQEiBGtJDQALCyAEQciLAWoiAyADLQAAIAByOgAAIAFBx4sBaiIDIAMtAABBgAFyOgAAQciLASABEANBAEGAgICAeDYCiI0BCwJAIAJBBEkNACACQQJ2IgNBA3EhBUEAIQQCQCADQX9qQQNJDQAgA0H8////A3EhAUEAIQNBACEEA0AgA0GACmogA0GAigFqKAIANgIAIANBhApqIANBhIoBaigCADYCACADQYgKaiADQYiKAWooAgA2AgAgA0GMCmogA0GMigFqKAIANgIAIANBEGohAyABIARBBGoiBEcNAAsLIAVFDQAgBUECdCEBIARBAnQhAwNAIANBgApqIANBgIoBaigCADYCACADQQRqIQMgAUF8aiIBDQALCwsGAEGAigEL0QYBA39BAEIANwOAjQFBAEIANwP4jAFBAEIANwPwjAFBAEIANwPojAFBAEIANwPgjAFBAEIANwPYjAFBAEIANwPQjAFBAEIANwPIjAFBAEIANwPAjAFBAEIANwO4jAFBAEIANwOwjAFBAEIANwOojAFBAEIANwOgjAFBAEIANwOYjAFBAEIANwOQjAFBAEIANwOIjAFBAEIANwOAjAFBAEIANwP4iwFBAEIANwPwiwFBAEIANwPoiwFBAEIANwPgiwFBAEIANwPYiwFBAEIANwPQiwFBAEIANwPIiwFBAEIANwPAiwFBAEIANwO4iwFBAEIANwOwiwFBAEIANwOoiwFBAEIANwOgiwFBAEIANwOYiwFBAEIANwOQiwFBAEIANwOIiwFBAEIANwOAiwFBAEIANwP4igFBAEIANwPwigFBAEIANwPoigFBAEIANwPgigFBAEIANwPYigFBAEIANwPQigFBAEIANwPIigFBAEIANwPAigFBAEIANwO4igFBAEIANwOwigFBAEIANwOoigFBAEIANwOgigFBAEIANwOYigFBAEIANwOQigFBAEIANwOIigFBAEIANwOAigFBAEHADCABQQF0a0EDdjYCjI0BQQBBADYCiI0BIAAQAkHkAEEAKAKMjQEiAEEBdmshAwJAQQAoAoiNASIBQQBIDQAgACEEAkAgACABRg0AIAFByIsBaiEFQQAhAQNAIAUgAWpBADoAACABQQFqIgEgAEEAKAKIjQEiBGtJDQALCyAEQciLAWoiASABLQAAIAJyOgAAIABBx4sBaiIBIAEtAABBgAFyOgAAQciLASAAEANBAEGAgICAeDYCiI0BCwJAIANBBEkNACADQQJ2IgFBA3EhBUEAIQQCQCABQX9qQQNJDQAgAUH8////A3EhAEEAIQFBACEEA0AgAUGACmogAUGAigFqKAIANgIAIAFBhApqIAFBhIoBaigCADYCACABQYgKaiABQYiKAWooAgA2AgAgAUGMCmogAUGMigFqKAIANgIAIAFBEGohASAAIARBBGoiBEcNAAsLIAVFDQAgBUECdCEAIARBAnQhAQNAIAFBgApqIAFBgIoBaigCADYCACABQQRqIQEgAEF8aiIADQALCwsL2AEBAEGACAvQAZABAAAAAAAAAAAAAAAAAAABAAAAAAAAAIKAAAAAAAAAioAAAAAAAIAAgACAAAAAgIuAAAAAAAAAAQAAgAAAAACBgACAAAAAgAmAAAAAAACAigAAAAAAAACIAAAAAAAAAAmAAIAAAAAACgAAgAAAAACLgACAAAAAAIsAAAAAAACAiYAAAAAAAIADgAAAAAAAgAKAAAAAAACAgAAAAAAAAIAKgAAAAAAAAAoAAIAAAACAgYAAgAAAAICAgAAAAAAAgAEAAIAAAAAACIAAgAAAAIA=\";\nvar hash$b = \"f2f6f5b2\";\nvar wasmJson$b = {\n\tname: name$b,\n\tdata: data$b,\n\thash: hash$b\n};\n\nconst mutex$c = new Mutex();\nlet wasmCache$c = null;\nfunction validateBits$1(bits) {\n    if (![224, 256, 384, 512].includes(bits)) {\n        return new Error('Invalid variant! Valid values: 224, 256, 384, 512');\n    }\n    return null;\n}\n/**\n * Calculates SHA-3 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param bits Number of output bits. Valid values: 224, 256, 384, 512\n * @returns Computed hash as a hexadecimal string\n */\nfunction sha3(data, bits = 512) {\n    if (validateBits$1(bits)) {\n        return Promise.reject(validateBits$1(bits));\n    }\n    const hashLength = bits / 8;\n    if (wasmCache$c === null || wasmCache$c.hashLength !== hashLength) {\n        return lockedCreate(mutex$c, wasmJson$b, hashLength)\n            .then((wasm) => {\n            wasmCache$c = wasm;\n            return wasmCache$c.calculate(data, bits, 0x06);\n        });\n    }\n    try {\n        const hash = wasmCache$c.calculate(data, bits, 0x06);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new SHA-3 hash instance\n * @param bits Number of output bits. Valid values: 224, 256, 384, 512\n */\nfunction createSHA3(bits = 512) {\n    if (validateBits$1(bits)) {\n        return Promise.reject(validateBits$1(bits));\n    }\n    const outputSize = bits / 8;\n    return WASMInterface(wasmJson$b, outputSize).then((wasm) => {\n        wasm.init(bits);\n        const obj = {\n            init: () => { wasm.init(bits); return obj; },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType, 0x06),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 200 - 2 * outputSize,\n            digestSize: outputSize,\n        };\n        return obj;\n    });\n}\n\nconst mutex$b = new Mutex();\nlet wasmCache$b = null;\nfunction validateBits(bits) {\n    if (![224, 256, 384, 512].includes(bits)) {\n        return new Error('Invalid variant! Valid values: 224, 256, 384, 512');\n    }\n    return null;\n}\n/**\n * Calculates Keccak hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param bits Number of output bits. Valid values: 224, 256, 384, 512\n * @returns Computed hash as a hexadecimal string\n */\nfunction keccak(data, bits = 512) {\n    if (validateBits(bits)) {\n        return Promise.reject(validateBits(bits));\n    }\n    const hashLength = bits / 8;\n    if (wasmCache$b === null || wasmCache$b.hashLength !== hashLength) {\n        return lockedCreate(mutex$b, wasmJson$b, hashLength)\n            .then((wasm) => {\n            wasmCache$b = wasm;\n            return wasmCache$b.calculate(data, bits, 0x01);\n        });\n    }\n    try {\n        const hash = wasmCache$b.calculate(data, bits, 0x01);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new Keccak hash instance\n * @param bits Number of output bits. Valid values: 224, 256, 384, 512\n */\nfunction createKeccak(bits = 512) {\n    if (validateBits(bits)) {\n        return Promise.reject(validateBits(bits));\n    }\n    const outputSize = bits / 8;\n    return WASMInterface(wasmJson$b, outputSize).then((wasm) => {\n        wasm.init(bits);\n        const obj = {\n            init: () => { wasm.init(bits); return obj; },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType, 0x01),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 200 - 2 * outputSize,\n            digestSize: outputSize,\n        };\n        return obj;\n    });\n}\n\nvar name$a = \"sha256\";\nvar data$a = \"\";\nvar hash$a = \"64f06674\";\nvar wasmJson$a = {\n\tname: name$a,\n\tdata: data$a,\n\thash: hash$a\n};\n\nconst mutex$a = new Mutex();\nlet wasmCache$a = null;\n/**\n * Calculates SHA-2 (SHA-224) hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */\nfunction sha224(data) {\n    if (wasmCache$a === null) {\n        return lockedCreate(mutex$a, wasmJson$a, 28)\n            .then((wasm) => {\n            wasmCache$a = wasm;\n            return wasmCache$a.calculate(data, 224);\n        });\n    }\n    try {\n        const hash = wasmCache$a.calculate(data, 224);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new SHA-2 (SHA-224) hash instance\n */\nfunction createSHA224() {\n    return WASMInterface(wasmJson$a, 28).then((wasm) => {\n        wasm.init(224);\n        const obj = {\n            init: () => { wasm.init(224); return obj; },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 64,\n            digestSize: 28,\n        };\n        return obj;\n    });\n}\n\nconst mutex$9 = new Mutex();\nlet wasmCache$9 = null;\n/**\n * Calculates SHA-2 (SHA-256) hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */\nfunction sha256(data) {\n    if (wasmCache$9 === null) {\n        return lockedCreate(mutex$9, wasmJson$a, 32)\n            .then((wasm) => {\n            wasmCache$9 = wasm;\n            return wasmCache$9.calculate(data, 256);\n        });\n    }\n    try {\n        const hash = wasmCache$9.calculate(data, 256);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new SHA-2 (SHA-256) hash instance\n */\nfunction createSHA256() {\n    return WASMInterface(wasmJson$a, 32).then((wasm) => {\n        wasm.init(256);\n        const obj = {\n            init: () => { wasm.init(256); return obj; },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 64,\n            digestSize: 32,\n        };\n        return obj;\n    });\n}\n\nvar name$9 = \"sha512\";\nvar data$9 = \"\";\nvar hash$9 = \"cdd57f6a\";\nvar wasmJson$9 = {\n\tname: name$9,\n\tdata: data$9,\n\thash: hash$9\n};\n\nconst mutex$8 = new Mutex();\nlet wasmCache$8 = null;\n/**\n * Calculates SHA-2 (SHA-384) hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */\nfunction sha384(data) {\n    if (wasmCache$8 === null) {\n        return lockedCreate(mutex$8, wasmJson$9, 48)\n            .then((wasm) => {\n            wasmCache$8 = wasm;\n            return wasmCache$8.calculate(data, 384);\n        });\n    }\n    try {\n        const hash = wasmCache$8.calculate(data, 384);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new SHA-2 (SHA-384) hash instance\n */\nfunction createSHA384() {\n    return WASMInterface(wasmJson$9, 48).then((wasm) => {\n        wasm.init(384);\n        const obj = {\n            init: () => { wasm.init(384); return obj; },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 128,\n            digestSize: 48,\n        };\n        return obj;\n    });\n}\n\nconst mutex$7 = new Mutex();\nlet wasmCache$7 = null;\n/**\n * Calculates SHA-2 (SHA-512) hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */\nfunction sha512(data) {\n    if (wasmCache$7 === null) {\n        return lockedCreate(mutex$7, wasmJson$9, 64)\n            .then((wasm) => {\n            wasmCache$7 = wasm;\n            return wasmCache$7.calculate(data, 512);\n        });\n    }\n    try {\n        const hash = wasmCache$7.calculate(data, 512);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new SHA-2 (SHA-512) hash instance\n */\nfunction createSHA512() {\n    return WASMInterface(wasmJson$9, 64).then((wasm) => {\n        wasm.init(512);\n        const obj = {\n            init: () => { wasm.init(512); return obj; },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 128,\n            digestSize: 64,\n        };\n        return obj;\n    });\n}\n\nvar name$8 = \"xxhash32\";\nvar data$8 = \"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\";\nvar hash$8 = \"9e3a00cd\";\nvar wasmJson$8 = {\n\tname: name$8,\n\tdata: data$8,\n\thash: hash$8\n};\n\nconst mutex$6 = new Mutex();\nlet wasmCache$6 = null;\nfunction validateSeed$3(seed) {\n    if (!Number.isInteger(seed) || seed < 0 || seed > 0xFFFFFFFF) {\n        return new Error('Seed must be a valid 32-bit long unsigned integer.');\n    }\n    return null;\n}\n/**\n * Calculates xxHash32 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param seed Number used to initialize the internal state of the algorithm (defaults to 0)\n * @returns Computed hash as a hexadecimal string\n */\nfunction xxhash32(data, seed = 0) {\n    if (validateSeed$3(seed)) {\n        return Promise.reject(validateSeed$3(seed));\n    }\n    if (wasmCache$6 === null) {\n        return lockedCreate(mutex$6, wasmJson$8, 4)\n            .then((wasm) => {\n            wasmCache$6 = wasm;\n            return wasmCache$6.calculate(data, seed);\n        });\n    }\n    try {\n        const hash = wasmCache$6.calculate(data, seed);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new xxHash32 hash instance\n * @param data Input data (string, Buffer or TypedArray)\n * @param seed Number used to initialize the internal state of the algorithm (defaults to 0)\n */\nfunction createXXHash32(seed = 0) {\n    if (validateSeed$3(seed)) {\n        return Promise.reject(validateSeed$3(seed));\n    }\n    return WASMInterface(wasmJson$8, 4).then((wasm) => {\n        wasm.init(seed);\n        const obj = {\n            init: () => { wasm.init(seed); return obj; },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 16,\n            digestSize: 4,\n        };\n        return obj;\n    });\n}\n\nvar name$7 = \"xxhash64\";\nvar data$7 = \"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\";\nvar hash$7 = \"dc61b4e7\";\nvar wasmJson$7 = {\n\tname: name$7,\n\tdata: data$7,\n\thash: hash$7\n};\n\nconst mutex$5 = new Mutex();\nlet wasmCache$5 = null;\nconst seedBuffer$2 = new ArrayBuffer(8);\nfunction validateSeed$2(seed) {\n    if (!Number.isInteger(seed) || seed < 0 || seed > 0xFFFFFFFF) {\n        return new Error('Seed must be given as two valid 32-bit long unsigned integers (lo + high).');\n    }\n    return null;\n}\nfunction writeSeed$2(arr, low, high) {\n    // write in little-endian format\n    const buffer = new DataView(arr);\n    buffer.setUint32(0, low, true);\n    buffer.setUint32(4, high, true);\n}\n/**\n * Calculates xxHash64 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param seedLow Lower 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @param seedHigh Higher 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @returns Computed hash as a hexadecimal string\n */\nfunction xxhash64(data, seedLow = 0, seedHigh = 0) {\n    if (validateSeed$2(seedLow)) {\n        return Promise.reject(validateSeed$2(seedLow));\n    }\n    if (validateSeed$2(seedHigh)) {\n        return Promise.reject(validateSeed$2(seedHigh));\n    }\n    if (wasmCache$5 === null) {\n        return lockedCreate(mutex$5, wasmJson$7, 8)\n            .then((wasm) => {\n            wasmCache$5 = wasm;\n            writeSeed$2(seedBuffer$2, seedLow, seedHigh);\n            wasmCache$5.writeMemory(new Uint8Array(seedBuffer$2));\n            return wasmCache$5.calculate(data);\n        });\n    }\n    try {\n        writeSeed$2(seedBuffer$2, seedLow, seedHigh);\n        wasmCache$5.writeMemory(new Uint8Array(seedBuffer$2));\n        const hash = wasmCache$5.calculate(data);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new xxHash64 hash instance\n * @param seedLow Lower 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @param seedHigh Higher 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n */\nfunction createXXHash64(seedLow = 0, seedHigh = 0) {\n    if (validateSeed$2(seedLow)) {\n        return Promise.reject(validateSeed$2(seedLow));\n    }\n    if (validateSeed$2(seedHigh)) {\n        return Promise.reject(validateSeed$2(seedHigh));\n    }\n    return WASMInterface(wasmJson$7, 8).then((wasm) => {\n        const instanceBuffer = new ArrayBuffer(8);\n        writeSeed$2(instanceBuffer, seedLow, seedHigh);\n        wasm.writeMemory(new Uint8Array(instanceBuffer));\n        wasm.init();\n        const obj = {\n            init: () => {\n                wasm.writeMemory(new Uint8Array(instanceBuffer));\n                wasm.init();\n                return obj;\n            },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 32,\n            digestSize: 8,\n        };\n        return obj;\n    });\n}\n\nvar name$6 = \"xxhash3\";\nvar data$6 = \"\";\nvar hash$6 = \"0dca92d1\";\nvar wasmJson$6 = {\n\tname: name$6,\n\tdata: data$6,\n\thash: hash$6\n};\n\nconst mutex$4 = new Mutex();\nlet wasmCache$4 = null;\nconst seedBuffer$1 = new ArrayBuffer(8);\nfunction validateSeed$1(seed) {\n    if (!Number.isInteger(seed) || seed < 0 || seed > 0xFFFFFFFF) {\n        return new Error('Seed must be given as two valid 32-bit long unsigned integers (lo + high).');\n    }\n    return null;\n}\nfunction writeSeed$1(arr, low, high) {\n    // write in little-endian format\n    const buffer = new DataView(arr);\n    buffer.setUint32(0, low, true);\n    buffer.setUint32(4, high, true);\n}\n/**\n * Calculates xxHash3 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param seedLow Lower 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @param seedHigh Higher 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @returns Computed hash as a hexadecimal string\n */\nfunction xxhash3(data, seedLow = 0, seedHigh = 0) {\n    if (validateSeed$1(seedLow)) {\n        return Promise.reject(validateSeed$1(seedLow));\n    }\n    if (validateSeed$1(seedHigh)) {\n        return Promise.reject(validateSeed$1(seedHigh));\n    }\n    if (wasmCache$4 === null) {\n        return lockedCreate(mutex$4, wasmJson$6, 8)\n            .then((wasm) => {\n            wasmCache$4 = wasm;\n            writeSeed$1(seedBuffer$1, seedLow, seedHigh);\n            wasmCache$4.writeMemory(new Uint8Array(seedBuffer$1));\n            return wasmCache$4.calculate(data);\n        });\n    }\n    try {\n        writeSeed$1(seedBuffer$1, seedLow, seedHigh);\n        wasmCache$4.writeMemory(new Uint8Array(seedBuffer$1));\n        const hash = wasmCache$4.calculate(data);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new xxHash3 hash instance\n * @param seedLow Lower 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @param seedHigh Higher 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n */\nfunction createXXHash3(seedLow = 0, seedHigh = 0) {\n    if (validateSeed$1(seedLow)) {\n        return Promise.reject(validateSeed$1(seedLow));\n    }\n    if (validateSeed$1(seedHigh)) {\n        return Promise.reject(validateSeed$1(seedHigh));\n    }\n    return WASMInterface(wasmJson$6, 8).then((wasm) => {\n        const instanceBuffer = new ArrayBuffer(8);\n        writeSeed$1(instanceBuffer, seedLow, seedHigh);\n        wasm.writeMemory(new Uint8Array(instanceBuffer));\n        wasm.init();\n        const obj = {\n            init: () => {\n                wasm.writeMemory(new Uint8Array(instanceBuffer));\n                wasm.init();\n                return obj;\n            },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 512,\n            digestSize: 8,\n        };\n        return obj;\n    });\n}\n\nvar name$5 = \"xxhash128\";\nvar data$5 = \"\";\nvar hash$5 = \"1f682d91\";\nvar wasmJson$5 = {\n\tname: name$5,\n\tdata: data$5,\n\thash: hash$5\n};\n\nconst mutex$3 = new Mutex();\nlet wasmCache$3 = null;\nconst seedBuffer = new ArrayBuffer(8);\nfunction validateSeed(seed) {\n    if (!Number.isInteger(seed) || seed < 0 || seed > 0xFFFFFFFF) {\n        return new Error('Seed must be given as two valid 32-bit long unsigned integers (lo + high).');\n    }\n    return null;\n}\nfunction writeSeed(arr, low, high) {\n    // write in little-endian format\n    const buffer = new DataView(arr);\n    buffer.setUint32(0, low, true);\n    buffer.setUint32(4, high, true);\n}\n/**\n * Calculates xxHash128 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @param seedLow Lower 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @param seedHigh Higher 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @returns Computed hash as a hexadecimal string\n */\nfunction xxhash128(data, seedLow = 0, seedHigh = 0) {\n    if (validateSeed(seedLow)) {\n        return Promise.reject(validateSeed(seedLow));\n    }\n    if (validateSeed(seedHigh)) {\n        return Promise.reject(validateSeed(seedHigh));\n    }\n    if (wasmCache$3 === null) {\n        return lockedCreate(mutex$3, wasmJson$5, 16)\n            .then((wasm) => {\n            wasmCache$3 = wasm;\n            writeSeed(seedBuffer, seedLow, seedHigh);\n            wasmCache$3.writeMemory(new Uint8Array(seedBuffer));\n            return wasmCache$3.calculate(data);\n        });\n    }\n    try {\n        writeSeed(seedBuffer, seedLow, seedHigh);\n        wasmCache$3.writeMemory(new Uint8Array(seedBuffer));\n        const hash = wasmCache$3.calculate(data);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new xxHash128 hash instance\n * @param seedLow Lower 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n * @param seedHigh Higher 32 bits of the number used to\n *  initialize the internal state of the algorithm (defaults to 0)\n */\nfunction createXXHash128(seedLow = 0, seedHigh = 0) {\n    if (validateSeed(seedLow)) {\n        return Promise.reject(validateSeed(seedLow));\n    }\n    if (validateSeed(seedHigh)) {\n        return Promise.reject(validateSeed(seedHigh));\n    }\n    return WASMInterface(wasmJson$5, 16).then((wasm) => {\n        const instanceBuffer = new ArrayBuffer(8);\n        writeSeed(instanceBuffer, seedLow, seedHigh);\n        wasm.writeMemory(new Uint8Array(instanceBuffer));\n        wasm.init();\n        const obj = {\n            init: () => {\n                wasm.writeMemory(new Uint8Array(instanceBuffer));\n                wasm.init();\n                return obj;\n            },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 512,\n            digestSize: 16,\n        };\n        return obj;\n    });\n}\n\nvar name$4 = \"ripemd160\";\nvar data$4 = \"\";\nvar hash$4 = \"c089a7ca\";\nvar wasmJson$4 = {\n\tname: name$4,\n\tdata: data$4,\n\thash: hash$4\n};\n\nconst mutex$2 = new Mutex();\nlet wasmCache$2 = null;\n/**\n * Calculates RIPEMD-160 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */\nfunction ripemd160(data) {\n    if (wasmCache$2 === null) {\n        return lockedCreate(mutex$2, wasmJson$4, 20)\n            .then((wasm) => {\n            wasmCache$2 = wasm;\n            return wasmCache$2.calculate(data);\n        });\n    }\n    try {\n        const hash = wasmCache$2.calculate(data);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new RIPEMD-160 hash instance\n */\nfunction createRIPEMD160() {\n    return WASMInterface(wasmJson$4, 20).then((wasm) => {\n        wasm.init();\n        const obj = {\n            init: () => { wasm.init(); return obj; },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 64,\n            digestSize: 20,\n        };\n        return obj;\n    });\n}\n\nfunction calculateKeyBuffer(hasher, key) {\n    const { blockSize } = hasher;\n    const buf = getUInt8Buffer(key);\n    if (buf.length > blockSize) {\n        hasher.update(buf);\n        const uintArr = hasher.digest('binary');\n        hasher.init();\n        return uintArr;\n    }\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.length);\n}\nfunction calculateHmac(hasher, key) {\n    hasher.init();\n    const { blockSize } = hasher;\n    const keyBuf = calculateKeyBuffer(hasher, key);\n    const keyBuffer = new Uint8Array(blockSize);\n    keyBuffer.set(keyBuf);\n    const opad = new Uint8Array(blockSize);\n    for (let i = 0; i < blockSize; i++) {\n        const v = keyBuffer[i];\n        opad[i] = v ^ 0x5C;\n        keyBuffer[i] = v ^ 0x36;\n    }\n    hasher.update(keyBuffer);\n    const obj = {\n        init: () => {\n            hasher.init();\n            hasher.update(keyBuffer);\n            return obj;\n        },\n        update: (data) => {\n            hasher.update(data);\n            return obj;\n        },\n        digest: ((outputType) => {\n            const uintArr = hasher.digest('binary');\n            hasher.init();\n            hasher.update(opad);\n            hasher.update(uintArr);\n            return hasher.digest(outputType);\n        }),\n        save: () => {\n            throw new Error('save() not supported');\n        },\n        load: () => {\n            throw new Error('load() not supported');\n        },\n        blockSize: hasher.blockSize,\n        digestSize: hasher.digestSize,\n    };\n    return obj;\n}\n/**\n * Calculates HMAC hash\n * @param hash Hash algorithm to use. It has to be the return value of a function like createSHA1()\n * @param key Key (string, Buffer or TypedArray)\n */\nfunction createHMAC(hash, key) {\n    if (!hash || !hash.then) {\n        throw new Error('Invalid hash function is provided! Usage: createHMAC(createMD5(), \"key\").');\n    }\n    return hash.then((hasher) => calculateHmac(hasher, key));\n}\n\nfunction calculatePBKDF2(digest, salt, iterations, hashLength, outputType) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const DK = new Uint8Array(hashLength);\n        const block1 = new Uint8Array(salt.length + 4);\n        const block1View = new DataView(block1.buffer);\n        const saltBuffer = getUInt8Buffer(salt);\n        const saltUIntBuffer = new Uint8Array(saltBuffer.buffer, saltBuffer.byteOffset, saltBuffer.length);\n        block1.set(saltUIntBuffer);\n        let destPos = 0;\n        const hLen = digest.digestSize;\n        const l = Math.ceil(hashLength / hLen);\n        let T = null;\n        let U = null;\n        for (let i = 1; i <= l; i++) {\n            block1View.setUint32(salt.length, i);\n            digest.init();\n            digest.update(block1);\n            T = digest.digest('binary');\n            U = T.slice();\n            for (let j = 1; j < iterations; j++) {\n                digest.init();\n                digest.update(U);\n                U = digest.digest('binary');\n                for (let k = 0; k < hLen; k++) {\n                    T[k] ^= U[k];\n                }\n            }\n            DK.set(T.subarray(0, hashLength - destPos), destPos);\n            destPos += hLen;\n        }\n        if (outputType === 'binary') {\n            return DK;\n        }\n        const digestChars = new Uint8Array(hashLength * 2);\n        return getDigestHex(digestChars, DK, hashLength);\n    });\n}\nconst validateOptions$2 = (options) => {\n    if (!options || typeof options !== 'object') {\n        throw new Error('Invalid options parameter. It requires an object.');\n    }\n    if (!options.hashFunction || !options.hashFunction.then) {\n        throw new Error('Invalid hash function is provided! Usage: pbkdf2(\"password\", \"salt\", 1000, 32, createSHA1()).');\n    }\n    if (!Number.isInteger(options.iterations) || options.iterations < 1) {\n        throw new Error('Iterations should be a positive number');\n    }\n    if (!Number.isInteger(options.hashLength) || options.hashLength < 1) {\n        throw new Error('Hash length should be a positive number');\n    }\n    if (options.outputType === undefined) {\n        options.outputType = 'hex';\n    }\n    if (!['hex', 'binary'].includes(options.outputType)) {\n        throw new Error(`Insupported output type ${options.outputType}. Valid values: ['hex', 'binary']`);\n    }\n};\n/**\n * Generates a new PBKDF2 hash for the supplied password\n */\nfunction pbkdf2(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validateOptions$2(options);\n        const hmac = yield createHMAC(options.hashFunction, options.password);\n        return calculatePBKDF2(hmac, options.salt, options.iterations, options.hashLength, options.outputType);\n    });\n}\n\nvar name$3 = \"scrypt\";\nvar data$3 = \"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\";\nvar hash$3 = \"c51b8bf7\";\nvar wasmJson$3 = {\n\tname: name$3,\n\tdata: data$3,\n\thash: hash$3\n};\n\nfunction scryptInternal(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { costFactor, blockSize, parallelism, hashLength, } = options;\n        const SHA256Hasher = createSHA256();\n        const blockData = yield pbkdf2({\n            password: options.password,\n            salt: options.salt,\n            iterations: 1,\n            hashLength: 128 * blockSize * parallelism,\n            hashFunction: SHA256Hasher,\n            outputType: 'binary',\n        });\n        const scryptInterface = yield WASMInterface(wasmJson$3, 0);\n        // last block is for storing the temporary vectors\n        const VSize = 128 * blockSize * costFactor;\n        const XYSize = 256 * blockSize;\n        scryptInterface.setMemorySize(blockData.length + VSize + XYSize);\n        scryptInterface.writeMemory(blockData, 0);\n        // mix blocks\n        scryptInterface.getExports().scrypt(blockSize, costFactor, parallelism);\n        const expensiveSalt = scryptInterface\n            .getMemory()\n            .subarray(0, 128 * blockSize * parallelism);\n        const outputData = yield pbkdf2({\n            password: options.password,\n            salt: expensiveSalt,\n            iterations: 1,\n            hashLength,\n            hashFunction: SHA256Hasher,\n            outputType: 'binary',\n        });\n        if (options.outputType === 'hex') {\n            const digestChars = new Uint8Array(hashLength * 2);\n            return getDigestHex(digestChars, outputData, hashLength);\n        }\n        // return binary format\n        return outputData;\n    });\n}\n// eslint-disable-next-line no-bitwise\nconst isPowerOfTwo = (v) => v && !(v & (v - 1));\nconst validateOptions$1 = (options) => {\n    if (!options || typeof options !== 'object') {\n        throw new Error('Invalid options parameter. It requires an object.');\n    }\n    if (!Number.isInteger(options.blockSize) || options.blockSize < 1) {\n        throw new Error('Block size should be a positive number');\n    }\n    if (!Number.isInteger(options.costFactor)\n        || options.costFactor < 2\n        || !isPowerOfTwo(options.costFactor)) {\n        throw new Error('Cost factor should be a power of 2, greater than 1');\n    }\n    if (!Number.isInteger(options.parallelism) || options.parallelism < 1) {\n        throw new Error('Parallelism should be a positive number');\n    }\n    if (!Number.isInteger(options.hashLength) || options.hashLength < 1) {\n        throw new Error('Hash length should be a positive number.');\n    }\n    if (options.outputType === undefined) {\n        options.outputType = 'hex';\n    }\n    if (!['hex', 'binary'].includes(options.outputType)) {\n        throw new Error(`Insupported output type ${options.outputType}. Valid values: ['hex', 'binary']`);\n    }\n};\n/**\n * Calculates hash using the scrypt password-based key derivation function\n * @returns Computed hash as a hexadecimal string or as\n *          Uint8Array depending on the outputType option\n */\nfunction scrypt(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validateOptions$1(options);\n        return scryptInternal(options);\n    });\n}\n\nvar name$2 = \"bcrypt\";\nvar data$2 = \"\";\nvar hash$2 = \"497b89b2\";\nvar wasmJson$2 = {\n\tname: name$2,\n\tdata: data$2,\n\thash: hash$2\n};\n\nfunction bcryptInternal(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { costFactor, password, salt } = options;\n        const bcryptInterface = yield WASMInterface(wasmJson$2, 0);\n        bcryptInterface.writeMemory(getUInt8Buffer(salt), 0);\n        const passwordBuffer = getUInt8Buffer(password);\n        bcryptInterface.writeMemory(passwordBuffer, 16);\n        const shouldEncode = options.outputType === 'encoded' ? 1 : 0;\n        bcryptInterface.getExports().bcrypt(passwordBuffer.length, costFactor, shouldEncode);\n        const memory = bcryptInterface.getMemory();\n        if (options.outputType === 'encoded') {\n            return intArrayToString(memory, 60);\n        }\n        if (options.outputType === 'hex') {\n            const digestChars = new Uint8Array(24 * 2);\n            return getDigestHex(digestChars, memory, 24);\n        }\n        // return binary format\n        // the data is copied to allow GC of the original memory buffer\n        return memory.slice(0, 24);\n    });\n}\nconst validateOptions = (options) => {\n    if (!options || typeof options !== 'object') {\n        throw new Error('Invalid options parameter. It requires an object.');\n    }\n    if (!Number.isInteger(options.costFactor) || options.costFactor < 4 || options.costFactor > 31) {\n        throw new Error('Cost factor should be a number between 4 and 31');\n    }\n    options.password = getUInt8Buffer(options.password);\n    if (options.password.length < 1) {\n        throw new Error('Password should be at least 1 byte long');\n    }\n    if (options.password.length > 72) {\n        throw new Error('Password should be at most 72 bytes long');\n    }\n    options.salt = getUInt8Buffer(options.salt);\n    if (options.salt.length !== 16) {\n        throw new Error('Salt should be 16 bytes long');\n    }\n    if (options.outputType === undefined) {\n        options.outputType = 'encoded';\n    }\n    if (!['hex', 'binary', 'encoded'].includes(options.outputType)) {\n        throw new Error(`Insupported output type ${options.outputType}. Valid values: ['hex', 'binary', 'encoded']`);\n    }\n};\n/**\n * Calculates hash using the bcrypt password-hashing function\n * @returns Computed hash\n */\nfunction bcrypt(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validateOptions(options);\n        return bcryptInternal(options);\n    });\n}\nconst validateHashCharacters = (hash) => {\n    if (!/^\\$2[axyb]\\$[0-3][0-9]\\$[./A-Za-z0-9]{53}$/.test(hash)) {\n        return false;\n    }\n    if (hash[4] === '0' && parseInt(hash[5], 10) < 4) {\n        return false;\n    }\n    if (hash[4] === '3' && parseInt(hash[5], 10) > 1) {\n        return false;\n    }\n    return true;\n};\nconst validateVerifyOptions = (options) => {\n    if (!options || typeof options !== 'object') {\n        throw new Error('Invalid options parameter. It requires an object.');\n    }\n    if (options.hash === undefined || typeof options.hash !== 'string') {\n        throw new Error('Hash should be specified');\n    }\n    if (options.hash.length !== 60) {\n        throw new Error('Hash should be 60 bytes long');\n    }\n    if (!validateHashCharacters(options.hash)) {\n        throw new Error('Invalid hash');\n    }\n    options.password = getUInt8Buffer(options.password);\n    if (options.password.length < 1) {\n        throw new Error('Password should be at least 1 byte long');\n    }\n    if (options.password.length > 72) {\n        throw new Error('Password should be at most 72 bytes long');\n    }\n};\n/**\n * Verifies password using bcrypt password-hashing function\n * @returns True if the encoded hash matches the password\n */\nfunction bcryptVerify(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        validateVerifyOptions(options);\n        const { hash, password } = options;\n        const bcryptInterface = yield WASMInterface(wasmJson$2, 0);\n        bcryptInterface.writeMemory(getUInt8Buffer(hash), 0);\n        const passwordBuffer = getUInt8Buffer(password);\n        bcryptInterface.writeMemory(passwordBuffer, 60);\n        return !!bcryptInterface.getExports().bcrypt_verify(passwordBuffer.length);\n    });\n}\n\nvar name$1 = \"whirlpool\";\nvar data$1 = \"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\";\nvar hash$1 = \"dba12019\";\nvar wasmJson$1 = {\n\tname: name$1,\n\tdata: data$1,\n\thash: hash$1\n};\n\nconst mutex$1 = new Mutex();\nlet wasmCache$1 = null;\n/**\n * Calculates Whirlpool hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */\nfunction whirlpool(data) {\n    if (wasmCache$1 === null) {\n        return lockedCreate(mutex$1, wasmJson$1, 64)\n            .then((wasm) => {\n            wasmCache$1 = wasm;\n            return wasmCache$1.calculate(data);\n        });\n    }\n    try {\n        const hash = wasmCache$1.calculate(data);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new Whirlpool hash instance\n */\nfunction createWhirlpool() {\n    return WASMInterface(wasmJson$1, 64).then((wasm) => {\n        wasm.init();\n        const obj = {\n            init: () => { wasm.init(); return obj; },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 64,\n            digestSize: 64,\n        };\n        return obj;\n    });\n}\n\nvar name = \"sm3\";\nvar data = \"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\";\nvar hash = \"56515712\";\nvar wasmJson = {\n\tname: name,\n\tdata: data,\n\thash: hash\n};\n\nconst mutex = new Mutex();\nlet wasmCache = null;\n/**\n * Calculates SM3 hash\n * @param data Input data (string, Buffer or TypedArray)\n * @returns Computed hash as a hexadecimal string\n */\nfunction sm3(data) {\n    if (wasmCache === null) {\n        return lockedCreate(mutex, wasmJson, 32)\n            .then((wasm) => {\n            wasmCache = wasm;\n            return wasmCache.calculate(data);\n        });\n    }\n    try {\n        const hash = wasmCache.calculate(data);\n        return Promise.resolve(hash);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\n/**\n * Creates a new SM3 hash instance\n */\nfunction createSM3() {\n    return WASMInterface(wasmJson, 32).then((wasm) => {\n        wasm.init();\n        const obj = {\n            init: () => { wasm.init(); return obj; },\n            update: (data) => { wasm.update(data); return obj; },\n            digest: (outputType) => wasm.digest(outputType),\n            save: () => wasm.save(),\n            load: (data) => { wasm.load(data); return obj; },\n            blockSize: 64,\n            digestSize: 32,\n        };\n        return obj;\n    });\n}\n\nexport { adler32, argon2Verify, argon2d, argon2i, argon2id, bcrypt, bcryptVerify, blake2b, blake2s, blake3, crc32, crc32c, createAdler32, createBLAKE2b, createBLAKE2s, createBLAKE3, createCRC32, createCRC32C, createHMAC, createKeccak, createMD4, createMD5, createRIPEMD160, createSHA1, createSHA224, createSHA256, createSHA3, createSHA384, createSHA512, createSM3, createWhirlpool, createXXHash128, createXXHash3, createXXHash32, createXXHash64, keccak, md4, md5, pbkdf2, ripemd160, scrypt, sha1, sha224, sha256, sha3, sha384, sha512, sm3, whirlpool, xxhash128, xxhash3, xxhash32, xxhash64 };\n","export { Packr, Encoder, addExtension, pack, encode, NEVER, ALWAYS, DECIMAL_ROUND, DECIMAL_FIT, REUSE_BUFFER_MODE } from './pack.js'\nexport { Unpackr, Decoder, C1, unpack, unpackMultiple, decode, FLOAT32_OPTIONS, clearSource, roundFloat32, isNativeAccelerationEnabled } from './unpack.js'\nexport { decodeIter, encodeIter } from './iterators.js'\nexport const useRecords = false\nexport const mapsAsObjects = true\n","import { Unpackr, mult10, C1Type, typedArrays, addExtension as unpackAddExtension } from './unpack.js'\nlet textEncoder\ntry {\n\ttextEncoder = new TextEncoder()\n} catch (error) {}\nlet extensions, extensionClasses\nconst hasNodeBuffer = typeof Buffer !== 'undefined'\nconst ByteArrayAllocate = hasNodeBuffer ?\n\tfunction(length) { return Buffer.allocUnsafeSlow(length) } : Uint8Array\nconst ByteArray = hasNodeBuffer ? Buffer : Uint8Array\nconst MAX_BUFFER_SIZE = hasNodeBuffer ? 0x100000000 : 0x7fd00000\nlet target, keysTarget\nlet targetView\nlet position = 0\nlet safeEnd\nlet bundledStrings = null\nlet writeStructSlots\nconst MAX_BUNDLE_SIZE = 0x5500 // maximum characters such that the encoded bytes fits in 16 bits.\nconst hasNonLatin = /[\\u0080-\\uFFFF]/\nexport const RECORD_SYMBOL = Symbol('record-id')\nexport class Packr extends Unpackr {\n\tconstructor(options) {\n\t\tsuper(options)\n\t\tthis.offset = 0\n\t\tlet typeBuffer\n\t\tlet start\n\t\tlet hasSharedUpdate\n\t\tlet structures\n\t\tlet referenceMap\n\t\tlet encodeUtf8 = ByteArray.prototype.utf8Write ? function(string, position) {\n\t\t\treturn target.utf8Write(string, position, 0xffffffff)\n\t\t} : (textEncoder && textEncoder.encodeInto) ?\n\t\t\tfunction(string, position) {\n\t\t\t\treturn textEncoder.encodeInto(string, target.subarray(position)).written\n\t\t\t} : false\n\n\t\tlet packr = this\n\t\tif (!options)\n\t\t\toptions = {}\n\t\tlet isSequential = options && options.sequential\n\t\tlet hasSharedStructures = options.structures || options.saveStructures\n\t\tlet maxSharedStructures = options.maxSharedStructures\n\t\tif (maxSharedStructures == null)\n\t\t\tmaxSharedStructures = hasSharedStructures ? 32 : 0\n\t\tif (maxSharedStructures > 8160)\n\t\t\tthrow new Error('Maximum maxSharedStructure is 8160')\n\t\tif (options.structuredClone && options.moreTypes == undefined) {\n\t\t\tthis.moreTypes = true\n\t\t}\n\t\tlet maxOwnStructures = options.maxOwnStructures\n\t\tif (maxOwnStructures == null)\n\t\t\tmaxOwnStructures = hasSharedStructures ? 32 : 64\n\t\tif (!this.structures && options.useRecords != false)\n\t\t\tthis.structures = []\n\t\t// two byte record ids for shared structures\n\t\tlet useTwoByteRecords = maxSharedStructures > 32 || (maxOwnStructures + maxSharedStructures > 64)\t\t\n\t\tlet sharedLimitId = maxSharedStructures + 0x40\n\t\tlet maxStructureId = maxSharedStructures + maxOwnStructures + 0x40\n\t\tif (maxStructureId > 8256) {\n\t\t\tthrow new Error('Maximum maxSharedStructure + maxOwnStructure is 8192')\n\t\t}\n\t\tlet recordIdsToRemove = []\n\t\tlet transitionsCount = 0\n\t\tlet serializationsSinceTransitionRebuild = 0\n\n\t\tthis.pack = this.encode = function(value, encodeOptions) {\n\t\t\tif (!target) {\n\t\t\t\ttarget = new ByteArrayAllocate(8192)\n\t\t\t\ttargetView = target.dataView || (target.dataView = new DataView(target.buffer, 0, 8192))\n\t\t\t\tposition = 0\n\t\t\t}\n\t\t\tsafeEnd = target.length - 10\n\t\t\tif (safeEnd - position < 0x800) {\n\t\t\t\t// don't start too close to the end, \n\t\t\t\ttarget = new ByteArrayAllocate(target.length)\n\t\t\t\ttargetView = target.dataView || (target.dataView = new DataView(target.buffer, 0, target.length))\n\t\t\t\tsafeEnd = target.length - 10\n\t\t\t\tposition = 0\n\t\t\t} else\n\t\t\t\tposition = (position + 7) & 0x7ffffff8 // Word align to make any future copying of this buffer faster\n\t\t\tstart = position\n\t\t\tif (encodeOptions & RESERVE_START_SPACE) position += (encodeOptions & 0xff)\n\t\t\treferenceMap = packr.structuredClone ? new Map() : null\n\t\t\tif (packr.bundleStrings && typeof value !== 'string') {\n\t\t\t\tbundledStrings = []\n\t\t\t\tbundledStrings.size = Infinity // force a new bundle start on first string\n\t\t\t} else\n\t\t\t\tbundledStrings = null\n\t\t\tstructures = packr.structures\n\t\t\tif (structures) {\n\t\t\t\tif (structures.uninitialized)\n\t\t\t\t\tstructures = packr._mergeStructures(packr.getStructures())\n\t\t\t\tlet sharedLength = structures.sharedLength || 0\n\t\t\t\tif (sharedLength > maxSharedStructures) {\n\t\t\t\t\t//if (maxSharedStructures <= 32 && structures.sharedLength > 32) // TODO: could support this, but would need to update the limit ids\n\t\t\t\t\tthrow new Error('Shared structures is larger than maximum shared structures, try increasing maxSharedStructures to ' + structures.sharedLength)\n\t\t\t\t}\n\t\t\t\tif (!structures.transitions) {\n\t\t\t\t\t// rebuild our structure transitions\n\t\t\t\t\tstructures.transitions = Object.create(null)\n\t\t\t\t\tfor (let i = 0; i < sharedLength; i++) {\n\t\t\t\t\t\tlet keys = structures[i]\n\t\t\t\t\t\tif (!keys)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tlet nextTransition, transition = structures.transitions\n\t\t\t\t\t\tfor (let j = 0, l = keys.length; j < l; j++) {\n\t\t\t\t\t\t\tlet key = keys[j]\n\t\t\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i + 0x40\n\t\t\t\t\t}\n\t\t\t\t\tthis.lastNamedStructuresLength = sharedLength\n\t\t\t\t}\n\t\t\t\tif (!isSequential) {\n\t\t\t\t\tstructures.nextId = sharedLength + 0x40\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hasSharedUpdate)\n\t\t\t\thasSharedUpdate = false\n\t\t\tlet encodingError;\n\t\t\ttry {\n\t\t\t\tif (packr.randomAccessStructure && value && value.constructor && value.constructor === Object)\n\t\t\t\t\twriteStruct(value);\n\t\t\t\telse\n\t\t\t\t\tpack(value)\n\t\t\t\tlet lastBundle = bundledStrings;\n\t\t\t\tif (bundledStrings)\n\t\t\t\t\twriteBundles(start, pack, 0)\n\t\t\t\tif (referenceMap && referenceMap.idsToInsert) {\n\t\t\t\t\tlet idsToInsert = referenceMap.idsToInsert.sort((a, b) => a.offset > b.offset ? 1 : -1);\n\t\t\t\t\tlet i = idsToInsert.length;\n\t\t\t\t\tlet incrementPosition = -1;\n\t\t\t\t\twhile (lastBundle && i > 0) {\n\t\t\t\t\t\tlet insertionPoint = idsToInsert[--i].offset + start;\n\t\t\t\t\t\tif (insertionPoint < (lastBundle.stringsPosition + start) && incrementPosition === -1)\n\t\t\t\t\t\t\tincrementPosition = 0;\n\t\t\t\t\t\tif (insertionPoint > (lastBundle.position + start)) {\n\t\t\t\t\t\t\tif (incrementPosition >= 0)\n\t\t\t\t\t\t\t\tincrementPosition += 6;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (incrementPosition >= 0) {\n\t\t\t\t\t\t\t\t// update the bundle reference now\n\t\t\t\t\t\t\t\ttargetView.setUint32(lastBundle.position + start,\n\t\t\t\t\t\t\t\t\ttargetView.getUint32(lastBundle.position + start) + incrementPosition)\n\t\t\t\t\t\t\t\tincrementPosition = -1; // reset\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastBundle = lastBundle.previous;\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (incrementPosition >= 0 && lastBundle) {\n\t\t\t\t\t\t// update the bundle reference now\n\t\t\t\t\t\ttargetView.setUint32(lastBundle.position + start,\n\t\t\t\t\t\t\ttargetView.getUint32(lastBundle.position + start) + incrementPosition)\n\t\t\t\t\t}\n\t\t\t\t\tposition += idsToInsert.length * 6;\n\t\t\t\t\tif (position > safeEnd)\n\t\t\t\t\t\tmakeRoom(position)\n\t\t\t\t\tpackr.offset = position\n\t\t\t\t\tlet serialized = insertIds(target.subarray(start, position), idsToInsert)\n\t\t\t\t\treferenceMap = null\n\t\t\t\t\treturn serialized\n\t\t\t\t}\n\t\t\t\tpackr.offset = position // update the offset so next serialization doesn't write over our buffer, but can continue writing to same buffer sequentially\n\t\t\t\tif (encodeOptions & REUSE_BUFFER_MODE) {\n\t\t\t\t\ttarget.start = start\n\t\t\t\t\ttarget.end = position\n\t\t\t\t\treturn target\n\t\t\t\t}\n\t\t\t\treturn target.subarray(start, position) // position can change if we call pack again in saveStructures, so we get the buffer now\n\t\t\t} catch(error) {\n\t\t\t\tencodingError = error;\n\t\t\t\tthrow error;\n\t\t\t} finally {\n\t\t\t\tif (structures) {\n\t\t\t\t\tresetStructures();\n\t\t\t\t\tif (hasSharedUpdate && packr.saveStructures) {\n\t\t\t\t\t\tlet sharedLength = structures.sharedLength || 0\n\t\t\t\t\t\t// we can't rely on start/end with REUSE_BUFFER_MODE since they will (probably) change when we save\n\t\t\t\t\t\tlet returnBuffer = target.subarray(start, position)\n\t\t\t\t\t\tlet newSharedData = prepareStructures(structures, packr);\n\t\t\t\t\t\tif (!encodingError) { // TODO: If there is an encoding error, should make the structures as uninitialized so they get rebuilt next time\n\t\t\t\t\t\t\tif (packr.saveStructures(newSharedData, newSharedData.isCompatible) === false) {\n\t\t\t\t\t\t\t\t// get updated structures and try again if the update failed\n\t\t\t\t\t\t\t\treturn packr.pack(value, encodeOptions)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpackr.lastNamedStructuresLength = sharedLength\n\t\t\t\t\t\t\treturn returnBuffer\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (encodeOptions & RESET_BUFFER_MODE)\n\t\t\t\t\tposition = start\n\t\t\t}\n\t\t}\n\t\tconst resetStructures = () => {\n\t\t\tif (serializationsSinceTransitionRebuild < 10)\n\t\t\t\tserializationsSinceTransitionRebuild++\n\t\t\tlet sharedLength = structures.sharedLength || 0\n\t\t\tif (structures.length > sharedLength && !isSequential)\n\t\t\t\tstructures.length = sharedLength\n\t\t\tif (transitionsCount > 10000) {\n\t\t\t\t// force a rebuild occasionally after a lot of transitions so it can get cleaned up\n\t\t\t\tstructures.transitions = null\n\t\t\t\tserializationsSinceTransitionRebuild = 0\n\t\t\t\ttransitionsCount = 0\n\t\t\t\tif (recordIdsToRemove.length > 0)\n\t\t\t\t\trecordIdsToRemove = []\n\t\t\t} else if (recordIdsToRemove.length > 0 && !isSequential) {\n\t\t\t\tfor (let i = 0, l = recordIdsToRemove.length; i < l; i++) {\n\t\t\t\t\trecordIdsToRemove[i][RECORD_SYMBOL] = 0\n\t\t\t\t}\n\t\t\t\trecordIdsToRemove = []\n\t\t\t}\n\t\t}\n\t\tconst packArray = (value) => {\n\t\t\tvar length = value.length\n\t\t\tif (length < 0x10) {\n\t\t\t\ttarget[position++] = 0x90 | length\n\t\t\t} else if (length < 0x10000) {\n\t\t\t\ttarget[position++] = 0xdc\n\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t} else {\n\t\t\t\ttarget[position++] = 0xdd\n\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\tposition += 4\n\t\t\t}\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tpack(value[i])\n\t\t\t}\n\t\t}\n\t\tconst pack = (value) => {\n\t\t\tif (position > safeEnd)\n\t\t\t\ttarget = makeRoom(position)\n\n\t\t\tvar type = typeof value\n\t\t\tvar length\n\t\t\tif (type === 'string') {\n\t\t\t\tlet strLength = value.length\n\t\t\t\tif (bundledStrings && strLength >= 4 && strLength < 0x1000) {\n\t\t\t\t\tif ((bundledStrings.size += strLength) > MAX_BUNDLE_SIZE) {\n\t\t\t\t\t\tlet extStart\n\t\t\t\t\t\tlet maxBytes = (bundledStrings[0] ? bundledStrings[0].length * 3 + bundledStrings[1].length : 0) + 10\n\t\t\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\t\t\t\t\t\tlet lastBundle\n\t\t\t\t\t\tif (bundledStrings.position) { // here we use the 0x62 extension to write the last bundle and reserve space for the reference pointer to the next/current bundle\n\t\t\t\t\t\t\tlastBundle = bundledStrings\n\t\t\t\t\t\t\ttarget[position] = 0xc8 // ext 16\n\t\t\t\t\t\t\tposition += 3 // reserve for the writing bundle size\n\t\t\t\t\t\t\ttarget[position++] = 0x62 // 'b'\n\t\t\t\t\t\t\textStart = position - start\n\t\t\t\t\t\t\tposition += 4 // reserve for writing bundle reference\n\t\t\t\t\t\t\twriteBundles(start, pack, 0) // write the last bundles\n\t\t\t\t\t\t\ttargetView.setUint16(extStart + start - 3, position - start - extStart)\n\t\t\t\t\t\t} else { // here we use the 0x62 extension just to reserve the space for the reference pointer to the bundle (will be updated once the bundle is written)\n\t\t\t\t\t\t\ttarget[position++] = 0xd6 // fixext 4\n\t\t\t\t\t\t\ttarget[position++] = 0x62 // 'b'\n\t\t\t\t\t\t\textStart = position - start\n\t\t\t\t\t\t\tposition += 4 // reserve for writing bundle reference\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbundledStrings = ['', ''] // create new ones\n\t\t\t\t\t\tbundledStrings.previous = lastBundle;\n\t\t\t\t\t\tbundledStrings.size = 0\n\t\t\t\t\t\tbundledStrings.position = extStart\n\t\t\t\t\t}\n\t\t\t\t\tlet twoByte = hasNonLatin.test(value)\n\t\t\t\t\tbundledStrings[twoByte ? 0 : 1] += value\n\t\t\t\t\ttarget[position++] = 0xc1\n\t\t\t\t\tpack(twoByte ? -strLength : strLength);\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tlet headerSize\n\t\t\t\t// first we estimate the header size, so we can write to the correct location\n\t\t\t\tif (strLength < 0x20) {\n\t\t\t\t\theaderSize = 1\n\t\t\t\t} else if (strLength < 0x100) {\n\t\t\t\t\theaderSize = 2\n\t\t\t\t} else if (strLength < 0x10000) {\n\t\t\t\t\theaderSize = 3\n\t\t\t\t} else {\n\t\t\t\t\theaderSize = 5\n\t\t\t\t}\n\t\t\t\tlet maxBytes = strLength * 3\n\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\n\t\t\t\tif (strLength < 0x40 || !encodeUtf8) {\n\t\t\t\t\tlet i, c1, c2, strPosition = position + headerSize\n\t\t\t\t\tfor (i = 0; i < strLength; i++) {\n\t\t\t\t\t\tc1 = value.charCodeAt(i)\n\t\t\t\t\t\tif (c1 < 0x80) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1\n\t\t\t\t\t\t} else if (c1 < 0x800) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 | 0xc0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t(c1 & 0xfc00) === 0xd800 &&\n\t\t\t\t\t\t\t((c2 = value.charCodeAt(i + 1)) & 0xfc00) === 0xdc00\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tc1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff)\n\t\t\t\t\t\t\ti++\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 18 | 0xf0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 | 0xe0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlength = strPosition - position - headerSize\n\t\t\t\t} else {\n\t\t\t\t\tlength = encodeUtf8(value, position + headerSize)\n\t\t\t\t}\n\n\t\t\t\tif (length < 0x20) {\n\t\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t\t} else if (length < 0x100) {\n\t\t\t\t\tif (headerSize < 2) {\n\t\t\t\t\t\ttarget.copyWithin(position + 2, position + 1, position + 1 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\ttarget[position++] = length\n\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\tif (headerSize < 3) {\n\t\t\t\t\t\ttarget.copyWithin(position + 3, position + 2, position + 2 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xda\n\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t} else {\n\t\t\t\t\tif (headerSize < 5) {\n\t\t\t\t\t\ttarget.copyWithin(position + 5, position + 3, position + 3 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xdb\n\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\tposition += 4\n\t\t\t\t}\n\t\t\t\tposition += length\n\t\t\t} else if (type === 'number') {\n\t\t\t\tif (value >>> 0 === value) {// positive integer, 32-bit or less\n\t\t\t\t\t// positive uint\n\t\t\t\t\tif (value < 0x20 || (value < 0x80 && this.useRecords === false) || (value < 0x40 && !this.randomAccessStructure)) {\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x100) {\n\t\t\t\t\t\ttarget[position++] = 0xcc\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0xcd\n\t\t\t\t\t\ttarget[position++] = value >> 8\n\t\t\t\t\t\ttarget[position++] = value & 0xff\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0xce\n\t\t\t\t\t\ttargetView.setUint32(position, value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else if (value >> 0 === value) { // negative integer\n\t\t\t\t\tif (value >= -0x20) {\n\t\t\t\t\t\ttarget[position++] = 0x100 + value\n\t\t\t\t\t} else if (value >= -0x80) {\n\t\t\t\t\t\ttarget[position++] = 0xd0\n\t\t\t\t\t\ttarget[position++] = value + 0x100\n\t\t\t\t\t} else if (value >= -0x8000) {\n\t\t\t\t\t\ttarget[position++] = 0xd1\n\t\t\t\t\t\ttargetView.setInt16(position, value)\n\t\t\t\t\t\tposition += 2\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0xd2\n\t\t\t\t\t\ttargetView.setInt32(position, value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet useFloat32\n\t\t\t\t\tif ((useFloat32 = this.useFloat32) > 0 && value < 0x100000000 && value >= -0x80000000) {\n\t\t\t\t\t\ttarget[position++] = 0xca\n\t\t\t\t\t\ttargetView.setFloat32(position, value)\n\t\t\t\t\t\tlet xShifted\n\t\t\t\t\t\tif (useFloat32 < 4 ||\n\t\t\t\t\t\t\t\t// this checks for rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\t\t\t((xShifted = value * mult10[((target[position] & 0x7f) << 1) | (target[position + 1] >> 7)]) >> 0) === xShifted) {\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tposition-- // move back into position for writing a double\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xcb\n\t\t\t\t\ttargetView.setFloat64(position, value)\n\t\t\t\t\tposition += 8\n\t\t\t\t}\n\t\t\t} else if (type === 'object' || type === 'function') {\n\t\t\t\tif (!value)\n\t\t\t\t\ttarget[position++] = 0xc0\n\t\t\t\telse {\n\t\t\t\t\tif (referenceMap) {\n\t\t\t\t\t\tlet referee = referenceMap.get(value)\n\t\t\t\t\t\tif (referee) {\n\t\t\t\t\t\t\tif (!referee.id) {\n\t\t\t\t\t\t\t\tlet idsToInsert = referenceMap.idsToInsert || (referenceMap.idsToInsert = [])\n\t\t\t\t\t\t\t\treferee.id = idsToInsert.push(referee)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0xd6 // fixext 4\n\t\t\t\t\t\t\ttarget[position++] = 0x70 // \"p\" for pointer\n\t\t\t\t\t\t\ttargetView.setUint32(position, referee.id)\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else \n\t\t\t\t\t\t\treferenceMap.set(value, { offset: position - start })\n\t\t\t\t\t}\n\t\t\t\t\tlet constructor = value.constructor\n\t\t\t\t\tif (constructor === Object) {\n\t\t\t\t\t\twriteObject(value, true)\n\t\t\t\t\t} else if (constructor === Array) {\n\t\t\t\t\t\tpackArray(value)\n\t\t\t\t\t} else if (constructor === Map) {\n\t\t\t\t\t\tif (this.mapAsEmptyObject) target[position++] = 0x80\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tlength = value.size\n\t\t\t\t\t\t\tif (length < 0x10) {\n\t\t\t\t\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\t\t\t\ttarget[position++] = 0xde\n\t\t\t\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget[position++] = 0xdf\n\t\t\t\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (let [key, entryValue] of value) {\n\t\t\t\t\t\t\t\tpack(key)\n\t\t\t\t\t\t\t\tpack(entryValue)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\t\n\t\t\t\t\t\tfor (let i = 0, l = extensions.length; i < l; i++) {\n\t\t\t\t\t\t\tlet extensionClass = extensionClasses[i]\n\t\t\t\t\t\t\tif (value instanceof extensionClass) {\n\t\t\t\t\t\t\t\tlet extension = extensions[i]\n\t\t\t\t\t\t\t\tif (extension.write) {\n\t\t\t\t\t\t\t\t\tif (extension.type) {\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd4 // one byte \"tag\" extension\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = extension.type\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = 0\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlet writeResult = extension.write.call(this, value)\n\t\t\t\t\t\t\t\t\tif (writeResult === value) { // avoid infinite recursion\n\t\t\t\t\t\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\t\t\t\t\t\tpackArray(value)\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\twriteObject(value)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpack(writeResult)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlet currentTarget = target\n\t\t\t\t\t\t\t\tlet currentTargetView = targetView\n\t\t\t\t\t\t\t\tlet currentPosition = position\n\t\t\t\t\t\t\t\ttarget = null\n\t\t\t\t\t\t\t\tlet result\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tresult = extension.pack.call(this, value, (size) => {\n\t\t\t\t\t\t\t\t\t\t// restore target and use it\n\t\t\t\t\t\t\t\t\t\ttarget = currentTarget\n\t\t\t\t\t\t\t\t\t\tcurrentTarget = null\n\t\t\t\t\t\t\t\t\t\tposition += size\n\t\t\t\t\t\t\t\t\t\tif (position > safeEnd)\n\t\t\t\t\t\t\t\t\t\t\tmakeRoom(position)\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\ttarget, targetView, position: position - size\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}, pack)\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\t// restore current target information (unless already restored)\n\t\t\t\t\t\t\t\t\tif (currentTarget) {\n\t\t\t\t\t\t\t\t\t\ttarget = currentTarget\n\t\t\t\t\t\t\t\t\t\ttargetView = currentTargetView\n\t\t\t\t\t\t\t\t\t\tposition = currentPosition\n\t\t\t\t\t\t\t\t\t\tsafeEnd = target.length - 10\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\t\t\tif (result.length + position > safeEnd)\n\t\t\t\t\t\t\t\t\t\tmakeRoom(result.length + position)\n\t\t\t\t\t\t\t\t\tposition = writeExtensionData(result, target, position, extension.type)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// check isArray after extensions, because extensions can extend Array\n\t\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\t\tpackArray(value)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// use this as an alternate mechanism for expressing how to serialize\n\t\t\t\t\t\t\tif (value.toJSON) {\n\t\t\t\t\t\t\t\tconst json = value.toJSON()\n\t\t\t\t\t\t\t\t// if for some reason value.toJSON returns itself it'll loop forever\n\t\t\t\t\t\t\t\tif (json !== value)\n\t\t\t\t\t\t\t\t\treturn pack(json)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// if there is a writeFunction, use it, otherwise just encode as undefined\n\t\t\t\t\t\t\tif (type === 'function')\n\t\t\t\t\t\t\t\treturn pack(this.writeFunction && this.writeFunction(value));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// no extension found, write as object\n\t\t\t\t\t\t\twriteObject(value, !value.hasOwnProperty) // if it doesn't have hasOwnProperty, don't do hasOwnProperty checks\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'boolean') {\n\t\t\t\ttarget[position++] = value ? 0xc3 : 0xc2\n\t\t\t} else if (type === 'bigint') {\n\t\t\t\tif (value < (BigInt(1)<<BigInt(63)) && value >= -(BigInt(1)<<BigInt(63))) {\n\t\t\t\t\t// use a signed int as long as it fits\n\t\t\t\t\ttarget[position++] = 0xd3\n\t\t\t\t\ttargetView.setBigInt64(position, value)\n\t\t\t\t} else if (value < (BigInt(1)<<BigInt(64)) && value > 0) {\n\t\t\t\t\t// if we can fit an unsigned int, use that\n\t\t\t\t\ttarget[position++] = 0xcf\n\t\t\t\t\ttargetView.setBigUint64(position, value)\n\t\t\t\t} else {\n\t\t\t\t\t// overflow\n\t\t\t\t\tif (this.largeBigIntToFloat) {\n\t\t\t\t\t\ttarget[position++] = 0xcb\n\t\t\t\t\t\ttargetView.setFloat64(position, Number(value))\n\t\t\t\t\t} else if (this.useBigIntExtension && value < 2n**(1023n) && value > -(2n**(1023n))) {\n\t\t\t\t\t\ttarget[position++] = 0xc7\n\t\t\t\t\t\tposition++;\n\t\t\t\t\t\ttarget[position++] = 0x42 // \"B\" for BigInt\n\t\t\t\t\t\tlet bytes = [];\n\t\t\t\t\t\tlet alignedSign;\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tlet byte = value & 0xffn;\n\t\t\t\t\t\t\talignedSign = (byte & 0x80n) === (value < 0n ? 0x80n : 0n);\n\t\t\t\t\t\t\tbytes.push(byte);\n\t\t\t\t\t\t\tvalue >>= 8n;\n\t\t\t\t\t\t} while (!((value === 0n || value === -1n) && alignedSign));\n\t\t\t\t\t\ttarget[position-2] = bytes.length;\n\t\t\t\t\t\tfor (let i = bytes.length; i > 0;) {\n\t\t\t\t\t\t\ttarget[position++] = Number(bytes[--i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new RangeError(value + ' was too large to fit in MessagePack 64-bit integer format, use' +\n\t\t\t\t\t\t\t' useBigIntExtension or set largeBigIntToFloat to convert to float-64')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tposition += 8\n\t\t\t} else if (type === 'undefined') {\n\t\t\t\tif (this.encodeUndefinedAsNil)\n\t\t\t\t\ttarget[position++] = 0xc0\n\t\t\t\telse {\n\t\t\t\t\ttarget[position++] = 0xd4 // a number of implementations use fixext1 with type 0, data 0 to denote undefined, so we follow suite\n\t\t\t\t\ttarget[position++] = 0\n\t\t\t\t\ttarget[position++] = 0\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown type: ' + type)\n\t\t\t}\n\t\t}\n\n\t\tconst writePlainObject = (this.variableMapSize || this.coercibleKeyAsNumber) ? (object) => {\n\t\t\t// this method is slightly slower, but generates \"preferred serialization\" (optimally small for smaller objects)\n\t\t\tlet keys = Object.keys(object)\n\t\t\tlet length = keys.length\n\t\t\tif (length < 0x10) {\n\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t} else if (length < 0x10000) {\n\t\t\t\ttarget[position++] = 0xde\n\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t} else {\n\t\t\t\ttarget[position++] = 0xdf\n\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\tposition += 4\n\t\t\t}\n\t\t\tlet key\n\t\t\tif (this.coercibleKeyAsNumber) {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tkey = keys[i]\n\t\t\t\t\tlet num = Number(key)\n\t\t\t\t\tpack(isNaN(num) ? key : num)\n\t\t\t\t\tpack(object[key])\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tpack(key = keys[i])\n\t\t\t\t\tpack(object[key])\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\t\t(object, safePrototype) => {\n\t\t\ttarget[position++] = 0xde // always using map 16, so we can preallocate and set the length afterwards\n\t\t\tlet objectOffset = position - start\n\t\t\tposition += 2\n\t\t\tlet size = 0\n\t\t\tfor (let key in object) {\n\t\t\t\tif (safePrototype || object.hasOwnProperty(key)) {\n\t\t\t\t\tpack(key)\n\t\t\t\t\tpack(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t}\n\t\t\ttarget[objectOffset++ + start] = size >> 8\n\t\t\ttarget[objectOffset + start] = size & 0xff\n\t\t}\n\n\t\tconst writeRecord = this.useRecords === false ? writePlainObject :\n\t\t(options.progressiveRecords && !useTwoByteRecords) ?  // this is about 2% faster for highly stable structures, since it only requires one for-in loop (but much more expensive when new structure needs to be written)\n\t\t(object, safePrototype) => {\n\t\t\tlet nextTransition, transition = structures.transitions || (structures.transitions = Object.create(null))\n\t\t\tlet objectOffset = position++ - start\n\t\t\tlet wroteKeys\n\t\t\tfor (let key in object) {\n\t\t\t\tif (safePrototype || object.hasOwnProperty(key)) {\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (nextTransition)\n\t\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\telse {\n\t\t\t\t\t\t// record doesn't exist, create full new record and insert it\n\t\t\t\t\t\tlet keys = Object.keys(object)\n\t\t\t\t\t\tlet lastTransition = transition\n\t\t\t\t\t\ttransition = structures.transitions\n\t\t\t\t\t\tlet newTransitions = 0\n\t\t\t\t\t\tfor (let i = 0, l = keys.length; i < l; i++) {\n\t\t\t\t\t\t\tlet key = keys[i]\n\t\t\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (objectOffset + start + 1 == position) {\n\t\t\t\t\t\t\t// first key, so we don't need to insert, we can just write record directly\n\t\t\t\t\t\t\tposition--\n\t\t\t\t\t\t\tnewRecord(transition, keys, newTransitions)\n\t\t\t\t\t\t} else // otherwise we need to insert the record, moving existing data after the record\n\t\t\t\t\t\t\tinsertNewRecord(transition, keys, objectOffset, newTransitions)\n\t\t\t\t\t\twroteKeys = true\n\t\t\t\t\t\ttransition = lastTransition[key]\n\t\t\t\t\t}\n\t\t\t\t\tpack(object[key])\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!wroteKeys) {\n\t\t\t\tlet recordId = transition[RECORD_SYMBOL]\n\t\t\t\tif (recordId)\n\t\t\t\t\ttarget[objectOffset + start] = recordId\n\t\t\t\telse\n\t\t\t\t\tinsertNewRecord(transition, Object.keys(object), objectOffset, 0)\n\t\t\t}\n\t\t} :\n\t\t(object, safePrototype) => {\n\t\t\tlet nextTransition, transition = structures.transitions || (structures.transitions = Object.create(null))\n\t\t\tlet newTransitions = 0\n\t\t\tfor (let key in object) if (safePrototype || object.hasOwnProperty(key)) {\n\t\t\t\tnextTransition = transition[key]\n\t\t\t\tif (!nextTransition) {\n\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\tnewTransitions++\n\t\t\t\t}\n\t\t\t\ttransition = nextTransition\n\t\t\t}\n\t\t\tlet recordId = transition[RECORD_SYMBOL]\n\t\t\tif (recordId) {\n\t\t\t\tif (recordId >= 0x60 && useTwoByteRecords) {\n\t\t\t\t\ttarget[position++] = ((recordId -= 0x60) & 0x1f) + 0x60\n\t\t\t\t\ttarget[position++] = recordId >> 5\n\t\t\t\t} else\n\t\t\t\t\ttarget[position++] = recordId\n\t\t\t} else {\n\t\t\t\tnewRecord(transition, transition.__keys__ || Object.keys(object), newTransitions)\n\t\t\t}\n\t\t\t// now write the values\n\t\t\tfor (let key in object)\n\t\t\t\tif (safePrototype || object.hasOwnProperty(key)) {\n\t\t\t\t\tpack(object[key])\n\t\t\t\t}\n\t\t}\n\n\t\t// craete reference to useRecords if useRecords is a function\n\t\tconst checkUseRecords = typeof this.useRecords == 'function' && this.useRecords;\n\t\t\n\t\tconst writeObject = checkUseRecords ? (object, safePrototype) => {\n\t\t\tcheckUseRecords(object) ? writeRecord(object,safePrototype) : writePlainObject(object,safePrototype)\n\t\t} : writeRecord\n\n\t\tconst makeRoom = (end) => {\n\t\t\tlet newSize\n\t\t\tif (end > 0x1000000) {\n\t\t\t\t// special handling for really large buffers\n\t\t\t\tif ((end - start) > MAX_BUFFER_SIZE)\n\t\t\t\t\tthrow new Error('Packed buffer would be larger than maximum buffer size')\n\t\t\t\tnewSize = Math.min(MAX_BUFFER_SIZE,\n\t\t\t\t\tMath.round(Math.max((end - start) * (end > 0x4000000 ? 1.25 : 2), 0x400000) / 0x1000) * 0x1000)\n\t\t\t} else // faster handling for smaller buffers\n\t\t\t\tnewSize = ((Math.max((end - start) << 2, target.length - 1) >> 12) + 1) << 12\n\t\t\tlet newBuffer = new ByteArrayAllocate(newSize)\n\t\t\ttargetView = newBuffer.dataView || (newBuffer.dataView = new DataView(newBuffer.buffer, 0, newSize))\n\t\t\tend = Math.min(end, target.length)\n\t\t\tif (target.copy)\n\t\t\t\ttarget.copy(newBuffer, 0, start, end)\n\t\t\telse\n\t\t\t\tnewBuffer.set(target.slice(start, end))\n\t\t\tposition -= start\n\t\t\tstart = 0\n\t\t\tsafeEnd = newBuffer.length - 10\n\t\t\treturn target = newBuffer\n\t\t}\n\t\tconst newRecord = (transition, keys, newTransitions) => {\n\t\t\tlet recordId = structures.nextId\n\t\t\tif (!recordId)\n\t\t\t\trecordId = 0x40\n\t\t\tif (recordId < sharedLimitId && this.shouldShareStructure && !this.shouldShareStructure(keys)) {\n\t\t\t\trecordId = structures.nextOwnId\n\t\t\t\tif (!(recordId < maxStructureId))\n\t\t\t\t\trecordId = sharedLimitId\n\t\t\t\tstructures.nextOwnId = recordId + 1\n\t\t\t} else {\n\t\t\t\tif (recordId >= maxStructureId)// cycle back around\n\t\t\t\t\trecordId = sharedLimitId\n\t\t\t\tstructures.nextId = recordId + 1\n\t\t\t}\n\t\t\tlet highByte = keys.highByte = recordId >= 0x60 && useTwoByteRecords ? (recordId - 0x60) >> 5 : -1\n\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\ttransition.__keys__ = keys\n\t\t\tstructures[recordId - 0x40] = keys\n\n\t\t\tif (recordId < sharedLimitId) {\n\t\t\t\tkeys.isShared = true\n\t\t\t\tstructures.sharedLength = recordId - 0x3f\n\t\t\t\thasSharedUpdate = true\n\t\t\t\tif (highByte >= 0) {\n\t\t\t\t\ttarget[position++] = (recordId & 0x1f) + 0x60\n\t\t\t\t\ttarget[position++] = highByte\n\t\t\t\t} else {\n\t\t\t\t\ttarget[position++] = recordId\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (highByte >= 0) {\n\t\t\t\t\ttarget[position++] = 0xd5 // fixext 2\n\t\t\t\t\ttarget[position++] = 0x72 // \"r\" record defintion extension type\n\t\t\t\t\ttarget[position++] = (recordId & 0x1f) + 0x60\n\t\t\t\t\ttarget[position++] = highByte\n\t\t\t\t} else {\n\t\t\t\t\ttarget[position++] = 0xd4 // fixext 1\n\t\t\t\t\ttarget[position++] = 0x72 // \"r\" record defintion extension type\n\t\t\t\t\ttarget[position++] = recordId\n\t\t\t\t}\n\n\t\t\t\tif (newTransitions)\n\t\t\t\t\ttransitionsCount += serializationsSinceTransitionRebuild * newTransitions\n\t\t\t\t// record the removal of the id, we can maintain our shared structure\n\t\t\t\tif (recordIdsToRemove.length >= maxOwnStructures)\n\t\t\t\t\trecordIdsToRemove.shift()[RECORD_SYMBOL] = 0 // we are cycling back through, and have to remove old ones\n\t\t\t\trecordIdsToRemove.push(transition)\n\t\t\t\tpack(keys)\n\t\t\t}\n\t\t}\n\t\tconst insertNewRecord = (transition, keys, insertionOffset, newTransitions) => {\n\t\t\tlet mainTarget = target\n\t\t\tlet mainPosition = position\n\t\t\tlet mainSafeEnd = safeEnd\n\t\t\tlet mainStart = start\n\t\t\ttarget = keysTarget\n\t\t\tposition = 0\n\t\t\tstart = 0\n\t\t\tif (!target)\n\t\t\t\tkeysTarget = target = new ByteArrayAllocate(8192)\n\t\t\tsafeEnd = target.length - 10\n\t\t\tnewRecord(transition, keys, newTransitions)\n\t\t\tkeysTarget = target\n\t\t\tlet keysPosition = position\n\t\t\ttarget = mainTarget\n\t\t\tposition = mainPosition\n\t\t\tsafeEnd = mainSafeEnd\n\t\t\tstart = mainStart\n\t\t\tif (keysPosition > 1) {\n\t\t\t\tlet newEnd = position + keysPosition - 1\n\t\t\t\tif (newEnd > safeEnd)\n\t\t\t\t\tmakeRoom(newEnd)\n\t\t\t\tlet insertionPosition = insertionOffset + start\n\t\t\t\ttarget.copyWithin(insertionPosition + keysPosition, insertionPosition + 1, position)\n\t\t\t\ttarget.set(keysTarget.slice(0, keysPosition), insertionPosition)\n\t\t\t\tposition = newEnd\n\t\t\t} else {\n\t\t\t\ttarget[insertionOffset + start] = keysTarget[0]\n\t\t\t}\n\t\t}\n\t\tconst writeStruct = (object, safePrototype) => {\n\t\t\tlet newPosition = writeStructSlots(object, target, start, position, structures, makeRoom, (value, newPosition, notifySharedUpdate) => {\n\t\t\t\tif (notifySharedUpdate)\n\t\t\t\t\treturn hasSharedUpdate = true;\n\t\t\t\tposition = newPosition;\n\t\t\t\tlet startTarget = target;\n\t\t\t\tpack(value);\n\t\t\t\tresetStructures();\n\t\t\t\tif (startTarget !== target) {\n\t\t\t\t\treturn { position, targetView, target }; // indicate the buffer was re-allocated\n\t\t\t\t}\n\t\t\t\treturn position;\n\t\t\t}, this);\n\t\t\tif (newPosition === 0) // bail and go to a msgpack object\n\t\t\t\treturn writeObject(object, true);\n\t\t\tposition = newPosition;\n\t\t}\n\t}\n\tuseBuffer(buffer) {\n\t\t// this means we are finished using our own buffer and we can write over it safely\n\t\ttarget = buffer\n\t\ttargetView = new DataView(target.buffer, target.byteOffset, target.byteLength)\n\t\tposition = 0\n\t}\n\tclearSharedData() {\n\t\tif (this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.typedStructs)\n\t\t\tthis.typedStructs = []\n\t}\n}\n\nfunction copyBinary(source, target, targetOffset, offset, endOffset) {\n\twhile (offset < endOffset) {\n\t\ttarget[targetOffset++] = source[offset++]\n\t}\n}\n\nextensionClasses = [ Date, Set, Error, RegExp, ArrayBuffer, Object.getPrototypeOf(Uint8Array.prototype).constructor /*TypedArray*/, C1Type ]\nextensions = [{\n\tpack(date, allocateForWrite, pack) {\n\t\tlet seconds = date.getTime() / 1000\n\t\tif ((this.useTimestamp32 || date.getMilliseconds() === 0) && seconds >= 0 && seconds < 0x100000000) {\n\t\t\t// Timestamp 32\n\t\t\tlet { target, targetView, position} = allocateForWrite(6)\n\t\t\ttarget[position++] = 0xd6\n\t\t\ttarget[position++] = 0xff\n\t\t\ttargetView.setUint32(position, seconds)\n\t\t} else if (seconds > 0 && seconds < 0x100000000) {\n\t\t\t// Timestamp 64\n\t\t\tlet { target, targetView, position} = allocateForWrite(10)\n\t\t\ttarget[position++] = 0xd7\n\t\t\ttarget[position++] = 0xff\n\t\t\ttargetView.setUint32(position, date.getMilliseconds() * 4000000 + ((seconds / 1000 / 0x100000000) >> 0))\n\t\t\ttargetView.setUint32(position + 4, seconds)\n\t\t} else if (isNaN(seconds)) {\n\t\t\tif (this.onInvalidDate) {\n\t\t\t\tallocateForWrite(0)\n\t\t\t\treturn pack(this.onInvalidDate())\n\t\t\t}\n\t\t\t// Intentionally invalid timestamp\n\t\t\tlet { target, targetView, position} = allocateForWrite(3)\n\t\t\ttarget[position++] = 0xd4\n\t\t\ttarget[position++] = 0xff\n\t\t\ttarget[position++] = 0xff\n\t\t} else {\n\t\t\t// Timestamp 96\n\t\t\tlet { target, targetView, position} = allocateForWrite(15)\n\t\t\ttarget[position++] = 0xc7\n\t\t\ttarget[position++] = 12\n\t\t\ttarget[position++] = 0xff\n\t\t\ttargetView.setUint32(position, date.getMilliseconds() * 1000000)\n\t\t\ttargetView.setBigInt64(position + 4, BigInt(Math.floor(seconds)))\n\t\t}\n\t}\n}, {\n\tpack(set, allocateForWrite, pack) {\n\t\tif (this.setAsEmptyObject) {\n\t\t\tallocateForWrite(0);\n\t\t\treturn pack({})\n\t\t}\n\t\tlet array = Array.from(set)\n\t\tlet { target, position} = allocateForWrite(this.moreTypes ? 3 : 0)\n\t\tif (this.moreTypes) {\n\t\t\ttarget[position++] = 0xd4\n\t\t\ttarget[position++] = 0x73 // 's' for Set\n\t\t\ttarget[position++] = 0\n\t\t}\n\t\tpack(array)\n\t}\n}, {\n\tpack(error, allocateForWrite, pack) {\n\t\tlet { target, position} = allocateForWrite(this.moreTypes ? 3 : 0)\n\t\tif (this.moreTypes) {\n\t\t\ttarget[position++] = 0xd4\n\t\t\ttarget[position++] = 0x65 // 'e' for error\n\t\t\ttarget[position++] = 0\n\t\t}\n\t\tpack([ error.name, error.message ])\n\t}\n}, {\n\tpack(regex, allocateForWrite, pack) {\n\t\tlet { target, position} = allocateForWrite(this.moreTypes ? 3 : 0)\n\t\tif (this.moreTypes) {\n\t\t\ttarget[position++] = 0xd4\n\t\t\ttarget[position++] = 0x78 // 'x' for regeXp\n\t\t\ttarget[position++] = 0\n\t\t}\n\t\tpack([ regex.source, regex.flags ])\n\t}\n}, {\n\tpack(arrayBuffer, allocateForWrite) {\n\t\tif (this.moreTypes)\n\t\t\twriteExtBuffer(arrayBuffer, 0x10, allocateForWrite)\n\t\telse\n\t\t\twriteBuffer(hasNodeBuffer ? Buffer.from(arrayBuffer) : new Uint8Array(arrayBuffer), allocateForWrite)\n\t}\n}, {\n\tpack(typedArray, allocateForWrite) {\n\t\tlet constructor = typedArray.constructor\n\t\tif (constructor !== ByteArray && this.moreTypes)\n\t\t\twriteExtBuffer(typedArray, typedArrays.indexOf(constructor.name), allocateForWrite)\n\t\telse\n\t\t\twriteBuffer(typedArray, allocateForWrite)\n\t}\n}, {\n\tpack(c1, allocateForWrite) { // specific 0xC1 object\n\t\tlet { target, position} = allocateForWrite(1)\n\t\ttarget[position] = 0xc1\n\t}\n}]\n\nfunction writeExtBuffer(typedArray, type, allocateForWrite, encode) {\n\tlet length = typedArray.byteLength\n\tif (length + 1 < 0x100) {\n\t\tvar { target, position } = allocateForWrite(4 + length)\n\t\ttarget[position++] = 0xc7\n\t\ttarget[position++] = length + 1\n\t} else if (length + 1 < 0x10000) {\n\t\tvar { target, position } = allocateForWrite(5 + length)\n\t\ttarget[position++] = 0xc8\n\t\ttarget[position++] = (length + 1) >> 8\n\t\ttarget[position++] = (length + 1) & 0xff\n\t} else {\n\t\tvar { target, position, targetView } = allocateForWrite(7 + length)\n\t\ttarget[position++] = 0xc9\n\t\ttargetView.setUint32(position, length + 1) // plus one for the type byte\n\t\tposition += 4\n\t}\n\ttarget[position++] = 0x74 // \"t\" for typed array\n\ttarget[position++] = type\n\ttarget.set(new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength), position)\n}\nfunction writeBuffer(buffer, allocateForWrite) {\n\tlet length = buffer.byteLength\n\tvar target, position\n\tif (length < 0x100) {\n\t\tvar { target, position } = allocateForWrite(length + 2)\n\t\ttarget[position++] = 0xc4\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\tvar { target, position } = allocateForWrite(length + 3)\n\t\ttarget[position++] = 0xc5\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\tvar { target, position, targetView } = allocateForWrite(length + 5)\n\t\ttarget[position++] = 0xc6\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\ttarget.set(buffer, position)\n}\n\nfunction writeExtensionData(result, target, position, type) {\n\tlet length = result.length\n\tswitch (length) {\n\t\tcase 1:\n\t\t\ttarget[position++] = 0xd4\n\t\t\tbreak\n\t\tcase 2:\n\t\t\ttarget[position++] = 0xd5\n\t\t\tbreak\n\t\tcase 4:\n\t\t\ttarget[position++] = 0xd6\n\t\t\tbreak\n\t\tcase 8:\n\t\t\ttarget[position++] = 0xd7\n\t\t\tbreak\n\t\tcase 16:\n\t\t\ttarget[position++] = 0xd8\n\t\t\tbreak\n\t\tdefault:\n\t\t\tif (length < 0x100) {\n\t\t\t\ttarget[position++] = 0xc7\n\t\t\t\ttarget[position++] = length\n\t\t\t} else if (length < 0x10000) {\n\t\t\t\ttarget[position++] = 0xc8\n\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t} else {\n\t\t\t\ttarget[position++] = 0xc9\n\t\t\t\ttarget[position++] = length >> 24\n\t\t\t\ttarget[position++] = (length >> 16) & 0xff\n\t\t\t\ttarget[position++] = (length >> 8) & 0xff\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t}\n\t}\n\ttarget[position++] = type\n\ttarget.set(result, position)\n\tposition += length\n\treturn position\n}\n\nfunction insertIds(serialized, idsToInsert) {\n\t// insert the ids that need to be referenced for structured clones\n\tlet nextId\n\tlet distanceToMove = idsToInsert.length * 6\n\tlet lastEnd = serialized.length - distanceToMove\n\twhile (nextId = idsToInsert.pop()) {\n\t\tlet offset = nextId.offset\n\t\tlet id = nextId.id\n\t\tserialized.copyWithin(offset + distanceToMove, offset, lastEnd)\n\t\tdistanceToMove -= 6\n\t\tlet position = offset + distanceToMove\n\t\tserialized[position++] = 0xd6\n\t\tserialized[position++] = 0x69 // 'i'\n\t\tserialized[position++] = id >> 24\n\t\tserialized[position++] = (id >> 16) & 0xff\n\t\tserialized[position++] = (id >> 8) & 0xff\n\t\tserialized[position++] = id & 0xff\n\t\tlastEnd = offset\n\t}\n\treturn serialized\n}\n\nfunction writeBundles(start, pack, incrementPosition) {\n\tif (bundledStrings.length > 0) {\n\t\ttargetView.setUint32(bundledStrings.position + start, position + incrementPosition - bundledStrings.position - start)\n\t\tbundledStrings.stringsPosition = position - start;\n\t\tlet writeStrings = bundledStrings\n\t\tbundledStrings = null\n\t\tpack(writeStrings[0])\n\t\tpack(writeStrings[1])\n\t}\n}\n\nexport function addExtension(extension) {\n\tif (extension.Class) {\n\t\tif (!extension.pack && !extension.write)\n\t\t\tthrow new Error('Extension has no pack or write function')\n\t\tif (extension.pack && !extension.type)\n\t\t\tthrow new Error('Extension has no type (numeric code to identify the extension)')\n\t\textensionClasses.unshift(extension.Class)\n\t\textensions.unshift(extension)\n\t}\n\tunpackAddExtension(extension)\n}\nfunction prepareStructures(structures, packr) {\n\tstructures.isCompatible = (existingStructures) => {\n\t\tlet compatible = !existingStructures || ((packr.lastNamedStructuresLength || 0) === existingStructures.length)\n\t\tif (!compatible) // we want to merge these existing structures immediately since we already have it and we are in the right transaction\n\t\t\tpackr._mergeStructures(existingStructures);\n\t\treturn compatible;\n\t}\n\treturn structures\n}\nexport function setWriteStructSlots(writeSlots, makeStructures) {\n\twriteStructSlots = writeSlots;\n\tprepareStructures = makeStructures;\n}\n\nlet defaultPackr = new Packr({ useRecords: false })\nexport const pack = defaultPackr.pack\nexport const encode = defaultPackr.pack\nexport const Encoder = Packr\nexport { FLOAT32_OPTIONS } from './unpack.js'\nimport { FLOAT32_OPTIONS } from './unpack.js'\nexport const { NEVER, ALWAYS, DECIMAL_ROUND, DECIMAL_FIT } = FLOAT32_OPTIONS\nexport const REUSE_BUFFER_MODE = 512\nexport const RESET_BUFFER_MODE = 1024\nexport const RESERVE_START_SPACE = 2048","var decoder\ntry {\n\tdecoder = new TextDecoder()\n} catch(error) {}\nvar src\nvar srcEnd\nvar position = 0\nvar alreadySet\nconst EMPTY_ARRAY = []\nvar strings = EMPTY_ARRAY\nvar stringPosition = 0\nvar currentUnpackr = {}\nvar currentStructures\nvar srcString\nvar srcStringStart = 0\nvar srcStringEnd = 0\nvar bundledStrings\nvar referenceMap\nvar currentExtensions = []\nvar dataView\nvar defaultOptions = {\n\tuseRecords: false,\n\tmapsAsObjects: true\n}\nexport class C1Type {}\nexport const C1 = new C1Type()\nC1.name = 'MessagePack 0xC1'\nvar sequentialMode = false\nvar inlineObjectReadThreshold = 2\nvar readStruct, onLoadedStructures, onSaveState\nvar BlockedFunction // we use search and replace to change the next call to BlockedFunction to avoid CSP issues for\n// no-eval build\ntry {\n\tnew Function('')\n} catch(error) {\n\t// if eval variants are not supported, do not create inline object readers ever\n\tinlineObjectReadThreshold = Infinity\n}\n\nexport class Unpackr {\n\tconstructor(options) {\n\t\tif (options) {\n\t\t\tif (options.useRecords === false && options.mapsAsObjects === undefined)\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\tif (options.sequential && options.trusted !== false) {\n\t\t\t\toptions.trusted = true;\n\t\t\t\tif (!options.structures && options.useRecords != false) {\n\t\t\t\t\toptions.structures = []\n\t\t\t\t\tif (!options.maxSharedStructures)\n\t\t\t\t\t\toptions.maxSharedStructures = 0\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (options.structures)\n\t\t\t\toptions.structures.sharedLength = options.structures.length\n\t\t\telse if (options.getStructures) {\n\t\t\t\t(options.structures = []).uninitialized = true // this is what we use to denote an uninitialized structures\n\t\t\t\toptions.structures.sharedLength = 0\n\t\t\t}\n\t\t\tif (options.int64AsNumber) {\n\t\t\t\toptions.int64AsType = 'number'\n\t\t\t}\n\t\t}\n\t\tObject.assign(this, options)\n\t}\n\tunpack(source, options) {\n\t\tif (src) {\n\t\t\t// re-entrant execution, save the state and restore it after we do this unpack\n\t\t\treturn saveState(() => {\n\t\t\t\tclearSource()\n\t\t\t\treturn this ? this.unpack(source, options) : Unpackr.prototype.unpack.call(defaultOptions, source, options)\n\t\t\t})\n\t\t}\n\t\tif (!source.buffer && source.constructor === ArrayBuffer)\n\t\t\tsource = typeof Buffer !== 'undefined' ? Buffer.from(source) : new Uint8Array(source);\n\t\tif (typeof options === 'object') {\n\t\t\tsrcEnd = options.end || source.length\n\t\t\tposition = options.start || 0\n\t\t} else {\n\t\t\tposition = 0\n\t\t\tsrcEnd = options > -1 ? options : source.length\n\t\t}\n\t\tstringPosition = 0\n\t\tsrcStringEnd = 0\n\t\tsrcString = null\n\t\tstrings = EMPTY_ARRAY\n\t\tbundledStrings = null\n\t\tsrc = source\n\t\t// this provides cached access to the data view for a buffer if it is getting reused, which is a recommend\n\t\t// technique for getting data from a database where it can be copied into an existing buffer instead of creating\n\t\t// new ones\n\t\ttry {\n\t\t\tdataView = source.dataView || (source.dataView = new DataView(source.buffer, source.byteOffset, source.byteLength))\n\t\t} catch(error) {\n\t\t\t// if it doesn't have a buffer, maybe it is the wrong type of object\n\t\t\tsrc = null\n\t\t\tif (source instanceof Uint8Array)\n\t\t\t\tthrow error\n\t\t\tthrow new Error('Source must be a Uint8Array or Buffer but was a ' + ((source && typeof source == 'object') ? source.constructor.name : typeof source))\n\t\t}\n\t\tif (this instanceof Unpackr) {\n\t\t\tcurrentUnpackr = this\n\t\t\tif (this.structures) {\n\t\t\t\tcurrentStructures = this.structures\n\t\t\t\treturn checkedRead(options)\n\t\t\t} else if (!currentStructures || currentStructures.length > 0) {\n\t\t\t\tcurrentStructures = []\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentUnpackr = defaultOptions\n\t\t\tif (!currentStructures || currentStructures.length > 0)\n\t\t\t\tcurrentStructures = []\n\t\t}\n\t\treturn checkedRead(options)\n\t}\n\tunpackMultiple(source, forEach) {\n\t\tlet values, lastPosition = 0\n\t\ttry {\n\t\t\tsequentialMode = true\n\t\t\tlet size = source.length\n\t\t\tlet value = this ? this.unpack(source, size) : defaultUnpackr.unpack(source, size)\n\t\t\tif (forEach) {\n\t\t\t\tif (forEach(value, lastPosition, position) === false) return;\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tif (forEach(checkedRead(), lastPosition, position) === false) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalues = [ value ]\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tvalues.push(checkedRead())\n\t\t\t\t}\n\t\t\t\treturn values\n\t\t\t}\n\t\t} catch(error) {\n\t\t\terror.lastPosition = lastPosition\n\t\t\terror.values = values\n\t\t\tthrow error\n\t\t} finally {\n\t\t\tsequentialMode = false\n\t\t\tclearSource()\n\t\t}\n\t}\n\t_mergeStructures(loadedStructures, existingStructures) {\n\t\tif (onLoadedStructures)\n\t\t\tloadedStructures = onLoadedStructures.call(this, loadedStructures);\n\t\tloadedStructures = loadedStructures || []\n\t\tif (Object.isFrozen(loadedStructures))\n\t\t\tloadedStructures = loadedStructures.map(structure => structure.slice(0))\n\t\tfor (let i = 0, l = loadedStructures.length; i < l; i++) {\n\t\t\tlet structure = loadedStructures[i]\n\t\t\tif (structure) {\n\t\t\t\tstructure.isShared = true\n\t\t\t\tif (i >= 32)\n\t\t\t\t\tstructure.highByte = (i - 32) >> 5\n\t\t\t}\n\t\t}\n\t\tloadedStructures.sharedLength = loadedStructures.length\n\t\tfor (let id in existingStructures || []) {\n\t\t\tif (id >= 0) {\n\t\t\t\tlet structure = loadedStructures[id]\n\t\t\t\tlet existing = existingStructures[id]\n\t\t\t\tif (existing) {\n\t\t\t\t\tif (structure)\n\t\t\t\t\t\t(loadedStructures.restoreStructures || (loadedStructures.restoreStructures = []))[id] = structure\n\t\t\t\t\tloadedStructures[id] = existing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.structures = loadedStructures\n\t}\n\tdecode(source, options) {\n\t\treturn this.unpack(source, options)\n\t}\n}\nexport function getPosition() {\n\treturn position\n}\nexport function checkedRead(options) {\n\ttry {\n\t\tif (!currentUnpackr.trusted && !sequentialMode) {\n\t\t\tlet sharedLength = currentStructures.sharedLength || 0\n\t\t\tif (sharedLength < currentStructures.length)\n\t\t\t\tcurrentStructures.length = sharedLength\n\t\t}\n\t\tlet result\n\t\tif (currentUnpackr.randomAccessStructure && src[position] < 0x40 && src[position] >= 0x20 && readStruct) {\n\t\t\tresult = readStruct(src, position, srcEnd, currentUnpackr)\n\t\t\tsrc = null // dispose of this so that recursive unpack calls don't save state\n\t\t\tif (!(options && options.lazy) && result)\n\t\t\t\tresult = result.toJSON()\n\t\t\tposition = srcEnd\n\t\t} else\n\t\t\tresult = read()\n\t\tif (bundledStrings) { // bundled strings to skip past\n\t\t\tposition = bundledStrings.postBundlePosition\n\t\t\tbundledStrings = null\n\t\t}\n\t\tif (sequentialMode)\n\t\t\t// we only need to restore the structures if there was an error, but if we completed a read,\n\t\t\t// we can clear this out and keep the structures we read\n\t\t\tcurrentStructures.restoreStructures = null\n\n\t\tif (position == srcEnd) {\n\t\t\t// finished reading this source, cleanup references\n\t\t\tif (currentStructures && currentStructures.restoreStructures)\n\t\t\t\trestoreStructures()\n\t\t\tcurrentStructures = null\n\t\t\tsrc = null\n\t\t\tif (referenceMap)\n\t\t\t\treferenceMap = null\n\t\t} else if (position > srcEnd) {\n\t\t\t// over read\n\t\t\tthrow new Error('Unexpected end of MessagePack data')\n\t\t} else if (!sequentialMode) {\n\t\t\tlet jsonView;\n\t\t\ttry {\n\t\t\t\tjsonView = JSON.stringify(result, (_, value) => typeof value === \"bigint\" ? `${value}n` : value).slice(0, 100)\n\t\t\t} catch(error) {\n\t\t\t\tjsonView = '(JSON view not available ' + error + ')'\n\t\t\t}\n\t\t\tthrow new Error('Data read, but end of buffer not reached ' + jsonView)\n\t\t}\n\t\t// else more to read, but we are reading sequentially, so don't clear source yet\n\t\treturn result\n\t} catch(error) {\n\t\tif (currentStructures && currentStructures.restoreStructures)\n\t\t\trestoreStructures()\n\t\tclearSource()\n\t\tif (error instanceof RangeError || error.message.startsWith('Unexpected end of buffer') || position > srcEnd) {\n\t\t\terror.incomplete = true\n\t\t}\n\t\tthrow error\n\t}\n}\n\nfunction restoreStructures() {\n\tfor (let id in currentStructures.restoreStructures) {\n\t\tcurrentStructures[id] = currentStructures.restoreStructures[id]\n\t}\n\tcurrentStructures.restoreStructures = null\n}\n\nexport function read() {\n\tlet token = src[position++]\n\tif (token < 0xa0) {\n\t\tif (token < 0x80) {\n\t\t\tif (token < 0x40)\n\t\t\t\treturn token\n\t\t\telse {\n\t\t\t\tlet structure = currentStructures[token & 0x3f] ||\n\t\t\t\t\tcurrentUnpackr.getStructures && loadStructures()[token & 0x3f]\n\t\t\t\tif (structure) {\n\t\t\t\t\tif (!structure.read) {\n\t\t\t\t\t\tstructure.read = createStructureReader(structure, token & 0x3f)\n\t\t\t\t\t}\n\t\t\t\t\treturn structure.read()\n\t\t\t\t} else\n\t\t\t\t\treturn token\n\t\t\t}\n\t\t} else if (token < 0x90) {\n\t\t\t// map\n\t\t\ttoken -= 0x80\n\t\t\tif (currentUnpackr.mapsAsObjects) {\n\t\t\t\tlet object = {}\n\t\t\t\tfor (let i = 0; i < token; i++) {\n\t\t\t\t\tlet key = readKey()\n\t\t\t\t\tif (key === '__proto__')\n\t\t\t\t\t\tkey = '__proto_'\n\t\t\t\t\tobject[key] = read()\n\t\t\t\t}\n\t\t\t\treturn object\n\t\t\t} else {\n\t\t\t\tlet map = new Map()\n\t\t\t\tfor (let i = 0; i < token; i++) {\n\t\t\t\t\tmap.set(read(), read())\n\t\t\t\t}\n\t\t\t\treturn map\n\t\t\t}\n\t\t} else {\n\t\t\ttoken -= 0x90\n\t\t\tlet array = new Array(token)\n\t\t\tfor (let i = 0; i < token; i++) {\n\t\t\t\tarray[i] = read()\n\t\t\t}\n\t\t\tif (currentUnpackr.freezeData)\n\t\t\t\treturn Object.freeze(array)\n\t\t\treturn array\n\t\t}\n\t} else if (token < 0xc0) {\n\t\t// fixstr\n\t\tlet length = token - 0xa0\n\t\tif (srcStringEnd >= position) {\n\t\t\treturn srcString.slice(position - srcStringStart, (position += length) - srcStringStart)\n\t\t}\n\t\tif (srcStringEnd == 0 && srcEnd < 140) {\n\t\t\t// for small blocks, avoiding the overhead of the extract call is helpful\n\t\t\tlet string = length < 16 ? shortStringInJS(length) : longStringInJS(length)\n\t\t\tif (string != null)\n\t\t\t\treturn string\n\t\t}\n\t\treturn readFixedString(length)\n\t} else {\n\t\tlet value\n\t\tswitch (token) {\n\t\t\tcase 0xc0: return null\n\t\t\tcase 0xc1:\n\t\t\t\tif (bundledStrings) {\n\t\t\t\t\tvalue = read() // followed by the length of the string in characters (not bytes!)\n\t\t\t\t\tif (value > 0)\n\t\t\t\t\t\treturn bundledStrings[1].slice(bundledStrings.position1, bundledStrings.position1 += value)\n\t\t\t\t\telse\n\t\t\t\t\t\treturn bundledStrings[0].slice(bundledStrings.position0, bundledStrings.position0 -= value)\n\t\t\t\t}\n\t\t\t\treturn C1; // \"never-used\", return special object to denote that\n\t\t\tcase 0xc2: return false\n\t\t\tcase 0xc3: return true\n\t\t\tcase 0xc4:\n\t\t\t\t// bin 8\n\t\t\t\tvalue = src[position++]\n\t\t\t\tif (value === undefined)\n\t\t\t\t\tthrow new Error('Unexpected end of buffer')\n\t\t\t\treturn readBin(value)\n\t\t\tcase 0xc5:\n\t\t\t\t// bin 16\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn readBin(value)\n\t\t\tcase 0xc6:\n\t\t\t\t// bin 32\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn readBin(value)\n\t\t\tcase 0xc7:\n\t\t\t\t// ext 8\n\t\t\t\treturn readExt(src[position++])\n\t\t\tcase 0xc8:\n\t\t\t\t// ext 16\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn readExt(value)\n\t\t\tcase 0xc9:\n\t\t\t\t// ext 32\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn readExt(value)\n\t\t\tcase 0xca:\n\t\t\t\tvalue = dataView.getFloat32(position)\n\t\t\t\tif (currentUnpackr.useFloat32 > 2) {\n\t\t\t\t\t// this does rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\tlet multiplier = mult10[((src[position] & 0x7f) << 1) | (src[position + 1] >> 7)]\n\t\t\t\t\tposition += 4\n\t\t\t\t\treturn ((multiplier * value + (value > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n\t\t\t\t}\n\t\t\t\tposition += 4\n\t\t\t\treturn value\n\t\t\tcase 0xcb:\n\t\t\t\tvalue = dataView.getFloat64(position)\n\t\t\t\tposition += 8\n\t\t\t\treturn value\n\t\t\t// uint handlers\n\t\t\tcase 0xcc:\n\t\t\t\treturn src[position++]\n\t\t\tcase 0xcd:\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn value\n\t\t\tcase 0xce:\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn value\n\t\t\tcase 0xcf:\n\t\t\t\tif (currentUnpackr.int64AsType === 'number') {\n\t\t\t\t\tvalue = dataView.getUint32(position) * 0x100000000\n\t\t\t\t\tvalue += dataView.getUint32(position + 4)\n\t\t\t\t} else if (currentUnpackr.int64AsType === 'string') {\n\t\t\t\t\tvalue = dataView.getBigUint64(position).toString()\n\t\t\t\t} else if (currentUnpackr.int64AsType === 'auto') {\n\t\t\t\t\tvalue = dataView.getBigUint64(position)\n\t\t\t\t\tif (value<=BigInt(2)<<BigInt(52)) value=Number(value)\n\t\t\t\t} else\n\t\t\t\t\tvalue = dataView.getBigUint64(position)\n\t\t\t\tposition += 8\n\t\t\t\treturn value\n\n\t\t\t// int handlers\n\t\t\tcase 0xd0:\n\t\t\t\treturn dataView.getInt8(position++)\n\t\t\tcase 0xd1:\n\t\t\t\tvalue = dataView.getInt16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn value\n\t\t\tcase 0xd2:\n\t\t\t\tvalue = dataView.getInt32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn value\n\t\t\tcase 0xd3:\n\t\t\t\tif (currentUnpackr.int64AsType === 'number') {\n\t\t\t\t\tvalue = dataView.getInt32(position) * 0x100000000\n\t\t\t\t\tvalue += dataView.getUint32(position + 4)\n\t\t\t\t} else if (currentUnpackr.int64AsType === 'string') {\n\t\t\t\t\tvalue = dataView.getBigInt64(position).toString()\n\t\t\t\t} else if (currentUnpackr.int64AsType === 'auto') {\n\t\t\t\t\tvalue = dataView.getBigInt64(position)\n\t\t\t\t\tif (value>=BigInt(-2)<<BigInt(52)&&value<=BigInt(2)<<BigInt(52)) value=Number(value)\n\t\t\t\t} else\n\t\t\t\t\tvalue = dataView.getBigInt64(position)\n\t\t\t\tposition += 8\n\t\t\t\treturn value\n\n\t\t\tcase 0xd4:\n\t\t\t\t// fixext 1\n\t\t\t\tvalue = src[position++]\n\t\t\t\tif (value == 0x72) {\n\t\t\t\t\treturn recordDefinition(src[position++] & 0x3f)\n\t\t\t\t} else {\n\t\t\t\t\tlet extension = currentExtensions[value]\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\tif (extension.read) {\n\t\t\t\t\t\t\tposition++ // skip filler byte\n\t\t\t\t\t\t\treturn extension.read(read())\n\t\t\t\t\t\t} else if (extension.noBuffer) {\n\t\t\t\t\t\t\tposition++ // skip filler byte\n\t\t\t\t\t\t\treturn extension()\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\treturn extension(src.subarray(position, ++position))\n\t\t\t\t\t} else\n\t\t\t\t\t\tthrow new Error('Unknown extension ' + value)\n\t\t\t\t}\n\t\t\tcase 0xd5:\n\t\t\t\t// fixext 2\n\t\t\t\tvalue = src[position]\n\t\t\t\tif (value == 0x72) {\n\t\t\t\t\tposition++\n\t\t\t\t\treturn recordDefinition(src[position++] & 0x3f, src[position++])\n\t\t\t\t} else\n\t\t\t\t\treturn readExt(2)\n\t\t\tcase 0xd6:\n\t\t\t\t// fixext 4\n\t\t\t\treturn readExt(4)\n\t\t\tcase 0xd7:\n\t\t\t\t// fixext 8\n\t\t\t\treturn readExt(8)\n\t\t\tcase 0xd8:\n\t\t\t\t// fixext 16\n\t\t\t\treturn readExt(16)\n\t\t\tcase 0xd9:\n\t\t\t// str 8\n\t\t\t\tvalue = src[position++]\n\t\t\t\tif (srcStringEnd >= position) {\n\t\t\t\t\treturn srcString.slice(position - srcStringStart, (position += value) - srcStringStart)\n\t\t\t\t}\n\t\t\t\treturn readString8(value)\n\t\t\tcase 0xda:\n\t\t\t// str 16\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tif (srcStringEnd >= position) {\n\t\t\t\t\treturn srcString.slice(position - srcStringStart, (position += value) - srcStringStart)\n\t\t\t\t}\n\t\t\t\treturn readString16(value)\n\t\t\tcase 0xdb:\n\t\t\t// str 32\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tif (srcStringEnd >= position) {\n\t\t\t\t\treturn srcString.slice(position - srcStringStart, (position += value) - srcStringStart)\n\t\t\t\t}\n\t\t\t\treturn readString32(value)\n\t\t\tcase 0xdc:\n\t\t\t// array 16\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn readArray(value)\n\t\t\tcase 0xdd:\n\t\t\t// array 32\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn readArray(value)\n\t\t\tcase 0xde:\n\t\t\t// map 16\n\t\t\t\tvalue = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\treturn readMap(value)\n\t\t\tcase 0xdf:\n\t\t\t// map 32\n\t\t\t\tvalue = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\treturn readMap(value)\n\t\t\tdefault: // negative int\n\t\t\t\tif (token >= 0xe0)\n\t\t\t\t\treturn token - 0x100\n\t\t\t\tif (token === undefined) {\n\t\t\t\t\tlet error = new Error('Unexpected end of MessagePack data')\n\t\t\t\t\terror.incomplete = true\n\t\t\t\t\tthrow error\n\t\t\t\t}\n\t\t\t\tthrow new Error('Unknown MessagePack token ' + token)\n\n\t\t}\n\t}\n}\nconst validName = /^[a-zA-Z_$][a-zA-Z\\d_$]*$/\nfunction createStructureReader(structure, firstId) {\n\tfunction readObject() {\n\t\t// This initial function is quick to instantiate, but runs slower. After several iterations pay the cost to build the faster function\n\t\tif (readObject.count++ > inlineObjectReadThreshold) {\n\t\t\tlet readObject = structure.read = (new Function('r', 'return function(){return ' + (currentUnpackr.freezeData ? 'Object.freeze' : '') +\n\t\t\t\t'({' + structure.map(key => key === '__proto__' ? '__proto_:r()' : validName.test(key) ? key + ':r()' : ('[' + JSON.stringify(key) + ']:r()')).join(',') + '})}'))(read)\n\t\t\tif (structure.highByte === 0)\n\t\t\t\tstructure.read = createSecondByteReader(firstId, structure.read)\n\t\t\treturn readObject() // second byte is already read, if there is one so immediately read object\n\t\t}\n\t\tlet object = {}\n\t\tfor (let i = 0, l = structure.length; i < l; i++) {\n\t\t\tlet key = structure[i]\n\t\t\tif (key === '__proto__')\n\t\t\t\tkey = '__proto_'\n\t\t\tobject[key] = read()\n\t\t}\n\t\tif (currentUnpackr.freezeData)\n\t\t\treturn Object.freeze(object);\n\t\treturn object\n\t}\n\treadObject.count = 0\n\tif (structure.highByte === 0) {\n\t\treturn createSecondByteReader(firstId, readObject)\n\t}\n\treturn readObject\n}\n\nconst createSecondByteReader = (firstId, read0) => {\n\treturn function() {\n\t\tlet highByte = src[position++]\n\t\tif (highByte === 0)\n\t\t\treturn read0()\n\t\tlet id = firstId < 32 ? -(firstId + (highByte << 5)) : firstId + (highByte << 5)\n\t\tlet structure = currentStructures[id] || loadStructures()[id]\n\t\tif (!structure) {\n\t\t\tthrow new Error('Record id is not defined for ' + id)\n\t\t}\n\t\tif (!structure.read)\n\t\t\tstructure.read = createStructureReader(structure, firstId)\n\t\treturn structure.read()\n\t}\n}\n\nexport function loadStructures() {\n\tlet loadedStructures = saveState(() => {\n\t\t// save the state in case getStructures modifies our buffer\n\t\tsrc = null\n\t\treturn currentUnpackr.getStructures()\n\t})\n\treturn currentStructures = currentUnpackr._mergeStructures(loadedStructures, currentStructures)\n}\n\nvar readFixedString = readStringJS\nvar readString8 = readStringJS\nvar readString16 = readStringJS\nvar readString32 = readStringJS\nexport let isNativeAccelerationEnabled = false\n\nexport function setExtractor(extractStrings) {\n\tisNativeAccelerationEnabled = true\n\treadFixedString = readString(1)\n\treadString8 = readString(2)\n\treadString16 = readString(3)\n\treadString32 = readString(5)\n\tfunction readString(headerLength) {\n\t\treturn function readString(length) {\n\t\t\tlet string = strings[stringPosition++]\n\t\t\tif (string == null) {\n\t\t\t\tif (bundledStrings)\n\t\t\t\t\treturn readStringJS(length)\n\t\t\t\tlet byteOffset = src.byteOffset\n\t\t\t\tlet extraction = extractStrings(position - headerLength + byteOffset, srcEnd + byteOffset, src.buffer)\n\t\t\t\tif (typeof extraction == 'string') {\n\t\t\t\t\tstring = extraction\n\t\t\t\t\tstrings = EMPTY_ARRAY\n\t\t\t\t} else {\n\t\t\t\t\tstrings = extraction\n\t\t\t\t\tstringPosition = 1\n\t\t\t\t\tsrcStringEnd = 1 // even if a utf-8 string was decoded, must indicate we are in the midst of extracted strings and can't skip strings\n\t\t\t\t\tstring = strings[0]\n\t\t\t\t\tif (string === undefined)\n\t\t\t\t\t\tthrow new Error('Unexpected end of buffer')\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet srcStringLength = string.length\n\t\t\tif (srcStringLength <= length) {\n\t\t\t\tposition += length\n\t\t\t\treturn string\n\t\t\t}\n\t\t\tsrcString = string\n\t\t\tsrcStringStart = position\n\t\t\tsrcStringEnd = position + srcStringLength\n\t\t\tposition += length\n\t\t\treturn string.slice(0, length) // we know we just want the beginning\n\t\t}\n\t}\n}\nfunction readStringJS(length) {\n\tlet result\n\tif (length < 16) {\n\t\tif (result = shortStringInJS(length))\n\t\t\treturn result\n\t}\n\tif (length > 64 && decoder)\n\t\treturn decoder.decode(src.subarray(position, position += length))\n\tconst end = position + length\n\tconst units = []\n\tresult = ''\n\twhile (position < end) {\n\t\tconst byte1 = src[position++]\n\t\tif ((byte1 & 0x80) === 0) {\n\t\t\t// 1 byte\n\t\t\tunits.push(byte1)\n\t\t} else if ((byte1 & 0xe0) === 0xc0) {\n\t\t\t// 2 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 6) | byte2)\n\t\t} else if ((byte1 & 0xf0) === 0xe0) {\n\t\t\t// 3 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3)\n\t\t} else if ((byte1 & 0xf8) === 0xf0) {\n\t\t\t// 4 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tconst byte4 = src[position++] & 0x3f\n\t\t\tlet unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4\n\t\t\tif (unit > 0xffff) {\n\t\t\t\tunit -= 0x10000\n\t\t\t\tunits.push(((unit >>> 10) & 0x3ff) | 0xd800)\n\t\t\t\tunit = 0xdc00 | (unit & 0x3ff)\n\t\t\t}\n\t\t\tunits.push(unit)\n\t\t} else {\n\t\t\tunits.push(byte1)\n\t\t}\n\n\t\tif (units.length >= 0x1000) {\n\t\t\tresult += fromCharCode.apply(String, units)\n\t\t\tunits.length = 0\n\t\t}\n\t}\n\n\tif (units.length > 0) {\n\t\tresult += fromCharCode.apply(String, units)\n\t}\n\n\treturn result\n}\nexport function readString(source, start, length) {\n\tlet existingSrc = src;\n\tsrc = source;\n\tposition = start;\n\ttry {\n\t\treturn readStringJS(length);\n\t} finally {\n\t\tsrc = existingSrc;\n\t}\n}\n\nfunction readArray(length) {\n\tlet array = new Array(length)\n\tfor (let i = 0; i < length; i++) {\n\t\tarray[i] = read()\n\t}\n\tif (currentUnpackr.freezeData)\n\t\treturn Object.freeze(array)\n\treturn array\n}\n\nfunction readMap(length) {\n\tif (currentUnpackr.mapsAsObjects) {\n\t\tlet object = {}\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tlet key = readKey()\n\t\t\tif (key === '__proto__')\n\t\t\t\tkey = '__proto_';\n\t\t\tobject[key] = read()\n\t\t}\n\t\treturn object\n\t} else {\n\t\tlet map = new Map()\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tmap.set(read(), read())\n\t\t}\n\t\treturn map\n\t}\n}\n\nvar fromCharCode = String.fromCharCode\nfunction longStringInJS(length) {\n\tlet start = position\n\tlet bytes = new Array(length)\n\tfor (let i = 0; i < length; i++) {\n\t\tconst byte = src[position++];\n\t\tif ((byte & 0x80) > 0) {\n\t\t\t\tposition = start\n\t\t\t\treturn\n\t\t\t}\n\t\t\tbytes[i] = byte\n\t\t}\n\t\treturn fromCharCode.apply(String, bytes)\n}\nfunction shortStringInJS(length) {\n\tif (length < 4) {\n\t\tif (length < 2) {\n\t\t\tif (length === 0)\n\t\t\t\treturn ''\n\t\t\telse {\n\t\t\t\tlet a = src[position++]\n\t\t\t\tif ((a & 0x80) > 1) {\n\t\t\t\t\tposition -= 1\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a)\n\t\t\t}\n\t\t} else {\n\t\t\tlet a = src[position++]\n\t\t\tlet b = src[position++]\n\t\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0) {\n\t\t\t\tposition -= 2\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 3)\n\t\t\t\treturn fromCharCode(a, b)\n\t\t\tlet c = src[position++]\n\t\t\tif ((c & 0x80) > 0) {\n\t\t\t\tposition -= 3\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c)\n\t\t}\n\t} else {\n\t\tlet a = src[position++]\n\t\tlet b = src[position++]\n\t\tlet c = src[position++]\n\t\tlet d = src[position++]\n\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0 || (c & 0x80) > 0 || (d & 0x80) > 0) {\n\t\t\tposition -= 4\n\t\t\treturn\n\t\t}\n\t\tif (length < 6) {\n\t\t\tif (length === 4)\n\t\t\t\treturn fromCharCode(a, b, c, d)\n\t\t\telse {\n\t\t\t\tlet e = src[position++]\n\t\t\t\tif ((e & 0x80) > 0) {\n\t\t\t\t\tposition -= 5\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e)\n\t\t\t}\n\t\t} else if (length < 8) {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0) {\n\t\t\t\tposition -= 6\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 7)\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f)\n\t\t\tlet g = src[position++]\n\t\t\tif ((g & 0x80) > 0) {\n\t\t\t\tposition -= 7\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c, d, e, f, g)\n\t\t} else {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tlet g = src[position++]\n\t\t\tlet h = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0 || (g & 0x80) > 0 || (h & 0x80) > 0) {\n\t\t\t\tposition -= 8\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 10) {\n\t\t\t\tif (length === 8)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h)\n\t\t\t\telse {\n\t\t\t\t\tlet i = src[position++]\n\t\t\t\t\tif ((i & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 9\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i)\n\t\t\t\t}\n\t\t\t} else if (length < 12) {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0) {\n\t\t\t\t\tposition -= 10\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 11)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j)\n\t\t\t\tlet k = src[position++]\n\t\t\t\tif ((k & 0x80) > 0) {\n\t\t\t\t\tposition -= 11\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k)\n\t\t\t} else {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tlet k = src[position++]\n\t\t\t\tlet l = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0 || (k & 0x80) > 0 || (l & 0x80) > 0) {\n\t\t\t\t\tposition -= 12\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 14) {\n\t\t\t\t\tif (length === 12)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l)\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\t\tif ((m & 0x80) > 0) {\n\t\t\t\t\t\t\tposition -= 13\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\tlet n = src[position++]\n\t\t\t\t\tif ((m & 0x80) > 0 || (n & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 14\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (length < 15)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n)\n\t\t\t\t\tlet o = src[position++]\n\t\t\t\t\tif ((o & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 15\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction readOnlyJSString() {\n\tlet token = src[position++]\n\tlet length\n\tif (token < 0xc0) {\n\t\t// fixstr\n\t\tlength = token - 0xa0\n\t} else {\n\t\tswitch(token) {\n\t\t\tcase 0xd9:\n\t\t\t// str 8\n\t\t\t\tlength = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0xda:\n\t\t\t// str 16\n\t\t\t\tlength = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0xdb:\n\t\t\t// str 32\n\t\t\t\tlength = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Expected string')\n\t\t}\n\t}\n\treturn readStringJS(length)\n}\n\n\nfunction readBin(length) {\n\treturn currentUnpackr.copyBuffers ?\n\t\t// specifically use the copying slice (not the node one)\n\t\tUint8Array.prototype.slice.call(src, position, position += length) :\n\t\tsrc.subarray(position, position += length)\n}\nfunction readExt(length) {\n\tlet type = src[position++]\n\tif (currentExtensions[type]) {\n\t\tlet end\n\t\treturn currentExtensions[type](src.subarray(position, end = (position += length)), (readPosition) => {\n\t\t\tposition = readPosition;\n\t\t\ttry {\n\t\t\t\treturn read();\n\t\t\t} finally {\n\t\t\t\tposition = end;\n\t\t\t}\n\t\t})\n\t}\n\telse\n\t\tthrow new Error('Unknown extension type ' + type)\n}\n\nvar keyCache = new Array(4096)\nfunction readKey() {\n\tlet length = src[position++]\n\tif (length >= 0xa0 && length < 0xc0) {\n\t\t// fixstr, potentially use key cache\n\t\tlength = length - 0xa0\n\t\tif (srcStringEnd >= position) // if it has been extracted, must use it (and faster anyway)\n\t\t\treturn srcString.slice(position - srcStringStart, (position += length) - srcStringStart)\n\t\telse if (!(srcStringEnd == 0 && srcEnd < 180))\n\t\t\treturn readFixedString(length)\n\t} else { // not cacheable, go back and do a standard read\n\t\tposition--\n\t\treturn read().toString()\n\t}\n\tlet key = ((length << 5) ^ (length > 1 ? dataView.getUint16(position) : length > 0 ? src[position] : 0)) & 0xfff\n\tlet entry = keyCache[key]\n\tlet checkPosition = position\n\tlet end = position + length - 3\n\tlet chunk\n\tlet i = 0\n\tif (entry && entry.bytes == length) {\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = dataView.getUint32(checkPosition)\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcheckPosition += 4\n\t\t}\n\t\tend += 3\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = src[checkPosition++]\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif (checkPosition === end) {\n\t\t\tposition = checkPosition\n\t\t\treturn entry.string\n\t\t}\n\t\tend -= 3\n\t\tcheckPosition = position\n\t}\n\tentry = []\n\tkeyCache[key] = entry\n\tentry.bytes = length\n\twhile (checkPosition < end) {\n\t\tchunk = dataView.getUint32(checkPosition)\n\t\tentry.push(chunk)\n\t\tcheckPosition += 4\n\t}\n\tend += 3\n\twhile (checkPosition < end) {\n\t\tchunk = src[checkPosition++]\n\t\tentry.push(chunk)\n\t}\n\t// for small blocks, avoiding the overhead of the extract call is helpful\n\tlet string = length < 16 ? shortStringInJS(length) : longStringInJS(length)\n\tif (string != null)\n\t\treturn entry.string = string\n\treturn entry.string = readFixedString(length)\n}\n\n// the registration of the record definition extension (as \"r\")\nconst recordDefinition = (id, highByte) => {\n\tlet structure = read().map(property => property.toString()) // ensure that all keys are strings and that the array is mutable\n\tlet firstByte = id\n\tif (highByte !== undefined) {\n\t\tid = id < 32 ? -((highByte << 5) + id) : ((highByte << 5) + id)\n\t\tstructure.highByte = highByte\n\t}\n\tlet existingStructure = currentStructures[id]\n\t// If it is a shared structure, we need to restore any changes after reading.\n\t// Also in sequential mode, we may get incomplete reads and thus errors, and we need to restore\n\t// to the state prior to an incomplete read in order to properly resume.\n\tif (existingStructure && (existingStructure.isShared || sequentialMode)) {\n\t\t(currentStructures.restoreStructures || (currentStructures.restoreStructures = []))[id] = existingStructure\n\t}\n\tcurrentStructures[id] = structure\n\tstructure.read = createStructureReader(structure, firstByte)\n\treturn structure.read()\n}\ncurrentExtensions[0] = () => {} // notepack defines extension 0 to mean undefined, so use that as the default here\ncurrentExtensions[0].noBuffer = true\n\ncurrentExtensions[0x42] = (data) => {\n\t// decode bigint\n\tlet length = data.length;\n\tlet value = BigInt(data[0] & 0x80 ? data[0] - 0x100 : data[0]);\n\tfor (let i = 1; i < length; i++) {\n\t\tvalue <<= 8n;\n\t\tvalue += BigInt(data[i]);\n\t}\n\treturn value;\n}\n\nlet errors = { Error, TypeError, ReferenceError };\ncurrentExtensions[0x65] = () => {\n\tlet data = read()\n\treturn (errors[data[0]] || Error)(data[1])\n}\n\ncurrentExtensions[0x69] = (data) => {\n\t// id extension (for structured clones)\n\tlet id = dataView.getUint32(position - 4)\n\tif (!referenceMap)\n\t\treferenceMap = new Map()\n\tlet token = src[position]\n\tlet target\n\t// TODO: handle Maps, Sets, and other types that can cycle; this is complicated, because you potentially need to read\n\t// ahead past references to record structure definitions\n\tif (token >= 0x90 && token < 0xa0 || token == 0xdc || token == 0xdd)\n\t\ttarget = []\n\telse\n\t\ttarget = {}\n\n\tlet refEntry = { target } // a placeholder object\n\treferenceMap.set(id, refEntry)\n\tlet targetProperties = read() // read the next value as the target object to id\n\tif (refEntry.used) // there is a cycle, so we have to assign properties to original target\n\t\treturn Object.assign(target, targetProperties)\n\trefEntry.target = targetProperties // the placeholder wasn't used, replace with the deserialized one\n\treturn targetProperties // no cycle, can just use the returned read object\n}\n\ncurrentExtensions[0x70] = (data) => {\n\t// pointer extension (for structured clones)\n\tlet id = dataView.getUint32(position - 4)\n\tlet refEntry = referenceMap.get(id)\n\trefEntry.used = true\n\treturn refEntry.target\n}\n\ncurrentExtensions[0x73] = () => new Set(read())\n\nexport const typedArrays = ['Int8','Uint8','Uint8Clamped','Int16','Uint16','Int32','Uint32','Float32','Float64','BigInt64','BigUint64'].map(type => type + 'Array')\n\nlet glbl = typeof globalThis === 'object' ? globalThis : window;\ncurrentExtensions[0x74] = (data) => {\n\tlet typeCode = data[0]\n\tlet typedArrayName = typedArrays[typeCode]\n\tif (!typedArrayName)\n\t\tthrow new Error('Could not find typed array for code ' + typeCode)\n\t// we have to always slice/copy here to get a new ArrayBuffer that is word/byte aligned\n\treturn new glbl[typedArrayName](Uint8Array.prototype.slice.call(data, 1).buffer)\n}\ncurrentExtensions[0x78] = () => {\n\tlet data = read()\n\treturn new RegExp(data[0], data[1])\n}\nconst TEMP_BUNDLE = []\ncurrentExtensions[0x62] = (data) => {\n\tlet dataSize = (data[0] << 24) + (data[1] << 16) + (data[2] << 8) + data[3]\n\tlet dataPosition = position\n\tposition += dataSize - data.length\n\tbundledStrings = TEMP_BUNDLE\n\tbundledStrings = [readOnlyJSString(), readOnlyJSString()]\n\tbundledStrings.position0 = 0\n\tbundledStrings.position1 = 0\n\tbundledStrings.postBundlePosition = position\n\tposition = dataPosition\n\treturn read()\n}\n\ncurrentExtensions[0xff] = (data) => {\n\t// 32-bit date extension\n\tif (data.length == 4)\n\t\treturn new Date((data[0] * 0x1000000 + (data[1] << 16) + (data[2] << 8) + data[3]) * 1000)\n\telse if (data.length == 8)\n\t\treturn new Date(\n\t\t\t((data[0] << 22) + (data[1] << 14) + (data[2] << 6) + (data[3] >> 2)) / 1000000 +\n\t\t\t((data[3] & 0x3) * 0x100000000 + data[4] * 0x1000000 + (data[5] << 16) + (data[6] << 8) + data[7]) * 1000)\n\telse if (data.length == 12)// TODO: Implement support for negative\n\t\treturn new Date(\n\t\t\t((data[0] << 24) + (data[1] << 16) + (data[2] << 8) + data[3]) / 1000000 +\n\t\t\t(((data[4] & 0x80) ? -0x1000000000000 : 0) + data[6] * 0x10000000000 + data[7] * 0x100000000 + data[8] * 0x1000000 + (data[9] << 16) + (data[10] << 8) + data[11]) * 1000)\n\telse\n\t\treturn new Date('invalid')\n} // notepack defines extension 0 to mean undefined, so use that as the default here\n// registration of bulk record definition?\n// currentExtensions[0x52] = () =>\n\nfunction saveState(callback) {\n\tif (onSaveState)\n\t\tonSaveState();\n\tlet savedSrcEnd = srcEnd\n\tlet savedPosition = position\n\tlet savedStringPosition = stringPosition\n\tlet savedSrcStringStart = srcStringStart\n\tlet savedSrcStringEnd = srcStringEnd\n\tlet savedSrcString = srcString\n\tlet savedStrings = strings\n\tlet savedReferenceMap = referenceMap\n\tlet savedBundledStrings = bundledStrings\n\n\t// TODO: We may need to revisit this if we do more external calls to user code (since it could be slow)\n\tlet savedSrc = new Uint8Array(src.slice(0, srcEnd)) // we copy the data in case it changes while external data is processed\n\tlet savedStructures = currentStructures\n\tlet savedStructuresContents = currentStructures.slice(0, currentStructures.length)\n\tlet savedPackr = currentUnpackr\n\tlet savedSequentialMode = sequentialMode\n\tlet value = callback()\n\tsrcEnd = savedSrcEnd\n\tposition = savedPosition\n\tstringPosition = savedStringPosition\n\tsrcStringStart = savedSrcStringStart\n\tsrcStringEnd = savedSrcStringEnd\n\tsrcString = savedSrcString\n\tstrings = savedStrings\n\treferenceMap = savedReferenceMap\n\tbundledStrings = savedBundledStrings\n\tsrc = savedSrc\n\tsequentialMode = savedSequentialMode\n\tcurrentStructures = savedStructures\n\tcurrentStructures.splice(0, currentStructures.length, ...savedStructuresContents)\n\tcurrentUnpackr = savedPackr\n\tdataView = new DataView(src.buffer, src.byteOffset, src.byteLength)\n\treturn value\n}\nexport function clearSource() {\n\tsrc = null\n\treferenceMap = null\n\tcurrentStructures = null\n}\n\nexport function addExtension(extension) {\n\tif (extension.unpack)\n\t\tcurrentExtensions[extension.type] = extension.unpack\n\telse\n\t\tcurrentExtensions[extension.type] = extension\n}\n\nexport const mult10 = new Array(147) // this is a table matching binary exponents to the multiplier to determine significant digit rounding\nfor (let i = 0; i < 256; i++) {\n\tmult10[i] = +('1e' + Math.floor(45.15 - i * 0.30103))\n}\nexport const Decoder = Unpackr\nvar defaultUnpackr = new Unpackr({ useRecords: false })\nexport const unpack = defaultUnpackr.unpack\nexport const unpackMultiple = defaultUnpackr.unpackMultiple\nexport const decode = defaultUnpackr.unpack\nexport const FLOAT32_OPTIONS = {\n\tNEVER: 0,\n\tALWAYS: 1,\n\tDECIMAL_ROUND: 3,\n\tDECIMAL_FIT: 4\n}\nlet f32Array = new Float32Array(1)\nlet u8Array = new Uint8Array(f32Array.buffer, 0, 4)\nexport function roundFloat32(float32Number) {\n\tf32Array[0] = float32Number\n\tlet multiplier = mult10[((u8Array[3] & 0x7f) << 1) | (u8Array[2] >> 7)]\n\treturn ((multiplier * float32Number + (float32Number > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n}\nexport function setReadStruct(updatedReadStruct, loadedStructs, saveState) {\n\treadStruct = updatedReadStruct;\n\tonLoadedStructures = loadedStructs;\n\tonSaveState = saveState;\n}\n","import { Packr } from './pack.js'\nimport { Unpackr } from './unpack.js'\n\n/**\n * Given an Iterable first argument, returns an Iterable where each value is packed as a Buffer\n * If the argument is only Async Iterable, the return value will be an Async Iterable.\n * @param {Iterable|Iterator|AsyncIterable|AsyncIterator} objectIterator - iterable source, like a Readable object stream, an array, Set, or custom object\n * @param {options} [options] - msgpackr pack options\n * @returns {IterableIterator|Promise.<AsyncIterableIterator>}\n */\nexport function packIter (objectIterator, options = {}) {\n  if (!objectIterator || typeof objectIterator !== 'object') {\n    throw new Error('first argument must be an Iterable, Async Iterable, or a Promise for an Async Iterable')\n  } else if (typeof objectIterator[Symbol.iterator] === 'function') {\n    return packIterSync(objectIterator, options)\n  } else if (typeof objectIterator.then === 'function' || typeof objectIterator[Symbol.asyncIterator] === 'function') {\n    return packIterAsync(objectIterator, options)\n  } else {\n    throw new Error('first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a Promise')\n  }\n}\n\nfunction * packIterSync (objectIterator, options) {\n  const packr = new Packr(options)\n  for (const value of objectIterator) {\n    yield packr.pack(value)\n  }\n}\n\nasync function * packIterAsync (objectIterator, options) {\n  const packr = new Packr(options)\n  for await (const value of objectIterator) {\n    yield packr.pack(value)\n  }\n}\n\n/**\n * Given an Iterable/Iterator input which yields buffers, returns an IterableIterator which yields sync decoded objects\n * Or, given an Async Iterable/Iterator which yields promises resolving in buffers, returns an AsyncIterableIterator.\n * @param {Iterable|Iterator|AsyncIterable|AsyncIterableIterator} bufferIterator\n * @param {object} [options] - unpackr options\n * @returns {IterableIterator|Promise.<AsyncIterableIterator}\n */\nexport function unpackIter (bufferIterator, options = {}) {\n  if (!bufferIterator || typeof bufferIterator !== 'object') {\n    throw new Error('first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a promise')\n  }\n\n  const unpackr = new Unpackr(options)\n  let incomplete\n  const parser = (chunk) => {\n    let yields\n    // if there's incomplete data from previous chunk, concatinate and try again\n    if (incomplete) {\n      chunk = Buffer.concat([incomplete, chunk])\n      incomplete = undefined\n    }\n\n    try {\n      yields = unpackr.unpackMultiple(chunk)\n    } catch (err) {\n      if (err.incomplete) {\n        incomplete = chunk.slice(err.lastPosition)\n        yields = err.values\n      } else {\n        throw err\n      }\n    }\n    return yields\n  }\n\n  if (typeof bufferIterator[Symbol.iterator] === 'function') {\n    return (function * iter () {\n      for (const value of bufferIterator) {\n        yield * parser(value)\n      }\n    })()\n  } else if (typeof bufferIterator[Symbol.asyncIterator] === 'function') {\n    return (async function * iter () {\n      for await (const value of bufferIterator) {\n        yield * parser(value)\n      }\n    })()\n  }\n}\nexport const decodeIter = unpackIter\nexport const encodeIter = packIter","'use strict'\n\nconst { hasOwnProperty } = Object.prototype\n\nconst stringify = configure()\n\n// @ts-expect-error\nstringify.configure = configure\n// @ts-expect-error\nstringify.stringify = stringify\n\n// @ts-expect-error\nstringify.default = stringify\n\n// @ts-expect-error used for named export\nexports.stringify = stringify\n// @ts-expect-error used for named export\nexports.configure = configure\n\nmodule.exports = stringify\n\n// eslint-disable-next-line no-control-regex\nconst strEscapeSequencesRegExp = /[\\u0000-\\u001f\\u0022\\u005c\\ud800-\\udfff]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?:[^\\ud800-\\udbff]|^)[\\udc00-\\udfff]/\n\n// Escape C0 control characters, double quotes, the backslash and every code\n// unit with a numeric value in the inclusive range 0xD800 to 0xDFFF.\nfunction strEscape (str) {\n  // Some magic numbers that worked out fine while benchmarking with v8 8.0\n  if (str.length < 5000 && !strEscapeSequencesRegExp.test(str)) {\n    return `\"${str}\"`\n  }\n  return JSON.stringify(str)\n}\n\nfunction insertSort (array) {\n  // Insertion sort is very efficient for small input sizes but it has a bad\n  // worst case complexity. Thus, use native array sort for bigger values.\n  if (array.length > 2e2) {\n    return array.sort()\n  }\n  for (let i = 1; i < array.length; i++) {\n    const currentValue = array[i]\n    let position = i\n    while (position !== 0 && array[position - 1] > currentValue) {\n      array[position] = array[position - 1]\n      position--\n    }\n    array[position] = currentValue\n  }\n  return array\n}\n\nconst typedArrayPrototypeGetSymbolToStringTag =\n  Object.getOwnPropertyDescriptor(\n    Object.getPrototypeOf(\n      Object.getPrototypeOf(\n        new Int8Array()\n      )\n    ),\n    Symbol.toStringTag\n  ).get\n\nfunction isTypedArrayWithEntries (value) {\n  return typedArrayPrototypeGetSymbolToStringTag.call(value) !== undefined && value.length !== 0\n}\n\nfunction stringifyTypedArray (array, separator, maximumBreadth) {\n  if (array.length < maximumBreadth) {\n    maximumBreadth = array.length\n  }\n  const whitespace = separator === ',' ? '' : ' '\n  let res = `\"0\":${whitespace}${array[0]}`\n  for (let i = 1; i < maximumBreadth; i++) {\n    res += `${separator}\"${i}\":${whitespace}${array[i]}`\n  }\n  return res\n}\n\nfunction getCircularValueOption (options) {\n  if (hasOwnProperty.call(options, 'circularValue')) {\n    const circularValue = options.circularValue\n    if (typeof circularValue === 'string') {\n      return `\"${circularValue}\"`\n    }\n    if (circularValue == null) {\n      return circularValue\n    }\n    if (circularValue === Error || circularValue === TypeError) {\n      return {\n        toString () {\n          throw new TypeError('Converting circular structure to JSON')\n        }\n      }\n    }\n    throw new TypeError('The \"circularValue\" argument must be of type string or the value null or undefined')\n  }\n  return '\"[Circular]\"'\n}\n\nfunction getBooleanOption (options, key) {\n  let value\n  if (hasOwnProperty.call(options, key)) {\n    value = options[key]\n    if (typeof value !== 'boolean') {\n      throw new TypeError(`The \"${key}\" argument must be of type boolean`)\n    }\n  }\n  return value === undefined ? true : value\n}\n\nfunction getPositiveIntegerOption (options, key) {\n  let value\n  if (hasOwnProperty.call(options, key)) {\n    value = options[key]\n    if (typeof value !== 'number') {\n      throw new TypeError(`The \"${key}\" argument must be of type number`)\n    }\n    if (!Number.isInteger(value)) {\n      throw new TypeError(`The \"${key}\" argument must be an integer`)\n    }\n    if (value < 1) {\n      throw new RangeError(`The \"${key}\" argument must be >= 1`)\n    }\n  }\n  return value === undefined ? Infinity : value\n}\n\nfunction getItemCount (number) {\n  if (number === 1) {\n    return '1 item'\n  }\n  return `${number} items`\n}\n\nfunction getUniqueReplacerSet (replacerArray) {\n  const replacerSet = new Set()\n  for (const value of replacerArray) {\n    if (typeof value === 'string' || typeof value === 'number') {\n      replacerSet.add(String(value))\n    }\n  }\n  return replacerSet\n}\n\nfunction getStrictOption (options) {\n  if (hasOwnProperty.call(options, 'strict')) {\n    const value = options.strict\n    if (typeof value !== 'boolean') {\n      throw new TypeError('The \"strict\" argument must be of type boolean')\n    }\n    if (value) {\n      return (value) => {\n        let message = `Object can not safely be stringified. Received type ${typeof value}`\n        if (typeof value !== 'function') message += ` (${value.toString()})`\n        throw new Error(message)\n      }\n    }\n  }\n}\n\nfunction configure (options) {\n  options = { ...options }\n  const fail = getStrictOption(options)\n  if (fail) {\n    if (options.bigint === undefined) {\n      options.bigint = false\n    }\n    if (!('circularValue' in options)) {\n      options.circularValue = Error\n    }\n  }\n  const circularValue = getCircularValueOption(options)\n  const bigint = getBooleanOption(options, 'bigint')\n  const deterministic = getBooleanOption(options, 'deterministic')\n  const maximumDepth = getPositiveIntegerOption(options, 'maximumDepth')\n  const maximumBreadth = getPositiveIntegerOption(options, 'maximumBreadth')\n\n  function stringifyFnReplacer (key, parent, stack, replacer, spacer, indentation) {\n    let value = parent[key]\n\n    if (typeof value === 'object' && value !== null && typeof value.toJSON === 'function') {\n      value = value.toJSON(key)\n    }\n    value = replacer.call(parent, key, value)\n\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        let res = ''\n        let join = ','\n        const originalIndentation = indentation\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          if (spacer !== '') {\n            indentation += spacer\n            res += `\\n${indentation}`\n            join = `,\\n${indentation}`\n          }\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyFnReplacer(String(i), value, stack, replacer, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyFnReplacer(String(i), value, stack, replacer, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          if (spacer !== '') {\n            res += `\\n${originalIndentation}`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        let whitespace = ''\n        let separator = ''\n        if (spacer !== '') {\n          indentation += spacer\n          join = `,\\n${indentation}`\n          whitespace = ' '\n        }\n        const maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (deterministic && !isTypedArrayWithEntries(value)) {\n          keys = insertSort(keys)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifyFnReplacer(key, value, stack, replacer, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}:${whitespace}${tmp}`\n            separator = join\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\":${whitespace}\"${getItemCount(removedKeys)} not stringified\"`\n          separator = join\n        }\n        if (spacer !== '' && separator.length > 1) {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifyArrayReplacer (key, value, stack, replacer, spacer, indentation) {\n    if (typeof value === 'object' && value !== null && typeof value.toJSON === 'function') {\n      value = value.toJSON(key)\n    }\n\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        const originalIndentation = indentation\n        let res = ''\n        let join = ','\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          if (spacer !== '') {\n            indentation += spacer\n            res += `\\n${indentation}`\n            join = `,\\n${indentation}`\n          }\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyArrayReplacer(String(i), value[i], stack, replacer, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyArrayReplacer(String(i), value[i], stack, replacer, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          if (spacer !== '') {\n            res += `\\n${originalIndentation}`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n        stack.push(value)\n        let whitespace = ''\n        if (spacer !== '') {\n          indentation += spacer\n          join = `,\\n${indentation}`\n          whitespace = ' '\n        }\n        let separator = ''\n        for (const key of replacer) {\n          const tmp = stringifyArrayReplacer(key, value[key], stack, replacer, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}:${whitespace}${tmp}`\n            separator = join\n          }\n        }\n        if (spacer !== '' && separator.length > 1) {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifyIndent (key, value, stack, spacer, indentation) {\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (typeof value.toJSON === 'function') {\n          value = value.toJSON(key)\n          // Prevent calling `toJSON` again.\n          if (typeof value !== 'object') {\n            return stringifyIndent(key, value, stack, spacer, indentation)\n          }\n          if (value === null) {\n            return 'null'\n          }\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n        const originalIndentation = indentation\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          indentation += spacer\n          let res = `\\n${indentation}`\n          const join = `,\\n${indentation}`\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyIndent(String(i), value[i], stack, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyIndent(String(i), value[i], stack, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          res += `\\n${originalIndentation}`\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        indentation += spacer\n        const join = `,\\n${indentation}`\n        let res = ''\n        let separator = ''\n        let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (isTypedArrayWithEntries(value)) {\n          res += stringifyTypedArray(value, join, maximumBreadth)\n          keys = keys.slice(value.length)\n          maximumPropertiesToStringify -= value.length\n          separator = join\n        }\n        if (deterministic) {\n          keys = insertSort(keys)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifyIndent(key, value[key], stack, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}: ${tmp}`\n            separator = join\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\": \"${getItemCount(removedKeys)} not stringified\"`\n          separator = join\n        }\n        if (separator !== '') {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifySimple (key, value, stack) {\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (typeof value.toJSON === 'function') {\n          value = value.toJSON(key)\n          // Prevent calling `toJSON` again\n          if (typeof value !== 'object') {\n            return stringifySimple(key, value, stack)\n          }\n          if (value === null) {\n            return 'null'\n          }\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        let res = ''\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifySimple(String(i), value[i], stack)\n            res += tmp !== undefined ? tmp : 'null'\n            res += ','\n          }\n          const tmp = stringifySimple(String(i), value[i], stack)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `,\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        let separator = ''\n        let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (isTypedArrayWithEntries(value)) {\n          res += stringifyTypedArray(value, ',', maximumBreadth)\n          keys = keys.slice(value.length)\n          maximumPropertiesToStringify -= value.length\n          separator = ','\n        }\n        if (deterministic) {\n          keys = insertSort(keys)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifySimple(key, value[key], stack)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}:${tmp}`\n            separator = ','\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\":\"${getItemCount(removedKeys)} not stringified\"`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringify (value, replacer, space) {\n    if (arguments.length > 1) {\n      let spacer = ''\n      if (typeof space === 'number') {\n        spacer = ' '.repeat(Math.min(space, 10))\n      } else if (typeof space === 'string') {\n        spacer = space.slice(0, 10)\n      }\n      if (replacer != null) {\n        if (typeof replacer === 'function') {\n          return stringifyFnReplacer('', { '': value }, [], replacer, spacer, '')\n        }\n        if (Array.isArray(replacer)) {\n          return stringifyArrayReplacer('', value, [], getUniqueReplacerSet(replacer), spacer, '')\n        }\n      }\n      if (spacer.length !== 0) {\n        return stringifyIndent('', value, [], spacer, '')\n      }\n    }\n    return stringifySimple('', value, [])\n  }\n\n  return stringify\n}\n","export const SyncActionDefinition = {\n  \"site\": {\n    \"list\": \"0\",\n    \"group\": \"1\",\n    \"load\": \"2\",\n    \"update\": \"3\"\n  },\n  \"comp\": {\n    \"new\": \"4\",\n    \"list\": \"5\",\n    \"group\": \"6\",\n    \"load\": \"7\"\n  },\n  \"page\": {\n    \"list\": \"8\",\n    \"load\": \"9\",\n    \"cache\": \"10\"\n  },\n  \"yjs\": {\n    \"um\": \"11\",\n    \"sv_local\": \"12\",\n    \"diff_local\": \"13\",\n    \"sv_remote\": \"14\"\n  },\n  \"client\": {\n    \"info\": \"15\"\n  },\n  \"code\": {\n    \"load\": \"16\",\n    \"edit\": \"17\",\n    \"action\": \"18\"\n  }\n};\nexport const SyncActionPaths = {\n  \"0\": \"site.list\",\n  \"1\": \"site.group\",\n  \"2\": \"site.load\",\n  \"3\": \"site.update\",\n  \"4\": \"comp.new\",\n  \"5\": \"comp.list\",\n  \"6\": \"comp.group\",\n  \"7\": \"comp.load\",\n  \"8\": \"page.list\",\n  \"9\": \"page.load\",\n  \"10\": \"page.cache\",\n  \"11\": \"yjs.um\",\n  \"12\": \"yjs.sv_local\",\n  \"13\": \"yjs.diff_local\",\n  \"14\": \"yjs.sv_remote\",\n  \"15\": \"client.info\",\n  \"16\": \"code.load\",\n  \"17\": \"code.edit\",\n  \"18\": \"code.action\"\n};\n","import { ServerWebSocket } from \"bun\";\nimport { WSData } from \"../../../../pkgs/core/server/create\";\nimport { user } from \"../../../db/db\";\nimport { UserConf } from \"./entity/user\";\n\nexport enum SyncType {\n  ClientID,\n  UserID,\n  Event,\n  Action,\n  ActionResult,\n}\n\nexport type SyncConnection = {\n  user_id: string;\n  user: null | user;\n  client_id: string;\n  conf?: UserConf & { toJSON: () => UserConf };\n  ws: ServerWebSocket<WSData>;\n  msg: {\n    pending: Record<string, Promise<any>>;\n    resolve: Record<string, (result: any) => void>;\n  };\n};\n","import { createStore } from \"idb-keyval\";\nexport const initIDB = (user_id: string) => {\n  const store = createStore(`prasi-user-${user_id}`, \"default\");\n  return store;\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","export","_v1JsDefault","default","_v3JsDefault","_v4JsDefault","_v5JsDefault","_nilJsDefault","_versionJsDefault","_validateJsDefault","_stringifyJsDefault","_parseJsDefault","_v1Js","interopDefault","_v3Js","_v4Js","_v5Js","_nilJs","_versionJs","_validateJs","_stringifyJs","_parseJs","_regexJs","_regexJsDefault","uuid","test","e","t","n","r","__wbindgen_wasm_module","URL","Request","fetch","instance","o","s","Response","WebAssembly","instantiateStreaming","headers","console","warn","arrayBuffer","instantiate","Instance","wbg","c","y","w","b","a","constructor","f","u","l","m","malloc_u8","Uint8Array","memory","buffer","free_u8","codePointAt","TextEncoder","encodeInto","set","p","gzip_compress","gzip_decompress","error_message","error_message_len","TextDecoder","decode","deallocate_buffer","getBundleURL","bundleURL","getBaseURL","url","replace","value","matches","stack","match","getOrigin","cachedSetTimeout","cachedClearTimeout","currentQueue","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","runClearTimeout","marker","Item","array","noop","nextTick","args","Array","arguments","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","uid","HASH_UNDEFINED","INFINITY","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reEscapeChar","reIsHostCtor","freeGlobal","freeSelf","root","Function","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","exec","keys","IE_PROTO","funcToString","toString","hasOwnProperty","objectToString","reIsNative","RegExp","Symbol","splice","Map","getNative","nativeCreate","symbolProto","undefined","symbolToString","Hash","entries","index","clear","ListCache","MapCache","assocIndexOf","key","other","getMapData","map","type","data","__data__","isKeyable","object","tag","baseIsNative","isObject","pattern","isFunction","isHostObject","result","toSource","func","has","pop","stringToPath","memoize","string","baseToString","isSymbol","number","quote","resolver","TypeError","memoized","Cache","isArray","isObjectLike","path","defaultValue","baseGet","isKey","toKey","createId","init","getConstants","isCuid","sha3_512","sha3","defaultLength","bigLength","createEntropy","random","Math","entropy","floor","bufToBigInt","buf","values","BigInt","hash","input","slice","alphabet","from","String","fromCharCode","randomLetter","createFingerprint","globalObj","globals","substring","createCounter","count","initialCountMax","counter","fingerprint","firstLetter","time","Date","now","salt","hashInput","minLength","maxLength","regex","shake256","shake128","keccak_512","keccak_384","keccak_256","keccak_224","sha3_384","sha3_256","sha3_224","Keccak","keccakP","_assert_js_1","_u64_js_1","utils_js_1","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","j","SHA3_IOTA_H","SHA3_IOTA_L","split","rotlH","h","rotlBH","rotlSH","rotlL","rotlBL","rotlSL","rounds","B","Uint32Array","idx1","idx0","B0","B1","Th","Tl","curH","curL","shift","PI","fill","blockLen","suffix","outputLen","enableXOF","pos","posOut","finished","destroyed","state","state32","u32","keccak","update","exists","toBytes","take","min","finish","writeInto","out","bytes","bufferOut","subarray","xofInto","xof","digestInto","output","destroy","digest","_cloneInto","to","gen","wrapConstructor","genShake","wrapXOFConstructorWithOpts","opts","dkLen","Number","isSafeInteger","bool","lengths","includes","create","checkFinished","add5L","add5H","add4H","add4L","add3H","add3L","add","rotr32L","rotr32H","rotrBL","rotrBH","rotrSL","rotrSH","shrSL","shrSH","toBig","fromBig","U32_MASK64","_32n","le","lst","Ah","Al","_l","_h","Bh","Bl","Cl","low","Ch","Dl","Dh","El","Eh","randomBytes","wrapConstructorWithOpts","checkOpts","concatBytes","utf8ToBytes","asyncLoop","hexToBytes","bytesToHex","isLE","rotr","createView","u8","crypto_1","isBytes","arr","byteOffset","byteLength","DataView","word","hexes","_","padStart","hex","asciis","_0","_9","_A","_F","_a","_f","asciiToBase16","char","hl","al","ai","hi","n1","charCodeAt","n2","iters","tick","cb","ts","diff","str","encode","arrays","sum","pad","clone","toStr","defaults","assign","hashCons","hashC","msg","tmp","bytesLength","crypto","getRandomValues","treeCacheBuild","treeRebuild","_idbKeyval","_initCompLoad","_meta","_extractNav","_load","_edGlobal","_assignMitem","_pushTree","page_id","page_cache","preview","meta_cache","meta","item","initLoadComp","comps","comp","loaded","mode","load","comp_ids","sync","ids","filter","id_comp","cached","nav","store","snapshot","list","loadCompSnapshot","then","childs","genMeta","note","arg","document","activeElement","tagName","getAttribute","active","should_render_main","is_layout","site","layout","page","cur","k","v","mcomp","doc","getMap","icomp","toJSON","mroot","mitems","forEach","mitem","tree","loadComponent","visit","instance_id","jsx_prop","pushTreeNode","assignMitem","new_prop_jsx","mprops","prop_name","prop_val","Y","syncronize","root_id","defaultGetStoreFunc","_arrayLikeToArray","arr2","promisifyRequest","request","Promise","reject","oncomplete","onsuccess","onabort","onerror","error","createStore","dbName","storeName","indexedDB","open","onupgradeneeded","createObjectStore","dbp","txMode","callback","db","transaction","objectStore","defaultGetStore","customStore","put","setMany","getMany","all","updater","del","delete","delMany","eachCursor","openCursor","continue","getAllKeys","items","cursor","getAll","_ref","_ref2","_arrayWithHoles","_iterableToArrayLimit","_s","_e","_i","iterator","_arr","_n","_d","next","done","_unsupportedIterableToArray","minLen","_nonIterableRest","opt","_loaded","Set","shared","visit_component","component","vitem","set_meta","ignore_first_component","size","prop","props","content","_comp","_simplify","genComp","simplifyItemChild","comp_id","carg","is_root","root_instances","_instantiate","_walkProp","item_comp","instances","child","walkProp","each","startsWith","walkChild","_cuid2","_webUtils","newitem","deepClone","hidden","cprop","nprop","valueBuilt","jsxCalledBy","style","originalId","sort","idx","simplifyMeta","allmeta","smeta","extractNavigate","vi","found_nav","findBetween","navs","on_nav_loaded","urls","text","opener","closer","last","founds","startIndex","indexOf","end","found","loadcomp","updateComponentMeta","_wasmGzip","_isEditing","_build","Buffer","pending","Doc","applyUpdate","decompress","on_update","updated","bin","origin","yjs","sv_local","compress","diff_local","encodeStateAsUpdate","sv","isTextEditing","render","transact","fn","el","attributes","getNamedItem","instance_meta","mprop","mcontent","dim","adv","css","pmeta","metas","find","comp_meta","child_id","child_meta","AbsolutePosition","AbstractConnector","AbstractStruct","AbstractType","YArray","ContentAny","ContentBinary","ContentDeleted","ContentDoc","ContentEmbed","ContentFormat","ContentJSON","ContentString","ContentType","GC","ID","YMap","PermanentUserData","RelativePosition","Skip","Snapshot","YText","Transaction","UndoManager","UpdateDecoderV1","UpdateDecoderV2","UpdateEncoderV1","UpdateEncoderV2","YXmlElement","YXmlFragment","YXmlHook","YXmlText","YArrayEvent","YEvent","YMapEvent","YTextEvent","YXmlEvent","applyUpdateV2","cleanupYTextFormatting","compareIDs","compareRelativePositions","convertUpdateFormatV1ToV2","convertUpdateFormatV2ToV1","createAbsolutePositionFromRelativePosition","createDeleteSet","createDeleteSetFromStructStore","createDocFromSnapshot","createID","createRelativePositionFromJSON","createRelativePositionFromTypeIndex","createSnapshot","decodeRelativePosition","decodeSnapshot","decodeSnapshotV2","decodeStateVector","decodeUpdate","decodeUpdateV2","diffUpdate","diffUpdateV2","emptySnapshot","encodeRelativePosition","encodeSnapshot","encodeSnapshotV2","encodeStateAsUpdateV2","encodeStateVector","encodeStateVectorFromUpdate","encodeStateVectorFromUpdateV2","equalDeleteSets","equalSnapshots","findIndexSS","findRootTypeKey","getItem","getState","getTypeChildren","isDeleted","isParentOf","iterateDeletedStructs","logType","logUpdate","logUpdateV2","mergeUpdates","mergeUpdatesV2","obfuscateUpdate","obfuscateUpdateV2","parseUpdateMeta","parseUpdateMetaV2","readUpdate","readUpdateV2","relativePositionToJSON","snapshotContainsUpdate","tryGc","typeListToArraySnapshot","typeMapGetAllSnapshot","typeMapGetSnapshot","_observable","_array","_math","_map","_encoding","_decoding","_random","_promise","_buffer","_error","_binary","_function","_set","_logging","_time","_string","_iterator","_object","Observable","ydoc","awareness","DeleteItem","clock","DeleteSet","clients","ds","deletes","clientid","structs","iterateStructs","findIndexDS","dis","left","right","midindex","mid","midclock","client","sortAndMergeDeleteSet","dels","max","mergeDeleteSets","dss","merged","dssI","delsLeft","appendTo","addToDeleteSet","setIfUndefined","ss","dsitems","struct","deleted","writeDeleteSet","encoder","writeVarUint","restEncoder","resetDsCurVal","writeDsClock","writeDsLen","readDeleteSet","decoder","numClients","readVarUint","restDecoder","numberOfDeletes","dsField","readDsClock","readDsLen","readAndApplyDeleteSet","unappliedDS","clockEnd","splitItem","toUint8Array","ds1","ds2","deleteItems1","deleteItems2","di1","di2","generateNewClientId","uint32","guid","uuidv4","collectionid","gc","gcFilter","autoLoad","shouldLoad","clientID","share","StructStore","_transaction","_transactionCleanups","subdocs","_item","isLoaded","isSynced","whenLoaded","provideSyncedPromise","eventHandler","whenSynced","subdocsLoaded","getSubdocs","getSubdocGuids","TypeConstructor","_integrate","Constr","_start","_length","getArray","getText","getXmlFragment","subdoc","subdocsAdded","subdocsRemoved","eventName","DSDecoderV1","readLeftID","readRightID","readClient","readInfo","readUint8","readString","readVarString","readParentInfo","readTypeRef","readLen","readAny","readBuf","copyUint8Array","readVarUint8Array","readJSON","JSON","parse","readKey","DSDecoderV2","dsCurrVal","keyClockDecoder","IntDiffOptRleDecoder","clientDecoder","UintOptRleDecoder","leftClockDecoder","rightClockDecoder","infoDecoder","RleDecoder","stringDecoder","StringDecoder","parentInfoDecoder","typeRefDecoder","lenDecoder","read","keyClock","DSEncoderV1","createEncoder","writeLeftID","writeRightID","writeClient","writeInfo","info","writeUint8","writeString","writeVarString","writeParentInfo","isYKey","writeTypeRef","writeLen","writeAny","any","writeBuf","writeVarUint8Array","writeJSON","embed","stringify","writeKey","DSEncoderV2","unexpectedCase","keyMap","keyClockEncoder","IntDiffOptRleEncoder","clientEncoder","UintOptRleEncoder","leftClockEncoder","rightClockEncoder","infoEncoder","RleEncoder","stringEncoder","StringEncoder","parentInfoEncoder","typeRefEncoder","lenEncoder","writeUint8Array","write","writeStructs","startNewStructs","firstStruct","writeClientsStructs","_sm","sm","getStateVector","_clock","readClientsStructRefs","clientRefs","numOfStateUpdates","numberOfStructs","refs","BITS5","cantCopyParentInfo","BIT7","BIT8","BIT6","readItemContent","integrateStructs","clientsStructRefs","clientsStructRefsIds","getNextStructTarget","nextStructsTarget","curStructsTarget","restStructs","missingSV","updateMissingSv","mclock","stackHead","addStackToRestSS","unapplicableItems","offset","localClock","missing","getMissing","structRefs","integrate","writeStructsFromTransaction","beforeState","transactionOrigin","structDecoder","local","retry","pendingStructs","dsRest","pendingDs","pendingDSUpdate","createDecoder","dsRest2","YDecoder","writeStateAsUpdate","targetStateVector","encodedTargetStateVector","updates","readStateVector","ssLength","decodedState","writeStateVector","writeDocumentStateVector","encodeStateVectorV2","EventHandler","createEventHandler","addEventHandlerListener","removeEventHandlerListener","g","callEventHandlerListeners","arg0","arg1","callAll","writeID","readID","log","storeType","yusers","initUser","user","userDescription","addClientId","observe","event","changes","added","getContent","encodedDs","keysChanged","setUserMapping","users","_event","userOverwrite","_userDescription","yds","deleteSet","getUserByClientId","getUserByDeletedId","tname","assoc","rpos","json","createAbsolutePosition","createRelativePosition","typeid","countable","lastId","writeRelativePosition","writeVarInt","readRelativePosition","itemID","hasContent","readVarInt","uint8Array","rightID","typeID","followRedone","snap1","snap2","sv1","sv2","dsitems1","dsitems2","dsitem1","dsitem2","isVisible","splitSnapshotAffectedStructs","getItemCleanStart","originDoc","newDoc","lastStructIndex","snapshotContainsUpdateV2","updateDecoder","lazyDecoder","LazyStructReader","curr","mergedDS","lastStruct","addStruct","findIndexCleanStart","getItemCleanEnd","replaceStruct","newStruct","clockStart","afterState","changed","changedParentTypes","_mergeStructs","_needFormattingCleanup","writeUpdateMessageFromTransaction","addChangedTypeToTransaction","parentSub","tryToMergeWithLefts","mergeWith","tryGcDeleteSet","deleteItems","di","deleteItem","endDeleteItemClock","si","keep","tryMergeDeleteSet","mostRightIndexToCheck","cleanupTransactions","transactionCleanups","mergeStructs","fs","subs","itemtype","_callObserver","events","_dEH","target","currentTarget","_path","event1","event2","cleanupYTextAfterTransaction","beforeClock","firstChangePos","replacedStructPos","print","ORANGE","BOLD","UNBOLD","RED","_observers","removed","initialCall","finishCleanup","StackItem","deletions","insertions","clearUndoManagerStackItem","tr","um","stackItem","scope","some","keepItem","popStackItem","undoManager","eventType","_tr","itemsToRedo","itemsToDelete","performedChange","redone","redoItem","ignoreRemoteMapChanges","deleteFilter","subProps","_searchMarker","typeScope","captureTimeout","captureTransaction","trackedOrigins","addToScope","undoStack","redoStack","undoing","redoing","lastChange","afterTransactionHandler","stopCapturing","endClock","startClock","getUnixTime","didAdd","lastOp","changeEvent","ytypes","ytype","every","yt","addTrackedOrigin","removeTrackedOrigin","clearUndoStack","clearRedoStack","canUndo","canRedo","undoStackCleared","redoStackCleared","undo","redo","filterSkips","lazyStructReaderGenerator","LazyStructWriter","currClient","written","clientStructs","YEncoder","stopCounting","currClock","enc","writeBinaryEncoder","sliceStruct","leftItem","rightOrigin","updateDecoders","lazyStructDecoders","currWrite","updateEncoder","lazyStructEncoder","dec","dec1","dec2","clockDiff","currDecoder","firstClient","iterated","writeStructToLazyStructWriter","finishLazyStructWriting","lazyStructWriter","reader","svClock","flushLazyStructWriter","lazyWriter","partStructs","convertUpdateFormat","blockTransformer","createObfuscator","formatting","yxml","mapKeyCache","nodeNameCache","formattingKeyCache","formattingValueCache","block","nodeName","hookName","repeat","errorComputeChanges","_changes","_keys","_delta","getPathTo","action","oldValue","adds","prev","delta","packOp","insert","retain","unshift","globalSearchMarkerTimestamp","ArraySearchMarker","timestamp","refreshMarkerTimestamp","overwriteMarker","markPosition","searchMarker","reduce","pm","findMarker","yarray","abs","pindex","updateMarkerChanges","callTypeObservers","changedType","_eH","_copy","methodUnimplemented","_write","_encoder","_first","_parentSubs","observeDeep","unobserve","unobserveDeep","typeListSlice","start","cs","typeListToArray","typeListForEach","typeListMap","typeListCreateIterator","currentContent","currentContentIndex","typeListGet","typeListInsertGenericsAfter","referenceItem","ownClientId","jsonContent","packJsonContent","Boolean","ArrayBuffer","lengthExceeded","typeListInsertGenerics","typeListPushGenerics","maxMarker","currMarker","typeListDelete","startLength","typeMapDelete","typeMapSet","typeMapGet","val","typeMapGetAll","typeMapHas","createMapIterator","iteratorFilter","_prelimContent","toArray","parentSubs","YArrayRefID","ymap","iteratorMap","_value","YMapRefID","equalAttrs","equalFlat","ItemTextListPosition","currentAttributes","forward","updateCurrentAttributes","findNextPosition","findPosition","insertNegatedAttributes","currPos","negatedAttributes","nextFormat","format","minimizeAttributeChanges","insertAttributes","currentVal","insertText","_val","getLength","formatText","attr","newlines","cleanupFormattingGap","startAttributes","currAttributes","endFormats","cf","cleanups","reachedCurr","startAttrValue","cleanupContextlessFormattingGap","attrs","copy","needFullCleanup","afterClock","yText","_hasFormatting","deleteText","startAttrs","ytext","childListChanged","sub","oldAttributes","deleteLen","addOp","op","isEmpty","curVal","_pending","applyDelta","toDelta","sanitize","ins","prevSnapshot","computeYChange","ops","packStr","addAttributes","computeDelta","insertEmbed","removeAttribute","attributeName","setAttribute","attributeValue","getAttributes","YTextRefID","YXmlTreeWalker","_filter","_root","_currentNode","_firstCall","firstChild","first","createTreeWalker","querySelector","query","toUpperCase","element","querySelectorAll","xml","join","toDOM","_document","hooks","fragment","createDocumentFragment","_createAssociation","xmlType","insertBefore","insertAfter","ref","pc","findIndex","YXmlFragmentRefID","_prelimAttrs","nextSibling","prevSibling","stringBuilder","keysLen","toLocaleLowerCase","attrsString","hasAttribute","dom","createElement","appendChild","YXmlElementRefID","attributesChanged","hook","createDom","YXmlHookRefID","createTextNode","nestedNodes","node","YXmlTextRefID","encodingRef","isCountable","getRef","markDeleted","createDocFromOpts","_offset","_right","firstCharCode","typeRefs","_decoder","nextID","rightItem","isDeletedByUndoStack","redoitems","ownClientID","parentItem","parentType","leftTrace","rightTrace","nextClock","nextId","redoneItem","BIT2","isMarked","BIT4","BIT1","doKeep","BIT3","doDelete","conflictingItems","itemsBeforeOrigin","parentGCd","ykey","contentRefs","glo","importIdentifier","ObservableV2","_mapJs","_setJs","_arrayJs","observers","createT","flatten","unfold","fold","unique","uniqueBy","dest","src","acc","seed","folder","mapper","happened","mapped","ceil","imul","log10","log2","sqrt","isNaN","pow","exp10","sign","isNegativeZero","exp","Encoder","verifyLen","setUint8","writeUint16","setUint16","writeUint32","writeUint32BigEndian","setUint32","_writeVarStringNative","_writeVarStringPolyfill","writeTerminatedString","writeTerminatedUint8Array","writeOnDataView","writeFloat32","writeFloat64","writeBigInt64","writeBigUint64","IntDiffEncoder","RleIntDiffEncoder","IncUintOptRleEncoder","_mathJs","_numberJs","_binaryJs","_stringJs","cpos","cbuf","bufs","uint8arr","curPos","d","bufferLen","num","BITS8","BITS7","isNegative","BITS6","_strBuffer","_maxStrBSize","utf8TextEncoder","encodeUtf8","encodedString","unescape","encodeURIComponent","append","leftCopyLen","rightCopyLen","dview","setFloat32","setFloat64","setBigInt64","setBigUint64","floatTestBed","isFloat32","getFloat32","isInteger","BITS31","writer","flushUintOptRleEncoder","flushIntDiffOptRleEncoder","encodedDiff","sarr","lensE","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","LOWEST_INT32","HIGHEST_INT32","HIGHEST_UINT32","parseInt","countBits","BITS32","isFinite","BIT5","BIT9","BIT10","BIT11","BIT12","BIT13","BIT14","BIT15","BIT16","BIT17","BIT18","BIT19","BIT20","BIT21","BIT22","BIT23","BIT24","BIT25","BIT26","BIT27","BIT28","BIT29","BIT30","BIT31","BIT32","BITS0","BITS1","BITS2","BITS3","BITS4","BITS9","BITS10","BITS11","BITS12","BITS13","BITS14","BITS15","BITS16","BITS17","BITS18","BITS19","BITS20","BITS21","BITS22","BITS23","BITS24","BITS25","BITS26","BITS27","BITS28","BITS29","BITS30","fromCodePoint","MAX_UTF16_CHARACTER","trimLeft","fromCamelCase","utf8ByteLength","_encodeUtf8Polyfill","_encodeUtf8Native","_decodeUtf8Polyfill","utf8TextDecoder","_decodeUtf8Native","decodeUtf8","toLowerCase","trimLeftRegex","fromCamelCaseRegex","separator","remainingLen","bufPos","nextLen","decodeURIComponent","escape","fatal","ignoreBOM","remove","source","Decoder","readUint8Array","readTailAsUint8Array","skip8","readUint16","readUint32","readUint32BigEndian","peekUint8","peekUint16","peekUint32","peekVarUint","peekVarInt","_readVarStringPolyfill","_readVarStringNative","readTerminatedUint8Array","readTerminatedString","peekVarString","readFromDataView","readFloat32","readFloat64","readBigInt64","readBigUint64","IntDiffDecoder","RleIntDiffDecoder","IncUintOptRleDecoder","_errorJs","_encodingJs","errorUnexpectedEndOfArray","errorIntegerOutOfRange","newPos","view","uint","mult","dv","getFloat64","getBigInt64","getBigUint64","readAnyLookupTable","obj","spos","rand","uint53","oneOf","_webcrypto","uuidv4Template","subtle","createEmpty","resolveWith","until","wait","isPromise","_timeJs","reason","check","intervalResolution","startTime","hasTimeout","intervalHandle","setInterval","clearInterval","catch","finally","getDate","humanizeDuration","_metricJs","prefix","seconds","minutes","hours","days","yotta","zetta","exa","peta","tera","giga","mega","kilo","hecto","deca","deci","centi","milli","micro","nano","pico","femto","atto","zepto","yocto","prefixUp","prefixDown","baseMultiplier","nPow","createUint8ArrayFromLen","createUint8ArrayViewFromArrayBuffer","createUint8ArrayFromArrayBuffer","toBase64","fromBase64","toBase64UrlEncoded","fromBase64UrlEncoded","toHexString","fromHexString","encodeAny","decodeAny","shiftNBitsLeft","_environmentJs","_decodingJs","isBrowser","btoa","atob","replaceAll","base64","hlen","newBuf","bs","N","params","isNode","isMac","hasParam","getParam","getVariable","getConf","hasConf","production","supportsColor","_conditionsJs","_storageJs","_functionJs","release","navigator","platform","computeParams","pargs","currParamName","parg","location","search","kv","defaultVal","undefinedToNull","varStorage","forceColor","isOneOf","stdout","isTTY","onChange","offChange","_localStorage","setItem","newValue","usePolyfill","localStorage","addEventListener","removeEventListener","nop","equalityStrict","equalityFlat","equalityDeep","isString","isNumber","is","isTemplate","_objectJs","hasProperty","options","T","results","_k","_loggingCommonJs","BLUE","GREY","GREEN","PURPLE","UNCOLOR","printError","printImg","printImgBase64","group","groupCollapsed","groupEnd","printDom","printCanvas","vconsoles","VConsole","createVConsole","createModuleLogger","_pairJs","_domJs","_jsonJs","_eventloopJs","_browserStyleMap","computeLoggingArgs","strBuilder","styles","currentStyle","logArgs","mapToStyleString","computeNoColorLoggingArgs","vc","height","createNode","canvas","toDataURL","_computeLineSpans","spans","span","innerHTML","lineStyle","ccontainer","depth","collapsed","enqueue","triangleDown","triangleRight","nextContainer","nextLine","toggleAttribute","parentElement","Pair","createReversed","domParser","emitCustomEvent","setAttributes","setAttributesMap","addEventListeners","removeEventListeners","pairToStyleString","pairsToStyleString","getElementById","parseFragment","parseElement","replaceWith","ELEMENT_NODE","TEXT_NODE","CDATA_SECTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","checkNodeType","DOMParser","dispatchEvent","CustomEvent","children","nodes","width","pair","pairs","_parse","html","parseFromString","body","childNodes","firstElementChild","oldEl","newEl","nodeType","parentNode","interval","Animation","animationFrame","idleCallback","createDebouncer","_runQueue","createTimeoutClass","clearFunction","timeoutId","Timeout","Interval","requestAnimationFrame","cancelAnimationFrame","Idle","cancelIdleCallback","requestIdleCallback","timer","_symbolJs","loggingColors","nextColor","lastLoggingTime","_print","color","debugRegexVar","doLogging","timeNow","timeDiff","mapIterator","createIterator","fmap","viLoadSnapshot","applyEnv","_apiProxy","_apiProxyDef","_dbProxy","_codeLoader","api_url","config","apiURL","hostname","loadApiProxyDef","script","dbProxy","api","apiProxy","message","loadCode","site_tstamp","loadFrontEnd","loadTypings","id_site","site_exports","site_dts","site_dts_entry","responsiveVal","mobile","edRoute","reloadLayout","reloadPage","loadPageMetaCache","savePageMetaCache","_edSite","status","domain","loadSite","layout_id","remotePage","should_render","alert","reload","ui","syncing","idb_cache","cleaned_meta","_loadLegacy","_loadSnapshot","pathname","viLoadLegacy","_dynamicImport","_dynamicImportDefault","_arg","_db","findFirst","where","include","component_site","cg","js_compiled","viScriptArg","types","scopes","importModule","_general","vector","destructor","onload","revokeObjectURL","defer","absURL","basehost","toAbsoluteURL","cloneNode","href","blob","Blob","createObjectURL","head","isMobile","isDesktop","isEditor","Vi","_jsxRuntime","_react","_global","_render","_errorBox","site_id","render_stat","rs","on_status_changed","on_preload","comp_load","useGlobal","ViGlobal","siteurl","forceOriginal","site_url","prasiContext","siteUrl","protocol","host","preload","_urls","on_load","on_status_changes","enabled","init_local_effect","viLoad","useEffect","pages","jsx","ErrorBox","Suspense","ViRoot","ViRender","ViChild","_parts","_script","JS_CONFIG","debug","passprop","parent_key","rstat_meta","last_render","jsxs","className","spaces","js","ViScript","item_id","parts","viParts","Fragment","_reactUseErrorBoundary","withErrorBoundary","silent","useLocal","retrying","resetError","useErrorBoundary","errorInfo","onClick","ErrorBoundaryContext","_reactDefault","ErrorBoundary","Component","displayName","componentDidCatch","setState","onError","errorBoundaryContext","createContext","current","setError","useState","useRef","ctx","useMemo","Provider","WrappedComponent","WithErrorBoundary","useContext","useCallback","_gen","inherit","produceCSS","dangerouslySetInnerHTML","__html","text_props","_advanced","_background","_border","_dimension","_editor","_font","_layout","_padding","cx","cssLayout","cssPadding","cssDimension","editor","cssBorder","cssBackground","cssFont","hover","cssEditor","cssAdv","_responsiveVal","trim","bg","serverurl","_lodashGet","_lodashGetDefault","border","stroke","rounded","tl","bl","br","pick","notpx","wUnit","hUnit","glbFont","font","family","loadedFonts","fontName","_href","link","rel","defaultFont","whitespace","align","gap","wrap","padding","_evalProp","_evalScript","_pass","viEvalProps","viEvalScript","updatePropScope","script_keyed","fails","_props","_jsx","original_id","mjby","updatePropValueBuilt","replaceWithObject","replacement","self_props","conf","WeakSet","_api","code_build","_local","_passprop","Local","createViLocal","PassProp","createViPassProp","newElement","isValidElement","override_children","should_replace","new_childs","internal_key","sub_child","sub_replace","nc","_syncm","JsxProp","jprop","jsBuilt","tpl","editorLocalValue","parent_meta","effect","deps","modifyChild","script_pass","is_meta","cmeta","citem","ref_item","add_props","modify","passarg","_loading","Loading","backdrop","Element","window1","FUNC_TYPE","UNDEF_TYPE","OBJ_TYPE","STR_TYPE","MAJOR","MODEL","NAME","TYPE","VENDOR","VERSION","ARCHITECTURE","CONSOLE","MOBILE","TABLET","SMARTTV","WEARABLE","EMBEDDED","AMAZON","APPLE","ASUS","BLACKBERRY","BROWSER","CHROME","FIREFOX","GOOGLE","HUAWEI","MICROSOFT","MOTOROLA","OPERA","SAMSUNG","SHARP","SONY","XIAOMI","ZEBRA","FACEBOOK","CHROMIUM_OS","MAC_OS","extend","regexes","extensions","mergedRegexes","enumerize","enums","str1","str2","lowerize","rgxMapper","ua","q","strMapper","windowsVersionMap","cpu","device","engine","EDGE","os","UAParser","getResult","_navigator","_ua","userAgent","_uach","userAgentData","_rgxmap","_isSelfNav","getBrowser","_browser","brave","isBrave","getCPU","_cpu","getDevice","_device","standalone","maxTouchPoints","getEngine","_engine","getOS","_os","getUA","setUA","CPU","DEVICE","ENGINE","OS","define","amd","$","jQuery","Zepto","parser","registerSiteTypings","monacoTypings","iftext","_prismaExtend","_base","_prop","WeakMap","monaco","prasi_api","prasiApi","prismaTypes","prisma","api_types","apiTypes","languages","typescript","typescriptDefaults","setExtraLibs","filePath","loadText","propText","extractProp","siteTypes","apiPath","prismaExtendType","baseTypings","condition","uri","model","getModels","setValue","createModel","Uri","_lodashTrim","_lodashTrimDefault","propTypes","isReactComponent","$$typeof","const_or_type","recurseTypes","loadSession","edInitSync","_yjs","_wsClient","_edRoute","_radix3","_typings","route","session","username","findMany","is_deleted","is_default_layout","select","createRouter","arrpath","lookup","EmptySite","popup","sync_assigned","clientStartSync","user_id","opened","offline","shakehand","client_id","disconnected","reconnect","editor_start","site_updated","code_changes","remote_svlocal","diff_remote","sv_remote","_deepProxy","_hashWasm","_msgpackr","_safeStableStringify","_actionsDef","_type","_idb","packr","Packr","structuredClone","WS_CONFIG","reconnectTimeout","Proxy","receiver","removeItem","ws","idb","runtime","sendWs","raw","pack","formatBytes","send","initIDB","connect","DeepProxy","SyncActionDefinition","trapName","DEFAULT","PROXY","doAction","loadEventOffline","WebSocket","onopen","SyncType","UserID","onclose","onmessage","unpack","ClientID","Event","offlineEvents","saveEventOffline","ActionResult","argid","hargs","xxhash32","sargs","SyncActionPaths","readyState","OPEN","Action","decimals","parseFloat","toFixed","sizes","proxies","traps","getOwnPropertyDescriptors","Reflect","handler","descriptor","thisValue","parameters","proxy","adler32","argon2Verify","argon2d","argon2i","argon2id","bcrypt","bcryptVerify","blake2b","blake2s","blake3","crc32","crc32c","createAdler32","createBLAKE2b","createBLAKE2s","createBLAKE3","createCRC32","createCRC32C","createHMAC","createKeccak","createMD4","createMD5","createRIPEMD160","createSHA1","createSHA224","createSHA256","createSHA3","createSHA384","createSHA512","createSM3","createWhirlpool","createXXHash128","createXXHash3","createXXHash32","createXXHash64","md4","md5","pbkdf2","ripemd160","scrypt","sha1","sha224","sha256","sha384","sha512","sm3","whirlpool","xxhash128","xxhash3","xxhash64","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","adopt","SuppressedError","Mutex","mutex","lock","begin","dispatch","unlock","nodeBuffer","textEncoder","hexCharCodesToInt","writeHexToUInt8","getDigestHex","tmpBuffer","hashLength","nibble","getUInt8Buffer","isBuffer","isView","base64Chars","base64Lookup","encodeBase64","extraBytes","len2","triplet","charAt","getDecodeBase64Length","bufferLength","decodeBase64","encoded1","encoded2","encoded3","encoded4","wasmMutex","wasmModuleCache","WASMInterface","binary","wasmInstance","memoryView","initialized","getStateSize","getUint32","STATE_SIZE","loadWASMPromise","asm","promise","compile","bits","Hash_Init","updateUInt8Array","chunk","Hash_Update","digestChars","outputType","Hash_Final","isDataShort","MAX_HEAP","canSimplify","initParam","arrayOffset","Hash_GetBuffer","getMemory","writeMemory","getExports","setMemorySize","totalSize","Hash_SetMemorySize","save","stateOffset","Hash_GetState","stateLength","internalState","prefixedState","WASM_FUNC_HASH_LENGTH","overallLength","memoryBuffer","hexStringEqualsUInt8","strIndex","calculate","digestParam","Hash_Calculate","wasmJson$k","lockedCreate","wasm","mutex$l","wasmCache$l","blockSize","digestSize","wasmJson$j","mutex$k","wasmCache$k","validateBits$4","keyBuffer","outputBits","keyBits","outputSize","wasmJson$i","uint32View","int32LE","setInt32","hashFunc","blake512","blakeSmall","blake","ret","vp","partialBytesNeeded","argon2Internal","parallelism","iterations","password","hashType","getHashType","memorySize","secret","argon2Interface","initVector","initVectorView","lanes","segments","param","H0","lane","position","C","encodeResult","validateOptions$3","getHashParameters","encoded","parsedParameters","paramMap","validateVerifyOptions$1","hashStart","lastIndexOf","wasmJson$h","mutex$j","wasmCache$j","validateBits$3","wasmJson$g","mutex$i","wasmCache$i","validateBits$2","wasmJson$f","mutex$h","wasmCache$h","mutex$g","wasmCache$g","wasmJson$e","mutex$f","wasmCache$f","wasmJson$d","mutex$e","wasmCache$e","wasmJson$c","mutex$d","wasmCache$d","wasmJson$b","mutex$c","wasmCache$c","validateBits$1","mutex$b","wasmCache$b","validateBits","wasmJson$a","mutex$a","wasmCache$a","mutex$9","wasmCache$9","wasmJson$9","mutex$8","wasmCache$8","mutex$7","wasmCache$7","wasmJson$8","mutex$6","wasmCache$6","validateSeed$3","wasmJson$7","mutex$5","wasmCache$5","seedBuffer$2","validateSeed$2","writeSeed$2","high","seedLow","seedHigh","instanceBuffer","wasmJson$6","mutex$4","wasmCache$4","seedBuffer$1","validateSeed$1","writeSeed$1","wasmJson$5","mutex$3","wasmCache$3","seedBuffer","validateSeed","writeSeed","wasmJson$4","mutex$2","wasmCache$2","hasher","calculateHmac","keyBuf","calculateKeyBuffer","uintArr","opad","validateOptions$2","hashFunction","calculatePBKDF2","DK","block1","block1View","saltBuffer","saltUIntBuffer","destPos","hLen","U","wasmJson$3","isPowerOfTwo","validateOptions$1","costFactor","scryptInternal","SHA256Hasher","blockData","scryptInterface","VSize","XYSize","expensiveSalt","outputData","wasmJson$2","validateOptions","bcryptInternal","bcryptInterface","passwordBuffer","shouldEncode","validateHashCharacters","validateVerifyOptions","bcrypt_verify","wasmJson$1","mutex$1","wasmCache$1","wasmJson","wasmCache","_packJs","addExtension","NEVER","ALWAYS","DECIMAL_ROUND","DECIMAL_FIT","REUSE_BUFFER_MODE","_unpackJs","Unpackr","C1","unpackMultiple","FLOAT32_OPTIONS","clearSource","roundFloat32","isNativeAccelerationEnabled","_iteratorsJs","decodeIter","encodeIter","useRecords","mapsAsObjects","extensionClasses","keysTarget","targetView","safeEnd","writeStructSlots","RECORD_SYMBOL","setWriteStructSlots","RESET_BUFFER_MODE","RESERVE_START_SPACE","hasNodeBuffer","ByteArrayAllocate","allocUnsafeSlow","ByteArray","MAX_BUFFER_SIZE","bundledStrings","hasNonLatin","hasSharedUpdate","structures","referenceMap","utf8Write","isSequential","sequential","hasSharedStructures","saveStructures","maxSharedStructures","moreTypes","maxOwnStructures","useTwoByteRecords","sharedLimitId","maxStructureId","recordIdsToRemove","transitionsCount","serializationsSinceTransitionRebuild","encodeOptions","encodingError","dataView","bundleStrings","Infinity","uninitialized","_mergeStructures","getStructures","sharedLength","transitions","nextTransition","transition","lastNamedStructuresLength","randomAccessStructure","writeStruct","lastBundle","writeBundles","idsToInsert","incrementPosition","insertionPoint","stringsPosition","previous","makeRoom","serialized","insertIds","distanceToMove","lastEnd","copyWithin","resetStructures","returnBuffer","newSharedData","prepareStructures","isCompatible","packArray","headerSize","strLength","extStart","maxBytes","twoByte","c1","c2","strPosition","setInt16","useFloat32","xShifted","mult10","referee","writeObject","mapAsEmptyObject","entryValue","extension","writeResult","currentTargetView","currentPosition","writeExtensionData","writeFunction","largeBigIntToFloat","useBigIntExtension","alignedSign","byte","RangeError","encodeUndefinedAsNil","writePlainObject","variableMapSize","coercibleKeyAsNumber","safePrototype","objectOffset","writeRecord","progressiveRecords","wroteKeys","lastTransition","newTransitions","newRecord","insertNewRecord","recordId","__keys__","checkUseRecords","newSize","newBuffer","shouldShareStructure","nextOwnId","highByte","isShared","insertionOffset","mainTarget","mainPosition","mainSafeEnd","mainStart","keysPosition","newEnd","insertionPosition","newPosition","notifySharedUpdate","startTarget","useBuffer","clearSharedData","typedStructs","writeExtBuffer","typedArray","allocateForWrite","writeBuffer","writeStrings","Class","existingStructures","compatible","writeSlots","makeStructures","getPrototypeOf","C1Type","date","getTime","useTimestamp32","getMilliseconds","onInvalidDate","setAsEmptyObject","flags","typedArrays","defaultPackr","srcEnd","currentStructures","srcString","readStruct","onLoadedStructures","onSaveState","getPosition","checkedRead","loadStructures","setExtractor","setReadStruct","EMPTY_ARRAY","strings","stringPosition","currentUnpackr","srcStringStart","srcStringEnd","currentExtensions","defaultOptions","sequentialMode","inlineObjectReadThreshold","trusted","int64AsNumber","int64AsType","saveState","lastPosition","defaultUnpackr","loadedStructures","isFrozen","structure","existing","restoreStructures","lazy","postBundlePosition","jsonView","incomplete","token","createStructureReader","freezeData","freeze","shortStringInJS","longStringInJS","readFixedString","position1","position0","readBin","getUint16","readExt","multiplier","getInt8","getInt16","getInt32","recordDefinition","noBuffer","readString8","readString16","readString32","readArray","readMap","validName","firstId","readObject","createSecondByteReader","read0","readStringJS","extractStrings","headerLength","extraction","srcStringLength","units","byte1","byte2","byte3","unit","existingSrc","readOnlyJSString","copyBuffers","readPosition","keyCache","checkPosition","property","firstByte","existingStructure","errors","ReferenceError","refEntry","targetProperties","used","glbl","typeCode","typedArrayName","TEMP_BUNDLE","savedSrcEnd","savedPosition","savedStringPosition","savedSrcStringStart","savedSrcStringEnd","savedSrcString","savedStrings","savedReferenceMap","savedBundledStrings","savedSrc","savedStructures","savedStructuresContents","savedPackr","savedSequentialMode","dataSize","dataPosition","f32Array","Float32Array","u8Array","float32Number","updatedReadStruct","loadedStructs","packIter","unpackIter","objectIterator","packIterSync","asyncIterator","packIterAsync","bufferIterator","unpackr","yields","configure","strEscapeSequencesRegExp","strEscape","insertSort","currentValue","typedArrayPrototypeGetSymbolToStringTag","getOwnPropertyDescriptor","Int8Array","toStringTag","isTypedArrayWithEntries","stringifyTypedArray","maximumBreadth","getBooleanOption","getPositiveIntegerOption","getItemCount","fail","getStrictOption","strict","bigint","circularValue","getCircularValueOption","deterministic","maximumDepth","replacer","space","spacer","stringifyFnReplacer","indentation","originalIndentation","maximumValuesToStringify","removedKeys","keyLength","maximumPropertiesToStringify","stringifyArrayReplacer","getUniqueReplacerSet","replacerArray","replacerSet","stringifyIndent","stringifySimple","getCache","Constructor","getKey","getFromCache","_cache$traps$get","_cache$traps$get$get","trapNames","trapsWithKey","createHandlerContext","trapContext","parseParameters","createDeepProxy","trap","this","handlerContext","createTraps","defaultProxyHandler","checkTarget","_this","_handler","_proxy","addToCache"],"version":3,"file":"ed.55787c67.js.map"}