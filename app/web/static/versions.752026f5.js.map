{"mappings":";;;;;;;;;;;;;AAAA,0EAA0E;AAE1E,MAAM,wCAAkB;AACxB,IAAI;AAEG,SAAS,yCACd,QAA8C;IAE9C,qCAAe;AACjB;AAEO,eAAe,0CAAuB,OAAe;IAC1D,MAAM,WAAW,MAAM;IAEvB,MAAM,QACJ,YAAY,YAAY,SAAS,MAAM,GAAG,IAAI,SAAS,OAAO,CAAC;IACjE,IAAI,SAAS,GACX,MAAM,mCAAa,QAAQ,CAAC,MAAM;AAEtC;AAEA,eAAe;IACb,MAAM,aAAa,IAAI;IACvB,MAAM,UAAU,WAAW,IAAM,WAAW,KAAK,CAAC,YAAY;IAE9D,yEAAyE;IACzE,IAAI;QACF,MAAM,MAAM;QACZ,MAAM,WAAW,MAAM,MAAM,KAAK;YAAE,QAAQ,WAAW,MAAM;QAAC;QAC9D,IAAI,YAAY,SAAS,EAAE,EAAE;YAC3B,aAAa;YACb,MAAM,WAAW,AAAC,CAAA,MAAM,SAAS,IAAI,EAAC,EAAG,QAAQ;YAEjD,IAAI,YAAY,SAAS,MAAM,EAC7B,OAAO;QAEX;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;IAChB;IAEA,wDAAwD;IACxD,IAAI;QACF,MAAM,MAAM;QACZ,IAAI,WAAW,AAAC,CAAA,MAAM,MAAM,KAAK,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,GAAE,EAAG,QAAQ;QAChE,IAAI,UAAU;YACZ,WAAW,OAAO,IAAI,CAAC,UAAU,OAAO;YACxC,IAAI,SAAS,MAAM,EACjB,OAAO;QAEX;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;IAChB;IAEA,MAAM,IAAI;AACZ","sources":["src/render/editor/panel/script/esbuild/versions.ts"],"sourcesContent":["// This file manages the UI for the version picker in the top right corner\n\nconst versionsPromise = tryToFetchVersions();\nlet reloadWorker: (version: string) => Promise<Worker>;\n\nexport function setReloadWorkerCallback(\n  callback: (version: string) => Promise<Worker>\n): void {\n  reloadWorker = callback;\n}\n\nexport async function tryToSetCurrentVersion(version: string): Promise<void> {\n  const versions = await versionsPromise;\n\n  const index =\n    version === \"latest\" && versions.length ? 0 : versions.indexOf(version);\n  if (index >= 0) {\n    await reloadWorker(versions[index]);\n  }\n}\n\nasync function tryToFetchVersions(): Promise<string[]> {\n  const controller = new AbortController();\n  const timeout = setTimeout(() => controller.abort(\"Timeout\"), 5000);\n\n  // This is probably faster than the registry because it returns less data\n  try {\n    const url = \"https://data.jsdelivr.com/v1/package/npm/esbuild-wasm\";\n    const response = await fetch(url, { signal: controller.signal });\n    if (response && response.ok) {\n      clearTimeout(timeout);\n      const versions = (await response.json()).versions;\n\n      if (versions && versions.length) {\n        return versions;\n      }\n    }\n  } catch (err) {\n    console.error(err);\n  }\n\n  // Fall back to the npm registry if that service is down\n  try {\n    const url = \"https://registry.npmjs.org/esbuild-wasm\";\n    let versions = (await fetch(url).then((r) => r.json())).versions;\n    if (versions) {\n      versions = Object.keys(versions).reverse();\n      if (versions.length) {\n        return versions;\n      }\n    }\n  } catch (err) {\n    console.error(err);\n  }\n\n  throw new Error();\n}\n"],"names":[],"version":3,"file":"versions.752026f5.js.map"}