{"mappings":"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","sources":["src/render/editor/panel/manager/site/site-mgr.tsx","src/render/editor/panel/manager/site/site-form.tsx","src/utils/ui/form.style.ts","src/utils/ui/form/input.tsx"],"sourcesContent":["import { org } from \"dbgen\";\nimport { useGlobal, useLocal } from \"web-utils\";\nimport { Loading } from \"../../../../../utils/ui/loading\";\nimport { EditorGlobal } from \"../../../logic/global\";\nimport { SiteForm } from \"./site-form\";\n\nexport type SiteItem = {\n  id: string;\n  name: string;\n  domain: string;\n  id_org: null | string;\n};\n\nexport const SiteManager = () => {\n  const p = useGlobal(EditorGlobal, \"EDITOR\");\n  const local = useLocal({\n    edit: null as null | Partial<SiteItem>,\n    loading: true,\n    sites: [] as SiteItem[],\n    orgs: {} as Record<string, org>,\n    active_org: \"\",\n  });\n\n  const reloadSites = async () => {\n\n    const orgs = await db.org_user.findMany({\n      where: {\n        id_user: p.session.data.user.id,\n      },\n      select: {\n        org: true,\n      },\n    });\n\n    if (orgs) {\n      orgs.push({\n        org: {\n          id: \"15929f4c-88ea-4094-b487-a06539e822ca\",\n          name: \"prasi\",\n          created_at: null,\n          created_by: null,\n          updated_at: null,\n        },\n      });\n      for (const org of orgs) {\n        local.orgs[org.org.id] = org.org;\n      }\n      const sites = await db.site.findMany({\n        where: {\n          id_org: {\n            in: Object.keys(local.orgs),\n          },\n          is_deleted: false,\n        },\n        select: {\n          id_org: true,\n          id: true,\n          name: true,\n          responsive: true,\n          domain: true,\n        },\n      });\n      local.sites = sites;\n    }\n\n    local.loading = false;\n    local.render();\n  };\n\n  const boxClass =\n    \"flex flex-col items-start w-[200px] h-[100px] p-2 text-sm border cursor-pointer hover:bg-blue-100 ml-1 mb-1\";\n\n  const site_id = p.site.id;\n\n  if (!local.sites || (local.sites && local.sites.length === 0)) {\n    reloadSites();\n  }\n\n  return (\n    <>\n      <div\n        className=\"fixed inset-0 bg-black bg-opacity-10 cursor-pointer\"\n        onClick={() => {\n          p.manager.site = false;\n          p.render();\n        }}\n      ></div>\n      <div className=\"fixed inset-[50px] bg-white shadow-2xl\">\n        {local.loading ? (\n          <div className=\"flex w-full h-full items-center justify-center\">\n            <Loading note=\"site-mgr\" backdrop={false} />\n          </div>\n        ) : (\n          <div\n            className={cx(\n              \"relative w-full h-full pt-1\",\n              css`\n                contain: content;\n                overflow: auto;\n              `\n            )}\n          >\n            <div className=\"flex flex-col space-y-2\">\n              {Object.values(local.orgs).map((org) => {\n                return (\n                  <div className=\"flex flex-col\" key={org.id}>\n                    <div className=\"p-1 text-base capitalize\">{org.name}</div>\n                    <div className=\"flex items-start flex-wrap\">\n                      {(local.sites || []).map((e) => {\n                        if (e.id_org !== org.id) return null;\n\n                        return (\n                          <div\n                            key={e.id}\n                            className={cx(\n                              boxClass,\n                              \"justify-between transition-all\",\n                              site_id === e.id && \"border-4  border-blue-500\",\n                              css`\n                                .edit {\n                                  display: none;\n                                }\n\n                                &:hover {\n                                  .edit {\n                                    display: flex;\n                                  }\n                                }\n                              `\n                            )}\n                            onClick={() => {\n                              localStorage.removeItem(`prasi-site-${e.id}`);\n                              location.href = `/editor/${e.id}`;\n                            }}\n                          >\n                            <div>{e.name}</div>\n                            <div\n                              className={cx(\n                                \"edit bg-blue-200 hover:bg-blue-500 transition-all px-3 rounded-sm text-sm text-white\"\n                              )}\n                              onClick={(ev) => {\n                                ev.preventDefault();\n                                ev.stopPropagation();\n\n                                local.edit = e;\n                                local.render();\n                              }}\n                            >\n                              Edit\n                            </div>\n                          </div>\n                        );\n                      })}\n\n                      <div\n                        className={cx(\n                          boxClass,\n                          \"flex flex-col items-center justify-center space-y-1\"\n                        )}\n                        onClick={(ev) => {\n                          ev.preventDefault();\n                          ev.stopPropagation();\n\n                          local.active_org = org.id;\n                          local.edit = {};\n                          local.render();\n                        }}\n                      >\n                        <svg\n                          className=\"text-slate-500\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          fill=\"none\"\n                          viewBox=\"0 0 15 15\"\n                        >\n                          <path\n                            fill=\"currentColor\"\n                            fillRule=\"evenodd\"\n                            d=\"M7.5.877a6.623 6.623 0 100 13.246A6.623 6.623 0 007.5.877zM1.827 7.5a5.673 5.673 0 1111.346 0 5.673 5.673 0 01-11.346 0zM7.5 4a.5.5 0 01.5.5V7h2.5a.5.5 0 110 1H8v2.5a.5.5 0 01-1 0V8H4.5a.5.5 0 010-1H7V4.5a.5.5 0 01.5-.5z\"\n                            clipRule=\"evenodd\"\n                          ></path>\n                        </svg>\n                        <div className=\"text-sm text-slate-500\">\n                          Create New Site\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n        {local.edit && (\n          <SiteForm\n            onClose={() => {\n              local.edit = null;\n              local.active_org = \"\";\n              local.render();\n            }}\n            onSave={async () => {\n              local.edit = null;\n              local.render();\n              local.loading = true;\n              local.render();\n              await reloadSites();\n              local.loading = false;\n              local.render();\n            }}\n            site={local.edit}\n            group_id={local.active_org}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n","import { site } from \"dbgen\";\nimport { FC } from \"react\";\nimport { useGlobal, useLocal } from \"web-utils\";\nimport { EditorGlobal } from \"../../../logic/global\";\nimport { formStyle } from \"../../../../../utils/ui/form.style\";\nimport { Input } from \"../../../../../utils/ui/form/input\";\n\nexport const SiteForm: FC<{\n  site: Partial<site>;\n  onClose: () => void;\n  onSave: () => void;\n  group_id: string;\n}> = ({ site, onClose, onSave, group_id }) => {\n  const p = useGlobal(EditorGlobal, \"EDITOR\");\n  const local = useLocal({\n    init: false,\n    saving: false,\n    preventClose: false,\n  });\n  const form = useLocal({} as Partial<site>);\n\n  if (!local.init) {\n    local.init = true;\n    for (const [k, v] of Object.entries(site)) {\n      (form as any)[k] = v;\n    }\n  }\n\n  return (\n    <>\n      <div\n        className=\"absolute cursor-pointer inset-0 flex items-center justify-center\n         backdrop-blur cursor-pointer hover:backdrop-blur-sm transition-all\"\n        onPointerUp={() => {\n          if (!local.preventClose) {\n            onClose();\n          }\n          local.preventClose = false;\n          local.render();\n        }}\n      >\n        <form\n          onPointerDown={(e) => {\n            e.stopPropagation();\n            local.preventClose = true;\n            local.render();\n          }}\n          onPointerUp={(e) => {\n            e.stopPropagation();\n            local.preventClose = false;\n            local.render();\n          }}\n          onSubmit={async (e) => {\n            e.preventDefault();\n\n            if (form.name && p.session) {\n              local.saving = true;\n              local.render();\n              if (!form.id) {\n                try {\n                  await db.site.create({\n                    data: {\n                      name: form.name,\n                      favicon: \"\",\n                      domain: form.domain || \"\",\n                      id_user: p.session.data.user.id,\n                      id_org: group_id,\n                      responsive: form.responsive,\n                    },\n                  });\n                } catch (e) {\n                  alert(e);\n                }\n              } else {\n                await db.site.update({\n                  data: {\n                    name: form.name,\n                    domain: form.domain,\n                    responsive: form.responsive,\n                  },\n                  where: { id: form.id },\n                });\n              }\n              onSave();\n            }\n\n            local.saving = false;\n            local.render();\n          }}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n          className={cx(formStyle, \"bg-white shadow-2xl border\")}\n        >\n          <label>\n            <span>Name</span>\n            <Input\n              form={form}\n              autoFocus\n              name={\"name\"}\n              onBlur={() => {\n                if (!form.domain) {\n                  form.domain = (form.name || \"\")\n                    .toLowerCase()\n                    .replace(/[^a-z0-9\\-_\\.]/g, \"\");\n\n                  form.render();\n                }\n              }}\n            />\n          </label>\n          <label>\n            <span>Domain</span>\n            <Input\n              form={form}\n              name={\"domain\"}\n              onChange={(text) => {\n                return text.replace(/[^a-z0-9\\-_\\.]/g, \"\");\n              }}\n            />\n          </label>\n\n          <label>\n            <span>Responsive</span>\n            <select\n              value={form.responsive}\n              onChange={(e) => {\n                form.responsive = e.currentTarget.value as any;\n                local.render();\n              }}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"mobile-only\">Mobile Only</option>\n              <option value=\"desktop-only\">Desktop Only</option>\n            </select>\n          </label>\n\n          {form.id && (\n            <label>\n              <span>Site ID:</span>\n              <Input form={form} name=\"id\" disabled />\n            </label>\n          )}\n\n          <div className=\"flex\">\n            <button type=\"submit\" disabled={local.saving} className=\"flex-1\">\n              {local.saving ? \"Saving...\" : \"Save\"}\n            </button>\n            {form.id && (\n              <button\n                className=\"bg-red-600 w-[40px] flex justify-center items-center\"\n                onClick={async () => {\n                  if (confirm(\"Delete site cannot be undone. Are you sure ?\")) {\n                    if (\n                      prompt(\n                        \"Please type 'yes' (without quote) to confirm deletion: \"\n                      )?.toLowerCase() === \"yes\"\n                    ) {\n                      await db.site.update({\n                        where: {\n                          id: site.id,\n                        },\n                        data: {\n                          is_deleted: true,\n                        },\n                      });\n                      onSave();\n                    }\n                  }\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"15\"\n                  height=\"15\"\n                  fill=\"none\"\n                  viewBox=\"0 0 15 15\"\n                >\n                  <path\n                    fill=\"currentColor\"\n                    fillRule=\"evenodd\"\n                    d=\"M5.5 1a.5.5 0 000 1h4a.5.5 0 000-1h-4zM3 3.5a.5.5 0 01.5-.5h8a.5.5 0 010 1H11v8a1 1 0 01-1 1H5a1 1 0 01-1-1V4h-.5a.5.5 0 01-.5-.5zM5 4h5v8H5V4z\"\n                    clipRule=\"evenodd\"\n                  ></path>\n                </svg>\n              </button>\n            )}\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n","export const formStyle = css`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n\n  .title {\n    font-size: 18px;\n    display: flex;\n    flex-direction: column;\n  }\n\n  label {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin-bottom: 10px;\n\n    > span {\n      font-size: 14px;\n      margin-bottom: 2px;\n    }\n  }\n  \n  input,\n  select {\n    border: 3px solid black;\n    padding: 3px;\n    width: 300px;\n    font-size: 15px;\n\n    &:disabled {\n      color: #999;\n    }\n  }\n\n  button {\n    color: white;\n    padding: 5px;\n  }\n  button[type=\"submit\"] {\n    background: black;\n\n    &:disabled {\n      background: #999;\n    }\n  }\n`;\n","import { FC } from \"react\";\n\nexport const Input: FC<\n  Omit<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    \"form\" | \"name\" | \"onChange\"\n  > & {\n    form: Record<string, any> & { render: () => void };\n    name: string;\n    onChange?: (text: string) => string | void;\n  }\n> = (arg) => {\n  const prop: any = { ...arg };\n  const { form, name } = arg;\n  delete prop.form;\n  delete prop.name;\n\n  let onChange: ((text: string) => string) | null = null;\n  if (prop.onChange) {\n    onChange = prop.onChange;\n    delete prop.onChange;\n  }\n\n  return (\n    <input\n      value={form[name] || \"\"}\n      spellCheck={false}\n      onInput={(e) => {\n        form[name] = e.currentTarget.value;\n\n        if (onChange) {\n          const result = onChange(e.currentTarget.value);\n          if (typeof result !== \"undefined\") {\n            form[name] = result;\n          }\n        }\n\n        form.render();\n      }}\n      {...prop}\n    />\n  );\n};\n"],"names":[],"version":3,"file":"site-mgr.aa4495d1.js.map"}