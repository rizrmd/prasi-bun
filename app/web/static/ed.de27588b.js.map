{"mappings":"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","sources":["src/base/page/ed.tsx","src/render/editor/logic/global.ts"],"sourcesContent":["import { FC, useEffect } from \"react\";\nimport { page, useGlobal, useLocal } from \"web-utils\";\nimport { EditorGlobal } from \"../../render/editor/logic/global\";\nimport { Loading } from \"../../utils/ui/loading\";\n\nexport default page({\n  url: \"/editor/**\",\n  component: ({}) => {\n    const p = useGlobal(EditorGlobal, \"EDITOR\");\n\n    const local = useLocal({\n      loading: true,\n      session: null as any,\n      notfound: false,\n      init: false,\n    });\n    const site_id = params.site_id === \"_\" ? \"\" : params.site_id;\n    const page_id = params.page_id === \"_\" ? \"\" : params.page_id;\n\n    useEffect(() => {\n      if (!local.init) {\n        (async () => {\n          let ses: any = null;\n          try {\n            ses = JSON.parse(localStorage.getItem(\"prasi-session\") || \"\");\n          } catch (e) {}\n\n          await new Promise<void>(async (done) => {\n            try {\n              if (!!ses) {\n                done();\n              }\n              let e = await api.session();\n              if (!e) {\n                (window as any).redirectTo = location.pathname;\n                navigate(\"/login\");\n                localStorage.removeItem(\"prasi-session\");\n              } else {\n                localStorage.setItem(\"prasi-session\", JSON.stringify(e));\n              }\n              if (!ses) {\n                ses = e;\n                done();\n              }\n            } catch (e) {\n              console.error(e);\n            }\n          });\n\n          if (ses) {\n            local.session = ses;\n\n            if (!site_id) {\n              const res = await db.site.findFirst({\n                where: {\n                  is_deleted: false,\n                  org: {\n                    org_user: {\n                      some: { id_user: ses.data.user.id },\n                    },\n                  },\n                },\n                select: {\n                  id: true,\n                },\n              });\n              if (res) {\n                const page = await db.page.findFirst({\n                  where: {\n                    id_site: res.id,\n                    is_deleted: false,\n                  },\n                  select: {\n                    id: true,\n                  },\n                });\n                if (page) {\n                  local.loading = false;\n                  local.render();\n                  navigate(`/editor/${res.id}/${page.id}`);\n                  return;\n                }\n              } else {\n                local.loading = false;\n                local.render();\n                return;\n              }\n            } else if (!page_id) {\n              let res = await db.page.findFirst({\n                where: {\n                  id_site: site_id,\n                  is_deleted: false,\n                },\n                select: {\n                  id: true,\n                },\n              });\n\n              if (!res) {\n                res = await db.page.create({\n                  data: {\n                    content_tree: {\n                      childs: [],\n                      id: \"root\",\n                      type: \"root\",\n                    },\n                    name: \"home\",\n                    url: \"/\",\n                    id_site: site_id,\n                  },\n                });\n              }\n\n              if (res) {\n                local.loading = false;\n                local.render();\n                navigate(`/editor/${site_id}/${res.id}`);\n                return;\n              }\n            }\n          }\n\n          navigate(`/editor/${site_id}/${page_id}`);\n        })();\n      }\n    }, [local.init]);\n\n    return <Loading note=\"base-page\" />;\n  },\n});\n","import { FC, ReactElement, ReactNode } from \"react\";\nimport { createRouter } from \"radix3\";\nimport { CompDoc } from \"../../../base/global/content-editor\";\nimport { IContent, MContent, MPage } from \"../../../utils/types/general\";\nimport { IItem, MItem } from \"../../../utils/types/item\";\nimport { FNCompDef } from \"../../../utils/types/meta-fn\";\nimport { PRASI_COMPONENT } from \"../../../utils/types/render\";\nimport { IRoot } from \"../../../utils/types/root\";\nimport { LSite } from \"../../live/logic/global\";\nimport { ISection } from \"../../../utils/types/section\";\nimport { IText } from \"../../../utils/types/text\";\n\nexport type WithRequired<T, K extends keyof T> = T & { [P in K]-?: T[P] };\nexport type NodeMeta = { meta: ItemMeta; idx: number };\nexport type ItemMeta = {\n  mitem?: MContent;\n  item: IContent;\n  parent_id: string;\n  parent_comp?: WithRequired<ItemMeta, \"comp\"> & { item: IItem };\n  parent_prop?: ItemMeta;\n  scope?: any;\n  scopeAttached?: { meta: ItemMeta; value: any }[];\n  className: string;\n  elprop: any;\n  depth: number;\n  memoize?: {\n    Local: FC<any>;\n    PassProp: FC<any>;\n  };\n  comp?: {\n    id: string;\n    mcomp?: MItem;\n    propval?: any;\n    propvis?: Record<string, boolean>;\n    child_ids: Record<string, string>;\n  };\n};\n\nexport const EditorGlobal = {\n  /** ui */\n  mode: \"\" as \"desktop\" | \"mobile\",\n  status: \"init\" as\n    | \"init\"\n    | \"loading\"\n    | \"reload\"\n    | \"ready\"\n    | \"not-found\"\n    | \"error\"\n    | \"tree-rebuild\",\n  focused: \"\",\n  pendingRebuild: false,\n  localReloading: {} as Record<string, true>,\n  manager: {\n    page: false,\n    site: false,\n    comp: false,\n    compActionLabel: \"Pick\",\n    compCallback: (comp: any) => {},\n    compPreviewRendered: new Set<string>(),\n  },\n  script: {\n    siteActive: false,\n    siteTypes: {},\n    prop: null as null | {\n      name: string;\n      mode:\n        | \"instance\"\n        | \"master-value\"\n        | \"master-option\"\n        | \"master-visible\"\n        | \"master-gen\";\n    },\n    toolbar: null as ReactNode,\n    active: false,\n    type: \"js\" as \"js\" | \"css\" | \"html\",\n    db: null as any,\n    api: null as any,\n    onClose: undefined as undefined | (() => void),\n    doEdit: null as null | ((newval: string, all?: boolean) => Promise<void>),\n  },\n  item: {\n    active: \"\",\n    activeOriginalId: \"\",\n    hover: \"\",\n    sideHover: false,\n    selectMode: \"single\" as \"single\" | \"multi\",\n    selection: [] as string[],\n    copy: {\n      mode: \"single\" as \"single\" | \"multiple\",\n    },\n  },\n  preventTreeScroll: false,\n  softRender: {\n    tree: () => {},\n    page: () => {},\n    side: () => {},\n    addEl: () => {},\n    topR: () => {},\n    all() {\n      this.tree();\n      this.page();\n      this.side();\n      this.addEl();\n      this.topR();\n    },\n  },\n\n  /**  read-only */\n  session: { id: \"\", data: { user: { id: \"\", username: \"\" } } },\n  lsite: null as any,\n  site: {\n    id: \"\",\n    api_url: \"\",\n    api_prasi: {\n      port: \"\",\n      db: \"\",\n    },\n    responsive: \"all\" as \"all\" | \"mobile-only\" | \"desktop-only\",\n    domain: \"\",\n    name: \"\",\n    js: \"\",\n    js_compiled: \"\",\n  } as LSite,\n\n  layout: {\n    section: null as null | ISection,\n    content: null as null | IItem | IText,\n  },\n\n  site_dts: \"\",\n  page: null as null | {\n    id: string;\n    name: string;\n    url: string;\n    content_tree: IRoot;\n    js: string;\n    effects?: Record<string, boolean>;\n  },\n\n  /** content tree */\n  treeFlat: [] as {\n    id: string;\n    parent: string;\n    text: string;\n    data: { meta: ItemMeta; idx: number };\n  }[],\n  treeFlatTemp: [] as {\n    id: string;\n    parent: string;\n    text: string;\n    data: { meta: ItemMeta; idx: number };\n  }[],\n  treeMeta: {} as Record<string, ItemMeta>,\n\n  /** components */\n  comp: null as null | {\n    id: string;\n    instance_id?: string;\n    last: {\n      comp_id?: string;\n      active_id: string;\n      active_oid?: string;\n      instance_id?: string;\n      props?: Record<string, FNCompDef>;\n    }[];\n    props: Record<string, FNCompDef>;\n  },\n  comps: {\n    pending: {} as Record<string, Promise<PRASI_COMPONENT>>,\n    resolve: {} as Record<string, (comp: PRASI_COMPONENT) => void>,\n    doc: {} as Record<string, CompDoc>,\n  },\n  compProp: {\n    backToInstance: false,\n    edit: false,\n    inherit: true,\n  },\n  compDirectEdit: false,\n  compLoading: {} as Record<string, true>,\n  compInstance: {} as Record<string, Record<string, string>>,\n\n  /** routing */\n  pagePreload: {} as Record<string, true>,\n  route: createRouter<{\n    id: string;\n    url: string;\n  }>(),\n\n  /** write-only */\n  mpage: null as null | MPage,\n  mpageLoaded: null as null | ((mpage: MPage) => void),\n\n  /** connection */\n  ws: null as null | WebSocket,\n  wsPing: -1,\n  wsPingTs: 0,\n  wsPingInterval: null as any,\n  wsRetry: {\n    fast: false,\n    localIP: false,\n    disabled: false,\n    reconnecting: false,\n  },\n  ui: {\n    loading: null as null | ReactElement,\n    preload: null as null | ReactElement,\n    notfound: null as null | ReactElement,\n    error: null as null | ReactElement,\n  },\n};\n\nexport type PG = typeof EditorGlobal & { render: () => void };\n"],"names":[],"version":3,"file":"ed.de27588b.js.map"}