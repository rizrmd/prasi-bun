{"mappings":"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","sources":["src/utils/ui/dropdown.tsx","../../node_modules/react-virtuoso/dist/index.mjs"],"sourcesContent":["import { FC, ReactNode, useEffect } from \"react\";\nimport { Virtuoso as List, VirtuosoHandle } from \"react-virtuoso\";\nimport { useLocal } from \"web-utils\";\nimport { Popover } from \"./popover\";\n\ntype DropdownItem = { label: string; value: string } | string;\n\ntype DropdownExtProp = {\n  value?: string;\n  items?: DropdownItem[];\n  popover?: {\n    className?: string;\n    itemClassName?: string;\n    renderItem?: (val: DropdownItem, idx: number) => ReactNode;\n  };\n  onChange?: (value: string, idx: number, item: DropdownItem) => void;\n};\n\nexport const Dropdown: FC<\n  Omit<\n    React.DetailedHTMLProps<\n      React.HTMLAttributes<HTMLDivElement>,\n      HTMLDivElement\n    >,\n    keyof DropdownExtProp\n  > &\n    DropdownExtProp\n> = (prop) => {\n  const local = useLocal({\n    open: false,\n    search: \"\",\n    searchChanged: false,\n    status: \"init\" as \"init\" | \"ready\",\n    itemsCache: prop.items,\n    activeIdx: -1,\n    listEl: null as null | VirtuosoHandle,\n    listElTimeout: null as any,\n    scrolled: false,\n  });\n\n  useEffect(() => {\n    if (!local.open) {\n      local.scrolled = false;\n      local.render();\n    }\n  }, [local.open]);\n\n  const resetInputValue = () => {\n    if (prop.items) {\n      const val = prop.value || \"\";\n      let idx = 0;\n      for (const item of prop.items) {\n        if (typeof item === \"string\" && item === val) {\n          local.search = item;\n          local.activeIdx = idx;\n        } else if (typeof item === \"object\" && item.value === val) {\n          local.search = item.label;\n          local.activeIdx = idx;\n        }\n        local.searchChanged = false;\n        idx++;\n      }\n    }\n  };\n\n  if (local.status === \"init\" || prop.items !== local.itemsCache) {\n    local.status = \"ready\";\n    local.itemsCache = prop.items;\n    resetInputValue();\n  }\n\n  const elProp = { ...prop };\n  delete elProp[\"value\"];\n  delete elProp[\"items\"];\n  delete elProp[\"onChange\"];\n  delete elProp[\"popover\"];\n\n  let items = prop.items || [];\n  if (local.searchChanged) {\n    local.searchChanged = false;\n\n    const search = local.search.toLowerCase().replace(/\\W/, \"\");\n    if (search) {\n      items = [];\n      for (const item of prop.items || []) {\n        if (\n          typeof item === \"string\" &&\n          item.toLowerCase().replace(/\\W/, \"\").includes(search)\n        ) {\n          items.push(item);\n        } else if (\n          typeof item === \"object\" &&\n          (item.label.toLowerCase().replace(/\\W/, \"\").includes(search) ||\n            item.value.toLowerCase().replace(/\\W/, \"\").includes(search))\n        ) {\n          items.push(item);\n        }\n      }\n    }\n  }\n\n  return (\n    <Popover\n      open={local.open}\n      onOpenChange={(open) => {\n        local.open = open;\n        local.render();\n      }}\n      autoFocus={false}\n      placement=\"bottom-start\"\n      backdrop={false}\n      arrow={false}\n      offset={0}\n      popoverClassName={cx(\"bg-white border\", prop.popover?.className)}\n      content={\n        <>\n          {items.length > 0 ? (\n            <List\n              className={`${\n                items.length > 3\n                  ? \"min-h-[140px] max-h-[350px]\"\n                  : items.length === 3\n                  ? \"min-h-[85px]\"\n                  : items.length === 1\n                  ? \"min-h-[30px]\"\n                  : \"min-h-[57px]\"\n              } min-w-[200px] flex-1 w-full`}\n              data={items}\n              ref={(el) => {\n                if (el && !local.scrolled) {\n                  clearTimeout(local.listElTimeout);\n                  local.listElTimeout = setTimeout(() => {\n                    local.scrolled = true;\n                    local.listEl = el;\n                    el.scrollToIndex(local.activeIdx - 2);\n                  }, 50);\n                }\n              }}\n              itemContent={(idx, e) => {\n                return (\n                  <div\n                    key={typeof e === \"string\" ? e : e.value}\n                    className={cx(\n                      \"cursor-pointer\",\n                      prop.value === (typeof e === \"string\" ? e : e.value) &&\n                        \"active\",\n                      prop.popover?.itemClassName\n                        ? prop.popover?.itemClassName\n                        : \"hover:bg-blue-100 border-b px-2 whitespace-nowrap select-none\"\n                    )}\n                    onClick={() => {\n                      local.open = false;\n                      local.status === \"init\";\n                      if (prop.onChange) {\n                        prop.onChange(\n                          typeof e === \"string\" ? e : e.value,\n                          idx,\n                          e\n                        );\n                      }\n                      local.render();\n                    }}\n                  >\n                    {prop.popover?.renderItem\n                      ? prop.popover.renderItem(e, idx)\n                      : typeof e === \"string\"\n                      ? e\n                      : e.label}\n                  </div>\n                );\n              }}\n            ></List>\n          ) : (\n            <div className=\"min-h-[100px] min-w-[250px] flex-1 w-full\"></div>\n          )}\n        </>\n      }\n      {...elProp}\n      className={cx(\n        \"dropdown bg-white px-2 relative flex items-stretch\",\n        elProp.className\n      )}\n    >\n      <>\n        <div className=\"pointer-events-none absolute right-0 bottom-0 top-0 bg-white flex items-center justify-center w-[30px] \">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"15\"\n            height=\"15\"\n            fill=\"none\"\n            viewBox=\"0 0 15 15\"\n          >\n            <path\n              fill=\"currentColor\"\n              fillRule=\"evenodd\"\n              d=\"M3.135 6.158a.5.5 0 01.707-.023L7.5 9.565l3.658-3.43a.5.5 0 01.684.73l-4 3.75a.5.5 0 01-.684 0l-4-3.75a.5.5 0 01-.023-.707z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </svg>\n        </div>\n        <input\n          className={cx(\"cursor-pointer outline-none input flex-1\")}\n          type=\"string\"\n          placeholder={elProp.placeholder}\n          spellCheck={false}\n          value={local.search}\n          onChange={(e) => {\n            local.search = e.currentTarget.value;\n            local.searchChanged = true;\n            local.render();\n          }}\n          onFocus={() => {\n            local.open = true;\n            local.render();\n          }}\n        />\n      </>\n    </Popover>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nconst PUBLISH = 0;\nconst SUBSCRIBE = 1;\nconst RESET = 2;\nconst VALUE = 4;\nfunction compose(a, b) {\n  return (arg) => a(b(arg));\n}\nfunction thrush(arg, proc) {\n  return proc(arg);\n}\nfunction curry2to1(proc, arg1) {\n  return (arg2) => proc(arg1, arg2);\n}\nfunction curry1to0(proc, arg) {\n  return () => proc(arg);\n}\nfunction tap(arg, proc) {\n  proc(arg);\n  return arg;\n}\nfunction tup(...args) {\n  return args;\n}\nfunction call(proc) {\n  proc();\n}\nfunction always(value) {\n  return () => value;\n}\nfunction joinProc(...procs) {\n  return () => {\n    procs.map(call);\n  };\n}\nfunction isDefined(arg) {\n  return arg !== void 0;\n}\nfunction noop() {\n}\nfunction subscribe(emitter, subscription) {\n  return emitter(SUBSCRIBE, subscription);\n}\nfunction publish(publisher, value) {\n  publisher(PUBLISH, value);\n}\nfunction reset(emitter) {\n  emitter(RESET);\n}\nfunction getValue(depot) {\n  return depot(VALUE);\n}\nfunction connect(emitter, publisher) {\n  return subscribe(emitter, curry2to1(publisher, PUBLISH));\n}\nfunction handleNext(emitter, subscription) {\n  const unsub = emitter(SUBSCRIBE, (value) => {\n    unsub();\n    subscription(value);\n  });\n  return unsub;\n}\nfunction stream() {\n  const subscriptions = [];\n  return (action, arg) => {\n    switch (action) {\n      case RESET:\n        subscriptions.splice(0, subscriptions.length);\n        return;\n      case SUBSCRIBE:\n        subscriptions.push(arg);\n        return () => {\n          const indexOf = subscriptions.indexOf(arg);\n          if (indexOf > -1) {\n            subscriptions.splice(indexOf, 1);\n          }\n        };\n      case PUBLISH:\n        subscriptions.slice().forEach((subscription) => {\n          subscription(arg);\n        });\n        return;\n      default:\n        throw new Error(`unrecognized action ${action}`);\n    }\n  };\n}\nfunction statefulStream(initial) {\n  let value = initial;\n  const innerSubject = stream();\n  return (action, arg) => {\n    switch (action) {\n      case SUBSCRIBE:\n        const subscription = arg;\n        subscription(value);\n        break;\n      case PUBLISH:\n        value = arg;\n        break;\n      case VALUE:\n        return value;\n    }\n    return innerSubject(action, arg);\n  };\n}\nfunction eventHandler(emitter) {\n  let unsub;\n  let currentSubscription;\n  const cleanup = () => unsub && unsub();\n  return function(action, subscription) {\n    switch (action) {\n      case SUBSCRIBE:\n        if (subscription) {\n          if (currentSubscription === subscription) {\n            return;\n          }\n          cleanup();\n          currentSubscription = subscription;\n          unsub = subscribe(emitter, subscription);\n          return unsub;\n        } else {\n          cleanup();\n          return noop;\n        }\n      case RESET:\n        cleanup();\n        currentSubscription = null;\n        return;\n      default:\n        throw new Error(`unrecognized action ${action}`);\n    }\n  };\n}\nfunction streamFromEmitter(emitter) {\n  return tap(stream(), (stream2) => connect(emitter, stream2));\n}\nfunction statefulStreamFromEmitter(emitter, initial) {\n  return tap(statefulStream(initial), (stream2) => connect(emitter, stream2));\n}\nfunction combineOperators(...operators) {\n  return (subscriber) => {\n    return operators.reduceRight(thrush, subscriber);\n  };\n}\nfunction pipe(source, ...operators) {\n  const project = combineOperators(...operators);\n  return (action, subscription) => {\n    switch (action) {\n      case SUBSCRIBE:\n        return subscribe(source, project(subscription));\n      case RESET:\n        reset(source);\n        return;\n    }\n  };\n}\nfunction defaultComparator(previous, next) {\n  return previous === next;\n}\nfunction distinctUntilChanged(comparator = defaultComparator) {\n  let current;\n  return (done) => (next) => {\n    if (!comparator(current, next)) {\n      current = next;\n      done(next);\n    }\n  };\n}\nfunction filter(predicate) {\n  return (done) => (value) => {\n    predicate(value) && done(value);\n  };\n}\nfunction map(project) {\n  return (done) => compose(done, project);\n}\nfunction mapTo(value) {\n  return (done) => () => done(value);\n}\nfunction scan(scanner, initial) {\n  return (done) => (value) => done(initial = scanner(initial, value));\n}\nfunction skip(times) {\n  return (done) => (value) => {\n    times > 0 ? times-- : done(value);\n  };\n}\nfunction throttleTime(interval) {\n  let currentValue = null;\n  let timeout;\n  return (done) => (value) => {\n    currentValue = value;\n    if (timeout) {\n      return;\n    }\n    timeout = setTimeout(() => {\n      timeout = void 0;\n      done(currentValue);\n    }, interval);\n  };\n}\nfunction debounceTime(interval) {\n  let currentValue;\n  let timeout;\n  return (done) => (value) => {\n    currentValue = value;\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(() => {\n      done(currentValue);\n    }, interval);\n  };\n}\nfunction withLatestFrom(...sources) {\n  const values = new Array(sources.length);\n  let called = 0;\n  let pendingCall = null;\n  const allCalled = Math.pow(2, sources.length) - 1;\n  sources.forEach((source, index) => {\n    const bit = Math.pow(2, index);\n    subscribe(source, (value) => {\n      const prevCalled = called;\n      called = called | bit;\n      values[index] = value;\n      if (prevCalled !== allCalled && called === allCalled && pendingCall) {\n        pendingCall();\n        pendingCall = null;\n      }\n    });\n  });\n  return (done) => (value) => {\n    const call2 = () => done([value].concat(values));\n    if (called === allCalled) {\n      call2();\n    } else {\n      pendingCall = call2;\n    }\n  };\n}\nfunction merge(...sources) {\n  return function(action, subscription) {\n    switch (action) {\n      case SUBSCRIBE:\n        return joinProc(...sources.map((source) => subscribe(source, subscription)));\n      case RESET:\n        return;\n      default:\n        throw new Error(`unrecognized action ${action}`);\n    }\n  };\n}\nfunction duc(source, comparator = defaultComparator) {\n  return pipe(source, distinctUntilChanged(comparator));\n}\nfunction combineLatest(...emitters) {\n  const innerSubject = stream();\n  const values = new Array(emitters.length);\n  let called = 0;\n  const allCalled = Math.pow(2, emitters.length) - 1;\n  emitters.forEach((source, index) => {\n    const bit = Math.pow(2, index);\n    subscribe(source, (value) => {\n      values[index] = value;\n      called = called | bit;\n      if (called === allCalled) {\n        publish(innerSubject, values);\n      }\n    });\n  });\n  return function(action, subscription) {\n    switch (action) {\n      case SUBSCRIBE:\n        if (called === allCalled) {\n          subscription(values);\n        }\n        return subscribe(innerSubject, subscription);\n      case RESET:\n        return reset(innerSubject);\n      default:\n        throw new Error(`unrecognized action ${action}`);\n    }\n  };\n}\nfunction system(constructor, dependencies = [], { singleton } = { singleton: true }) {\n  return {\n    id: id(),\n    constructor,\n    dependencies,\n    singleton\n  };\n}\nconst id = () => Symbol();\nfunction init(systemSpec) {\n  const singletons = /* @__PURE__ */ new Map();\n  const _init = ({ id: id2, constructor, dependencies, singleton }) => {\n    if (singleton && singletons.has(id2)) {\n      return singletons.get(id2);\n    }\n    const system2 = constructor(dependencies.map((e) => _init(e)));\n    if (singleton) {\n      singletons.set(id2, system2);\n    }\n    return system2;\n  };\n  return _init(systemSpec);\n}\nfunction omit(keys, obj) {\n  const result = {};\n  const index = {};\n  let idx = 0;\n  const len = keys.length;\n  while (idx < len) {\n    index[keys[idx]] = 1;\n    idx += 1;\n  }\n  for (const prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n}\nconst useIsomorphicLayoutEffect$2 = typeof document !== \"undefined\" ? React.useLayoutEffect : React.useEffect;\nfunction systemToComponent(systemSpec, map2, Root) {\n  const requiredPropNames = Object.keys(map2.required || {});\n  const optionalPropNames = Object.keys(map2.optional || {});\n  const methodNames = Object.keys(map2.methods || {});\n  const eventNames = Object.keys(map2.events || {});\n  const Context = React.createContext({});\n  function applyPropsToSystem(system2, props) {\n    if (system2[\"propsReady\"]) {\n      publish(system2[\"propsReady\"], false);\n    }\n    for (const requiredPropName of requiredPropNames) {\n      const stream2 = system2[map2.required[requiredPropName]];\n      publish(stream2, props[requiredPropName]);\n    }\n    for (const optionalPropName of optionalPropNames) {\n      if (optionalPropName in props) {\n        const stream2 = system2[map2.optional[optionalPropName]];\n        publish(stream2, props[optionalPropName]);\n      }\n    }\n    if (system2[\"propsReady\"]) {\n      publish(system2[\"propsReady\"], true);\n    }\n  }\n  function buildMethods(system2) {\n    return methodNames.reduce((acc, methodName) => {\n      acc[methodName] = (value) => {\n        const stream2 = system2[map2.methods[methodName]];\n        publish(stream2, value);\n      };\n      return acc;\n    }, {});\n  }\n  function buildEventHandlers(system2) {\n    return eventNames.reduce((handlers, eventName) => {\n      handlers[eventName] = eventHandler(system2[map2.events[eventName]]);\n      return handlers;\n    }, {});\n  }\n  const Component = React.forwardRef((propsWithChildren, ref) => {\n    const { children, ...props } = propsWithChildren;\n    const [system2] = React.useState(() => {\n      return tap(init(systemSpec), (system22) => applyPropsToSystem(system22, props));\n    });\n    const [handlers] = React.useState(curry1to0(buildEventHandlers, system2));\n    useIsomorphicLayoutEffect$2(() => {\n      for (const eventName of eventNames) {\n        if (eventName in props) {\n          subscribe(handlers[eventName], props[eventName]);\n        }\n      }\n      return () => {\n        Object.values(handlers).map(reset);\n      };\n    }, [props, handlers, system2]);\n    useIsomorphicLayoutEffect$2(() => {\n      applyPropsToSystem(system2, props);\n    });\n    React.useImperativeHandle(ref, always(buildMethods(system2)));\n    return React.createElement(\n      Context.Provider,\n      { value: system2 },\n      Root ? React.createElement(\n        Root,\n        omit([...requiredPropNames, ...optionalPropNames, ...eventNames], props),\n        children\n      ) : children\n    );\n  });\n  const usePublisher2 = (key) => {\n    return React.useCallback(curry2to1(publish, React.useContext(Context)[key]), [key]);\n  };\n  const useEmitterValue2 = (key) => {\n    const system2 = React.useContext(Context);\n    const source = system2[key];\n    const [value, setValue] = React.useState(curry1to0(getValue, source));\n    useIsomorphicLayoutEffect$2(\n      () => subscribe(source, (next) => {\n        if (next !== value) {\n          setValue(always(next));\n        }\n      }),\n      [source, value]\n    );\n    return value;\n  };\n  const useEmitter2 = (key, callback) => {\n    const context = React.useContext(Context);\n    const source = context[key];\n    useIsomorphicLayoutEffect$2(() => subscribe(source, callback), [callback, source]);\n  };\n  return {\n    Component,\n    usePublisher: usePublisher2,\n    useEmitterValue: useEmitterValue2,\n    useEmitter: useEmitter2\n  };\n}\nconst useIsomorphicLayoutEffect = typeof document !== \"undefined\" ? React.useLayoutEffect : React.useEffect;\nconst useIsomorphicLayoutEffect$1 = useIsomorphicLayoutEffect;\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[LogLevel2[\"DEBUG\"] = 0] = \"DEBUG\";\n  LogLevel2[LogLevel2[\"INFO\"] = 1] = \"INFO\";\n  LogLevel2[LogLevel2[\"WARN\"] = 2] = \"WARN\";\n  LogLevel2[LogLevel2[\"ERROR\"] = 3] = \"ERROR\";\n  return LogLevel2;\n})(LogLevel || {});\nconst CONSOLE_METHOD_MAP = {\n  [\n    0\n    /* DEBUG */\n  ]: \"debug\",\n  [\n    1\n    /* INFO */\n  ]: \"log\",\n  [\n    2\n    /* WARN */\n  ]: \"warn\",\n  [\n    3\n    /* ERROR */\n  ]: \"error\"\n};\nconst getGlobalThis = () => typeof globalThis === \"undefined\" ? window : globalThis;\nconst loggerSystem = system(\n  () => {\n    const logLevel = statefulStream(\n      3\n      /* ERROR */\n    );\n    const log = statefulStream((label, message, level = 1) => {\n      var _a;\n      const currentLevel = (_a = getGlobalThis()[\"VIRTUOSO_LOG_LEVEL\"]) != null ? _a : getValue(logLevel);\n      if (level >= currentLevel) {\n        console[CONSOLE_METHOD_MAP[level]](\n          \"%creact-virtuoso: %c%s %o\",\n          \"color: #0253b3; font-weight: bold\",\n          \"color: initial\",\n          label,\n          message\n        );\n      }\n    });\n    return {\n      log,\n      logLevel\n    };\n  },\n  [],\n  { singleton: true }\n);\nfunction useSizeWithElRef(callback, enabled = true) {\n  const ref = React.useRef(null);\n  let callbackRef = (_el) => {\n  };\n  if (typeof ResizeObserver !== \"undefined\") {\n    const observer = React.useMemo(() => {\n      return new ResizeObserver((entries) => {\n        const element = entries[0].target;\n        if (element.offsetParent !== null) {\n          callback(element);\n        }\n      });\n    }, [callback]);\n    callbackRef = (elRef) => {\n      if (elRef && enabled) {\n        observer.observe(elRef);\n        ref.current = elRef;\n      } else {\n        if (ref.current) {\n          observer.unobserve(ref.current);\n        }\n        ref.current = null;\n      }\n    };\n  }\n  return { ref, callbackRef };\n}\nfunction useSize(callback, enabled = true) {\n  return useSizeWithElRef(callback, enabled).callbackRef;\n}\nfunction useChangedListContentsSizes(callback, itemSize, enabled, scrollContainerStateCallback, log, gap, customScrollParent) {\n  const memoedCallback = React.useCallback(\n    (el) => {\n      const ranges = getChangedChildSizes(el.children, itemSize, \"offsetHeight\", log);\n      let scrollableElement = el.parentElement;\n      while (!scrollableElement.dataset[\"virtuosoScroller\"]) {\n        scrollableElement = scrollableElement.parentElement;\n      }\n      const windowScrolling = scrollableElement.lastElementChild.dataset[\"viewportType\"] === \"window\";\n      const scrollTop = customScrollParent ? customScrollParent.scrollTop : windowScrolling ? window.pageYOffset || document.documentElement.scrollTop : scrollableElement.scrollTop;\n      const scrollHeight = customScrollParent ? customScrollParent.scrollHeight : windowScrolling ? document.documentElement.scrollHeight : scrollableElement.scrollHeight;\n      const viewportHeight = customScrollParent ? customScrollParent.offsetHeight : windowScrolling ? window.innerHeight : scrollableElement.offsetHeight;\n      scrollContainerStateCallback({\n        scrollTop: Math.max(scrollTop, 0),\n        scrollHeight,\n        viewportHeight\n      });\n      gap == null ? void 0 : gap(resolveGapValue$1(\"row-gap\", getComputedStyle(el).rowGap, log));\n      if (ranges !== null) {\n        callback(ranges);\n      }\n    },\n    [callback, itemSize, log, gap, customScrollParent, scrollContainerStateCallback]\n  );\n  return useSizeWithElRef(memoedCallback, enabled);\n}\nfunction getChangedChildSizes(children, itemSize, field, log) {\n  const length = children.length;\n  if (length === 0) {\n    return null;\n  }\n  const results = [];\n  for (let i = 0; i < length; i++) {\n    const child = children.item(i);\n    if (!child || child.dataset.index === void 0) {\n      continue;\n    }\n    const index = parseInt(child.dataset.index);\n    const knownSize = parseFloat(child.dataset.knownSize);\n    const size = itemSize(child, field);\n    if (size === 0) {\n      log(\"Zero-sized element, this should not happen\", { child }, LogLevel.ERROR);\n    }\n    if (size === knownSize) {\n      continue;\n    }\n    const lastResult = results[results.length - 1];\n    if (results.length === 0 || lastResult.size !== size || lastResult.endIndex !== index - 1) {\n      results.push({ startIndex: index, endIndex: index, size });\n    } else {\n      results[results.length - 1].endIndex++;\n    }\n  }\n  return results;\n}\nfunction resolveGapValue$1(property, value, log) {\n  if (value !== \"normal\" && !(value == null ? void 0 : value.endsWith(\"px\"))) {\n    log(`${property} was not resolved to pixel value correctly`, value, LogLevel.WARN);\n  }\n  if (value === \"normal\") {\n    return 0;\n  }\n  return parseInt(value != null ? value : \"0\", 10);\n}\nfunction correctItemSize(el, dimension) {\n  return Math.round(el.getBoundingClientRect()[dimension]);\n}\nfunction approximatelyEqual(num1, num2) {\n  return Math.abs(num1 - num2) < 1.01;\n}\nfunction useScrollTop(scrollContainerStateCallback, smoothScrollTargetReached, scrollerElement, scrollerRefCallback = noop, customScrollParent) {\n  const scrollerRef = React.useRef(null);\n  const scrollTopTarget = React.useRef(null);\n  const timeoutRef = React.useRef(null);\n  const handler = React.useCallback(\n    (ev) => {\n      const el = ev.target;\n      const windowScroll = el === window || el === document;\n      const scrollTop = windowScroll ? window.pageYOffset || document.documentElement.scrollTop : el.scrollTop;\n      const scrollHeight = windowScroll ? document.documentElement.scrollHeight : el.scrollHeight;\n      const viewportHeight = windowScroll ? window.innerHeight : el.offsetHeight;\n      const call2 = () => {\n        scrollContainerStateCallback({\n          scrollTop: Math.max(scrollTop, 0),\n          scrollHeight,\n          viewportHeight\n        });\n      };\n      if (ev.suppressFlushSync) {\n        call2();\n      } else {\n        ReactDOM.flushSync(call2);\n      }\n      if (scrollTopTarget.current !== null) {\n        if (scrollTop === scrollTopTarget.current || scrollTop <= 0 || scrollTop === scrollHeight - viewportHeight) {\n          scrollTopTarget.current = null;\n          smoothScrollTargetReached(true);\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current);\n            timeoutRef.current = null;\n          }\n        }\n      }\n    },\n    [scrollContainerStateCallback, smoothScrollTargetReached]\n  );\n  React.useEffect(() => {\n    const localRef = customScrollParent ? customScrollParent : scrollerRef.current;\n    scrollerRefCallback(customScrollParent ? customScrollParent : scrollerRef.current);\n    handler({ target: localRef, suppressFlushSync: true });\n    localRef.addEventListener(\"scroll\", handler, { passive: true });\n    return () => {\n      scrollerRefCallback(null);\n      localRef.removeEventListener(\"scroll\", handler);\n    };\n  }, [scrollerRef, handler, scrollerElement, scrollerRefCallback, customScrollParent]);\n  function scrollToCallback(location) {\n    const scrollerElement2 = scrollerRef.current;\n    if (!scrollerElement2 || \"offsetHeight\" in scrollerElement2 && scrollerElement2.offsetHeight === 0) {\n      return;\n    }\n    const isSmooth = location.behavior === \"smooth\";\n    let offsetHeight;\n    let scrollHeight;\n    let scrollTop;\n    if (scrollerElement2 === window) {\n      scrollHeight = Math.max(correctItemSize(document.documentElement, \"height\"), document.documentElement.scrollHeight);\n      offsetHeight = window.innerHeight;\n      scrollTop = document.documentElement.scrollTop;\n    } else {\n      scrollHeight = scrollerElement2.scrollHeight;\n      offsetHeight = correctItemSize(scrollerElement2, \"height\");\n      scrollTop = scrollerElement2.scrollTop;\n    }\n    const maxScrollTop = scrollHeight - offsetHeight;\n    location.top = Math.ceil(Math.max(Math.min(maxScrollTop, location.top), 0));\n    if (approximatelyEqual(offsetHeight, scrollHeight) || location.top === scrollTop) {\n      scrollContainerStateCallback({ scrollTop, scrollHeight, viewportHeight: offsetHeight });\n      if (isSmooth) {\n        smoothScrollTargetReached(true);\n      }\n      return;\n    }\n    if (isSmooth) {\n      scrollTopTarget.current = location.top;\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null;\n        scrollTopTarget.current = null;\n        smoothScrollTargetReached(true);\n      }, 1e3);\n    } else {\n      scrollTopTarget.current = null;\n    }\n    scrollerElement2.scrollTo(location);\n  }\n  function scrollByCallback(location) {\n    scrollerRef.current.scrollBy(location);\n  }\n  return { scrollerRef, scrollByCallback, scrollToCallback };\n}\nconst domIOSystem = system(\n  () => {\n    const scrollContainerState = stream();\n    const scrollTop = stream();\n    const deviation = statefulStream(0);\n    const smoothScrollTargetReached = stream();\n    const statefulScrollTop = statefulStream(0);\n    const viewportHeight = stream();\n    const scrollHeight = stream();\n    const headerHeight = statefulStream(0);\n    const fixedHeaderHeight = statefulStream(0);\n    const fixedFooterHeight = statefulStream(0);\n    const footerHeight = statefulStream(0);\n    const scrollTo = stream();\n    const scrollBy = stream();\n    const scrollingInProgress = statefulStream(false);\n    connect(\n      pipe(\n        scrollContainerState,\n        map(({ scrollTop: scrollTop2 }) => scrollTop2)\n      ),\n      scrollTop\n    );\n    connect(\n      pipe(\n        scrollContainerState,\n        map(({ scrollHeight: scrollHeight2 }) => scrollHeight2)\n      ),\n      scrollHeight\n    );\n    connect(scrollTop, statefulScrollTop);\n    return {\n      // input\n      scrollContainerState,\n      scrollTop,\n      viewportHeight,\n      headerHeight,\n      fixedHeaderHeight,\n      fixedFooterHeight,\n      footerHeight,\n      scrollHeight,\n      smoothScrollTargetReached,\n      // signals\n      scrollTo,\n      scrollBy,\n      // state\n      statefulScrollTop,\n      deviation,\n      scrollingInProgress\n    };\n  },\n  [],\n  { singleton: true }\n);\nconst NIL_NODE = { lvl: 0 };\nfunction newAANode(k, v, lvl, l = NIL_NODE, r = NIL_NODE) {\n  return { k, v, lvl, l, r };\n}\nfunction empty(node) {\n  return node === NIL_NODE;\n}\nfunction newTree() {\n  return NIL_NODE;\n}\nfunction remove(node, key) {\n  if (empty(node))\n    return NIL_NODE;\n  const { k, l, r } = node;\n  if (key === k) {\n    if (empty(l)) {\n      return r;\n    } else if (empty(r)) {\n      return l;\n    } else {\n      const [lastKey, lastValue] = last(l);\n      return adjust(clone(node, { k: lastKey, v: lastValue, l: deleteLast(l) }));\n    }\n  } else if (key < k) {\n    return adjust(clone(node, { l: remove(l, key) }));\n  } else {\n    return adjust(clone(node, { r: remove(r, key) }));\n  }\n}\nfunction find(node, key) {\n  if (empty(node)) {\n    return;\n  }\n  if (key === node.k) {\n    return node.v;\n  } else if (key < node.k) {\n    return find(node.l, key);\n  } else {\n    return find(node.r, key);\n  }\n}\nfunction findMaxKeyValue(node, value, field = \"k\") {\n  if (empty(node)) {\n    return [-Infinity, void 0];\n  }\n  if (Number(node[field]) === value) {\n    return [node.k, node.v];\n  }\n  if (Number(node[field]) < value) {\n    const r = findMaxKeyValue(node.r, value, field);\n    if (r[0] === -Infinity) {\n      return [node.k, node.v];\n    } else {\n      return r;\n    }\n  }\n  return findMaxKeyValue(node.l, value, field);\n}\nfunction insert(node, k, v) {\n  if (empty(node)) {\n    return newAANode(k, v, 1);\n  }\n  if (k === node.k) {\n    return clone(node, { k, v });\n  } else if (k < node.k) {\n    return rebalance(clone(node, { l: insert(node.l, k, v) }));\n  } else {\n    return rebalance(clone(node, { r: insert(node.r, k, v) }));\n  }\n}\nfunction walkWithin(node, start, end) {\n  if (empty(node)) {\n    return [];\n  }\n  const { k, v, l, r } = node;\n  let result = [];\n  if (k > start) {\n    result = result.concat(walkWithin(l, start, end));\n  }\n  if (k >= start && k <= end) {\n    result.push({ k, v });\n  }\n  if (k <= end) {\n    result = result.concat(walkWithin(r, start, end));\n  }\n  return result;\n}\nfunction walk(node) {\n  if (empty(node)) {\n    return [];\n  }\n  return [...walk(node.l), { k: node.k, v: node.v }, ...walk(node.r)];\n}\nfunction last(node) {\n  return empty(node.r) ? [node.k, node.v] : last(node.r);\n}\nfunction deleteLast(node) {\n  return empty(node.r) ? node.l : adjust(clone(node, { r: deleteLast(node.r) }));\n}\nfunction clone(node, args) {\n  return newAANode(\n    args.k !== void 0 ? args.k : node.k,\n    args.v !== void 0 ? args.v : node.v,\n    args.lvl !== void 0 ? args.lvl : node.lvl,\n    args.l !== void 0 ? args.l : node.l,\n    args.r !== void 0 ? args.r : node.r\n  );\n}\nfunction isSingle(node) {\n  return empty(node) || node.lvl > node.r.lvl;\n}\nfunction rebalance(node) {\n  return split(skew(node));\n}\nfunction adjust(node) {\n  const { l, r, lvl } = node;\n  if (r.lvl >= lvl - 1 && l.lvl >= lvl - 1) {\n    return node;\n  } else if (lvl > r.lvl + 1) {\n    if (isSingle(l)) {\n      return skew(clone(node, { lvl: lvl - 1 }));\n    } else {\n      if (!empty(l) && !empty(l.r)) {\n        return clone(l.r, {\n          l: clone(l, { r: l.r.l }),\n          r: clone(node, {\n            l: l.r.r,\n            lvl: lvl - 1\n          }),\n          lvl\n        });\n      } else {\n        throw new Error(\"Unexpected empty nodes\");\n      }\n    }\n  } else {\n    if (isSingle(node)) {\n      return split(clone(node, { lvl: lvl - 1 }));\n    } else {\n      if (!empty(r) && !empty(r.l)) {\n        const rl = r.l;\n        const rlvl = isSingle(rl) ? r.lvl - 1 : r.lvl;\n        return clone(rl, {\n          l: clone(node, {\n            r: rl.l,\n            lvl: lvl - 1\n          }),\n          r: split(clone(r, { l: rl.r, lvl: rlvl })),\n          lvl: rl.lvl + 1\n        });\n      } else {\n        throw new Error(\"Unexpected empty nodes\");\n      }\n    }\n  }\n}\nfunction rangesWithin(node, startIndex, endIndex) {\n  if (empty(node)) {\n    return [];\n  }\n  const adjustedStart = findMaxKeyValue(node, startIndex)[0];\n  return toRanges(walkWithin(node, adjustedStart, endIndex));\n}\nfunction arrayToRanges(items, parser) {\n  const length = items.length;\n  if (length === 0) {\n    return [];\n  }\n  let { index: start, value } = parser(items[0]);\n  const result = [];\n  for (let i = 1; i < length; i++) {\n    const { index: nextIndex, value: nextValue } = parser(items[i]);\n    result.push({ start, end: nextIndex - 1, value });\n    start = nextIndex;\n    value = nextValue;\n  }\n  result.push({ start, end: Infinity, value });\n  return result;\n}\nfunction toRanges(nodes) {\n  return arrayToRanges(nodes, ({ k: index, v: value }) => ({ index, value }));\n}\nfunction split(node) {\n  const { r, lvl } = node;\n  return !empty(r) && !empty(r.r) && r.lvl === lvl && r.r.lvl === lvl ? clone(r, { l: clone(node, { r: r.l }), lvl: lvl + 1 }) : node;\n}\nfunction skew(node) {\n  const { l } = node;\n  return !empty(l) && l.lvl === node.lvl ? clone(l, { r: clone(node, { l: l.r }) }) : node;\n}\nfunction findIndexOfClosestSmallerOrEqual(items, value, comparator, start = 0) {\n  let end = items.length - 1;\n  while (start <= end) {\n    const index = Math.floor((start + end) / 2);\n    const item = items[index];\n    const match = comparator(item, value);\n    if (match === 0) {\n      return index;\n    }\n    if (match === -1) {\n      if (end - start < 2) {\n        return index - 1;\n      }\n      end = index - 1;\n    } else {\n      if (end === start) {\n        return index;\n      }\n      start = index + 1;\n    }\n  }\n  throw new Error(`Failed binary finding record in array - ${items.join(\",\")}, searched for ${value}`);\n}\nfunction findClosestSmallerOrEqual(items, value, comparator) {\n  return items[findIndexOfClosestSmallerOrEqual(items, value, comparator)];\n}\nfunction findRange(items, startValue, endValue, comparator) {\n  const startIndex = findIndexOfClosestSmallerOrEqual(items, startValue, comparator);\n  const endIndex = findIndexOfClosestSmallerOrEqual(items, endValue, comparator, startIndex);\n  return items.slice(startIndex, endIndex + 1);\n}\nconst recalcSystem = system(\n  () => {\n    const recalcInProgress = statefulStream(false);\n    return { recalcInProgress };\n  },\n  [],\n  { singleton: true }\n);\nfunction rangeIncludes(refRange) {\n  const { size, startIndex, endIndex } = refRange;\n  return (range) => {\n    return range.start === startIndex && (range.end === endIndex || range.end === Infinity) && range.value === size;\n  };\n}\nfunction affectedGroupCount(offset, groupIndices) {\n  let recognizedOffsetItems = 0;\n  let groupIndex = 0;\n  while (recognizedOffsetItems < offset) {\n    recognizedOffsetItems += groupIndices[groupIndex + 1] - groupIndices[groupIndex] - 1;\n    groupIndex++;\n  }\n  const offsetIsExact = recognizedOffsetItems === offset;\n  return groupIndex - (offsetIsExact ? 0 : 1);\n}\nfunction insertRanges(sizeTree, ranges) {\n  let syncStart = empty(sizeTree) ? 0 : Infinity;\n  for (const range of ranges) {\n    const { size, startIndex, endIndex } = range;\n    syncStart = Math.min(syncStart, startIndex);\n    if (empty(sizeTree)) {\n      sizeTree = insert(sizeTree, 0, size);\n      continue;\n    }\n    const overlappingRanges = rangesWithin(sizeTree, startIndex - 1, endIndex + 1);\n    if (overlappingRanges.some(rangeIncludes(range))) {\n      continue;\n    }\n    let firstPassDone = false;\n    let shouldInsert = false;\n    for (const { start: rangeStart, end: rangeEnd, value: rangeValue } of overlappingRanges) {\n      if (!firstPassDone) {\n        shouldInsert = rangeValue !== size;\n        firstPassDone = true;\n      } else {\n        if (endIndex >= rangeStart || size === rangeValue) {\n          sizeTree = remove(sizeTree, rangeStart);\n        }\n      }\n      if (rangeEnd > endIndex && endIndex >= rangeStart) {\n        if (rangeValue !== size) {\n          sizeTree = insert(sizeTree, endIndex + 1, rangeValue);\n        }\n      }\n    }\n    if (shouldInsert) {\n      sizeTree = insert(sizeTree, startIndex, size);\n    }\n  }\n  return [sizeTree, syncStart];\n}\nfunction initialSizeState() {\n  return {\n    offsetTree: [],\n    sizeTree: newTree(),\n    groupOffsetTree: newTree(),\n    lastIndex: 0,\n    lastOffset: 0,\n    lastSize: 0,\n    groupIndices: []\n  };\n}\nfunction indexComparator({ index: itemIndex }, index) {\n  return index === itemIndex ? 0 : index < itemIndex ? -1 : 1;\n}\nfunction offsetComparator({ offset: itemOffset }, offset) {\n  return offset === itemOffset ? 0 : offset < itemOffset ? -1 : 1;\n}\nfunction offsetPointParser(point) {\n  return { index: point.index, value: point };\n}\nfunction rangesWithinOffsets(tree, startOffset, endOffset, minStartIndex = 0) {\n  if (minStartIndex > 0) {\n    startOffset = Math.max(startOffset, findClosestSmallerOrEqual(tree, minStartIndex, indexComparator).offset);\n  }\n  return arrayToRanges(findRange(tree, startOffset, endOffset, offsetComparator), offsetPointParser);\n}\nfunction createOffsetTree(prevOffsetTree, syncStart, sizeTree, gap) {\n  let offsetTree = prevOffsetTree;\n  let prevIndex = 0;\n  let prevSize = 0;\n  let prevOffset = 0;\n  let startIndex = 0;\n  if (syncStart !== 0) {\n    startIndex = findIndexOfClosestSmallerOrEqual(offsetTree, syncStart - 1, indexComparator);\n    const offsetInfo = offsetTree[startIndex];\n    prevOffset = offsetInfo.offset;\n    const kv = findMaxKeyValue(sizeTree, syncStart - 1);\n    prevIndex = kv[0];\n    prevSize = kv[1];\n    if (offsetTree.length && offsetTree[startIndex].size === findMaxKeyValue(sizeTree, syncStart)[1]) {\n      startIndex -= 1;\n    }\n    offsetTree = offsetTree.slice(0, startIndex + 1);\n  } else {\n    offsetTree = [];\n  }\n  for (const { start: startIndex2, value } of rangesWithin(sizeTree, syncStart, Infinity)) {\n    const indexOffset = startIndex2 - prevIndex;\n    const aOffset = indexOffset * prevSize + prevOffset + indexOffset * gap;\n    offsetTree.push({\n      offset: aOffset,\n      size: value,\n      index: startIndex2\n    });\n    prevIndex = startIndex2;\n    prevOffset = aOffset;\n    prevSize = value;\n  }\n  return {\n    offsetTree,\n    lastIndex: prevIndex,\n    lastOffset: prevOffset,\n    lastSize: prevSize\n  };\n}\nfunction sizeStateReducer(state, [ranges, groupIndices, log, gap]) {\n  if (ranges.length > 0) {\n    log(\"received item sizes\", ranges, LogLevel.DEBUG);\n  }\n  const sizeTree = state.sizeTree;\n  let newSizeTree = sizeTree;\n  let syncStart = 0;\n  if (groupIndices.length > 0 && empty(sizeTree) && ranges.length === 2) {\n    const groupSize = ranges[0].size;\n    const itemSize = ranges[1].size;\n    newSizeTree = groupIndices.reduce((tree, groupIndex) => {\n      return insert(insert(tree, groupIndex, groupSize), groupIndex + 1, itemSize);\n    }, newSizeTree);\n  } else {\n    [newSizeTree, syncStart] = insertRanges(newSizeTree, ranges);\n  }\n  if (newSizeTree === sizeTree) {\n    return state;\n  }\n  const { offsetTree: newOffsetTree, lastIndex, lastSize, lastOffset } = createOffsetTree(state.offsetTree, syncStart, newSizeTree, gap);\n  return {\n    sizeTree: newSizeTree,\n    offsetTree: newOffsetTree,\n    lastIndex,\n    lastOffset,\n    lastSize,\n    groupOffsetTree: groupIndices.reduce((tree, index) => {\n      return insert(tree, index, offsetOf(index, newOffsetTree, gap));\n    }, newTree()),\n    groupIndices\n  };\n}\nfunction offsetOf(index, tree, gap) {\n  if (tree.length === 0) {\n    return 0;\n  }\n  const { offset, index: startIndex, size } = findClosestSmallerOrEqual(tree, index, indexComparator);\n  const itemCount = index - startIndex;\n  const top = size * itemCount + (itemCount - 1) * gap + offset;\n  return top > 0 ? top + gap : top;\n}\nfunction isGroupLocation(location) {\n  return typeof location.groupIndex !== \"undefined\";\n}\nfunction originalIndexFromLocation(location, sizes, lastIndex) {\n  if (isGroupLocation(location)) {\n    return sizes.groupIndices[location.groupIndex] + 1;\n  } else {\n    const numericIndex = location.index === \"LAST\" ? lastIndex : location.index;\n    let result = originalIndexFromItemIndex(numericIndex, sizes);\n    result = Math.max(0, result, Math.min(lastIndex, result));\n    return result;\n  }\n}\nfunction originalIndexFromItemIndex(itemIndex, sizes) {\n  if (!hasGroups(sizes)) {\n    return itemIndex;\n  }\n  let groupOffset = 0;\n  while (sizes.groupIndices[groupOffset] <= itemIndex + groupOffset) {\n    groupOffset++;\n  }\n  return itemIndex + groupOffset;\n}\nfunction hasGroups(sizes) {\n  return !empty(sizes.groupOffsetTree);\n}\nfunction sizeTreeToRanges(sizeTree) {\n  return walk(sizeTree).map(({ k: startIndex, v: size }, index, sizeArray) => {\n    const nextSize = sizeArray[index + 1];\n    const endIndex = nextSize ? nextSize.k - 1 : Infinity;\n    return { startIndex, endIndex, size };\n  });\n}\nconst SIZE_MAP = {\n  offsetHeight: \"height\",\n  offsetWidth: \"width\"\n};\nconst sizeSystem = system(\n  ([{ log }, { recalcInProgress }]) => {\n    const sizeRanges = stream();\n    const totalCount = stream();\n    const statefulTotalCount = statefulStreamFromEmitter(totalCount, 0);\n    const unshiftWith = stream();\n    const shiftWith = stream();\n    const firstItemIndex = statefulStream(0);\n    const groupIndices = statefulStream([]);\n    const fixedItemSize = statefulStream(void 0);\n    const defaultItemSize = statefulStream(void 0);\n    const itemSize = statefulStream((el, field) => correctItemSize(el, SIZE_MAP[field]));\n    const data = statefulStream(void 0);\n    const gap = statefulStream(0);\n    const initial = initialSizeState();\n    const sizes = statefulStreamFromEmitter(\n      pipe(sizeRanges, withLatestFrom(groupIndices, log, gap), scan(sizeStateReducer, initial), distinctUntilChanged()),\n      initial\n    );\n    const prevGroupIndices = statefulStreamFromEmitter(\n      pipe(\n        groupIndices,\n        distinctUntilChanged(),\n        scan((prev, curr) => ({ prev: prev.current, current: curr }), {\n          prev: [],\n          current: []\n        }),\n        map(({ prev }) => prev)\n      ),\n      []\n    );\n    connect(\n      pipe(\n        groupIndices,\n        filter((indexes) => indexes.length > 0),\n        withLatestFrom(sizes, gap),\n        map(([groupIndices2, sizes2, gap2]) => {\n          const groupOffsetTree = groupIndices2.reduce((tree, index, idx) => {\n            return insert(tree, index, offsetOf(index, sizes2.offsetTree, gap2) || idx);\n          }, newTree());\n          return {\n            ...sizes2,\n            groupIndices: groupIndices2,\n            groupOffsetTree\n          };\n        })\n      ),\n      sizes\n    );\n    connect(\n      pipe(\n        totalCount,\n        withLatestFrom(sizes),\n        filter(([totalCount2, { lastIndex }]) => {\n          return totalCount2 < lastIndex;\n        }),\n        map(([totalCount2, { lastIndex, lastSize }]) => {\n          return [\n            {\n              startIndex: totalCount2,\n              endIndex: lastIndex,\n              size: lastSize\n            }\n          ];\n        })\n      ),\n      sizeRanges\n    );\n    connect(fixedItemSize, defaultItemSize);\n    const trackItemSizes = statefulStreamFromEmitter(\n      pipe(\n        fixedItemSize,\n        map((size) => size === void 0)\n      ),\n      true\n    );\n    connect(\n      pipe(\n        defaultItemSize,\n        filter((value) => {\n          return value !== void 0 && empty(getValue(sizes).sizeTree);\n        }),\n        map((size) => [{ startIndex: 0, endIndex: 0, size }])\n      ),\n      sizeRanges\n    );\n    const listRefresh = streamFromEmitter(\n      pipe(\n        sizeRanges,\n        withLatestFrom(sizes),\n        scan(\n          ({ sizes: oldSizes }, [_, newSizes]) => {\n            return {\n              changed: newSizes !== oldSizes,\n              sizes: newSizes\n            };\n          },\n          { changed: false, sizes: initial }\n        ),\n        map((value) => value.changed)\n      )\n    );\n    subscribe(\n      pipe(\n        firstItemIndex,\n        scan(\n          (prev, next) => {\n            return { diff: prev.prev - next, prev: next };\n          },\n          { diff: 0, prev: 0 }\n        ),\n        map((val) => val.diff)\n      ),\n      (offset) => {\n        const { groupIndices: groupIndices2 } = getValue(sizes);\n        if (offset > 0) {\n          publish(recalcInProgress, true);\n          publish(unshiftWith, offset + affectedGroupCount(offset, groupIndices2));\n        } else if (offset < 0) {\n          const prevGroupIndicesValue = getValue(prevGroupIndices);\n          if (prevGroupIndicesValue.length > 0) {\n            offset -= affectedGroupCount(-offset, prevGroupIndicesValue);\n          }\n          publish(shiftWith, offset);\n        }\n      }\n    );\n    subscribe(pipe(firstItemIndex, withLatestFrom(log)), ([index, log2]) => {\n      if (index < 0) {\n        log2(\n          \"`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value\",\n          { firstItemIndex },\n          LogLevel.ERROR\n        );\n      }\n    });\n    const beforeUnshiftWith = streamFromEmitter(unshiftWith);\n    connect(\n      pipe(\n        unshiftWith,\n        withLatestFrom(sizes),\n        map(([unshiftWith2, sizes2]) => {\n          const groupedMode = sizes2.groupIndices.length > 0;\n          const initialRanges = [];\n          const defaultSize = sizes2.lastSize;\n          if (groupedMode) {\n            const firstGroupSize = find(sizes2.sizeTree, 0);\n            let prependedGroupItemsCount = 0;\n            let groupIndex = 0;\n            while (prependedGroupItemsCount < unshiftWith2) {\n              const theGroupIndex = sizes2.groupIndices[groupIndex];\n              const groupItemCount = sizes2.groupIndices.length === groupIndex + 1 ? Infinity : sizes2.groupIndices[groupIndex + 1] - theGroupIndex - 1;\n              initialRanges.push({\n                startIndex: theGroupIndex,\n                endIndex: theGroupIndex,\n                size: firstGroupSize\n              });\n              initialRanges.push({\n                startIndex: theGroupIndex + 1,\n                endIndex: theGroupIndex + 1 + groupItemCount - 1,\n                size: defaultSize\n              });\n              groupIndex++;\n              prependedGroupItemsCount += groupItemCount + 1;\n            }\n            const sizeTreeKV = walk(sizes2.sizeTree);\n            const firstGroupIsExpanded = prependedGroupItemsCount !== unshiftWith2;\n            if (firstGroupIsExpanded) {\n              sizeTreeKV.shift();\n            }\n            return sizeTreeKV.reduce(\n              (acc, { k: index, v: size }) => {\n                let ranges = acc.ranges;\n                if (acc.prevSize !== 0) {\n                  ranges = [\n                    ...acc.ranges,\n                    {\n                      startIndex: acc.prevIndex,\n                      endIndex: index + unshiftWith2 - 1,\n                      size: acc.prevSize\n                    }\n                  ];\n                }\n                return {\n                  ranges,\n                  prevIndex: index + unshiftWith2,\n                  prevSize: size\n                };\n              },\n              {\n                ranges: initialRanges,\n                prevIndex: unshiftWith2,\n                prevSize: 0\n              }\n            ).ranges;\n          }\n          return walk(sizes2.sizeTree).reduce(\n            (acc, { k: index, v: size }) => {\n              return {\n                ranges: [...acc.ranges, { startIndex: acc.prevIndex, endIndex: index + unshiftWith2 - 1, size: acc.prevSize }],\n                prevIndex: index + unshiftWith2,\n                prevSize: size\n              };\n            },\n            {\n              ranges: [],\n              prevIndex: 0,\n              prevSize: defaultSize\n            }\n          ).ranges;\n        })\n      ),\n      sizeRanges\n    );\n    const shiftWithOffset = streamFromEmitter(\n      pipe(\n        shiftWith,\n        withLatestFrom(sizes, gap),\n        map(([shiftWith2, { offsetTree }, gap2]) => {\n          const newFirstItemIndex = -shiftWith2;\n          return offsetOf(newFirstItemIndex, offsetTree, gap2);\n        })\n      )\n    );\n    connect(\n      pipe(\n        shiftWith,\n        withLatestFrom(sizes, gap),\n        map(([shiftWith2, sizes2, gap2]) => {\n          const groupedMode = sizes2.groupIndices.length > 0;\n          if (groupedMode) {\n            if (empty(sizes2.sizeTree)) {\n              return sizes2;\n            }\n            let newSizeTree = newTree();\n            const prevGroupIndicesValue = getValue(prevGroupIndices);\n            let removedItemsCount = 0;\n            let groupIndex = 0;\n            let groupOffset = 0;\n            while (removedItemsCount < -shiftWith2) {\n              groupOffset = prevGroupIndicesValue[groupIndex];\n              const groupItemCount = prevGroupIndicesValue[groupIndex + 1] - groupOffset - 1;\n              groupIndex++;\n              removedItemsCount += groupItemCount + 1;\n            }\n            newSizeTree = walk(sizes2.sizeTree).reduce((acc, { k, v }) => {\n              return insert(acc, Math.max(0, k + shiftWith2), v);\n            }, newSizeTree);\n            const aGroupIsShrunk = removedItemsCount !== -shiftWith2;\n            if (aGroupIsShrunk) {\n              const firstGroupSize = find(sizes2.sizeTree, groupOffset);\n              newSizeTree = insert(newSizeTree, 0, firstGroupSize);\n              const nextItemSize = findMaxKeyValue(sizes2.sizeTree, -shiftWith2 + 1)[1];\n              newSizeTree = insert(newSizeTree, 1, nextItemSize);\n            }\n            return {\n              ...sizes2,\n              sizeTree: newSizeTree,\n              ...createOffsetTree(sizes2.offsetTree, 0, newSizeTree, gap2)\n            };\n          } else {\n            const newSizeTree = walk(sizes2.sizeTree).reduce((acc, { k, v }) => {\n              return insert(acc, Math.max(0, k + shiftWith2), v);\n            }, newTree());\n            return {\n              ...sizes2,\n              sizeTree: newSizeTree,\n              ...createOffsetTree(sizes2.offsetTree, 0, newSizeTree, gap2)\n            };\n          }\n        })\n      ),\n      sizes\n    );\n    return {\n      // input\n      data,\n      totalCount,\n      sizeRanges,\n      groupIndices,\n      defaultItemSize,\n      fixedItemSize,\n      unshiftWith,\n      shiftWith,\n      shiftWithOffset,\n      beforeUnshiftWith,\n      firstItemIndex,\n      gap,\n      // output\n      sizes,\n      listRefresh,\n      statefulTotalCount,\n      trackItemSizes,\n      itemSize\n    };\n  },\n  tup(loggerSystem, recalcSystem),\n  { singleton: true }\n);\nconst SUPPORTS_SCROLL_TO_OPTIONS = typeof document !== \"undefined\" && \"scrollBehavior\" in document.documentElement.style;\nfunction normalizeIndexLocation(location) {\n  const result = typeof location === \"number\" ? { index: location } : location;\n  if (!result.align) {\n    result.align = \"start\";\n  }\n  if (!result.behavior || !SUPPORTS_SCROLL_TO_OPTIONS) {\n    result.behavior = \"auto\";\n  }\n  if (!result.offset) {\n    result.offset = 0;\n  }\n  return result;\n}\nconst scrollToIndexSystem = system(\n  ([\n    { sizes, totalCount, listRefresh, gap },\n    {\n      scrollingInProgress,\n      viewportHeight,\n      scrollTo,\n      smoothScrollTargetReached,\n      headerHeight,\n      footerHeight,\n      fixedHeaderHeight,\n      fixedFooterHeight\n    },\n    { log }\n  ]) => {\n    const scrollToIndex = stream();\n    const topListHeight = statefulStream(0);\n    let unsubscribeNextListRefresh = null;\n    let cleartTimeoutRef = null;\n    let unsubscribeListRefresh = null;\n    function cleanup() {\n      if (unsubscribeNextListRefresh) {\n        unsubscribeNextListRefresh();\n        unsubscribeNextListRefresh = null;\n      }\n      if (unsubscribeListRefresh) {\n        unsubscribeListRefresh();\n        unsubscribeListRefresh = null;\n      }\n      if (cleartTimeoutRef) {\n        clearTimeout(cleartTimeoutRef);\n        cleartTimeoutRef = null;\n      }\n      publish(scrollingInProgress, false);\n    }\n    connect(\n      pipe(\n        scrollToIndex,\n        withLatestFrom(sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log),\n        withLatestFrom(gap, fixedHeaderHeight, fixedFooterHeight),\n        map(\n          ([\n            [location, sizes2, viewportHeight2, totalCount2, topListHeight2, headerHeight2, footerHeight2, log2],\n            gap2,\n            fixedHeaderHeight2,\n            fixedFooterHeight2\n          ]) => {\n            const normalLocation = normalizeIndexLocation(location);\n            const { align, behavior, offset } = normalLocation;\n            const lastIndex = totalCount2 - 1;\n            const index = originalIndexFromLocation(normalLocation, sizes2, lastIndex);\n            let top = offsetOf(index, sizes2.offsetTree, gap2) + headerHeight2;\n            if (align === \"end\") {\n              top += fixedHeaderHeight2 + findMaxKeyValue(sizes2.sizeTree, index)[1] - viewportHeight2 + fixedFooterHeight2;\n              if (index === lastIndex) {\n                top += footerHeight2;\n              }\n            } else if (align === \"center\") {\n              top += (fixedHeaderHeight2 + findMaxKeyValue(sizes2.sizeTree, index)[1] - viewportHeight2 + fixedFooterHeight2) / 2;\n            } else {\n              top -= topListHeight2;\n            }\n            if (offset) {\n              top += offset;\n            }\n            const retry = (listChanged) => {\n              cleanup();\n              if (listChanged) {\n                log2(\"retrying to scroll to\", { location }, LogLevel.DEBUG);\n                publish(scrollToIndex, location);\n              } else {\n                log2(\"list did not change, scroll successful\", {}, LogLevel.DEBUG);\n              }\n            };\n            cleanup();\n            if (behavior === \"smooth\") {\n              let listChanged = false;\n              unsubscribeListRefresh = subscribe(listRefresh, (changed) => {\n                listChanged = listChanged || changed;\n              });\n              unsubscribeNextListRefresh = handleNext(smoothScrollTargetReached, () => {\n                retry(listChanged);\n              });\n            } else {\n              unsubscribeNextListRefresh = handleNext(pipe(listRefresh, watchChangesFor(150)), retry);\n            }\n            cleartTimeoutRef = setTimeout(() => {\n              cleanup();\n            }, 1200);\n            publish(scrollingInProgress, true);\n            log2(\"scrolling from index to\", { index, top, behavior }, LogLevel.DEBUG);\n            return { top, behavior };\n          }\n        )\n      ),\n      scrollTo\n    );\n    return {\n      scrollToIndex,\n      topListHeight\n    };\n  },\n  tup(sizeSystem, domIOSystem, loggerSystem),\n  { singleton: true }\n);\nfunction watchChangesFor(limit) {\n  return (done) => {\n    const timeoutRef = setTimeout(() => {\n      done(false);\n    }, limit);\n    return (value) => {\n      if (value) {\n        done(true);\n        clearTimeout(timeoutRef);\n      }\n    };\n  };\n}\nconst UP = \"up\";\nconst DOWN = \"down\";\nconst NONE$1 = \"none\";\nconst INITIAL_BOTTOM_STATE = {\n  atBottom: false,\n  notAtBottomBecause: \"NOT_SHOWING_LAST_ITEM\",\n  state: {\n    offsetBottom: 0,\n    scrollTop: 0,\n    viewportHeight: 0,\n    scrollHeight: 0\n  }\n};\nconst DEFAULT_AT_TOP_THRESHOLD = 0;\nconst stateFlagsSystem = system(([{ scrollContainerState, scrollTop, viewportHeight, headerHeight, footerHeight, scrollBy }]) => {\n  const isAtBottom = statefulStream(false);\n  const isAtTop = statefulStream(true);\n  const atBottomStateChange = stream();\n  const atTopStateChange = stream();\n  const atBottomThreshold = statefulStream(4);\n  const atTopThreshold = statefulStream(DEFAULT_AT_TOP_THRESHOLD);\n  const isScrolling = statefulStreamFromEmitter(\n    pipe(\n      merge(pipe(duc(scrollTop), skip(1), mapTo(true)), pipe(duc(scrollTop), skip(1), mapTo(false), debounceTime(100))),\n      distinctUntilChanged()\n    ),\n    false\n  );\n  const isScrollingBy = statefulStreamFromEmitter(\n    pipe(merge(pipe(scrollBy, mapTo(true)), pipe(scrollBy, mapTo(false), debounceTime(200))), distinctUntilChanged()),\n    false\n  );\n  connect(\n    pipe(\n      combineLatest(duc(scrollTop), duc(atTopThreshold)),\n      map(([top, atTopThreshold2]) => top <= atTopThreshold2),\n      distinctUntilChanged()\n    ),\n    isAtTop\n  );\n  connect(pipe(isAtTop, throttleTime(50)), atTopStateChange);\n  const atBottomState = streamFromEmitter(\n    pipe(\n      combineLatest(scrollContainerState, duc(viewportHeight), duc(headerHeight), duc(footerHeight), duc(atBottomThreshold)),\n      scan((current, [{ scrollTop: scrollTop2, scrollHeight }, viewportHeight2, _headerHeight, _footerHeight, atBottomThreshold2]) => {\n        const isAtBottom2 = scrollTop2 + viewportHeight2 - scrollHeight > -atBottomThreshold2;\n        const state = {\n          viewportHeight: viewportHeight2,\n          scrollTop: scrollTop2,\n          scrollHeight\n        };\n        if (isAtBottom2) {\n          let atBottomBecause;\n          let scrollTopDelta;\n          if (scrollTop2 > current.state.scrollTop) {\n            atBottomBecause = \"SCROLLED_DOWN\";\n            scrollTopDelta = current.state.scrollTop - scrollTop2;\n          } else {\n            atBottomBecause = \"SIZE_DECREASED\";\n            scrollTopDelta = current.state.scrollTop - scrollTop2 || current.scrollTopDelta;\n          }\n          return {\n            atBottom: true,\n            state,\n            atBottomBecause,\n            scrollTopDelta\n          };\n        }\n        let notAtBottomBecause;\n        if (state.scrollHeight > current.state.scrollHeight) {\n          notAtBottomBecause = \"SIZE_INCREASED\";\n        } else if (viewportHeight2 < current.state.viewportHeight) {\n          notAtBottomBecause = \"VIEWPORT_HEIGHT_DECREASING\";\n        } else if (scrollTop2 < current.state.scrollTop) {\n          notAtBottomBecause = \"SCROLLING_UPWARDS\";\n        } else {\n          notAtBottomBecause = \"NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM\";\n        }\n        return {\n          atBottom: false,\n          notAtBottomBecause,\n          state\n        };\n      }, INITIAL_BOTTOM_STATE),\n      distinctUntilChanged((prev, next) => {\n        return prev && prev.atBottom === next.atBottom;\n      })\n    )\n  );\n  const lastJumpDueToItemResize = statefulStreamFromEmitter(\n    pipe(\n      scrollContainerState,\n      scan(\n        (current, { scrollTop: scrollTop2, scrollHeight, viewportHeight: viewportHeight2 }) => {\n          if (!approximatelyEqual(current.scrollHeight, scrollHeight)) {\n            const atBottom = scrollHeight - (scrollTop2 + viewportHeight2) < 1;\n            if (current.scrollTop !== scrollTop2 && atBottom) {\n              return {\n                scrollHeight,\n                scrollTop: scrollTop2,\n                jump: current.scrollTop - scrollTop2,\n                changed: true\n              };\n            } else {\n              return {\n                scrollHeight,\n                scrollTop: scrollTop2,\n                jump: 0,\n                changed: true\n              };\n            }\n          } else {\n            return {\n              scrollTop: scrollTop2,\n              scrollHeight,\n              jump: 0,\n              changed: false\n            };\n          }\n        },\n        { scrollHeight: 0, jump: 0, scrollTop: 0, changed: false }\n      ),\n      filter((value) => value.changed),\n      map((value) => value.jump)\n    ),\n    0\n  );\n  connect(\n    pipe(\n      atBottomState,\n      map((state) => state.atBottom)\n    ),\n    isAtBottom\n  );\n  connect(pipe(isAtBottom, throttleTime(50)), atBottomStateChange);\n  const scrollDirection = statefulStream(DOWN);\n  connect(\n    pipe(\n      scrollContainerState,\n      map(({ scrollTop: scrollTop2 }) => scrollTop2),\n      distinctUntilChanged(),\n      scan(\n        (acc, scrollTop2) => {\n          if (getValue(isScrollingBy)) {\n            return { direction: acc.direction, prevScrollTop: scrollTop2 };\n          }\n          return { direction: scrollTop2 < acc.prevScrollTop ? UP : DOWN, prevScrollTop: scrollTop2 };\n        },\n        { direction: DOWN, prevScrollTop: 0 }\n      ),\n      map((value) => value.direction)\n    ),\n    scrollDirection\n  );\n  connect(pipe(scrollContainerState, throttleTime(50), mapTo(NONE$1)), scrollDirection);\n  const scrollVelocity = statefulStream(0);\n  connect(\n    pipe(\n      isScrolling,\n      filter((value) => !value),\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      mapTo(0)\n    ),\n    scrollVelocity\n  );\n  connect(\n    pipe(\n      scrollTop,\n      throttleTime(100),\n      withLatestFrom(isScrolling),\n      filter(([_, isScrolling2]) => !!isScrolling2),\n      scan(([_, prev], [next]) => [prev, next], [0, 0]),\n      map(([prev, next]) => next - prev)\n    ),\n    scrollVelocity\n  );\n  return {\n    isScrolling,\n    isAtTop,\n    isAtBottom,\n    atBottomState,\n    atTopStateChange,\n    atBottomStateChange,\n    scrollDirection,\n    atBottomThreshold,\n    atTopThreshold,\n    scrollVelocity,\n    lastJumpDueToItemResize\n  };\n}, tup(domIOSystem));\nconst propsReadySystem = system(\n  ([{ log }]) => {\n    const propsReady = statefulStream(false);\n    const didMount = streamFromEmitter(\n      pipe(\n        propsReady,\n        filter((ready) => ready),\n        distinctUntilChanged()\n      )\n    );\n    subscribe(propsReady, (value) => {\n      value && getValue(log)(\"props updated\", {}, LogLevel.DEBUG);\n    });\n    return { propsReady, didMount };\n  },\n  tup(loggerSystem),\n  { singleton: true }\n);\nfunction skipFrames(frameCount, callback) {\n  if (frameCount == 0) {\n    callback();\n  } else {\n    requestAnimationFrame(() => skipFrames(frameCount - 1, callback));\n  }\n}\nfunction getInitialTopMostItemIndexNumber(location, totalCount) {\n  const lastIndex = totalCount - 1;\n  const index = typeof location === \"number\" ? location : location.index === \"LAST\" ? lastIndex : location.index;\n  return index;\n}\nconst initialTopMostItemIndexSystem = system(\n  ([{ sizes, listRefresh, defaultItemSize }, { scrollTop }, { scrollToIndex }, { didMount }]) => {\n    const scrolledToInitialItem = statefulStream(true);\n    const initialTopMostItemIndex = statefulStream(0);\n    const scrollScheduled = statefulStream(false);\n    connect(\n      pipe(\n        didMount,\n        withLatestFrom(initialTopMostItemIndex),\n        filter(([_, location]) => !!location),\n        mapTo(false)\n      ),\n      scrolledToInitialItem\n    );\n    subscribe(\n      pipe(\n        combineLatest(listRefresh, didMount),\n        withLatestFrom(scrolledToInitialItem, sizes, defaultItemSize, scrollScheduled),\n        filter(([[, didMount2], scrolledToInitialItem2, { sizeTree }, defaultItemSize2, scrollScheduled2]) => {\n          return didMount2 && (!empty(sizeTree) || isDefined(defaultItemSize2)) && !scrolledToInitialItem2 && !scrollScheduled2;\n        }),\n        withLatestFrom(initialTopMostItemIndex)\n      ),\n      ([, initialTopMostItemIndex2]) => {\n        publish(scrollScheduled, true);\n        skipFrames(3, () => {\n          handleNext(scrollTop, () => publish(scrolledToInitialItem, true));\n          publish(scrollToIndex, initialTopMostItemIndex2);\n        });\n      }\n    );\n    return {\n      scrolledToInitialItem,\n      initialTopMostItemIndex\n    };\n  },\n  tup(sizeSystem, domIOSystem, scrollToIndexSystem, propsReadySystem),\n  { singleton: true }\n);\nfunction normalizeFollowOutput(follow) {\n  if (!follow) {\n    return false;\n  }\n  return follow === \"smooth\" ? \"smooth\" : \"auto\";\n}\nconst behaviorFromFollowOutput = (follow, isAtBottom) => {\n  if (typeof follow === \"function\") {\n    return normalizeFollowOutput(follow(isAtBottom));\n  }\n  return isAtBottom && normalizeFollowOutput(follow);\n};\nconst followOutputSystem = system(\n  ([\n    { totalCount, listRefresh },\n    { isAtBottom, atBottomState },\n    { scrollToIndex },\n    { scrolledToInitialItem },\n    { propsReady, didMount },\n    { log },\n    { scrollingInProgress }\n  ]) => {\n    const followOutput = statefulStream(false);\n    const autoscrollToBottom = stream();\n    let pendingScrollHandle = null;\n    function scrollToBottom(followOutputBehavior) {\n      publish(scrollToIndex, {\n        index: \"LAST\",\n        align: \"end\",\n        behavior: followOutputBehavior\n      });\n    }\n    subscribe(\n      pipe(\n        combineLatest(pipe(duc(totalCount), skip(1)), didMount),\n        withLatestFrom(duc(followOutput), isAtBottom, scrolledToInitialItem, scrollingInProgress),\n        map(([[totalCount2, didMount2], followOutput2, isAtBottom2, scrolledToInitialItem2, scrollingInProgress2]) => {\n          let shouldFollow = didMount2 && scrolledToInitialItem2;\n          let followOutputBehavior = \"auto\";\n          if (shouldFollow) {\n            followOutputBehavior = behaviorFromFollowOutput(followOutput2, isAtBottom2 || scrollingInProgress2);\n            shouldFollow = shouldFollow && !!followOutputBehavior;\n          }\n          return { totalCount: totalCount2, shouldFollow, followOutputBehavior };\n        }),\n        filter(({ shouldFollow }) => shouldFollow)\n      ),\n      ({ totalCount: totalCount2, followOutputBehavior }) => {\n        if (pendingScrollHandle) {\n          pendingScrollHandle();\n          pendingScrollHandle = null;\n        }\n        pendingScrollHandle = handleNext(listRefresh, () => {\n          getValue(log)(\"following output to \", { totalCount: totalCount2 }, LogLevel.DEBUG);\n          scrollToBottom(followOutputBehavior);\n          pendingScrollHandle = null;\n        });\n      }\n    );\n    function trapNextSizeIncrease(followOutput2) {\n      const cancel = handleNext(atBottomState, (state) => {\n        if (followOutput2 && !state.atBottom && state.notAtBottomBecause === \"SIZE_INCREASED\" && !pendingScrollHandle) {\n          getValue(log)(\"scrolling to bottom due to increased size\", {}, LogLevel.DEBUG);\n          scrollToBottom(\"auto\");\n        }\n      });\n      setTimeout(cancel, 100);\n    }\n    subscribe(\n      pipe(\n        combineLatest(duc(followOutput), totalCount, propsReady),\n        filter(([follow, , ready]) => follow && ready),\n        scan(\n          ({ value }, [, next]) => {\n            return { refreshed: value === next, value: next };\n          },\n          { refreshed: false, value: 0 }\n        ),\n        filter(({ refreshed }) => refreshed),\n        withLatestFrom(followOutput, totalCount)\n      ),\n      ([, followOutput2]) => {\n        trapNextSizeIncrease(followOutput2 !== false);\n      }\n    );\n    subscribe(autoscrollToBottom, () => {\n      trapNextSizeIncrease(getValue(followOutput) !== false);\n    });\n    subscribe(combineLatest(duc(followOutput), atBottomState), ([followOutput2, state]) => {\n      if (followOutput2 && !state.atBottom && state.notAtBottomBecause === \"VIEWPORT_HEIGHT_DECREASING\") {\n        scrollToBottom(\"auto\");\n      }\n    });\n    return { followOutput, autoscrollToBottom };\n  },\n  tup(sizeSystem, stateFlagsSystem, scrollToIndexSystem, initialTopMostItemIndexSystem, propsReadySystem, loggerSystem, domIOSystem)\n);\nfunction groupCountsToIndicesAndCount(counts) {\n  return counts.reduce(\n    (acc, groupCount) => {\n      acc.groupIndices.push(acc.totalCount);\n      acc.totalCount += groupCount + 1;\n      return acc;\n    },\n    {\n      totalCount: 0,\n      groupIndices: []\n    }\n  );\n}\nconst groupedListSystem = system(([{ totalCount, groupIndices, sizes }, { scrollTop, headerHeight }]) => {\n  const groupCounts = stream();\n  const topItemsIndexes = stream();\n  const groupIndicesAndCount = streamFromEmitter(pipe(groupCounts, map(groupCountsToIndicesAndCount)));\n  connect(\n    pipe(\n      groupIndicesAndCount,\n      map((value) => value.totalCount)\n    ),\n    totalCount\n  );\n  connect(\n    pipe(\n      groupIndicesAndCount,\n      map((value) => value.groupIndices)\n    ),\n    groupIndices\n  );\n  connect(\n    pipe(\n      combineLatest(scrollTop, sizes, headerHeight),\n      filter(([_, sizes2]) => hasGroups(sizes2)),\n      map(([scrollTop2, state, headerHeight2]) => findMaxKeyValue(state.groupOffsetTree, Math.max(scrollTop2 - headerHeight2, 0), \"v\")[0]),\n      distinctUntilChanged(),\n      map((index) => [index])\n    ),\n    topItemsIndexes\n  );\n  return { groupCounts, topItemsIndexes };\n}, tup(sizeSystem, domIOSystem));\nfunction tupleComparator(prev, current) {\n  return !!(prev && prev[0] === current[0] && prev[1] === current[1]);\n}\nfunction rangeComparator(prev, next) {\n  return !!(prev && prev.startIndex === next.startIndex && prev.endIndex === next.endIndex);\n}\nconst TOP = \"top\";\nconst BOTTOM = \"bottom\";\nconst NONE = \"none\";\nfunction getOverscan(overscan, end, direction) {\n  if (typeof overscan === \"number\") {\n    return direction === UP && end === TOP || direction === DOWN && end === BOTTOM ? overscan : 0;\n  } else {\n    if (direction === UP) {\n      return end === TOP ? overscan.main : overscan.reverse;\n    } else {\n      return end === BOTTOM ? overscan.main : overscan.reverse;\n    }\n  }\n}\nfunction getViewportIncrease(value, end) {\n  return typeof value === \"number\" ? value : value[end] || 0;\n}\nconst sizeRangeSystem = system(\n  ([{ scrollTop, viewportHeight, deviation, headerHeight, fixedHeaderHeight }]) => {\n    const listBoundary = stream();\n    const topListHeight = statefulStream(0);\n    const increaseViewportBy = statefulStream(0);\n    const overscan = statefulStream(0);\n    const visibleRange = statefulStreamFromEmitter(\n      pipe(\n        combineLatest(\n          duc(scrollTop),\n          duc(viewportHeight),\n          duc(headerHeight),\n          duc(listBoundary, tupleComparator),\n          duc(overscan),\n          duc(topListHeight),\n          duc(fixedHeaderHeight),\n          duc(deviation),\n          duc(increaseViewportBy)\n        ),\n        map(\n          ([\n            scrollTop2,\n            viewportHeight2,\n            headerHeight2,\n            [listTop, listBottom],\n            overscan2,\n            topListHeight2,\n            fixedHeaderHeight2,\n            deviation2,\n            increaseViewportBy2\n          ]) => {\n            const top = scrollTop2 - deviation2;\n            const stickyHeaderHeight = topListHeight2 + fixedHeaderHeight2;\n            const headerVisible = Math.max(headerHeight2 - top, 0);\n            let direction = NONE;\n            const topViewportAddition = getViewportIncrease(increaseViewportBy2, TOP);\n            const bottomViewportAddition = getViewportIncrease(increaseViewportBy2, BOTTOM);\n            listTop -= deviation2;\n            listTop += headerHeight2 + fixedHeaderHeight2;\n            listBottom += headerHeight2 + fixedHeaderHeight2;\n            listBottom -= deviation2;\n            if (listTop > scrollTop2 + stickyHeaderHeight - topViewportAddition) {\n              direction = UP;\n            }\n            if (listBottom < scrollTop2 - headerVisible + viewportHeight2 + bottomViewportAddition) {\n              direction = DOWN;\n            }\n            if (direction !== NONE) {\n              return [\n                Math.max(top - headerHeight2 - getOverscan(overscan2, TOP, direction) - topViewportAddition, 0),\n                top - headerVisible - fixedHeaderHeight2 + viewportHeight2 + getOverscan(overscan2, BOTTOM, direction) + bottomViewportAddition\n              ];\n            }\n            return null;\n          }\n        ),\n        filter((value) => value != null),\n        distinctUntilChanged(tupleComparator)\n      ),\n      [0, 0]\n    );\n    return {\n      // input\n      listBoundary,\n      overscan,\n      topListHeight,\n      increaseViewportBy,\n      // output\n      visibleRange\n    };\n  },\n  tup(domIOSystem),\n  { singleton: true }\n);\nfunction probeItemSet(index, sizes, data) {\n  if (hasGroups(sizes)) {\n    const itemIndex = originalIndexFromItemIndex(index, sizes);\n    const groupIndex = findMaxKeyValue(sizes.groupOffsetTree, itemIndex)[0];\n    return [\n      { index: groupIndex, size: 0, offset: 0 },\n      { index: itemIndex, size: 0, offset: 0, data: data && data[0] }\n    ];\n  }\n  return [{ index, size: 0, offset: 0, data: data && data[0] }];\n}\nconst EMPTY_LIST_STATE = {\n  items: [],\n  topItems: [],\n  offsetTop: 0,\n  offsetBottom: 0,\n  top: 0,\n  bottom: 0,\n  topListHeight: 0,\n  totalCount: 0,\n  firstItemIndex: 0\n};\nfunction transposeItems(items, sizes, firstItemIndex) {\n  if (items.length === 0) {\n    return [];\n  }\n  if (!hasGroups(sizes)) {\n    return items.map((item) => ({ ...item, index: item.index + firstItemIndex, originalIndex: item.index }));\n  }\n  const startIndex = items[0].index;\n  const endIndex = items[items.length - 1].index;\n  const transposedItems = [];\n  const groupRanges = rangesWithin(sizes.groupOffsetTree, startIndex, endIndex);\n  let currentRange = void 0;\n  let currentGroupIndex = 0;\n  for (const item of items) {\n    if (!currentRange || currentRange.end < item.index) {\n      currentRange = groupRanges.shift();\n      currentGroupIndex = sizes.groupIndices.indexOf(currentRange.start);\n    }\n    let transposedItem;\n    if (item.index === currentRange.start) {\n      transposedItem = {\n        type: \"group\",\n        index: currentGroupIndex\n      };\n    } else {\n      transposedItem = {\n        index: item.index - (currentGroupIndex + 1) + firstItemIndex,\n        groupIndex: currentGroupIndex\n      };\n    }\n    transposedItems.push({\n      ...transposedItem,\n      size: item.size,\n      offset: item.offset,\n      originalIndex: item.index,\n      data: item.data\n    });\n  }\n  return transposedItems;\n}\nfunction buildListState(items, topItems, totalCount, gap, sizes, firstItemIndex) {\n  const { lastSize, lastOffset, lastIndex } = sizes;\n  let offsetTop = 0;\n  let bottom = 0;\n  if (items.length > 0) {\n    offsetTop = items[0].offset;\n    const lastItem = items[items.length - 1];\n    bottom = lastItem.offset + lastItem.size;\n  }\n  const itemCount = totalCount - lastIndex;\n  const total = lastOffset + itemCount * lastSize + (itemCount - 1) * gap;\n  const top = offsetTop;\n  const offsetBottom = total - bottom;\n  return {\n    items: transposeItems(items, sizes, firstItemIndex),\n    topItems: transposeItems(topItems, sizes, firstItemIndex),\n    topListHeight: topItems.reduce((height, item) => item.size + height, 0),\n    offsetTop,\n    offsetBottom,\n    top,\n    bottom,\n    totalCount,\n    firstItemIndex\n  };\n}\nfunction buildListStateFromItemCount(itemCount, initialTopMostItemIndex, sizes, firstItemIndex, gap, data) {\n  let includedGroupsCount = 0;\n  if (sizes.groupIndices.length > 0) {\n    for (const index of sizes.groupIndices) {\n      if (index - includedGroupsCount >= itemCount) {\n        break;\n      }\n      includedGroupsCount++;\n    }\n  }\n  const adjustedCount = itemCount + includedGroupsCount;\n  const initialTopMostItemIndexNumber = getInitialTopMostItemIndexNumber(initialTopMostItemIndex, adjustedCount);\n  const items = Array.from({ length: adjustedCount }).map((_, index) => ({\n    index: index + initialTopMostItemIndexNumber,\n    size: 0,\n    offset: 0,\n    data: data[index + initialTopMostItemIndexNumber]\n  }));\n  return buildListState(items, [], adjustedCount, gap, sizes, firstItemIndex);\n}\nconst listStateSystem = system(\n  ([\n    { sizes, totalCount, data, firstItemIndex, gap },\n    groupedListSystem2,\n    { visibleRange, listBoundary, topListHeight: rangeTopListHeight },\n    { scrolledToInitialItem, initialTopMostItemIndex },\n    { topListHeight },\n    stateFlags,\n    { didMount },\n    { recalcInProgress }\n  ]) => {\n    const topItemsIndexes = statefulStream([]);\n    const initialItemCount = statefulStream(0);\n    const itemsRendered = stream();\n    connect(groupedListSystem2.topItemsIndexes, topItemsIndexes);\n    const listState = statefulStreamFromEmitter(\n      pipe(\n        combineLatest(\n          didMount,\n          recalcInProgress,\n          duc(visibleRange, tupleComparator),\n          duc(totalCount),\n          duc(sizes),\n          duc(initialTopMostItemIndex),\n          scrolledToInitialItem,\n          duc(topItemsIndexes),\n          duc(firstItemIndex),\n          duc(gap),\n          data\n        ),\n        filter(([mount, recalcInProgress2, , totalCount2, , , , , , , data2]) => {\n          const dataChangeInProgress = data2 && data2.length !== totalCount2;\n          return mount && !recalcInProgress2 && !dataChangeInProgress;\n        }),\n        map(\n          ([\n            ,\n            ,\n            [startOffset, endOffset],\n            totalCount2,\n            sizes2,\n            initialTopMostItemIndex2,\n            scrolledToInitialItem2,\n            topItemsIndexes2,\n            firstItemIndex2,\n            gap2,\n            data2\n          ]) => {\n            const sizesValue = sizes2;\n            const { sizeTree, offsetTree } = sizesValue;\n            const initialItemCountValue = getValue(initialItemCount);\n            if (totalCount2 === 0) {\n              return { ...EMPTY_LIST_STATE, totalCount: totalCount2 };\n            }\n            if (startOffset === 0 && endOffset === 0) {\n              if (initialItemCountValue === 0) {\n                return { ...EMPTY_LIST_STATE, totalCount: totalCount2 };\n              } else {\n                return buildListStateFromItemCount(initialItemCountValue, initialTopMostItemIndex2, sizes2, firstItemIndex2, gap2, data2 || []);\n              }\n            }\n            if (empty(sizeTree)) {\n              if (initialItemCountValue > 0) {\n                return null;\n              }\n              const state = buildListState(\n                probeItemSet(getInitialTopMostItemIndexNumber(initialTopMostItemIndex2, totalCount2), sizesValue, data2),\n                [],\n                totalCount2,\n                gap2,\n                sizesValue,\n                firstItemIndex2\n              );\n              return state;\n            }\n            const topItems = [];\n            if (topItemsIndexes2.length > 0) {\n              const startIndex = topItemsIndexes2[0];\n              const endIndex = topItemsIndexes2[topItemsIndexes2.length - 1];\n              let offset = 0;\n              for (const range of rangesWithin(sizeTree, startIndex, endIndex)) {\n                const size = range.value;\n                const rangeStartIndex = Math.max(range.start, startIndex);\n                const rangeEndIndex = Math.min(range.end, endIndex);\n                for (let i = rangeStartIndex; i <= rangeEndIndex; i++) {\n                  topItems.push({ index: i, size, offset, data: data2 && data2[i] });\n                  offset += size;\n                }\n              }\n            }\n            if (!scrolledToInitialItem2) {\n              return buildListState([], topItems, totalCount2, gap2, sizesValue, firstItemIndex2);\n            }\n            const minStartIndex = topItemsIndexes2.length > 0 ? topItemsIndexes2[topItemsIndexes2.length - 1] + 1 : 0;\n            const offsetPointRanges = rangesWithinOffsets(offsetTree, startOffset, endOffset, minStartIndex);\n            if (offsetPointRanges.length === 0) {\n              return null;\n            }\n            const maxIndex = totalCount2 - 1;\n            const items = tap([], (result) => {\n              for (const range of offsetPointRanges) {\n                const point = range.value;\n                let offset = point.offset;\n                let rangeStartIndex = range.start;\n                const size = point.size;\n                if (point.offset < startOffset) {\n                  rangeStartIndex += Math.floor((startOffset - point.offset + gap2) / (size + gap2));\n                  const itemCount = rangeStartIndex - range.start;\n                  offset += itemCount * size + itemCount * gap2;\n                }\n                if (rangeStartIndex < minStartIndex) {\n                  offset += (minStartIndex - rangeStartIndex) * size;\n                  rangeStartIndex = minStartIndex;\n                }\n                const endIndex = Math.min(range.end, maxIndex);\n                for (let i = rangeStartIndex; i <= endIndex; i++) {\n                  if (offset >= endOffset) {\n                    break;\n                  }\n                  result.push({ index: i, size, offset, data: data2 && data2[i] });\n                  offset += size + gap2;\n                }\n              }\n            });\n            return buildListState(items, topItems, totalCount2, gap2, sizesValue, firstItemIndex2);\n          }\n        ),\n        //@ts-expect-error filter needs to be fixed\n        filter((value) => value !== null),\n        distinctUntilChanged()\n      ),\n      EMPTY_LIST_STATE\n    );\n    connect(\n      pipe(\n        data,\n        filter(isDefined),\n        map((data2) => data2 == null ? void 0 : data2.length)\n      ),\n      totalCount\n    );\n    connect(\n      pipe(\n        listState,\n        map((value) => value.topListHeight)\n      ),\n      topListHeight\n    );\n    connect(topListHeight, rangeTopListHeight);\n    connect(\n      pipe(\n        listState,\n        map((state) => [state.top, state.bottom])\n      ),\n      listBoundary\n    );\n    connect(\n      pipe(\n        listState,\n        map((state) => state.items)\n      ),\n      itemsRendered\n    );\n    const endReached = streamFromEmitter(\n      pipe(\n        listState,\n        filter(({ items }) => items.length > 0),\n        withLatestFrom(totalCount, data),\n        filter(([{ items }, totalCount2]) => items[items.length - 1].originalIndex === totalCount2 - 1),\n        map(([, totalCount2, data2]) => [totalCount2 - 1, data2]),\n        distinctUntilChanged(tupleComparator),\n        map(([count]) => count)\n      )\n    );\n    const startReached = streamFromEmitter(\n      pipe(\n        listState,\n        throttleTime(200),\n        filter(({ items, topItems }) => {\n          return items.length > 0 && items[0].originalIndex === topItems.length;\n        }),\n        map(({ items }) => items[0].index),\n        distinctUntilChanged()\n      )\n    );\n    const rangeChanged = streamFromEmitter(\n      pipe(\n        listState,\n        filter(({ items }) => items.length > 0),\n        map(({ items }) => {\n          let startIndex = 0;\n          let endIndex = items.length - 1;\n          while (items[startIndex].type === \"group\" && startIndex < endIndex) {\n            startIndex++;\n          }\n          while (items[endIndex].type === \"group\" && endIndex > startIndex) {\n            endIndex--;\n          }\n          return {\n            startIndex: items[startIndex].index,\n            endIndex: items[endIndex].index\n          };\n        }),\n        distinctUntilChanged(rangeComparator)\n      )\n    );\n    return { listState, topItemsIndexes, endReached, startReached, rangeChanged, itemsRendered, initialItemCount, ...stateFlags };\n  },\n  tup(\n    sizeSystem,\n    groupedListSystem,\n    sizeRangeSystem,\n    initialTopMostItemIndexSystem,\n    scrollToIndexSystem,\n    stateFlagsSystem,\n    propsReadySystem,\n    recalcSystem\n  ),\n  { singleton: true }\n);\nconst initialItemCountSystem = system(\n  ([{ sizes, firstItemIndex, data, gap }, { initialTopMostItemIndex }, { initialItemCount, listState }, { didMount }]) => {\n    connect(\n      pipe(\n        didMount,\n        withLatestFrom(initialItemCount),\n        filter(([, count]) => count !== 0),\n        withLatestFrom(initialTopMostItemIndex, sizes, firstItemIndex, gap, data),\n        map(([[, count], initialTopMostItemIndexValue, sizes2, firstItemIndex2, gap2, data2 = []]) => {\n          return buildListStateFromItemCount(count, initialTopMostItemIndexValue, sizes2, firstItemIndex2, gap2, data2);\n        })\n      ),\n      listState\n    );\n    return {};\n  },\n  tup(sizeSystem, initialTopMostItemIndexSystem, listStateSystem, propsReadySystem),\n  { singleton: true }\n);\nconst scrollSeekSystem = system(\n  ([{ scrollVelocity }]) => {\n    const isSeeking = statefulStream(false);\n    const rangeChanged = stream();\n    const scrollSeekConfiguration = statefulStream(false);\n    connect(\n      pipe(\n        scrollVelocity,\n        withLatestFrom(scrollSeekConfiguration, isSeeking, rangeChanged),\n        filter(([_, config]) => !!config),\n        map(([speed, config, isSeeking2, range]) => {\n          const { exit, enter } = config;\n          if (isSeeking2) {\n            if (exit(speed, range)) {\n              return false;\n            }\n          } else {\n            if (enter(speed, range)) {\n              return true;\n            }\n          }\n          return isSeeking2;\n        }),\n        distinctUntilChanged()\n      ),\n      isSeeking\n    );\n    subscribe(\n      pipe(combineLatest(isSeeking, scrollVelocity, rangeChanged), withLatestFrom(scrollSeekConfiguration)),\n      ([[isSeeking2, velocity, range], config]) => isSeeking2 && config && config.change && config.change(velocity, range)\n    );\n    return { isSeeking, scrollSeekConfiguration, scrollVelocity, scrollSeekRangeChanged: rangeChanged };\n  },\n  tup(stateFlagsSystem),\n  { singleton: true }\n);\nconst topItemCountSystem = system(([{ topItemsIndexes }]) => {\n  const topItemCount = statefulStream(0);\n  connect(\n    pipe(\n      topItemCount,\n      filter((length) => length > 0),\n      map((length) => Array.from({ length }).map((_, index) => index))\n    ),\n    topItemsIndexes\n  );\n  return { topItemCount };\n}, tup(listStateSystem));\nconst totalListHeightSystem = system(\n  ([{ footerHeight, headerHeight, fixedHeaderHeight, fixedFooterHeight }, { listState }]) => {\n    const totalListHeightChanged = stream();\n    const totalListHeight = statefulStreamFromEmitter(\n      pipe(\n        combineLatest(footerHeight, fixedFooterHeight, headerHeight, fixedHeaderHeight, listState),\n        map(([footerHeight2, fixedFooterHeight2, headerHeight2, fixedHeaderHeight2, listState2]) => {\n          return footerHeight2 + fixedFooterHeight2 + headerHeight2 + fixedHeaderHeight2 + listState2.offsetBottom + listState2.bottom;\n        })\n      ),\n      0\n    );\n    connect(duc(totalListHeight), totalListHeightChanged);\n    return { totalListHeight, totalListHeightChanged };\n  },\n  tup(domIOSystem, listStateSystem),\n  { singleton: true }\n);\nfunction simpleMemoize(func) {\n  let called = false;\n  let result;\n  return () => {\n    if (!called) {\n      called = true;\n      result = func();\n    }\n    return result;\n  };\n}\nconst isMobileSafari = simpleMemoize(() => {\n  return /iP(ad|od|hone)/i.test(navigator.userAgent) && /WebKit/i.test(navigator.userAgent);\n});\nconst upwardScrollFixSystem = system(\n  ([\n    { scrollBy, scrollTop, deviation, scrollingInProgress },\n    { isScrolling, isAtBottom, scrollDirection, lastJumpDueToItemResize },\n    { listState },\n    { beforeUnshiftWith, shiftWithOffset, sizes, gap },\n    { log },\n    { recalcInProgress }\n  ]) => {\n    const deviationOffset = streamFromEmitter(\n      pipe(\n        listState,\n        withLatestFrom(lastJumpDueToItemResize),\n        scan(\n          ([, prevItems, prevTotalCount, prevTotalHeight], [{ items, totalCount, bottom, offsetBottom }, lastJumpDueToItemResize2]) => {\n            const totalHeight = bottom + offsetBottom;\n            let newDev = 0;\n            if (prevTotalCount === totalCount) {\n              if (prevItems.length > 0 && items.length > 0) {\n                const atStart = items[0].originalIndex === 0 && prevItems[0].originalIndex === 0;\n                if (!atStart) {\n                  newDev = totalHeight - prevTotalHeight;\n                  if (newDev !== 0) {\n                    newDev += lastJumpDueToItemResize2;\n                  }\n                }\n              }\n            }\n            return [newDev, items, totalCount, totalHeight];\n          },\n          [0, [], 0, 0]\n        ),\n        filter(([amount]) => amount !== 0),\n        withLatestFrom(scrollTop, scrollDirection, scrollingInProgress, isAtBottom, log, recalcInProgress),\n        filter(([, scrollTop2, scrollDirection2, scrollingInProgress2, , , recalcInProgress2]) => {\n          return !recalcInProgress2 && !scrollingInProgress2 && scrollTop2 !== 0 && scrollDirection2 === UP;\n        }),\n        map(([[amount], , , , , log2]) => {\n          log2(\"Upward scrolling compensation\", { amount }, LogLevel.DEBUG);\n          return amount;\n        })\n      )\n    );\n    function scrollByWith(offset) {\n      if (offset > 0) {\n        publish(scrollBy, { top: -offset, behavior: \"auto\" });\n        publish(deviation, 0);\n      } else {\n        publish(deviation, 0);\n        publish(scrollBy, { top: -offset, behavior: \"auto\" });\n      }\n    }\n    subscribe(pipe(deviationOffset, withLatestFrom(deviation, isScrolling)), ([offset, deviationAmount, isScrolling2]) => {\n      if (isScrolling2 && isMobileSafari()) {\n        publish(deviation, deviationAmount - offset);\n      } else {\n        scrollByWith(-offset);\n      }\n    });\n    subscribe(\n      pipe(\n        combineLatest(statefulStreamFromEmitter(isScrolling, false), deviation, recalcInProgress),\n        filter(([is, deviation2, recalc]) => !is && !recalc && deviation2 !== 0),\n        map(([_, deviation2]) => deviation2),\n        throttleTime(1)\n      ),\n      scrollByWith\n    );\n    connect(\n      pipe(\n        shiftWithOffset,\n        map((offset) => {\n          return { top: -offset };\n        })\n      ),\n      scrollBy\n    );\n    subscribe(\n      pipe(\n        beforeUnshiftWith,\n        withLatestFrom(sizes, gap),\n        map(([offset, { lastSize: defaultItemSize, groupIndices, sizeTree }, gap2]) => {\n          function getItemOffset(itemCount) {\n            return itemCount * (defaultItemSize + gap2);\n          }\n          if (groupIndices.length === 0) {\n            return getItemOffset(offset);\n          } else {\n            let amount = 0;\n            const defaultGroupSize = find(sizeTree, 0);\n            let recognizedOffsetItems = 0;\n            let groupIndex = 0;\n            while (recognizedOffsetItems < offset) {\n              recognizedOffsetItems++;\n              amount += defaultGroupSize;\n              let groupItemCount = groupIndices.length === groupIndex + 1 ? Infinity : groupIndices[groupIndex + 1] - groupIndices[groupIndex] - 1;\n              if (recognizedOffsetItems + groupItemCount > offset) {\n                amount -= defaultGroupSize;\n                groupItemCount = offset - recognizedOffsetItems + 1;\n              }\n              recognizedOffsetItems += groupItemCount;\n              amount += getItemOffset(groupItemCount);\n              groupIndex++;\n            }\n            return amount;\n          }\n        })\n      ),\n      (offset) => {\n        publish(deviation, offset);\n        requestAnimationFrame(() => {\n          publish(scrollBy, { top: offset });\n          requestAnimationFrame(() => {\n            publish(deviation, 0);\n            publish(recalcInProgress, false);\n          });\n        });\n      }\n    );\n    return { deviation };\n  },\n  tup(domIOSystem, stateFlagsSystem, listStateSystem, sizeSystem, loggerSystem, recalcSystem)\n);\nconst initialScrollTopSystem = system(\n  ([{ didMount }, { scrollTo }, { listState }]) => {\n    const initialScrollTop = statefulStream(0);\n    subscribe(\n      pipe(\n        didMount,\n        withLatestFrom(initialScrollTop),\n        filter(([, offset]) => offset !== 0),\n        map(([, offset]) => ({ top: offset }))\n      ),\n      (location) => {\n        handleNext(\n          pipe(\n            listState,\n            skip(1),\n            filter((state) => state.items.length > 1)\n          ),\n          () => {\n            requestAnimationFrame(() => {\n              publish(scrollTo, location);\n            });\n          }\n        );\n      }\n    );\n    return {\n      initialScrollTop\n    };\n  },\n  tup(propsReadySystem, domIOSystem, listStateSystem),\n  { singleton: true }\n);\nconst alignToBottomSystem = system(\n  ([{ viewportHeight }, { totalListHeight }]) => {\n    const alignToBottom = statefulStream(false);\n    const paddingTopAddition = statefulStreamFromEmitter(\n      pipe(\n        combineLatest(alignToBottom, viewportHeight, totalListHeight),\n        filter(([enabled]) => enabled),\n        map(([, viewportHeight2, totalListHeight2]) => {\n          return Math.max(0, viewportHeight2 - totalListHeight2);\n        }),\n        throttleTime(0),\n        distinctUntilChanged()\n      ),\n      0\n    );\n    return { alignToBottom, paddingTopAddition };\n  },\n  tup(domIOSystem, totalListHeightSystem),\n  { singleton: true }\n);\nconst windowScrollerSystem = system(([{ scrollTo, scrollContainerState }]) => {\n  const windowScrollContainerState = stream();\n  const windowViewportRect = stream();\n  const windowScrollTo = stream();\n  const useWindowScroll = statefulStream(false);\n  const customScrollParent = statefulStream(void 0);\n  connect(\n    pipe(\n      combineLatest(windowScrollContainerState, windowViewportRect),\n      map(([{ viewportHeight, scrollTop: windowScrollTop, scrollHeight }, { offsetTop }]) => {\n        return {\n          scrollTop: Math.max(0, windowScrollTop - offsetTop),\n          scrollHeight,\n          viewportHeight\n        };\n      })\n    ),\n    scrollContainerState\n  );\n  connect(\n    pipe(\n      scrollTo,\n      withLatestFrom(windowViewportRect),\n      map(([scrollTo2, { offsetTop }]) => {\n        return {\n          ...scrollTo2,\n          top: scrollTo2.top + offsetTop\n        };\n      })\n    ),\n    windowScrollTo\n  );\n  return {\n    // config\n    useWindowScroll,\n    customScrollParent,\n    // input\n    windowScrollContainerState,\n    windowViewportRect,\n    // signals\n    windowScrollTo\n  };\n}, tup(domIOSystem));\nconst defaultCalculateViewLocation = ({\n  itemTop: itemTop2,\n  itemBottom,\n  viewportTop,\n  viewportBottom,\n  locationParams: { behavior, align, ...rest }\n}) => {\n  if (itemTop2 < viewportTop) {\n    return { ...rest, behavior, align: align != null ? align : \"start\" };\n  }\n  if (itemBottom > viewportBottom) {\n    return { ...rest, behavior, align: align != null ? align : \"end\" };\n  }\n  return null;\n};\nconst scrollIntoViewSystem = system(\n  ([\n    { sizes, totalCount, gap },\n    { scrollTop, viewportHeight, headerHeight, fixedHeaderHeight, fixedFooterHeight, scrollingInProgress },\n    { scrollToIndex }\n  ]) => {\n    const scrollIntoView = stream();\n    connect(\n      pipe(\n        scrollIntoView,\n        withLatestFrom(sizes, viewportHeight, totalCount, headerHeight, fixedHeaderHeight, fixedFooterHeight, scrollTop),\n        withLatestFrom(gap),\n        map(([[viewLocation, sizes2, viewportHeight2, totalCount2, headerHeight2, fixedHeaderHeight2, fixedFooterHeight2, scrollTop2], gap2]) => {\n          const { done, behavior, align, calculateViewLocation = defaultCalculateViewLocation, ...rest } = viewLocation;\n          const actualIndex = originalIndexFromLocation(viewLocation, sizes2, totalCount2 - 1);\n          const itemTop2 = offsetOf(actualIndex, sizes2.offsetTree, gap2) + headerHeight2 + fixedHeaderHeight2;\n          const itemBottom = itemTop2 + findMaxKeyValue(sizes2.sizeTree, actualIndex)[1];\n          const viewportTop = scrollTop2 + fixedHeaderHeight2;\n          const viewportBottom = scrollTop2 + viewportHeight2 - fixedFooterHeight2;\n          const location = calculateViewLocation({\n            itemTop: itemTop2,\n            itemBottom,\n            viewportTop,\n            viewportBottom,\n            locationParams: { behavior, align, ...rest }\n          });\n          if (location) {\n            done && handleNext(\n              pipe(\n                scrollingInProgress,\n                filter((value) => value === false),\n                // skips the initial publish of false, and the cleanup call.\n                // but if scrollingInProgress is true, we skip the initial publish.\n                skip(getValue(scrollingInProgress) ? 1 : 2)\n              ),\n              done\n            );\n          } else {\n            done && done();\n          }\n          return location;\n        }),\n        filter((value) => value !== null)\n      ),\n      scrollToIndex\n    );\n    return {\n      scrollIntoView\n    };\n  },\n  tup(sizeSystem, domIOSystem, scrollToIndexSystem, listStateSystem, loggerSystem),\n  { singleton: true }\n);\nconst stateLoadSystem = system(\n  ([\n    { sizes, sizeRanges },\n    { scrollTop },\n    { initialTopMostItemIndex },\n    { didMount },\n    { useWindowScroll, windowScrollContainerState, windowViewportRect }\n  ]) => {\n    const getState = stream();\n    const restoreStateFrom = statefulStream(void 0);\n    const statefulWindowScrollContainerState = statefulStream(null);\n    const statefulWindowViewportRect = statefulStream(null);\n    connect(windowScrollContainerState, statefulWindowScrollContainerState);\n    connect(windowViewportRect, statefulWindowViewportRect);\n    subscribe(\n      pipe(getState, withLatestFrom(sizes, scrollTop, useWindowScroll, statefulWindowScrollContainerState, statefulWindowViewportRect)),\n      ([callback, sizes2, scrollTop2, useWindowScroll2, windowScrollContainerState2, windowViewportRect2]) => {\n        const ranges = sizeTreeToRanges(sizes2.sizeTree);\n        if (useWindowScroll2 && windowScrollContainerState2 !== null && windowViewportRect2 !== null) {\n          scrollTop2 = windowScrollContainerState2.scrollTop - windowViewportRect2.offsetTop;\n        }\n        callback({ ranges, scrollTop: scrollTop2 });\n      }\n    );\n    connect(pipe(restoreStateFrom, filter(isDefined), map(locationFromSnapshot)), initialTopMostItemIndex);\n    connect(\n      pipe(\n        didMount,\n        withLatestFrom(restoreStateFrom),\n        filter(([, state]) => state !== void 0),\n        distinctUntilChanged(),\n        map(([, snapshot]) => {\n          return snapshot.ranges;\n        })\n      ),\n      sizeRanges\n    );\n    return {\n      getState,\n      restoreStateFrom\n    };\n  },\n  tup(sizeSystem, domIOSystem, initialTopMostItemIndexSystem, propsReadySystem, windowScrollerSystem)\n);\nfunction locationFromSnapshot(snapshot) {\n  return { offset: snapshot.scrollTop, index: 0, align: \"start\" };\n}\nconst featureGroup1System = system(\n  ([\n    sizeRange,\n    initialItemCount,\n    propsReady,\n    scrollSeek,\n    totalListHeight,\n    initialScrollTopSystem2,\n    alignToBottom,\n    windowScroller,\n    scrollIntoView,\n    logger\n  ]) => {\n    return {\n      ...sizeRange,\n      ...initialItemCount,\n      ...propsReady,\n      ...scrollSeek,\n      ...totalListHeight,\n      ...initialScrollTopSystem2,\n      ...alignToBottom,\n      ...windowScroller,\n      ...scrollIntoView,\n      ...logger\n    };\n  },\n  tup(\n    sizeRangeSystem,\n    initialItemCountSystem,\n    propsReadySystem,\n    scrollSeekSystem,\n    totalListHeightSystem,\n    initialScrollTopSystem,\n    alignToBottomSystem,\n    windowScrollerSystem,\n    scrollIntoViewSystem,\n    loggerSystem\n  )\n);\nconst listSystem = system(\n  ([\n    {\n      totalCount,\n      sizeRanges,\n      fixedItemSize,\n      defaultItemSize,\n      trackItemSizes,\n      itemSize,\n      data,\n      firstItemIndex,\n      groupIndices,\n      statefulTotalCount,\n      gap,\n      sizes\n    },\n    { initialTopMostItemIndex, scrolledToInitialItem },\n    domIO,\n    stateLoad,\n    followOutput,\n    { listState, topItemsIndexes, ...flags },\n    { scrollToIndex },\n    _,\n    { topItemCount },\n    { groupCounts },\n    featureGroup1\n  ]) => {\n    connect(flags.rangeChanged, featureGroup1.scrollSeekRangeChanged);\n    connect(\n      pipe(\n        featureGroup1.windowViewportRect,\n        map((value) => value.visibleHeight)\n      ),\n      domIO.viewportHeight\n    );\n    return {\n      // input\n      totalCount,\n      data,\n      firstItemIndex,\n      sizeRanges,\n      initialTopMostItemIndex,\n      scrolledToInitialItem,\n      topItemsIndexes,\n      topItemCount,\n      groupCounts,\n      fixedItemHeight: fixedItemSize,\n      defaultItemHeight: defaultItemSize,\n      gap,\n      ...followOutput,\n      // output\n      statefulTotalCount,\n      listState,\n      scrollToIndex,\n      trackItemSizes,\n      itemSize,\n      groupIndices,\n      // exported from stateFlagsSystem\n      ...flags,\n      // the bag of IO from featureGroup1System\n      ...featureGroup1,\n      ...domIO,\n      sizes,\n      ...stateLoad\n    };\n  },\n  tup(\n    sizeSystem,\n    initialTopMostItemIndexSystem,\n    domIOSystem,\n    stateLoadSystem,\n    followOutputSystem,\n    listStateSystem,\n    scrollToIndexSystem,\n    upwardScrollFixSystem,\n    topItemCountSystem,\n    groupedListSystem,\n    featureGroup1System\n  )\n);\nconst WEBKIT_STICKY = \"-webkit-sticky\";\nconst STICKY = \"sticky\";\nconst positionStickyCssValue = simpleMemoize(() => {\n  if (typeof document === \"undefined\") {\n    return STICKY;\n  }\n  const node = document.createElement(\"div\");\n  node.style.position = WEBKIT_STICKY;\n  return node.style.position === WEBKIT_STICKY ? WEBKIT_STICKY : STICKY;\n});\nfunction useWindowViewportRectRef(callback, customScrollParent) {\n  const viewportInfo = React.useRef(null);\n  const calculateInfo = React.useCallback(\n    (element) => {\n      if (element === null || !element.offsetParent) {\n        return;\n      }\n      const rect = element.getBoundingClientRect();\n      const visibleWidth = rect.width;\n      let visibleHeight, offsetTop;\n      if (customScrollParent) {\n        const customScrollParentRect = customScrollParent.getBoundingClientRect();\n        const deltaTop = rect.top - customScrollParentRect.top;\n        visibleHeight = customScrollParentRect.height - Math.max(0, deltaTop);\n        offsetTop = deltaTop + customScrollParent.scrollTop;\n      } else {\n        visibleHeight = window.innerHeight - Math.max(0, rect.top);\n        offsetTop = rect.top + window.pageYOffset;\n      }\n      viewportInfo.current = {\n        offsetTop,\n        visibleHeight,\n        visibleWidth\n      };\n      callback(viewportInfo.current);\n    },\n    [callback, customScrollParent]\n  );\n  const { callbackRef, ref } = useSizeWithElRef(calculateInfo);\n  const scrollAndResizeEventHandler = React.useCallback(() => {\n    calculateInfo(ref.current);\n  }, [calculateInfo, ref]);\n  React.useEffect(() => {\n    if (customScrollParent) {\n      customScrollParent.addEventListener(\"scroll\", scrollAndResizeEventHandler);\n      const observer = new ResizeObserver(scrollAndResizeEventHandler);\n      observer.observe(customScrollParent);\n      return () => {\n        customScrollParent.removeEventListener(\"scroll\", scrollAndResizeEventHandler);\n        observer.unobserve(customScrollParent);\n      };\n    } else {\n      window.addEventListener(\"scroll\", scrollAndResizeEventHandler);\n      window.addEventListener(\"resize\", scrollAndResizeEventHandler);\n      return () => {\n        window.removeEventListener(\"scroll\", scrollAndResizeEventHandler);\n        window.removeEventListener(\"resize\", scrollAndResizeEventHandler);\n      };\n    }\n  }, [scrollAndResizeEventHandler, customScrollParent]);\n  return callbackRef;\n}\nconst VirtuosoMockContext = React.createContext(void 0);\nconst VirtuosoGridMockContext = React.createContext(void 0);\nfunction identity(value) {\n  return value;\n}\nconst listComponentPropsSystem = /* @__PURE__ */ system(() => {\n  const itemContent = statefulStream((index) => `Item ${index}`);\n  const context = statefulStream(null);\n  const groupContent = statefulStream((index) => `Group ${index}`);\n  const components = statefulStream({});\n  const computeItemKey = statefulStream(identity);\n  const headerFooterTag = statefulStream(\"div\");\n  const scrollerRef = statefulStream(noop);\n  const distinctProp = (propName, defaultValue = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components2) => components2[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    );\n  };\n  return {\n    context,\n    itemContent,\n    groupContent,\n    components,\n    computeItemKey,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp(\"Footer\"),\n    HeaderComponent: distinctProp(\"Header\"),\n    TopItemListComponent: distinctProp(\"TopItemList\"),\n    ListComponent: distinctProp(\"List\", \"div\"),\n    ItemComponent: distinctProp(\"Item\", \"div\"),\n    GroupComponent: distinctProp(\"Group\", \"div\"),\n    ScrollerComponent: distinctProp(\"Scroller\", \"div\"),\n    EmptyPlaceholder: distinctProp(\"EmptyPlaceholder\"),\n    ScrollSeekPlaceholder: distinctProp(\"ScrollSeekPlaceholder\")\n  };\n});\nconst combinedSystem$2 = /* @__PURE__ */ system(([listSystem2, propsSystem]) => {\n  return { ...listSystem2, ...propsSystem };\n}, tup(listSystem, listComponentPropsSystem));\nconst DefaultScrollSeekPlaceholder$1 = ({ height }) => /* @__PURE__ */ React.createElement(\"div\", { style: { height } });\nconst GROUP_STYLE = { position: positionStickyCssValue(), zIndex: 1, overflowAnchor: \"none\" };\nconst ITEM_STYLE$1 = { overflowAnchor: \"none\" };\nconst Items$1 = /* @__PURE__ */ React.memo(function VirtuosoItems({ showTopList = false }) {\n  const listState = useEmitterValue$2(\"listState\");\n  const sizeRanges = usePublisher$2(\"sizeRanges\");\n  const useWindowScroll = useEmitterValue$2(\"useWindowScroll\");\n  const customScrollParent = useEmitterValue$2(\"customScrollParent\");\n  const windowScrollContainerStateCallback = usePublisher$2(\"windowScrollContainerState\");\n  const _scrollContainerStateCallback = usePublisher$2(\"scrollContainerState\");\n  const scrollContainerStateCallback = customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback;\n  const itemContent = useEmitterValue$2(\"itemContent\");\n  const context = useEmitterValue$2(\"context\");\n  const groupContent = useEmitterValue$2(\"groupContent\");\n  const trackItemSizes = useEmitterValue$2(\"trackItemSizes\");\n  const itemSize = useEmitterValue$2(\"itemSize\");\n  const log = useEmitterValue$2(\"log\");\n  const listGap = usePublisher$2(\"gap\");\n  const { callbackRef } = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    showTopList ? noop : scrollContainerStateCallback,\n    log,\n    listGap,\n    customScrollParent\n  );\n  const [deviation, setDeviation] = React.useState(0);\n  useEmitter$2(\"deviation\", (value) => {\n    if (deviation !== value) {\n      setDeviation(value);\n    }\n  });\n  const EmptyPlaceholder = useEmitterValue$2(\"EmptyPlaceholder\");\n  const ScrollSeekPlaceholder = useEmitterValue$2(\"ScrollSeekPlaceholder\") || DefaultScrollSeekPlaceholder$1;\n  const ListComponent = useEmitterValue$2(\"ListComponent\");\n  const ItemComponent = useEmitterValue$2(\"ItemComponent\");\n  const GroupComponent = useEmitterValue$2(\"GroupComponent\");\n  const computeItemKey = useEmitterValue$2(\"computeItemKey\");\n  const isSeeking = useEmitterValue$2(\"isSeeking\");\n  const hasGroups2 = useEmitterValue$2(\"groupIndices\").length > 0;\n  const paddingTopAddition = useEmitterValue$2(\"paddingTopAddition\");\n  const scrolledToInitialItem = useEmitterValue$2(\"scrolledToInitialItem\");\n  const containerStyle = showTopList ? {} : {\n    boxSizing: \"border-box\",\n    paddingTop: listState.offsetTop + paddingTopAddition,\n    paddingBottom: listState.offsetBottom,\n    marginTop: deviation,\n    ...scrolledToInitialItem ? {} : { visibility: \"hidden\" }\n  };\n  if (!showTopList && listState.totalCount === 0 && EmptyPlaceholder) {\n    return React.createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context));\n  }\n  return React.createElement(\n    ListComponent,\n    {\n      ...contextPropIfNotDomElement(ListComponent, context),\n      ref: callbackRef,\n      style: containerStyle,\n      \"data-test-id\": showTopList ? \"virtuoso-top-item-list\" : \"virtuoso-item-list\"\n    },\n    (showTopList ? listState.topItems : listState.items).map((item) => {\n      const index = item.originalIndex;\n      const key = computeItemKey(index + listState.firstItemIndex, item.data, context);\n      if (isSeeking) {\n        return React.createElement(ScrollSeekPlaceholder, {\n          ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n          key,\n          index: item.index,\n          height: item.size,\n          type: item.type || \"item\",\n          ...item.type === \"group\" ? {} : { groupIndex: item.groupIndex }\n        });\n      }\n      if (item.type === \"group\") {\n        return React.createElement(\n          GroupComponent,\n          {\n            ...contextPropIfNotDomElement(GroupComponent, context),\n            key,\n            \"data-index\": index,\n            \"data-known-size\": item.size,\n            \"data-item-index\": item.index,\n            style: GROUP_STYLE\n          },\n          groupContent(item.index, context)\n        );\n      } else {\n        return React.createElement(\n          ItemComponent,\n          {\n            ...contextPropIfNotDomElement(ItemComponent, context),\n            ...itemPropIfNotDomElement(ItemComponent, item.data),\n            key,\n            \"data-index\": index,\n            \"data-known-size\": item.size,\n            \"data-item-index\": item.index,\n            \"data-item-group-index\": item.groupIndex,\n            style: ITEM_STYLE$1\n          },\n          hasGroups2 ? itemContent(item.index, item.groupIndex, item.data, context) : itemContent(item.index, item.data, context)\n        );\n      }\n    })\n  );\n});\nconst scrollerStyle = {\n  height: \"100%\",\n  outline: \"none\",\n  overflowY: \"auto\",\n  position: \"relative\",\n  WebkitOverflowScrolling: \"touch\"\n};\nconst viewportStyle = {\n  width: \"100%\",\n  height: \"100%\",\n  position: \"absolute\",\n  top: 0\n};\nconst topItemListStyle = {\n  width: \"100%\",\n  position: positionStickyCssValue(),\n  top: 0,\n  zIndex: 1\n};\nfunction contextPropIfNotDomElement(element, context) {\n  if (typeof element === \"string\") {\n    return void 0;\n  }\n  return { context };\n}\nfunction itemPropIfNotDomElement(element, item) {\n  return { item: typeof element === \"string\" ? void 0 : item };\n}\nconst Header$1 = /* @__PURE__ */ React.memo(function VirtuosoHeader() {\n  const Header2 = useEmitterValue$2(\"HeaderComponent\");\n  const headerHeight = usePublisher$2(\"headerHeight\");\n  const headerFooterTag = useEmitterValue$2(\"headerFooterTag\");\n  const ref = useSize((el) => headerHeight(correctItemSize(el, \"height\")));\n  const context = useEmitterValue$2(\"context\");\n  return Header2 ? React.createElement(headerFooterTag, { ref }, React.createElement(Header2, contextPropIfNotDomElement(Header2, context))) : null;\n});\nconst Footer$1 = /* @__PURE__ */ React.memo(function VirtuosoFooter() {\n  const Footer2 = useEmitterValue$2(\"FooterComponent\");\n  const footerHeight = usePublisher$2(\"footerHeight\");\n  const headerFooterTag = useEmitterValue$2(\"headerFooterTag\");\n  const ref = useSize((el) => footerHeight(correctItemSize(el, \"height\")));\n  const context = useEmitterValue$2(\"context\");\n  return Footer2 ? React.createElement(headerFooterTag, { ref }, React.createElement(Footer2, contextPropIfNotDomElement(Footer2, context))) : null;\n});\nfunction buildScroller({ usePublisher: usePublisher2, useEmitter: useEmitter2, useEmitterValue: useEmitterValue2 }) {\n  const Scroller2 = React.memo(function VirtuosoScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher2(\"scrollContainerState\");\n    const ScrollerComponent = useEmitterValue2(\"ScrollerComponent\");\n    const smoothScrollTargetReached = usePublisher2(\"smoothScrollTargetReached\");\n    const scrollerRefCallback = useEmitterValue2(\"scrollerRef\");\n    const context = useEmitterValue2(\"context\");\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      scrollerRefCallback\n    );\n    useEmitter2(\"scrollTo\", scrollToCallback);\n    useEmitter2(\"scrollBy\", scrollByCallback);\n    return React.createElement(\n      ScrollerComponent,\n      {\n        ref: scrollerRef,\n        style: { ...scrollerStyle, ...style },\n        \"data-test-id\": \"virtuoso-scroller\",\n        \"data-virtuoso-scroller\": true,\n        tabIndex: 0,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context)\n      },\n      children\n    );\n  });\n  return Scroller2;\n}\nfunction buildWindowScroller({ usePublisher: usePublisher2, useEmitter: useEmitter2, useEmitterValue: useEmitterValue2 }) {\n  const Scroller2 = React.memo(function VirtuosoWindowScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher2(\"windowScrollContainerState\");\n    const ScrollerComponent = useEmitterValue2(\"ScrollerComponent\");\n    const smoothScrollTargetReached = usePublisher2(\"smoothScrollTargetReached\");\n    const totalListHeight = useEmitterValue2(\"totalListHeight\");\n    const deviation = useEmitterValue2(\"deviation\");\n    const customScrollParent = useEmitterValue2(\"customScrollParent\");\n    const context = useEmitterValue2(\"context\");\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      noop,\n      customScrollParent\n    );\n    useIsomorphicLayoutEffect$1(() => {\n      scrollerRef.current = customScrollParent ? customScrollParent : window;\n      return () => {\n        scrollerRef.current = null;\n      };\n    }, [scrollerRef, customScrollParent]);\n    useEmitter2(\"windowScrollTo\", scrollToCallback);\n    useEmitter2(\"scrollBy\", scrollByCallback);\n    return React.createElement(\n      ScrollerComponent,\n      {\n        style: { position: \"relative\", ...style, ...totalListHeight !== 0 ? { height: totalListHeight + deviation } : {} },\n        \"data-virtuoso-scroller\": true,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context)\n      },\n      children\n    );\n  });\n  return Scroller2;\n}\nconst Viewport$2 = ({ children }) => {\n  const ctx = React.useContext(VirtuosoMockContext);\n  const viewportHeight = usePublisher$2(\"viewportHeight\");\n  const fixedItemHeight = usePublisher$2(\"fixedItemHeight\");\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, \"height\")));\n  React.useEffect(() => {\n    if (ctx) {\n      viewportHeight(ctx.viewportHeight);\n      fixedItemHeight(ctx.itemHeight);\n    }\n  }, [ctx, viewportHeight, fixedItemHeight]);\n  return /* @__PURE__ */ React.createElement(\"div\", { style: viewportStyle, ref: viewportRef, \"data-viewport-type\": \"element\" }, children);\n};\nconst WindowViewport$2 = ({ children }) => {\n  const ctx = React.useContext(VirtuosoMockContext);\n  const windowViewportRect = usePublisher$2(\"windowViewportRect\");\n  const fixedItemHeight = usePublisher$2(\"fixedItemHeight\");\n  const customScrollParent = useEmitterValue$2(\"customScrollParent\");\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent);\n  React.useEffect(() => {\n    if (ctx) {\n      fixedItemHeight(ctx.itemHeight);\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: 100 });\n    }\n  }, [ctx, windowViewportRect, fixedItemHeight]);\n  return /* @__PURE__ */ React.createElement(\"div\", { ref: viewportRef, style: viewportStyle, \"data-viewport-type\": \"window\" }, children);\n};\nconst TopItemListContainer = ({ children }) => {\n  const TopItemList = useEmitterValue$2(\"TopItemListComponent\");\n  const headerHeight = useEmitterValue$2(\"headerHeight\");\n  const style = { ...topItemListStyle, marginTop: `${headerHeight}px` };\n  const context = useEmitterValue$2(\"context\");\n  return React.createElement(TopItemList || \"div\", { style, context }, children);\n};\nconst ListRoot = /* @__PURE__ */ React.memo(function VirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue$2(\"useWindowScroll\");\n  const showTopList = useEmitterValue$2(\"topItemsIndexes\").length > 0;\n  const customScrollParent = useEmitterValue$2(\"customScrollParent\");\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller$2 : Scroller$2;\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport$2 : Viewport$2;\n  return /* @__PURE__ */ React.createElement(TheScroller, { ...props }, showTopList && /* @__PURE__ */ React.createElement(TopItemListContainer, null, /* @__PURE__ */ React.createElement(Items$1, { showTopList: true })), /* @__PURE__ */ React.createElement(TheViewport, null, /* @__PURE__ */ React.createElement(Header$1, null), /* @__PURE__ */ React.createElement(Items$1, null), /* @__PURE__ */ React.createElement(Footer$1, null)));\n});\nconst {\n  Component: List,\n  usePublisher: usePublisher$2,\n  useEmitterValue: useEmitterValue$2,\n  useEmitter: useEmitter$2\n} = /* @__PURE__ */ systemToComponent(\n  combinedSystem$2,\n  {\n    required: {},\n    optional: {\n      restoreStateFrom: \"restoreStateFrom\",\n      context: \"context\",\n      followOutput: \"followOutput\",\n      itemContent: \"itemContent\",\n      groupContent: \"groupContent\",\n      overscan: \"overscan\",\n      increaseViewportBy: \"increaseViewportBy\",\n      totalCount: \"totalCount\",\n      groupCounts: \"groupCounts\",\n      topItemCount: \"topItemCount\",\n      firstItemIndex: \"firstItemIndex\",\n      initialTopMostItemIndex: \"initialTopMostItemIndex\",\n      components: \"components\",\n      atBottomThreshold: \"atBottomThreshold\",\n      atTopThreshold: \"atTopThreshold\",\n      computeItemKey: \"computeItemKey\",\n      defaultItemHeight: \"defaultItemHeight\",\n      fixedItemHeight: \"fixedItemHeight\",\n      itemSize: \"itemSize\",\n      scrollSeekConfiguration: \"scrollSeekConfiguration\",\n      headerFooterTag: \"headerFooterTag\",\n      data: \"data\",\n      initialItemCount: \"initialItemCount\",\n      initialScrollTop: \"initialScrollTop\",\n      alignToBottom: \"alignToBottom\",\n      useWindowScroll: \"useWindowScroll\",\n      customScrollParent: \"customScrollParent\",\n      scrollerRef: \"scrollerRef\",\n      logLevel: \"logLevel\"\n    },\n    methods: {\n      scrollToIndex: \"scrollToIndex\",\n      scrollIntoView: \"scrollIntoView\",\n      scrollTo: \"scrollTo\",\n      scrollBy: \"scrollBy\",\n      autoscrollToBottom: \"autoscrollToBottom\",\n      getState: \"getState\"\n    },\n    events: {\n      isScrolling: \"isScrolling\",\n      endReached: \"endReached\",\n      startReached: \"startReached\",\n      rangeChanged: \"rangeChanged\",\n      atBottomStateChange: \"atBottomStateChange\",\n      atTopStateChange: \"atTopStateChange\",\n      totalListHeightChanged: \"totalListHeightChanged\",\n      itemsRendered: \"itemsRendered\",\n      groupIndices: \"groupIndices\"\n    }\n  },\n  ListRoot\n);\nconst Scroller$2 = /* @__PURE__ */ buildScroller({ usePublisher: usePublisher$2, useEmitterValue: useEmitterValue$2, useEmitter: useEmitter$2 });\nconst WindowScroller$2 = /* @__PURE__ */ buildWindowScroller({ usePublisher: usePublisher$2, useEmitterValue: useEmitterValue$2, useEmitter: useEmitter$2 });\nconst Virtuoso = List;\nconst GroupedVirtuoso = List;\nconst INITIAL_GRID_STATE = {\n  items: [],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0\n};\nconst PROBE_GRID_STATE = {\n  items: [{ index: 0 }],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0\n};\nconst { round, ceil, floor, min, max } = Math;\nfunction buildProbeGridState(items) {\n  return {\n    ...PROBE_GRID_STATE,\n    items\n  };\n}\nfunction buildItems(startIndex, endIndex, data) {\n  return Array.from({ length: endIndex - startIndex + 1 }).map((_, i) => {\n    const dataItem = data === null ? null : data[i + startIndex];\n    return { index: i + startIndex, data: dataItem };\n  });\n}\nfunction gapComparator(prev, next) {\n  return prev && prev.column === next.column && prev.row === next.row;\n}\nfunction dimensionComparator(prev, next) {\n  return prev && prev.width === next.width && prev.height === next.height;\n}\nconst gridSystem = /* @__PURE__ */ system(\n  ([\n    { overscan, visibleRange, listBoundary },\n    { scrollTop, viewportHeight, scrollBy, scrollTo, smoothScrollTargetReached, scrollContainerState, footerHeight, headerHeight },\n    stateFlags,\n    scrollSeek,\n    { propsReady, didMount },\n    { windowViewportRect, useWindowScroll, customScrollParent, windowScrollContainerState, windowScrollTo },\n    log\n  ]) => {\n    const totalCount = statefulStream(0);\n    const initialItemCount = statefulStream(0);\n    const gridState = statefulStream(INITIAL_GRID_STATE);\n    const viewportDimensions = statefulStream({ height: 0, width: 0 });\n    const itemDimensions = statefulStream({ height: 0, width: 0 });\n    const scrollToIndex = stream();\n    const scrollHeight = stream();\n    const deviation = statefulStream(0);\n    const data = statefulStream(null);\n    const gap = statefulStream({ row: 0, column: 0 });\n    const stateChanged = stream();\n    const restoreStateFrom = stream();\n    const stateRestoreInProgress = statefulStream(false);\n    const initialTopMostItemIndex = statefulStream(0);\n    const scrolledToInitialItem = statefulStream(true);\n    const scrollScheduled = statefulStream(false);\n    subscribe(\n      pipe(\n        didMount,\n        withLatestFrom(initialTopMostItemIndex),\n        filter(([_, location]) => !!location)\n      ),\n      () => {\n        publish(scrolledToInitialItem, false);\n        publish(initialItemCount, 0);\n      }\n    );\n    subscribe(\n      pipe(\n        combineLatest(didMount, scrolledToInitialItem, itemDimensions, viewportDimensions, initialTopMostItemIndex, scrollScheduled),\n        filter(([didMount2, scrolledToInitialItem2, itemDimensions2, viewportDimensions2, , scrollScheduled2]) => {\n          return didMount2 && !scrolledToInitialItem2 && itemDimensions2.height !== 0 && viewportDimensions2.height !== 0 && !scrollScheduled2;\n        })\n      ),\n      ([, , , , initialTopMostItemIndex2]) => {\n        publish(scrollScheduled, true);\n        skipFrames(1, () => {\n          publish(scrollToIndex, initialTopMostItemIndex2);\n        });\n        handleNext(pipe(scrollTop), () => {\n          publish(listBoundary, [0, 0]);\n          publish(scrolledToInitialItem, true);\n        });\n      }\n    );\n    connect(\n      pipe(\n        restoreStateFrom,\n        filter((value) => value !== void 0 && value !== null && value.scrollTop > 0),\n        mapTo(0)\n      ),\n      initialItemCount\n    );\n    subscribe(\n      pipe(\n        didMount,\n        withLatestFrom(restoreStateFrom),\n        filter(([, snapshot]) => snapshot !== void 0 && snapshot !== null)\n      ),\n      ([, snapshot]) => {\n        if (!snapshot) {\n          return;\n        }\n        publish(viewportDimensions, snapshot.viewport), publish(itemDimensions, snapshot == null ? void 0 : snapshot.item);\n        publish(gap, snapshot.gap);\n        if (snapshot.scrollTop > 0) {\n          publish(stateRestoreInProgress, true);\n          handleNext(pipe(scrollTop, skip(1)), (_value) => {\n            publish(stateRestoreInProgress, false);\n          });\n          publish(scrollTo, { top: snapshot.scrollTop });\n        }\n      }\n    );\n    connect(\n      pipe(\n        viewportDimensions,\n        map(({ height }) => height)\n      ),\n      viewportHeight\n    );\n    connect(\n      pipe(\n        combineLatest(\n          duc(viewportDimensions, dimensionComparator),\n          duc(itemDimensions, dimensionComparator),\n          duc(gap, (prev, next) => prev && prev.column === next.column && prev.row === next.row),\n          duc(scrollTop)\n        ),\n        map(([viewport, item, gap2, scrollTop2]) => ({\n          viewport,\n          item,\n          gap: gap2,\n          scrollTop: scrollTop2\n        }))\n      ),\n      stateChanged\n    );\n    connect(\n      pipe(\n        combineLatest(\n          duc(totalCount),\n          visibleRange,\n          duc(gap, gapComparator),\n          duc(itemDimensions, dimensionComparator),\n          duc(viewportDimensions, dimensionComparator),\n          duc(data),\n          duc(initialItemCount),\n          duc(stateRestoreInProgress),\n          duc(scrolledToInitialItem),\n          duc(initialTopMostItemIndex)\n        ),\n        filter(([, , , , , , , stateRestoreInProgress2]) => {\n          return !stateRestoreInProgress2;\n        }),\n        map(\n          ([\n            totalCount2,\n            [startOffset, endOffset],\n            gap2,\n            item,\n            viewport,\n            data2,\n            initialItemCount2,\n            ,\n            scrolledToInitialItem2,\n            initialTopMostItemIndex2\n          ]) => {\n            const { row: rowGap, column: columnGap } = gap2;\n            const { height: itemHeight, width: itemWidth } = item;\n            const { width: viewportWidth } = viewport;\n            if (initialItemCount2 === 0 && (totalCount2 === 0 || viewportWidth === 0)) {\n              return INITIAL_GRID_STATE;\n            }\n            if (itemWidth === 0) {\n              const startIndex2 = getInitialTopMostItemIndexNumber(initialTopMostItemIndex2, totalCount2);\n              const endIndex2 = startIndex2 === 0 ? Math.max(initialItemCount2 - 1, 0) : startIndex2;\n              return buildProbeGridState(buildItems(startIndex2, endIndex2, data2));\n            }\n            const perRow = itemsPerRow(viewportWidth, itemWidth, columnGap);\n            let startIndex;\n            let endIndex;\n            if (!scrolledToInitialItem2) {\n              startIndex = 0;\n              endIndex = -1;\n            } else if (startOffset === 0 && endOffset === 0 && initialItemCount2 > 0) {\n              startIndex = 0;\n              endIndex = initialItemCount2 - 1;\n            } else {\n              startIndex = perRow * floor((startOffset + rowGap) / (itemHeight + rowGap));\n              endIndex = perRow * ceil((endOffset + rowGap) / (itemHeight + rowGap)) - 1;\n              endIndex = min(totalCount2 - 1, max(endIndex, perRow - 1));\n              startIndex = min(endIndex, max(0, startIndex));\n            }\n            const items = buildItems(startIndex, endIndex, data2);\n            const { top, bottom } = gridLayout(viewport, gap2, item, items);\n            const rowCount = ceil(totalCount2 / perRow);\n            const totalHeight = rowCount * itemHeight + (rowCount - 1) * rowGap;\n            const offsetBottom = totalHeight - bottom;\n            return { items, offsetTop: top, offsetBottom, top, bottom, itemHeight, itemWidth };\n          }\n        )\n      ),\n      gridState\n    );\n    connect(\n      pipe(\n        data,\n        filter((data2) => data2 !== null),\n        map((data2) => data2.length)\n      ),\n      totalCount\n    );\n    connect(\n      pipe(\n        combineLatest(viewportDimensions, itemDimensions, gridState, gap),\n        filter(([viewportDimensions2, itemDimensions2, { items }]) => {\n          return items.length > 0 && itemDimensions2.height !== 0 && viewportDimensions2.height !== 0;\n        }),\n        map(([viewportDimensions2, itemDimensions2, { items }, gap2]) => {\n          const { top, bottom } = gridLayout(viewportDimensions2, gap2, itemDimensions2, items);\n          return [top, bottom];\n        }),\n        distinctUntilChanged(tupleComparator)\n      ),\n      listBoundary\n    );\n    const hasScrolled = statefulStream(false);\n    connect(\n      pipe(\n        scrollTop,\n        withLatestFrom(hasScrolled),\n        map(([scrollTop2, hasScrolled2]) => {\n          return hasScrolled2 || scrollTop2 !== 0;\n        })\n      ),\n      hasScrolled\n    );\n    const endReached = streamFromEmitter(\n      pipe(\n        duc(gridState),\n        filter(({ items }) => items.length > 0),\n        withLatestFrom(totalCount, hasScrolled),\n        filter(([{ items }, totalCount2, hasScrolled2]) => hasScrolled2 && items[items.length - 1].index === totalCount2 - 1),\n        map(([, totalCount2]) => totalCount2 - 1),\n        distinctUntilChanged()\n      )\n    );\n    const startReached = streamFromEmitter(\n      pipe(\n        duc(gridState),\n        filter(({ items }) => {\n          return items.length > 0 && items[0].index === 0;\n        }),\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        mapTo(0),\n        distinctUntilChanged()\n      )\n    );\n    const rangeChanged = streamFromEmitter(\n      pipe(\n        duc(gridState),\n        withLatestFrom(stateRestoreInProgress),\n        filter(([{ items }, stateRestoreInProgress2]) => items.length > 0 && !stateRestoreInProgress2),\n        map(([{ items }]) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index\n          };\n        }),\n        distinctUntilChanged(rangeComparator),\n        throttleTime(0)\n      )\n    );\n    connect(rangeChanged, scrollSeek.scrollSeekRangeChanged);\n    connect(\n      pipe(\n        scrollToIndex,\n        withLatestFrom(viewportDimensions, itemDimensions, totalCount, gap),\n        map(([location, viewportDimensions2, itemDimensions2, totalCount2, gap2]) => {\n          const normalLocation = normalizeIndexLocation(location);\n          const { align, behavior, offset } = normalLocation;\n          let index = normalLocation.index;\n          if (index === \"LAST\") {\n            index = totalCount2 - 1;\n          }\n          index = max(0, index, min(totalCount2 - 1, index));\n          let top = itemTop(viewportDimensions2, gap2, itemDimensions2, index);\n          if (align === \"end\") {\n            top = round(top - viewportDimensions2.height + itemDimensions2.height);\n          } else if (align === \"center\") {\n            top = round(top - viewportDimensions2.height / 2 + itemDimensions2.height / 2);\n          }\n          if (offset) {\n            top += offset;\n          }\n          return { top, behavior };\n        })\n      ),\n      scrollTo\n    );\n    const totalListHeight = statefulStreamFromEmitter(\n      pipe(\n        gridState,\n        map((gridState2) => {\n          return gridState2.offsetBottom + gridState2.bottom;\n        })\n      ),\n      0\n    );\n    connect(\n      pipe(\n        windowViewportRect,\n        map((viewportInfo) => ({ width: viewportInfo.visibleWidth, height: viewportInfo.visibleHeight }))\n      ),\n      viewportDimensions\n    );\n    return {\n      // input\n      data,\n      totalCount,\n      viewportDimensions,\n      itemDimensions,\n      scrollTop,\n      scrollHeight,\n      overscan,\n      scrollBy,\n      scrollTo,\n      scrollToIndex,\n      smoothScrollTargetReached,\n      windowViewportRect,\n      windowScrollTo,\n      useWindowScroll,\n      customScrollParent,\n      windowScrollContainerState,\n      deviation,\n      scrollContainerState,\n      footerHeight,\n      headerHeight,\n      initialItemCount,\n      gap,\n      restoreStateFrom,\n      ...scrollSeek,\n      initialTopMostItemIndex,\n      // output\n      gridState,\n      totalListHeight,\n      ...stateFlags,\n      startReached,\n      endReached,\n      rangeChanged,\n      stateChanged,\n      propsReady,\n      stateRestoreInProgress,\n      ...log\n    };\n  },\n  tup(sizeRangeSystem, domIOSystem, stateFlagsSystem, scrollSeekSystem, propsReadySystem, windowScrollerSystem, loggerSystem)\n);\nfunction gridLayout(viewport, gap, item, items) {\n  const { height: itemHeight } = item;\n  if (itemHeight === void 0 || items.length === 0) {\n    return { top: 0, bottom: 0 };\n  }\n  const top = itemTop(viewport, gap, item, items[0].index);\n  const bottom = itemTop(viewport, gap, item, items[items.length - 1].index) + itemHeight;\n  return { top, bottom };\n}\nfunction itemTop(viewport, gap, item, index) {\n  const perRow = itemsPerRow(viewport.width, item.width, gap.column);\n  const rowCount = floor(index / perRow);\n  const top = rowCount * item.height + max(0, rowCount - 1) * gap.row;\n  return top > 0 ? top + gap.row : top;\n}\nfunction itemsPerRow(viewportWidth, itemWidth, gap) {\n  return max(1, floor((viewportWidth + gap) / (floor(itemWidth) + gap)));\n}\nconst gridComponentPropsSystem = /* @__PURE__ */ system(() => {\n  const itemContent = statefulStream((index) => `Item ${index}`);\n  const components = statefulStream({});\n  const context = statefulStream(null);\n  const itemClassName = statefulStream(\"virtuoso-grid-item\");\n  const listClassName = statefulStream(\"virtuoso-grid-list\");\n  const computeItemKey = statefulStream(identity);\n  const headerFooterTag = statefulStream(\"div\");\n  const scrollerRef = statefulStream(noop);\n  const distinctProp = (propName, defaultValue = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components2) => components2[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    );\n  };\n  return {\n    context,\n    itemContent,\n    components,\n    computeItemKey,\n    itemClassName,\n    listClassName,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp(\"Footer\"),\n    HeaderComponent: distinctProp(\"Header\"),\n    ListComponent: distinctProp(\"List\", \"div\"),\n    ItemComponent: distinctProp(\"Item\", \"div\"),\n    ScrollerComponent: distinctProp(\"Scroller\", \"div\"),\n    ScrollSeekPlaceholder: distinctProp(\"ScrollSeekPlaceholder\", \"div\")\n  };\n});\nconst combinedSystem$1 = /* @__PURE__ */ system(([gridSystem2, gridComponentPropsSystem2]) => {\n  return { ...gridSystem2, ...gridComponentPropsSystem2 };\n}, tup(gridSystem, gridComponentPropsSystem));\nconst GridItems = /* @__PURE__ */ React.memo(function GridItems2() {\n  const gridState = useEmitterValue$1(\"gridState\");\n  const listClassName = useEmitterValue$1(\"listClassName\");\n  const itemClassName = useEmitterValue$1(\"itemClassName\");\n  const itemContent = useEmitterValue$1(\"itemContent\");\n  const computeItemKey = useEmitterValue$1(\"computeItemKey\");\n  const isSeeking = useEmitterValue$1(\"isSeeking\");\n  const scrollHeightCallback = usePublisher$1(\"scrollHeight\");\n  const ItemComponent = useEmitterValue$1(\"ItemComponent\");\n  const ListComponent = useEmitterValue$1(\"ListComponent\");\n  const ScrollSeekPlaceholder = useEmitterValue$1(\"ScrollSeekPlaceholder\");\n  const context = useEmitterValue$1(\"context\");\n  const itemDimensions = usePublisher$1(\"itemDimensions\");\n  const gridGap = usePublisher$1(\"gap\");\n  const log = useEmitterValue$1(\"log\");\n  const stateRestoreInProgress = useEmitterValue$1(\"stateRestoreInProgress\");\n  const listRef = useSize((el) => {\n    const scrollHeight = el.parentElement.parentElement.scrollHeight;\n    scrollHeightCallback(scrollHeight);\n    const firstItem = el.firstChild;\n    if (firstItem) {\n      const { width, height } = firstItem.getBoundingClientRect();\n      itemDimensions({ width, height });\n    }\n    gridGap({\n      row: resolveGapValue(\"row-gap\", getComputedStyle(el).rowGap, log),\n      column: resolveGapValue(\"column-gap\", getComputedStyle(el).columnGap, log)\n    });\n  });\n  if (stateRestoreInProgress) {\n    return null;\n  }\n  return React.createElement(\n    ListComponent,\n    {\n      ref: listRef,\n      className: listClassName,\n      ...contextPropIfNotDomElement(ListComponent, context),\n      style: { paddingTop: gridState.offsetTop, paddingBottom: gridState.offsetBottom },\n      \"data-test-id\": \"virtuoso-item-list\"\n    },\n    gridState.items.map((item) => {\n      const key = computeItemKey(item.index, item.data, context);\n      return isSeeking ? React.createElement(ScrollSeekPlaceholder, {\n        key,\n        ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n        index: item.index,\n        height: gridState.itemHeight,\n        width: gridState.itemWidth\n      }) : React.createElement(\n        ItemComponent,\n        { ...contextPropIfNotDomElement(ItemComponent, context), className: itemClassName, \"data-index\": item.index, key },\n        itemContent(item.index, item.data, context)\n      );\n    })\n  );\n});\nconst Header = React.memo(function VirtuosoHeader2() {\n  const Header2 = useEmitterValue$1(\"HeaderComponent\");\n  const headerHeight = usePublisher$1(\"headerHeight\");\n  const headerFooterTag = useEmitterValue$1(\"headerFooterTag\");\n  const ref = useSize((el) => headerHeight(correctItemSize(el, \"height\")));\n  const context = useEmitterValue$1(\"context\");\n  return Header2 ? React.createElement(headerFooterTag, { ref }, React.createElement(Header2, contextPropIfNotDomElement(Header2, context))) : null;\n});\nconst Footer = React.memo(function VirtuosoGridFooter() {\n  const Footer2 = useEmitterValue$1(\"FooterComponent\");\n  const footerHeight = usePublisher$1(\"footerHeight\");\n  const headerFooterTag = useEmitterValue$1(\"headerFooterTag\");\n  const ref = useSize((el) => footerHeight(correctItemSize(el, \"height\")));\n  const context = useEmitterValue$1(\"context\");\n  return Footer2 ? React.createElement(headerFooterTag, { ref }, React.createElement(Footer2, contextPropIfNotDomElement(Footer2, context))) : null;\n});\nconst Viewport$1 = ({ children }) => {\n  const ctx = React.useContext(VirtuosoGridMockContext);\n  const itemDimensions = usePublisher$1(\"itemDimensions\");\n  const viewportDimensions = usePublisher$1(\"viewportDimensions\");\n  const viewportRef = useSize((el) => {\n    viewportDimensions(el.getBoundingClientRect());\n  });\n  React.useEffect(() => {\n    if (ctx) {\n      viewportDimensions({ height: ctx.viewportHeight, width: ctx.viewportWidth });\n      itemDimensions({ height: ctx.itemHeight, width: ctx.itemWidth });\n    }\n  }, [ctx, viewportDimensions, itemDimensions]);\n  return /* @__PURE__ */ React.createElement(\"div\", { style: viewportStyle, ref: viewportRef }, children);\n};\nconst WindowViewport$1 = ({ children }) => {\n  const ctx = React.useContext(VirtuosoGridMockContext);\n  const windowViewportRect = usePublisher$1(\"windowViewportRect\");\n  const itemDimensions = usePublisher$1(\"itemDimensions\");\n  const customScrollParent = useEmitterValue$1(\"customScrollParent\");\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent);\n  React.useEffect(() => {\n    if (ctx) {\n      itemDimensions({ height: ctx.itemHeight, width: ctx.itemWidth });\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: ctx.viewportWidth });\n    }\n  }, [ctx, windowViewportRect, itemDimensions]);\n  return /* @__PURE__ */ React.createElement(\"div\", { ref: viewportRef, style: viewportStyle }, children);\n};\nconst GridRoot = /* @__PURE__ */ React.memo(function GridRoot2({ ...props }) {\n  const useWindowScroll = useEmitterValue$1(\"useWindowScroll\");\n  const customScrollParent = useEmitterValue$1(\"customScrollParent\");\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller$1 : Scroller$1;\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport$1 : Viewport$1;\n  return /* @__PURE__ */ React.createElement(TheScroller, { ...props }, /* @__PURE__ */ React.createElement(TheViewport, null, /* @__PURE__ */ React.createElement(Header, null), /* @__PURE__ */ React.createElement(GridItems, null), /* @__PURE__ */ React.createElement(Footer, null)));\n});\nconst {\n  Component: Grid,\n  usePublisher: usePublisher$1,\n  useEmitterValue: useEmitterValue$1,\n  useEmitter: useEmitter$1\n} = /* @__PURE__ */ systemToComponent(\n  combinedSystem$1,\n  {\n    optional: {\n      context: \"context\",\n      totalCount: \"totalCount\",\n      overscan: \"overscan\",\n      itemContent: \"itemContent\",\n      components: \"components\",\n      computeItemKey: \"computeItemKey\",\n      data: \"data\",\n      initialItemCount: \"initialItemCount\",\n      scrollSeekConfiguration: \"scrollSeekConfiguration\",\n      headerFooterTag: \"headerFooterTag\",\n      listClassName: \"listClassName\",\n      itemClassName: \"itemClassName\",\n      useWindowScroll: \"useWindowScroll\",\n      customScrollParent: \"customScrollParent\",\n      scrollerRef: \"scrollerRef\",\n      logLevel: \"logLevel\",\n      restoreStateFrom: \"restoreStateFrom\",\n      initialTopMostItemIndex: \"initialTopMostItemIndex\"\n    },\n    methods: {\n      scrollTo: \"scrollTo\",\n      scrollBy: \"scrollBy\",\n      scrollToIndex: \"scrollToIndex\"\n    },\n    events: {\n      isScrolling: \"isScrolling\",\n      endReached: \"endReached\",\n      startReached: \"startReached\",\n      rangeChanged: \"rangeChanged\",\n      atBottomStateChange: \"atBottomStateChange\",\n      atTopStateChange: \"atTopStateChange\",\n      stateChanged: \"stateChanged\"\n    }\n  },\n  GridRoot\n);\nconst Scroller$1 = /* @__PURE__ */ buildScroller({ usePublisher: usePublisher$1, useEmitterValue: useEmitterValue$1, useEmitter: useEmitter$1 });\nconst WindowScroller$1 = /* @__PURE__ */ buildWindowScroller({ usePublisher: usePublisher$1, useEmitterValue: useEmitterValue$1, useEmitter: useEmitter$1 });\nfunction resolveGapValue(property, value, log) {\n  if (value !== \"normal\" && !(value == null ? void 0 : value.endsWith(\"px\"))) {\n    log(`${property} was not resolved to pixel value correctly`, value, LogLevel.WARN);\n  }\n  if (value === \"normal\") {\n    return 0;\n  }\n  return parseInt(value != null ? value : \"0\", 10);\n}\nconst VirtuosoGrid = Grid;\nconst tableComponentPropsSystem = /* @__PURE__ */ system(() => {\n  const itemContent = statefulStream((index) => /* @__PURE__ */ React.createElement(\"td\", null, \"Item $\", index));\n  const context = statefulStream(null);\n  const fixedHeaderContent = statefulStream(null);\n  const fixedFooterContent = statefulStream(null);\n  const components = statefulStream({});\n  const computeItemKey = statefulStream(identity);\n  const scrollerRef = statefulStream(noop);\n  const distinctProp = (propName, defaultValue = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components2) => components2[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    );\n  };\n  return {\n    context,\n    itemContent,\n    fixedHeaderContent,\n    fixedFooterContent,\n    components,\n    computeItemKey,\n    scrollerRef,\n    TableComponent: distinctProp(\"Table\", \"table\"),\n    TableHeadComponent: distinctProp(\"TableHead\", \"thead\"),\n    TableFooterComponent: distinctProp(\"TableFoot\", \"tfoot\"),\n    TableBodyComponent: distinctProp(\"TableBody\", \"tbody\"),\n    TableRowComponent: distinctProp(\"TableRow\", \"tr\"),\n    ScrollerComponent: distinctProp(\"Scroller\", \"div\"),\n    EmptyPlaceholder: distinctProp(\"EmptyPlaceholder\"),\n    ScrollSeekPlaceholder: distinctProp(\"ScrollSeekPlaceholder\"),\n    FillerRow: distinctProp(\"FillerRow\")\n  };\n});\nconst combinedSystem = /* @__PURE__ */ system(([listSystem2, propsSystem]) => {\n  return { ...listSystem2, ...propsSystem };\n}, tup(listSystem, tableComponentPropsSystem));\nconst DefaultScrollSeekPlaceholder = ({ height }) => /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", { style: { height } }));\nconst DefaultFillerRow = ({ height }) => /* @__PURE__ */ React.createElement(\"tr\", null, /* @__PURE__ */ React.createElement(\"td\", { style: { height, padding: 0, border: 0 } }));\nconst ITEM_STYLE = { overflowAnchor: \"none\" };\nconst Items = /* @__PURE__ */ React.memo(function VirtuosoItems2() {\n  const listState = useEmitterValue(\"listState\");\n  const sizeRanges = usePublisher(\"sizeRanges\");\n  const useWindowScroll = useEmitterValue(\"useWindowScroll\");\n  const customScrollParent = useEmitterValue(\"customScrollParent\");\n  const windowScrollContainerStateCallback = usePublisher(\"windowScrollContainerState\");\n  const _scrollContainerStateCallback = usePublisher(\"scrollContainerState\");\n  const scrollContainerStateCallback = customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback;\n  const itemContent = useEmitterValue(\"itemContent\");\n  const trackItemSizes = useEmitterValue(\"trackItemSizes\");\n  const itemSize = useEmitterValue(\"itemSize\");\n  const log = useEmitterValue(\"log\");\n  const { callbackRef, ref } = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    scrollContainerStateCallback,\n    log,\n    void 0,\n    customScrollParent\n  );\n  const [deviation, setDeviation] = React.useState(0);\n  useEmitter(\"deviation\", (value) => {\n    if (deviation !== value) {\n      ref.current.style.marginTop = `${value}px`;\n      setDeviation(value);\n    }\n  });\n  const EmptyPlaceholder = useEmitterValue(\"EmptyPlaceholder\");\n  const ScrollSeekPlaceholder = useEmitterValue(\"ScrollSeekPlaceholder\") || DefaultScrollSeekPlaceholder;\n  const FillerRow = useEmitterValue(\"FillerRow\") || DefaultFillerRow;\n  const TableBodyComponent = useEmitterValue(\"TableBodyComponent\");\n  const TableRowComponent = useEmitterValue(\"TableRowComponent\");\n  const computeItemKey = useEmitterValue(\"computeItemKey\");\n  const isSeeking = useEmitterValue(\"isSeeking\");\n  const paddingTopAddition = useEmitterValue(\"paddingTopAddition\");\n  const firstItemIndex = useEmitterValue(\"firstItemIndex\");\n  const statefulTotalCount = useEmitterValue(\"statefulTotalCount\");\n  const context = useEmitterValue(\"context\");\n  if (statefulTotalCount === 0 && EmptyPlaceholder) {\n    return React.createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context));\n  }\n  const paddingTop = listState.offsetTop + paddingTopAddition + deviation;\n  const paddingBottom = listState.offsetBottom;\n  const paddingTopEl = paddingTop > 0 ? /* @__PURE__ */ React.createElement(FillerRow, { height: paddingTop, key: \"padding-top\", context }) : null;\n  const paddingBottomEl = paddingBottom > 0 ? /* @__PURE__ */ React.createElement(FillerRow, { height: paddingBottom, key: \"padding-bottom\", context }) : null;\n  const items = listState.items.map((item) => {\n    const index = item.originalIndex;\n    const key = computeItemKey(index + firstItemIndex, item.data, context);\n    if (isSeeking) {\n      return React.createElement(ScrollSeekPlaceholder, {\n        ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n        key,\n        index: item.index,\n        height: item.size,\n        type: item.type || \"item\"\n      });\n    }\n    return React.createElement(\n      TableRowComponent,\n      {\n        ...contextPropIfNotDomElement(TableRowComponent, context),\n        ...itemPropIfNotDomElement(TableRowComponent, item.data),\n        key,\n        \"data-index\": index,\n        \"data-known-size\": item.size,\n        \"data-item-index\": item.index,\n        style: ITEM_STYLE\n      },\n      itemContent(item.index, item.data, context)\n    );\n  });\n  return React.createElement(\n    TableBodyComponent,\n    { ref: callbackRef, \"data-test-id\": \"virtuoso-item-list\", ...contextPropIfNotDomElement(TableBodyComponent, context) },\n    [paddingTopEl, ...items, paddingBottomEl]\n  );\n});\nconst Viewport = ({ children }) => {\n  const ctx = React.useContext(VirtuosoMockContext);\n  const viewportHeight = usePublisher(\"viewportHeight\");\n  const fixedItemHeight = usePublisher(\"fixedItemHeight\");\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, \"height\")));\n  React.useEffect(() => {\n    if (ctx) {\n      viewportHeight(ctx.viewportHeight);\n      fixedItemHeight(ctx.itemHeight);\n    }\n  }, [ctx, viewportHeight, fixedItemHeight]);\n  return /* @__PURE__ */ React.createElement(\"div\", { style: viewportStyle, ref: viewportRef, \"data-viewport-type\": \"element\" }, children);\n};\nconst WindowViewport = ({ children }) => {\n  const ctx = React.useContext(VirtuosoMockContext);\n  const windowViewportRect = usePublisher(\"windowViewportRect\");\n  const fixedItemHeight = usePublisher(\"fixedItemHeight\");\n  const customScrollParent = useEmitterValue(\"customScrollParent\");\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent);\n  React.useEffect(() => {\n    if (ctx) {\n      fixedItemHeight(ctx.itemHeight);\n      windowViewportRect({ offsetTop: 0, visibleHeight: ctx.viewportHeight, visibleWidth: 100 });\n    }\n  }, [ctx, windowViewportRect, fixedItemHeight]);\n  return /* @__PURE__ */ React.createElement(\"div\", { ref: viewportRef, style: viewportStyle, \"data-viewport-type\": \"window\" }, children);\n};\nconst TableRoot = /* @__PURE__ */ React.memo(function TableVirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue(\"useWindowScroll\");\n  const customScrollParent = useEmitterValue(\"customScrollParent\");\n  const fixedHeaderHeight = usePublisher(\"fixedHeaderHeight\");\n  const fixedFooterHeight = usePublisher(\"fixedFooterHeight\");\n  const fixedHeaderContent = useEmitterValue(\"fixedHeaderContent\");\n  const fixedFooterContent = useEmitterValue(\"fixedFooterContent\");\n  const context = useEmitterValue(\"context\");\n  const theadRef = useSize(compose(fixedHeaderHeight, (el) => correctItemSize(el, \"height\")));\n  const tfootRef = useSize(compose(fixedFooterHeight, (el) => correctItemSize(el, \"height\")));\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller;\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport;\n  const TheTable = useEmitterValue(\"TableComponent\");\n  const TheTHead = useEmitterValue(\"TableHeadComponent\");\n  const TheTFoot = useEmitterValue(\"TableFooterComponent\");\n  const theHead = fixedHeaderContent ? React.createElement(\n    TheTHead,\n    {\n      key: \"TableHead\",\n      style: { zIndex: 2, position: \"sticky\", top: 0 },\n      ref: theadRef,\n      ...contextPropIfNotDomElement(TheTHead, context)\n    },\n    fixedHeaderContent()\n  ) : null;\n  const theFoot = fixedFooterContent ? React.createElement(\n    TheTFoot,\n    {\n      key: \"TableFoot\",\n      style: { zIndex: 1, position: \"sticky\", bottom: 0 },\n      ref: tfootRef,\n      ...contextPropIfNotDomElement(TheTFoot, context)\n    },\n    fixedFooterContent()\n  ) : null;\n  return /* @__PURE__ */ React.createElement(TheScroller, { ...props }, /* @__PURE__ */ React.createElement(TheViewport, null, React.createElement(\n    TheTable,\n    { style: { borderSpacing: 0, overflowAnchor: \"none\" }, ...contextPropIfNotDomElement(TheTable, context) },\n    [theHead, /* @__PURE__ */ React.createElement(Items, { key: \"TableBody\" }), theFoot]\n  )));\n});\nconst {\n  Component: Table,\n  usePublisher,\n  useEmitterValue,\n  useEmitter\n} = /* @__PURE__ */ systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      restoreStateFrom: \"restoreStateFrom\",\n      context: \"context\",\n      followOutput: \"followOutput\",\n      firstItemIndex: \"firstItemIndex\",\n      itemContent: \"itemContent\",\n      fixedHeaderContent: \"fixedHeaderContent\",\n      fixedFooterContent: \"fixedFooterContent\",\n      overscan: \"overscan\",\n      increaseViewportBy: \"increaseViewportBy\",\n      totalCount: \"totalCount\",\n      topItemCount: \"topItemCount\",\n      initialTopMostItemIndex: \"initialTopMostItemIndex\",\n      components: \"components\",\n      groupCounts: \"groupCounts\",\n      atBottomThreshold: \"atBottomThreshold\",\n      atTopThreshold: \"atTopThreshold\",\n      computeItemKey: \"computeItemKey\",\n      defaultItemHeight: \"defaultItemHeight\",\n      fixedItemHeight: \"fixedItemHeight\",\n      itemSize: \"itemSize\",\n      scrollSeekConfiguration: \"scrollSeekConfiguration\",\n      data: \"data\",\n      initialItemCount: \"initialItemCount\",\n      initialScrollTop: \"initialScrollTop\",\n      alignToBottom: \"alignToBottom\",\n      useWindowScroll: \"useWindowScroll\",\n      customScrollParent: \"customScrollParent\",\n      scrollerRef: \"scrollerRef\",\n      logLevel: \"logLevel\"\n    },\n    methods: {\n      scrollToIndex: \"scrollToIndex\",\n      scrollIntoView: \"scrollIntoView\",\n      scrollTo: \"scrollTo\",\n      scrollBy: \"scrollBy\",\n      getState: \"getState\"\n    },\n    events: {\n      isScrolling: \"isScrolling\",\n      endReached: \"endReached\",\n      startReached: \"startReached\",\n      rangeChanged: \"rangeChanged\",\n      atBottomStateChange: \"atBottomStateChange\",\n      atTopStateChange: \"atTopStateChange\",\n      totalListHeightChanged: \"totalListHeightChanged\",\n      itemsRendered: \"itemsRendered\",\n      groupIndices: \"groupIndices\"\n    }\n  },\n  TableRoot\n);\nconst Scroller = /* @__PURE__ */ buildScroller({ usePublisher, useEmitterValue, useEmitter });\nconst WindowScroller = /* @__PURE__ */ buildWindowScroller({ usePublisher, useEmitterValue, useEmitter });\nconst TableVirtuoso = Table;\nexport {\n  GroupedVirtuoso,\n  LogLevel,\n  TableVirtuoso,\n  Virtuoso,\n  VirtuosoGrid,\n  VirtuosoGridMockContext,\n  VirtuosoMockContext\n};\n"],"names":[],"version":3,"file":"Side.d0586ad5.js.map"}